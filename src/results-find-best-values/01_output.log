Run dom  4 apr 2021, 10.48.12, CEST
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	77.78%	97.04%	76.19%	[96.67, 97.78, 98.89, 98.89, 96.67, 96.67, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 96.67, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 72.73, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 98.81, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 80.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.65, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	77.66%	77.78%	98.41%	81.09%	98.43%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[96.67, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 95.56, 100.0, 93.33, 95.56, 95.56, 96.67, 97.78, 96.67]%	[80.0, 92.31, 90.91, 72.73, 83.33, 72.73, 76.92, 71.43, 100.0, 25.0, 60.0, 66.67, 80.0, 85.71, 66.67]%	[100.0, 100.0, 83.33, 66.67, 83.33, 66.67, 83.33, 83.33, 100.0, 16.67, 50.0, 66.67, 100.0, 100.0, 50.0]%	[96.43, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 96.43, 100.0, 98.81, 98.81, 97.62, 96.43, 97.62, 100.0]%	[66.67, 85.71, 100.0, 80.0, 83.33, 80.0, 71.43, 62.5, 100.0, 50.0, 75.0, 66.67, 66.67, 75.0, 100.0]%	[100.0, 100.0, 98.82, 97.65, 98.81, 97.65, 98.8, 98.78, 100.0, 94.32, 96.51, 97.62, 100.0, 100.0, 96.55]%	||	74.96%	76.67%	98.33%	77.53%	98.37%	
  6  0  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  0  0  0  1  0  83.33%		3
  0  1  0  4  1  0  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  1  0  0  0  0  4  0  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  1  0  0  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  2  0  0  0  0  0  1  0  0  1  0  2  0  0  0  16.67%		10
  0  0  0  0  0  0  0  1  0  0  3  0  2  0  0  50.0%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  2  0  0  0  0  1  0  3  50.0%		15
Forest OOB Error: 59.62%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	77.78%	97.04%	76.19%	[96.67, 97.78, 98.89, 98.89, 96.67, 96.67, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 96.67, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 72.73, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 98.81, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 80.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.65, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	77.66%	77.78%	98.41%	81.09%	98.43%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	66.67%	95.56%	64.29%	[96.67, 94.44, 95.56, 96.67, 95.56, 98.89, 91.11, 95.56, 95.56, 92.22, 95.56, 91.11, 97.78, 97.78, 98.89]%	[66.67, 54.55, 75.0, 66.67, 66.67, 92.31, 42.86, 60.0, 71.43, 22.22, 66.67, 50.0, 83.33, 83.33, 90.91]%	[50.0, 50.0, 100.0, 50.0, 66.67, 100.0, 50.0, 50.0, 83.33, 16.67, 66.67, 66.67, 83.33, 83.33, 83.33]%	[100.0, 97.62, 95.24, 100.0, 97.62, 98.81, 94.05, 98.81, 96.43, 97.62, 97.62, 92.86, 98.81, 98.81, 100.0]%	[100.0, 60.0, 60.0, 100.0, 66.67, 85.71, 37.5, 75.0, 62.5, 33.33, 66.67, 40.0, 83.33, 83.33, 100.0]%	[96.55, 96.47, 100.0, 96.55, 97.62, 100.0, 96.34, 96.51, 98.78, 94.25, 97.62, 97.5, 98.81, 98.81, 98.82]%	||	66.17%	66.67%	97.62%	70.27%	97.64%	
  3  2  0  0  0  0  0  0  1  0  0  0  0  0  0  50.0%		1
  0  3  0  0  0  0  1  0  1  0  0  0  0  1  0  50.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  1  3  1  1  0  0  0  0  0  0  0  0  0  50.0%		4
  0  0  1  0  4  0  0  0  0  0  0  1  0  0  0  66.67%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  3  0  0  0  0  3  0  0  0  50.0%		7
  0  0  1  0  0  0  0  3  1  0  1  0  0  0  0  50.0%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  3  0  0  1  0  2  0  0  0  16.67%		10
  0  0  0  0  1  0  0  0  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  1  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 61.02%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	77.78%	97.04%	76.19%	[96.67, 97.78, 98.89, 98.89, 96.67, 96.67, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 96.67, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 72.73, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 98.81, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 80.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.65, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	77.66%	77.78%	98.41%	81.09%	98.43%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	68.89%	95.85%	66.67%	[98.89, 96.67, 95.56, 95.56, 98.89, 94.44, 92.22, 96.67, 96.67, 95.56, 93.33, 96.67, 94.44, 96.67, 95.56]%	[90.91, 80.0, 60.0, 60.0, 92.31, 66.67, 46.15, 66.67, 76.92, 66.67, 57.14, 72.73, 54.55, 72.73, 66.67]%	[83.33, 100.0, 50.0, 50.0, 100.0, 83.33, 50.0, 50.0, 83.33, 66.67, 66.67, 66.67, 50.0, 66.67, 66.67]%	[100.0, 96.43, 98.81, 98.81, 98.81, 95.24, 95.24, 100.0, 97.62, 97.62, 95.24, 98.81, 97.62, 98.81, 97.62]%	[100.0, 66.67, 75.0, 75.0, 85.71, 55.56, 42.86, 100.0, 71.43, 66.67, 50.0, 80.0, 60.0, 80.0, 66.67]%	[98.82, 100.0, 96.51, 96.51, 100.0, 98.77, 96.39, 96.55, 98.8, 97.62, 97.56, 97.65, 96.47, 97.65, 97.62]%	||	68.67%	68.89%	97.78%	71.7%	97.79%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  3  0  0  1  1  0  1  0  0  0  0  0  0  50.0%		3
  0  0  0  3  0  2  1  0  0  0  0  0  0  0  0  50.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  1  0  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  1  3  0  0  1  0  0  0  0  0  50.0%		7
  0  0  1  0  0  0  0  3  0  0  0  0  0  0  2  50.0%		8
  0  0  0  0  0  0  0  0  5  0  0  0  0  1  0  83.33%		9
  0  0  0  0  0  0  1  0  1  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  3  0  3  0  0  50.0%		13
  0  0  0  0  1  0  0  0  0  0  0  1  0  4  0  66.67%		14
  0  0  0  1  0  0  0  0  0  0  1  0  0  0  4  66.67%		15
Forest OOB Error: 58.47%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	77.78%	97.04%	76.19%	[96.67, 97.78, 98.89, 98.89, 96.67, 96.67, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 96.67, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 72.73, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 98.81, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 80.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.65, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	77.66%	77.78%	98.41%	81.09%	98.43%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	68.89%	95.85%	66.67%	[96.67, 97.78, 96.67, 96.67, 98.89, 96.67, 92.22, 88.89, 97.78, 96.67, 93.33, 94.44, 96.67, 98.89, 95.56]%	[72.73, 85.71, 72.73, 72.73, 90.91, 72.73, 46.15, 28.57, 80.0, 76.92, 62.5, 54.55, 76.92, 92.31, 50.0]%	[66.67, 100.0, 66.67, 66.67, 83.33, 66.67, 50.0, 33.33, 66.67, 83.33, 83.33, 50.0, 83.33, 100.0, 33.33]%	[98.81, 97.62, 98.81, 98.81, 100.0, 98.81, 95.24, 92.86, 100.0, 97.62, 94.05, 97.62, 97.62, 98.81, 100.0]%	[80.0, 75.0, 80.0, 80.0, 100.0, 80.0, 42.86, 25.0, 100.0, 71.43, 50.0, 60.0, 71.43, 85.71, 100.0]%	[97.65, 100.0, 97.65, 97.65, 98.82, 97.65, 96.39, 95.12, 97.67, 98.8, 98.75, 96.47, 98.8, 100.0, 95.45]%	||	69.03%	68.89%	97.78%	73.43%	97.79%	
  4  1  0  1  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  4  0  1  0  0  0  0  0  1  0  0  0  66.67%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  1  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  1  0  0  0  0  2  0  0  3  0  0  0  0  33.33%		8
  0  1  0  0  0  0  1  0  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  1  0  1  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  2  0  0  1  0  1  0  2  33.33%		15
Forest OOB Error: 50.42%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	77.78%	97.04%	76.19%	[96.67, 97.78, 98.89, 98.89, 96.67, 96.67, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 96.67, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 72.73, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 98.81, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 80.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.65, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	77.66%	77.78%	98.41%	81.09%	98.43%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[95.56, 96.67, 95.56, 97.78, 96.67, 97.78, 90.0, 93.33, 98.89, 95.56, 96.67, 96.67, 97.78, 98.89, 96.67]%	[60.0, 80.0, 71.43, 83.33, 76.92, 83.33, 30.77, 50.0, 90.91, 75.0, 76.92, 66.67, 80.0, 90.91, 66.67]%	[50.0, 100.0, 83.33, 83.33, 83.33, 83.33, 33.33, 50.0, 83.33, 100.0, 83.33, 50.0, 66.67, 83.33, 50.0]%	[98.81, 96.43, 96.43, 98.81, 97.62, 98.81, 94.05, 96.43, 100.0, 95.24, 97.62, 100.0, 100.0, 100.0, 100.0]%	[75.0, 66.67, 62.5, 83.33, 71.43, 83.33, 28.57, 50.0, 100.0, 60.0, 71.43, 100.0, 100.0, 100.0, 100.0]%	[96.51, 100.0, 98.78, 98.81, 98.8, 98.81, 95.18, 96.43, 98.82, 100.0, 98.8, 96.55, 97.67, 98.82, 96.55]%	||	72.19%	72.22%	98.02%	76.82%	98.04%	
  3  3  0  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  1  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  1  0  0  0  0  0  0  0  0  83.33%		6
  0  0  1  0  0  1  2  0  0  2  0  0  0  0  0  33.33%		7
  0  0  1  0  0  0  1  3  0  0  1  0  0  0  0  50.0%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  1  0  0  0  0  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  2  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  1  0  0  0  0  0  0  0  0  5  0  83.33%		14
  1  0  0  0  0  0  0  2  0  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 52.31%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	77.78%	97.04%	76.19%	[96.67, 97.78, 98.89, 98.89, 96.67, 96.67, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 96.67, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 72.73, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 98.81, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 80.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.65, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	77.66%	77.78%	98.41%	81.09%	98.43%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	74.44%	96.59%	72.62%	[97.78, 96.67, 95.56, 100.0, 98.89, 97.78, 96.67, 95.56, 98.89, 95.56, 92.22, 94.44, 93.33, 98.89, 96.67]%	[80.0, 76.92, 71.43, 100.0, 90.91, 80.0, 76.92, 66.67, 90.91, 71.43, 22.22, 54.55, 66.67, 92.31, 66.67]%	[66.67, 83.33, 83.33, 100.0, 83.33, 66.67, 83.33, 66.67, 83.33, 83.33, 16.67, 50.0, 100.0, 100.0, 50.0]%	[100.0, 97.62, 96.43, 100.0, 100.0, 100.0, 97.62, 97.62, 100.0, 96.43, 97.62, 97.62, 92.86, 98.81, 100.0]%	[100.0, 71.43, 62.5, 100.0, 100.0, 100.0, 71.43, 66.67, 100.0, 62.5, 33.33, 60.0, 50.0, 85.71, 100.0]%	[97.67, 98.8, 98.78, 100.0, 98.82, 97.67, 98.8, 97.62, 98.82, 98.78, 94.25, 96.47, 100.0, 100.0, 96.55]%	||	73.84%	74.44%	98.17%	77.57%	98.2%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  0  0  1  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  1  0  0  4  0  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  0  0  0  0  1  0  0  0  83.33%		7
  0  0  1  0  0  0  0  4  0  0  1  0  0  0  0  66.67%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  16.67%		11
  0  0  0  0  0  0  0  0  0  3  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  2  0  0  0  0  1  0  3  50.0%		15
Forest OOB Error: 59.06%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	78.89%	97.19%	77.38%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	78.73%	78.89%	98.49%	82.66%	98.51%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[96.67, 97.78, 97.78, 97.78, 98.89, 96.67, 93.33, 95.56, 95.56, 90.0, 97.78, 96.67, 96.67, 95.56, 97.78]%	[66.67, 85.71, 83.33, 80.0, 90.91, 72.73, 57.14, 66.67, 75.0, 30.77, 83.33, 66.67, 76.92, 66.67, 83.33]%	[50.0, 100.0, 83.33, 66.67, 83.33, 66.67, 66.67, 66.67, 100.0, 33.33, 83.33, 50.0, 83.33, 66.67, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 95.24, 97.62, 95.24, 94.05, 98.81, 100.0, 97.62, 97.62, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 80.0, 50.0, 66.67, 60.0, 28.57, 83.33, 100.0, 71.43, 66.67, 83.33]%	[96.55, 100.0, 98.81, 97.67, 98.82, 97.65, 97.56, 97.62, 100.0, 95.18, 98.81, 96.55, 98.8, 97.62, 98.81]%	||	72.39%	72.22%	98.02%	76.56%	98.03%	
  3  1  0  0  0  0  0  0  1  0  0  0  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  0  0  1  0  0  83.33%		3
  0  1  0  4  0  0  0  0  0  0  1  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  1  0  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  4  0  1  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  1  4  0  0  0  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  3  0  1  2  0  0  0  0  0  33.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  3  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  1  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 53.03%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	78.89%	97.19%	77.38%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	78.73%	78.89%	98.49%	82.66%	98.51%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[96.67, 96.67, 97.78, 98.89, 96.67, 97.78, 94.44, 84.44, 98.89, 98.89, 94.44, 97.78, 94.44, 98.89, 97.78]%	[66.67, 80.0, 83.33, 90.91, 72.73, 80.0, 66.67, 36.36, 90.91, 90.91, 28.57, 80.0, 61.54, 92.31, 80.0]%	[50.0, 100.0, 83.33, 83.33, 66.67, 66.67, 83.33, 66.67, 83.33, 83.33, 16.67, 66.67, 66.67, 100.0, 66.67]%	[100.0, 96.43, 98.81, 100.0, 98.81, 100.0, 95.24, 85.71, 100.0, 100.0, 100.0, 100.0, 96.43, 98.81, 100.0]%	[100.0, 66.67, 83.33, 100.0, 80.0, 100.0, 55.56, 25.0, 100.0, 100.0, 100.0, 100.0, 57.14, 85.71, 100.0]%	[96.55, 100.0, 98.81, 98.82, 97.65, 97.67, 98.77, 97.3, 98.82, 98.82, 94.38, 97.67, 97.59, 100.0, 97.67]%	||	73.39%	72.22%	98.02%	83.56%	98.04%	
  3  2  0  0  0  0  0  1  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  1  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  1  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  0  1  4  0  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  4  0  0  1  0  1  0  0  16.67%		11
  0  0  0  0  0  0  1  1  0  0  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  2  0  0  0  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  2  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 53.28%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	78.89%	97.19%	77.38%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	78.73%	78.89%	98.49%	82.66%	98.51%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	63.33%	95.11%	60.71%	[95.56, 95.56, 95.56, 94.44, 97.78, 97.78, 88.89, 96.67, 96.67, 93.33, 94.44, 95.56, 93.33, 95.56, 95.56]%	[50.0, 66.67, 66.67, 66.67, 83.33, 80.0, 28.57, 66.67, 76.92, 25.0, 54.55, 71.43, 57.14, 71.43, 71.43]%	[33.33, 66.67, 66.67, 83.33, 83.33, 66.67, 33.33, 50.0, 83.33, 16.67, 50.0, 83.33, 66.67, 83.33, 83.33]%	[100.0, 97.62, 97.62, 95.24, 98.81, 100.0, 92.86, 100.0, 97.62, 98.81, 97.62, 96.43, 95.24, 96.43, 96.43]%	[100.0, 66.67, 66.67, 55.56, 83.33, 100.0, 25.0, 100.0, 71.43, 50.0, 60.0, 62.5, 50.0, 62.5, 62.5]%	[95.45, 97.62, 97.62, 98.77, 98.81, 97.67, 95.12, 96.55, 98.8, 94.32, 96.47, 98.78, 97.56, 98.78, 98.78]%	||	62.43%	63.33%	97.38%	67.74%	97.41%	
  2  2  0  0  0  0  0  0  0  0  0  0  1  1  0  33.33%		1
  0  4  0  0  0  0  1  0  1  0  0  0  0  0  0  66.67%		2
  0  0  4  0  0  0  0  0  0  1  0  0  0  1  0  66.67%		3
  0  0  0  5  1  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  1  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  1  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  2  0  0  2  0  1  0  0  1  0  0  0  33.33%		7
  0  0  2  1  0  0  0  3  0  0  0  0  0  0  0  50.0%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  3  0  0  1  0  2  0  0  0  16.67%		10
  0  0  0  0  0  0  0  0  0  0  3  0  2  0  1  50.0%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  5  1  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 60.56%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	78.89%	97.19%	77.38%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	78.73%	78.89%	98.49%	82.66%	98.51%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	68.89%	95.85%	66.67%	[97.78, 91.11, 96.67, 97.78, 97.78, 96.67, 95.56, 93.33, 95.56, 92.22, 96.67, 96.67, 95.56, 97.78, 96.67]%	[80.0, 33.33, 72.73, 80.0, 83.33, 72.73, 60.0, 62.5, 71.43, 36.36, 72.73, 76.92, 71.43, 85.71, 72.73]%	[66.67, 33.33, 66.67, 66.67, 83.33, 66.67, 50.0, 83.33, 83.33, 33.33, 66.67, 83.33, 83.33, 100.0, 66.67]%	[100.0, 95.24, 98.81, 100.0, 98.81, 98.81, 98.81, 94.05, 96.43, 96.43, 98.81, 97.62, 96.43, 97.62, 98.81]%	[100.0, 33.33, 80.0, 100.0, 83.33, 80.0, 75.0, 50.0, 62.5, 40.0, 80.0, 71.43, 62.5, 75.0, 80.0]%	[97.67, 95.24, 97.65, 97.67, 98.81, 97.65, 96.51, 98.75, 98.78, 95.29, 97.65, 98.8, 98.78, 100.0, 97.65]%	||	68.8%	68.89%	97.78%	71.54%	97.79%	
  4  1  0  0  0  0  0  0  1  0  0  0  0  0  0  66.67%		1
  0  2  0  0  0  0  1  0  1  2  0  0  0  0  0  33.33%		2
  0  0  4  0  0  1  0  0  0  0  0  0  0  1  0  66.67%		3
  0  1  0  4  1  0  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  0  0  0  0  5  0  0  0  0  0  1  83.33%		9
  0  2  0  0  0  0  0  0  0  2  0  2  0  0  0  33.33%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  2  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 58.53%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	78.89%	97.19%	77.38%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	78.73%	78.89%	98.49%	82.66%	98.51%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[96.67, 97.78, 95.56, 97.78, 96.67, 97.78, 94.44, 92.22, 97.78, 96.67, 97.78, 95.56, 96.67, 97.78, 95.56]%	[72.73, 83.33, 71.43, 83.33, 66.67, 83.33, 54.55, 36.36, 83.33, 76.92, 83.33, 66.67, 72.73, 83.33, 75.0]%	[66.67, 83.33, 83.33, 83.33, 50.0, 83.33, 50.0, 33.33, 83.33, 83.33, 83.33, 66.67, 66.67, 83.33, 100.0]%	[98.81, 98.81, 96.43, 98.81, 100.0, 98.81, 97.62, 96.43, 98.81, 97.62, 98.81, 97.62, 98.81, 98.81, 95.24]%	[80.0, 83.33, 62.5, 83.33, 100.0, 83.33, 60.0, 40.0, 83.33, 71.43, 83.33, 66.67, 80.0, 83.33, 60.0]%	[97.65, 98.81, 98.78, 98.81, 96.55, 98.81, 96.47, 95.29, 98.81, 98.8, 98.81, 97.62, 97.65, 98.81, 100.0]%	||	72.87%	73.33%	98.1%	74.71%	98.11%	
  4  1  0  0  0  0  0  1  0  0  0  0  0  0  0  66.67%		1
  1  5  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  1  3  0  0  0  0  0  0  1  0  0  0  50.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  3  0  0  0  0  0  0  1  2  50.0%		7
  0  0  1  0  0  0  0  2  0  0  0  0  1  0  2  33.33%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 47.41%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	78.89%	97.19%	77.38%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	78.73%	78.89%	98.49%	82.66%	98.51%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	74.44%	96.59%	72.62%	[96.67, 96.67, 97.78, 97.78, 96.67, 96.67, 95.56, 94.44, 97.78, 95.56, 96.67, 97.78, 96.67, 95.56, 96.67]%	[72.73, 76.92, 83.33, 80.0, 72.73, 76.92, 50.0, 66.67, 83.33, 75.0, 72.73, 80.0, 76.92, 71.43, 72.73]%	[66.67, 83.33, 83.33, 66.67, 66.67, 83.33, 33.33, 83.33, 83.33, 100.0, 66.67, 66.67, 83.33, 83.33, 66.67]%	[98.81, 97.62, 98.81, 100.0, 98.81, 97.62, 100.0, 95.24, 98.81, 95.24, 98.81, 100.0, 97.62, 96.43, 98.81]%	[80.0, 71.43, 83.33, 100.0, 80.0, 71.43, 100.0, 55.56, 83.33, 60.0, 80.0, 100.0, 71.43, 62.5, 80.0]%	[97.65, 98.8, 98.81, 97.67, 97.65, 98.8, 95.45, 98.77, 98.81, 100.0, 97.65, 97.67, 98.8, 98.78, 97.65]%	||	74.1%	74.44%	98.17%	78.6%	98.2%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  1  0  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  0  0  0  1  0  0  0  0  1  0  66.67%		4
  0  0  0  0  4  0  0  0  0  0  0  0  0  2  0  66.67%		5
  0  0  1  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  2  0  0  3  0  0  0  0  0  33.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  2  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 56.3%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	77.78%	97.04%	76.19%	[96.67, 97.78, 98.89, 98.89, 96.67, 96.67, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 96.67, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 72.73, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 98.81, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 80.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.65, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	77.66%	77.78%	98.41%	81.09%	98.43%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	71.11%	96.15%	69.05%	[97.78, 96.67, 95.56, 96.67, 97.78, 95.56, 97.78, 95.56, 96.67, 93.33, 96.67, 92.22, 95.56, 97.78, 96.67]%	[80.0, 80.0, 66.67, 72.73, 80.0, 66.67, 83.33, 66.67, 76.92, 50.0, 76.92, 53.33, 66.67, 83.33, 66.67]%	[66.67, 100.0, 66.67, 66.67, 66.67, 66.67, 83.33, 66.67, 83.33, 50.0, 83.33, 66.67, 66.67, 83.33, 50.0]%	[100.0, 96.43, 97.62, 98.81, 100.0, 97.62, 98.81, 97.62, 97.62, 96.43, 97.62, 94.05, 97.62, 98.81, 100.0]%	[100.0, 66.67, 66.67, 80.0, 100.0, 66.67, 83.33, 66.67, 71.43, 50.0, 71.43, 44.44, 66.67, 83.33, 100.0]%	[97.67, 100.0, 97.62, 97.65, 97.67, 97.62, 98.81, 97.62, 98.8, 96.43, 98.8, 97.53, 97.62, 98.81, 96.55]%	||	71.33%	71.11%	97.94%	74.49%	97.95%	
  4  1  0  0  0  0  1  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  4  0  0  0  0  0  0  0  0  1  1  0  0  66.67%		3
  0  1  0  4  0  1  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  1  4  0  0  0  0  0  0  1  0  0  0  66.67%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  4  0  0  0  1  0  0  0  66.67%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  1  3  0  2  0  0  0  50.0%		10
  0  0  1  0  0  0  0  0  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  2  0  0  0  0  1  0  3  50.0%		15
Forest OOB Error: 54.96%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	77.78%	97.04%	76.19%	[96.67, 97.78, 98.89, 98.89, 96.67, 96.67, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 96.67, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 72.73, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 98.81, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 80.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.65, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	77.66%	77.78%	98.41%	81.09%	98.43%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	66.67%	95.56%	64.29%	[96.67, 90.0, 98.89, 98.89, 96.67, 97.78, 93.33, 88.89, 94.44, 94.44, 94.44, 96.67, 96.67, 98.89, 96.67]%	[72.73, 18.18, 90.91, 90.91, 76.92, 83.33, 50.0, 50.0, 66.67, 44.44, 61.54, 72.73, 66.67, 92.31, 66.67]%	[66.67, 16.67, 83.33, 83.33, 83.33, 83.33, 50.0, 83.33, 83.33, 33.33, 66.67, 66.67, 50.0, 100.0, 50.0]%	[98.81, 95.24, 100.0, 100.0, 97.62, 98.81, 96.43, 89.29, 95.24, 98.81, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 20.0, 100.0, 100.0, 71.43, 83.33, 50.0, 35.71, 55.56, 66.67, 57.14, 80.0, 100.0, 85.71, 100.0]%	[97.65, 94.12, 98.82, 98.82, 98.8, 98.81, 96.43, 98.68, 98.77, 95.4, 97.59, 97.65, 96.55, 100.0, 96.55]%	||	66.93%	66.67%	97.62%	72.37%	97.64%	
  4  1  0  0  0  0  0  0  1  0  0  0  0  0  0  66.67%		1
  0  1  0  0  1  0  2  0  2  0  0  0  0  0  0  16.67%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  1  0  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  0  0  0  0  0  1  0  83.33%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  2  0  0  0  0  0  1  0  2  0  1  0  0  0  33.33%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  1  0  0  2  0  3  0  0  50.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  1  0  0  0  0  0  0  2  0  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 54.55%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	77.78%	97.04%	76.19%	[96.67, 97.78, 98.89, 98.89, 96.67, 96.67, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 96.67, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 72.73, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 98.81, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 80.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.65, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	77.66%	77.78%	98.41%	81.09%	98.43%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[98.89, 97.78, 97.78, 96.67, 97.78, 97.78, 94.44, 95.56, 95.56, 95.56, 95.56, 98.89, 94.44, 96.67, 97.78]%	[90.91, 83.33, 83.33, 76.92, 80.0, 80.0, 54.55, 60.0, 71.43, 71.43, 60.0, 90.91, 66.67, 80.0, 83.33]%	[83.33, 83.33, 83.33, 83.33, 66.67, 66.67, 50.0, 50.0, 83.33, 83.33, 50.0, 83.33, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 97.62, 100.0, 100.0, 97.62, 98.81, 96.43, 96.43, 98.81, 100.0, 95.24, 96.43, 98.81]%	[100.0, 83.33, 83.33, 71.43, 100.0, 100.0, 60.0, 75.0, 62.5, 62.5, 75.0, 100.0, 55.56, 66.67, 83.33]%	[98.82, 98.81, 98.81, 98.8, 97.67, 97.67, 96.47, 96.51, 98.78, 98.78, 96.51, 98.82, 98.77, 100.0, 98.81]%	||	75.52%	75.56%	98.25%	78.58%	98.27%	
  5  0  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  0  0  1  0  0  0  0  83.33%		3
  0  0  0  5  0  0  0  0  0  0  0  0  0  1  0  83.33%		4
  0  0  0  1  4  0  0  0  0  1  0  0  0  0  0  66.67%		5
  0  0  0  0  0  4  1  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  1  0  0  3  0  0  2  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  3  1  0  0  0  1  0  1  50.0%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  0  0  1  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  3  0  2  0  0  50.0%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  1  0  0  0  0  0  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 57.2%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	77.78%	97.04%	76.19%	[96.67, 97.78, 98.89, 98.89, 96.67, 96.67, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 96.67, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 72.73, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 98.81, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 80.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.65, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	77.66%	77.78%	98.41%	81.09%	98.43%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	70.0%	96.0%	67.86%	[96.67, 96.67, 97.78, 95.56, 97.78, 97.78, 94.44, 94.44, 95.56, 95.56, 94.44, 96.67, 95.56, 97.78, 93.33]%	[66.67, 72.73, 83.33, 66.67, 80.0, 83.33, 54.55, 61.54, 75.0, 66.67, 44.44, 76.92, 66.67, 83.33, 62.5]%	[50.0, 66.67, 83.33, 66.67, 66.67, 83.33, 50.0, 66.67, 100.0, 66.67, 33.33, 83.33, 66.67, 83.33, 83.33]%	[100.0, 98.81, 98.81, 97.62, 100.0, 98.81, 97.62, 96.43, 95.24, 97.62, 98.81, 97.62, 97.62, 98.81, 94.05]%	[100.0, 80.0, 83.33, 66.67, 100.0, 83.33, 60.0, 57.14, 60.0, 66.67, 66.67, 71.43, 66.67, 83.33, 50.0]%	[96.55, 97.65, 98.81, 97.62, 97.67, 98.81, 96.47, 97.59, 100.0, 97.62, 95.4, 98.8, 97.62, 98.81, 98.75]%	||	69.62%	70.0%	97.86%	73.02%	97.88%	
  3  1  0  0  0  0  0  0  1  0  0  0  0  0  1  50.0%		1
  0  4  0  1  0  0  0  0  1  0  0  0  0  0  0  66.67%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  0  1  0  0  0  0  0  0  0  1  66.67%		4
  0  0  0  1  4  1  0  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  3  0  0  0  0  0  0  0  3  50.0%		7
  0  0  1  0  0  0  0  4  0  0  0  0  0  1  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  4  0  2  0  0  0  66.67%		10
  0  0  0  0  0  0  0  2  0  0  2  0  2  0  0  33.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  1  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  1  0  0  0  0  5  83.33%		15
Forest OOB Error: 57.03%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	77.78%	97.04%	76.19%	[96.67, 97.78, 98.89, 98.89, 96.67, 96.67, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 96.67, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 72.73, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 98.81, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 80.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.65, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	77.66%	77.78%	98.41%	81.09%	98.43%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	71.11%	96.15%	69.05%	[97.78, 94.44, 97.78, 96.67, 97.78, 95.56, 92.22, 94.44, 94.44, 96.67, 95.56, 97.78, 97.78, 96.67, 96.67]%	[80.0, 44.44, 83.33, 72.73, 80.0, 66.67, 58.82, 66.67, 66.67, 76.92, 71.43, 80.0, 80.0, 76.92, 66.67]%	[66.67, 33.33, 83.33, 66.67, 66.67, 66.67, 83.33, 83.33, 83.33, 83.33, 83.33, 66.67, 66.67, 83.33, 50.0]%	[100.0, 98.81, 98.81, 98.81, 100.0, 97.62, 92.86, 95.24, 95.24, 97.62, 96.43, 100.0, 100.0, 97.62, 100.0]%	[100.0, 66.67, 83.33, 80.0, 100.0, 66.67, 45.45, 55.56, 55.56, 71.43, 62.5, 100.0, 100.0, 71.43, 100.0]%	[97.67, 95.4, 98.81, 97.65, 97.67, 97.62, 98.73, 98.77, 98.77, 98.8, 98.78, 97.67, 97.67, 98.8, 96.55]%	||	71.42%	71.11%	97.94%	77.24%	97.96%	
  4  0  0  0  0  0  0  0  1  1  0  0  0  0  0  66.67%		1
  0  2  0  0  0  0  3  0  1  0  0  0  0  0  0  33.33%		2
  0  0  5  0  0  0  0  0  0  0  1  0  0  0  0  83.33%		3
  0  1  0  4  0  1  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  1  4  0  1  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  5  0  0  0  0  1  0  83.33%		9
  0  0  0  0  0  0  0  0  1  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  1  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  1  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  1  2  0  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 54.2%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	77.78%	97.04%	76.19%	[96.67, 97.78, 98.89, 98.89, 96.67, 96.67, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 96.67, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 72.73, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 98.81, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 80.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.65, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	77.66%	77.78%	98.41%	81.09%	98.43%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	68.89%	95.85%	66.67%	[95.56, 97.78, 93.33, 97.78, 98.89, 95.56, 93.33, 94.44, 94.44, 94.44, 95.56, 96.67, 94.44, 98.89, 96.67]%	[50.0, 85.71, 62.5, 80.0, 90.91, 71.43, 40.0, 44.44, 66.67, 61.54, 50.0, 66.67, 70.59, 92.31, 76.92]%	[33.33, 100.0, 83.33, 66.67, 83.33, 83.33, 33.33, 33.33, 83.33, 66.67, 33.33, 50.0, 100.0, 100.0, 83.33]%	[100.0, 97.62, 94.05, 100.0, 100.0, 96.43, 97.62, 98.81, 95.24, 96.43, 100.0, 100.0, 94.05, 98.81, 97.62]%	[100.0, 75.0, 50.0, 100.0, 100.0, 62.5, 50.0, 66.67, 55.56, 57.14, 100.0, 100.0, 54.55, 85.71, 71.43]%	[95.45, 100.0, 98.75, 97.67, 98.82, 98.78, 95.35, 95.4, 98.77, 97.59, 95.45, 96.55, 100.0, 100.0, 98.8]%	||	67.31%	68.89%	97.78%	75.24%	97.83%	
  2  1  2  0  0  0  0  0  1  0  0  0  0  0  0  33.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  0  0  1  0  0  83.33%		3
  0  0  0  4  0  1  0  0  1  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  2  2  0  0  1  0  0  0  0  0  33.33%		7
  0  0  1  0  0  0  0  2  0  0  0  0  1  0  2  33.33%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  1  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  2  0  3  0  0  33.33%		11
  0  0  0  0  0  0  1  0  0  2  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  1  0  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 57.2%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	77.78%	97.04%	76.19%	[96.67, 97.78, 98.89, 98.89, 96.67, 96.67, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 96.67, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 72.73, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 98.81, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 80.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.65, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	77.66%	77.78%	98.41%	81.09%	98.43%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	68.89%	95.85%	66.67%	[98.89, 93.33, 98.89, 97.78, 97.78, 97.78, 94.44, 96.67, 95.56, 86.67, 96.67, 92.22, 96.67, 98.89, 95.56]%	[90.91, 40.0, 90.91, 80.0, 83.33, 83.33, 61.54, 76.92, 71.43, 14.29, 80.0, 46.15, 72.73, 92.31, 50.0]%	[83.33, 33.33, 83.33, 66.67, 83.33, 83.33, 66.67, 83.33, 83.33, 16.67, 100.0, 50.0, 66.67, 100.0, 33.33]%	[100.0, 97.62, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 96.43, 91.67, 96.43, 95.24, 98.81, 98.81, 100.0]%	[100.0, 50.0, 100.0, 100.0, 83.33, 83.33, 57.14, 71.43, 62.5, 12.5, 66.67, 42.86, 80.0, 85.71, 100.0]%	[98.82, 95.35, 98.82, 97.67, 98.81, 98.81, 97.59, 98.8, 98.78, 93.9, 100.0, 96.39, 97.65, 100.0, 95.45]%	||	68.92%	68.89%	97.78%	73.03%	97.79%	
  5  0  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		1
  0  2  0  0  0  0  2  0  1  1  0  0  0  0  0  33.33%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  1  0  4  1  0  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  4  0  0  2  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  16.67%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  3  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  2  0  1  0  0  1  0  2  33.33%		15
Forest OOB Error: 59.16%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	77.78%	97.04%	76.19%	[96.67, 97.78, 98.89, 98.89, 96.67, 96.67, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 96.67, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 72.73, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 98.81, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 80.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.65, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	77.66%	77.78%	98.41%	81.09%	98.43%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[97.78, 95.56, 97.78, 98.89, 100.0, 97.78, 92.22, 96.67, 94.44, 91.11, 95.56, 95.56, 96.67, 97.78, 98.89]%	[83.33, 60.0, 80.0, 90.91, 100.0, 83.33, 46.15, 72.73, 70.59, 33.33, 66.67, 60.0, 76.92, 85.71, 90.91]%	[83.33, 50.0, 66.67, 83.33, 100.0, 83.33, 50.0, 66.67, 100.0, 33.33, 66.67, 50.0, 83.33, 100.0, 83.33]%	[98.81, 98.81, 100.0, 100.0, 100.0, 98.81, 95.24, 98.81, 94.05, 95.24, 97.62, 98.81, 97.62, 97.62, 100.0]%	[83.33, 75.0, 100.0, 100.0, 100.0, 83.33, 42.86, 80.0, 54.55, 33.33, 66.67, 75.0, 71.43, 75.0, 100.0]%	[98.81, 96.51, 97.67, 98.82, 100.0, 98.81, 96.39, 97.65, 100.0, 95.24, 97.62, 96.51, 98.8, 100.0, 98.82]%	||	73.37%	73.33%	98.1%	76.03%	98.11%	
  5  0  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		1
  0  3  0  0  0  0  1  0  1  1  0  0  0  0  0  50.0%		2
  0  0  4  0  0  1  0  0  1  0  0  0  0  0  0  66.67%		3
  0  1  0  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  3  0  0  1  0  0  0  1  0  50.0%		7
  0  0  0  0  0  0  0  4  1  0  1  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  3  0  0  2  0  1  0  0  0  33.33%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  2  0  3  0  1  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 60.24%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	77.78%	97.04%	76.19%	[96.67, 97.78, 98.89, 98.89, 96.67, 96.67, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 96.67, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 72.73, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 98.81, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 80.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.65, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	77.66%	77.78%	98.41%	81.09%	98.43%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	74.44%	96.59%	72.62%	[98.89, 96.67, 93.33, 97.78, 97.78, 95.56, 96.67, 93.33, 96.67, 98.89, 95.56, 97.78, 94.44, 97.78, 97.78]%	[90.91, 80.0, 50.0, 80.0, 80.0, 71.43, 72.73, 50.0, 76.92, 92.31, 71.43, 80.0, 61.54, 83.33, 80.0]%	[83.33, 100.0, 50.0, 66.67, 66.67, 83.33, 66.67, 50.0, 83.33, 100.0, 83.33, 66.67, 66.67, 83.33, 66.67]%	[100.0, 96.43, 96.43, 100.0, 100.0, 96.43, 98.81, 96.43, 97.62, 98.81, 96.43, 100.0, 96.43, 98.81, 100.0]%	[100.0, 66.67, 50.0, 100.0, 100.0, 62.5, 80.0, 50.0, 71.43, 85.71, 62.5, 100.0, 57.14, 83.33, 100.0]%	[98.82, 100.0, 96.43, 97.67, 97.67, 98.78, 97.65, 96.43, 98.8, 100.0, 98.78, 97.67, 97.59, 98.81, 97.67]%	||	74.71%	74.44%	98.17%	77.95%	98.19%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  3  0  0  0  0  0  2  0  0  0  0  1  0  50.0%		3
  0  0  0  4  0  2  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  1  0  4  0  0  0  0  0  0  0  1  0  0  66.67%		5
  0  1  0  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  4  2  0  0  0  0  0  0  0  66.67%		7
  0  0  2  0  0  0  0  3  0  0  1  0  0  0  0  50.0%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  0  0  1  0  4  66.67%		15
Forest OOB Error: 58.59%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	77.78%	97.04%	76.19%	[96.67, 97.78, 98.89, 98.89, 96.67, 96.67, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 96.67, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 72.73, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 98.81, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 80.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.65, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	77.66%	77.78%	98.41%	81.09%	98.43%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	71.11%	96.15%	69.05%	[95.56, 95.56, 97.78, 98.89, 98.89, 95.56, 94.44, 93.33, 96.67, 94.44, 96.67, 95.56, 95.56, 97.78, 95.56]%	[66.67, 60.0, 83.33, 90.91, 90.91, 60.0, 66.67, 57.14, 80.0, 54.55, 76.92, 60.0, 71.43, 85.71, 50.0]%	[66.67, 50.0, 83.33, 83.33, 83.33, 50.0, 83.33, 66.67, 100.0, 50.0, 83.33, 50.0, 83.33, 100.0, 33.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 95.24, 95.24, 96.43, 97.62, 97.62, 98.81, 96.43, 97.62, 100.0]%	[66.67, 75.0, 83.33, 100.0, 100.0, 75.0, 55.56, 50.0, 66.67, 60.0, 71.43, 75.0, 62.5, 75.0, 100.0]%	[97.62, 96.51, 98.81, 98.82, 98.82, 96.51, 98.77, 97.56, 100.0, 96.47, 98.8, 96.51, 98.78, 100.0, 95.45]%	||	70.28%	71.11%	97.94%	74.41%	97.96%	
  4  1  0  0  0  0  0  0  1  0  0  0  0  0  0  66.67%		1
  0  3  0  0  0  0  2  0  1  0  0  0  0  0  0  50.0%		2
  0  0  5  0  0  0  0  1  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  0  0  0  0  0  1  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  1  0  0  3  0  0  1  0  0  0  0  1  0  50.0%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  1  0  1  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  2  0  0  0  0  0  1  0  0  3  0  0  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  2  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  2  0  0  0  0  2  0  2  33.33%		15
Forest OOB Error: 52.38%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	77.78%	97.04%	76.19%	[96.67, 97.78, 98.89, 98.89, 96.67, 96.67, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 96.67, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 72.73, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 98.81, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 80.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.65, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	77.66%	77.78%	98.41%	81.09%	98.43%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[96.67, 97.78, 100.0, 100.0, 96.67, 94.44, 94.44, 94.44, 94.44, 93.33, 94.44, 96.67, 95.56, 98.89, 96.67]%	[76.92, 80.0, 100.0, 100.0, 80.0, 54.55, 54.55, 61.54, 66.67, 40.0, 54.55, 72.73, 71.43, 92.31, 66.67]%	[83.33, 66.67, 100.0, 100.0, 100.0, 50.0, 50.0, 66.67, 83.33, 33.33, 50.0, 66.67, 83.33, 100.0, 50.0]%	[97.62, 100.0, 100.0, 100.0, 96.43, 97.62, 97.62, 96.43, 95.24, 97.62, 97.62, 98.81, 96.43, 98.81, 100.0]%	[71.43, 100.0, 100.0, 100.0, 66.67, 60.0, 60.0, 57.14, 55.56, 50.0, 60.0, 80.0, 62.5, 85.71, 100.0]%	[98.8, 97.67, 100.0, 100.0, 100.0, 96.47, 96.47, 97.59, 98.77, 95.35, 96.47, 97.65, 98.78, 100.0, 96.55]%	||	71.46%	72.22%	98.02%	73.93%	98.04%	
  5  0  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		1
  0  4  0  0  1  0  0  0  1  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  1  3  0  0  1  0  0  0  0  1  0  50.0%		6
  2  0  0  0  0  1  3  0  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  1  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  1  2  0  0  2  0  1  0  0  0  33.33%		10
  0  0  0  0  0  0  0  1  0  0  3  0  2  0  0  50.0%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  2  1  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 53.63%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	77.78%	97.04%	76.19%	[96.67, 97.78, 98.89, 98.89, 96.67, 96.67, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 96.67, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 72.73, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 98.81, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 80.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.65, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	77.66%	77.78%	98.41%	81.09%	98.43%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[98.89, 97.78, 98.89, 97.78, 98.89, 98.89, 94.44, 94.44, 96.67, 90.0, 94.44, 95.56, 97.78, 100.0, 96.67]%	[92.31, 83.33, 90.91, 83.33, 90.91, 90.91, 61.54, 61.54, 80.0, 30.77, 66.67, 60.0, 80.0, 100.0, 66.67]%	[100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 66.67, 66.67, 100.0, 33.33, 83.33, 50.0, 66.67, 100.0, 50.0]%	[98.81, 98.81, 100.0, 98.81, 100.0, 100.0, 96.43, 96.43, 96.43, 94.05, 95.24, 98.81, 100.0, 100.0, 100.0]%	[85.71, 83.33, 100.0, 83.33, 100.0, 100.0, 57.14, 57.14, 66.67, 28.57, 55.56, 75.0, 100.0, 100.0, 100.0]%	[100.0, 98.81, 98.82, 98.81, 98.82, 98.82, 97.59, 97.59, 100.0, 95.18, 98.77, 96.51, 97.67, 100.0, 96.55]%	||	75.93%	75.56%	98.25%	79.5%	98.26%	
  6  0  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		1
  1  5  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  1  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  1  0  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  4  0  0  2  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  1  0  1  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  2  0  1  2  0  1  0  0  0  33.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  3  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  2  0  0  1  0  0  0  3  50.0%		15
Forest OOB Error: 58.2%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	78.89%	97.19%	77.38%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	78.73%	78.89%	98.49%	82.66%	98.51%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	70.0%	96.0%	67.86%	[95.56, 96.67, 94.44, 96.67, 98.89, 97.78, 94.44, 94.44, 93.33, 96.67, 97.78, 96.67, 94.44, 96.67, 95.56]%	[60.0, 72.73, 54.55, 72.73, 90.91, 80.0, 70.59, 61.54, 57.14, 76.92, 80.0, 72.73, 66.67, 76.92, 60.0]%	[50.0, 66.67, 50.0, 66.67, 83.33, 66.67, 100.0, 66.67, 66.67, 83.33, 66.67, 66.67, 83.33, 83.33, 50.0]%	[98.81, 98.81, 97.62, 98.81, 100.0, 100.0, 94.05, 96.43, 95.24, 97.62, 100.0, 98.81, 95.24, 97.62, 98.81]%	[75.0, 80.0, 60.0, 80.0, 100.0, 100.0, 54.55, 57.14, 50.0, 71.43, 100.0, 80.0, 55.56, 71.43, 75.0]%	[96.51, 97.65, 96.47, 97.65, 98.82, 97.67, 100.0, 97.59, 97.56, 98.8, 97.67, 97.65, 98.77, 98.8, 96.51]%	||	70.23%	70.0%	97.86%	74.01%	97.87%	
  3  1  0  0  0  0  1  0  0  0  0  0  1  0  0  50.0%		1
  1  4  0  0  0  0  1  0  0  0  0  0  0  0  0  66.67%		2
  0  0  3  0  0  0  0  0  2  0  0  0  1  0  0  50.0%		3
  0  0  0  4  0  0  1  0  0  0  0  0  1  0  0  66.67%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  4  1  0  0  0  1  0  0  66.67%		8
  0  0  1  0  0  0  1  0  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  1  0  0  0  0  1  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  1  0  0  0  0  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  5  1  83.33%		14
  0  0  0  0  0  0  0  2  0  0  0  0  0  1  3  50.0%		15
Forest OOB Error: 57.58%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	78.89%	97.19%	77.38%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	78.73%	78.89%	98.49%	82.66%	98.51%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	64.44%	95.26%	61.9%	[95.56, 94.44, 95.56, 96.67, 94.44, 96.67, 94.44, 94.44, 96.67, 92.22, 94.44, 94.44, 96.67, 95.56, 96.67]%	[60.0, 61.54, 71.43, 66.67, 54.55, 76.92, 61.54, 54.55, 76.92, 53.33, 44.44, 61.54, 80.0, 66.67, 66.67]%	[50.0, 66.67, 83.33, 50.0, 50.0, 83.33, 66.67, 50.0, 83.33, 66.67, 33.33, 66.67, 100.0, 66.67, 50.0]%	[98.81, 96.43, 96.43, 100.0, 97.62, 97.62, 96.43, 97.62, 97.62, 94.05, 98.81, 96.43, 96.43, 97.62, 100.0]%	[75.0, 57.14, 62.5, 100.0, 60.0, 71.43, 57.14, 60.0, 71.43, 44.44, 66.67, 57.14, 66.67, 66.67, 100.0]%	[96.51, 97.59, 98.78, 96.55, 96.47, 98.8, 97.59, 96.47, 98.8, 97.53, 95.4, 97.59, 100.0, 97.62, 96.55]%	||	63.78%	64.44%	97.46%	67.75%	97.48%	
  3  2  0  0  0  0  0  0  1  0  0  0  0  0  0  50.0%		1
  1  4  0  0  0  0  1  0  0  0  0  0  0  0  0  66.67%		2
  0  0  5  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		3
  0  0  0  3  2  0  0  0  0  0  0  1  0  0  0  50.0%		4
  0  0  2  0  3  0  0  0  0  1  0  0  0  0  0  50.0%		5
  0  1  0  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  4  0  0  1  0  1  0  0  0  66.67%		7
  0  0  0  0  0  0  1  3  0  0  0  0  1  1  0  50.0%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  1  4  0  1  0  0  0  66.67%		10
  0  0  0  0  0  0  0  2  0  0  2  0  2  0  0  33.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  1  1  0  0  1  3  50.0%		15
Forest OOB Error: 60.85%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	78.89%	97.19%	77.38%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	78.73%	78.89%	98.49%	82.66%	98.51%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	67.78%	95.7%	65.48%	[95.56, 97.78, 94.44, 96.67, 98.89, 93.33, 92.22, 95.56, 93.33, 95.56, 96.67, 93.33, 96.67, 96.67, 98.89]%	[60.0, 85.71, 61.54, 72.73, 90.91, 62.5, 36.36, 60.0, 57.14, 66.67, 76.92, 50.0, 76.92, 66.67, 90.91]%	[50.0, 100.0, 66.67, 66.67, 83.33, 83.33, 33.33, 50.0, 66.67, 66.67, 83.33, 50.0, 83.33, 50.0, 83.33]%	[98.81, 97.62, 96.43, 98.81, 100.0, 94.05, 96.43, 98.81, 95.24, 97.62, 97.62, 96.43, 97.62, 100.0, 100.0]%	[75.0, 75.0, 57.14, 80.0, 100.0, 50.0, 40.0, 75.0, 50.0, 66.67, 71.43, 50.0, 71.43, 100.0, 100.0]%	[96.51, 100.0, 97.59, 97.65, 98.82, 98.75, 95.29, 96.51, 97.56, 97.62, 98.8, 96.43, 98.8, 96.55, 98.82]%	||	67.67%	67.78%	97.7%	70.78%	97.71%	
  3  2  0  0  0  0  0  1  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  4  1  0  0  0  0  0  0  0  0  1  0  0  66.67%		3
  0  0  0  4  0  1  0  0  0  0  1  0  0  0  0  66.67%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  2  0  1  0  0  2  0  0  0  33.33%		7
  0  0  1  0  0  0  0  3  1  0  0  1  0  0  0  50.0%		8
  0  0  2  0  0  0  0  0  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  1  0  1  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  2  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  3  0  0  0  0  0  0  0  3  0  50.0%		14
  1  0  0  0  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 63.57%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	78.89%	97.19%	77.38%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	78.73%	78.89%	98.49%	82.66%	98.51%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	62.22%	94.96%	59.52%	[96.67, 94.44, 97.78, 96.67, 97.78, 92.22, 93.33, 93.33, 93.33, 96.67, 93.33, 95.56, 93.33, 93.33, 96.67]%	[66.67, 66.67, 80.0, 76.92, 83.33, 53.33, 50.0, 57.14, 66.67, 66.67, 40.0, 50.0, 57.14, 50.0, 66.67]%	[50.0, 83.33, 66.67, 83.33, 83.33, 66.67, 50.0, 66.67, 100.0, 50.0, 33.33, 33.33, 66.67, 50.0, 50.0]%	[100.0, 95.24, 100.0, 97.62, 98.81, 94.05, 96.43, 95.24, 92.86, 100.0, 97.62, 100.0, 95.24, 96.43, 100.0]%	[100.0, 55.56, 100.0, 71.43, 83.33, 44.44, 50.0, 50.0, 50.0, 100.0, 50.0, 100.0, 50.0, 50.0, 100.0]%	[96.55, 98.77, 97.67, 98.8, 98.81, 97.53, 96.43, 97.56, 100.0, 96.55, 95.35, 95.45, 97.56, 96.43, 96.55]%	||	62.08%	62.22%	97.3%	70.32%	97.33%	
  3  1  0  0  0  0  0  0  2  0  0  0  0  0  0  50.0%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  4  1  1  0  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  1  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  2  3  1  0  0  0  0  0  0  0  50.0%		7
  0  1  0  0  0  0  0  4  0  0  0  0  1  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  2  0  0  0  0  0  0  1  3  0  0  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  1  0  2  0  2  0  0  33.33%		11
  0  0  0  0  0  0  2  0  0  0  0  2  0  2  0  33.33%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  2  1  0  0  0  0  0  0  3  0  50.0%		14
  0  0  0  0  0  0  0  2  0  0  0  0  1  0  3  50.0%		15
Forest OOB Error: 61.24%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	78.89%	97.19%	77.38%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	78.73%	78.89%	98.49%	82.66%	98.51%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	70.0%	96.0%	67.86%	[97.78, 98.89, 96.67, 97.78, 98.89, 95.56, 93.33, 96.67, 94.44, 90.0, 95.56, 93.33, 94.44, 100.0, 96.67]%	[80.0, 90.91, 76.92, 80.0, 90.91, 71.43, 50.0, 76.92, 66.67, 18.18, 75.0, 57.14, 44.44, 100.0, 66.67]%	[66.67, 83.33, 83.33, 66.67, 83.33, 83.33, 50.0, 83.33, 83.33, 16.67, 100.0, 66.67, 33.33, 100.0, 50.0]%	[100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 96.43, 97.62, 95.24, 95.24, 95.24, 95.24, 98.81, 100.0, 100.0]%	[100.0, 100.0, 71.43, 100.0, 100.0, 62.5, 50.0, 71.43, 55.56, 20.0, 60.0, 50.0, 66.67, 100.0, 100.0]%	[97.67, 98.82, 98.8, 97.67, 98.82, 98.78, 96.43, 98.8, 98.77, 94.12, 100.0, 97.56, 95.4, 100.0, 96.55]%	||	69.68%	70.0%	97.86%	73.84%	97.88%	
  4  0  0  0  0  0  0  0  1  1  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  0  0  0  1  0  0  0  83.33%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  0  0  1  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  0  0  0  1  0  0  0  83.33%		6
  0  0  0  0  0  1  3  0  0  2  0  0  0  0  0  50.0%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  1  1  0  2  1  0  1  0  0  0  16.67%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  33.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  2  0  0  0  0  1  0  3  50.0%		15
Forest OOB Error: 58.53%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	78.89%	97.19%	77.38%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	78.73%	78.89%	98.49%	82.66%	98.51%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 94.44, 92.22, 96.67, 97.78, 91.11, 97.78, 95.56, 97.78, 96.67]%	[83.33, 92.31, 90.91, 66.67, 83.33, 76.92, 61.54, 58.82, 76.92, 80.0, 42.86, 83.33, 50.0, 85.71, 66.67]%	[83.33, 100.0, 83.33, 50.0, 83.33, 83.33, 66.67, 83.33, 83.33, 66.67, 50.0, 83.33, 33.33, 100.0, 50.0]%	[98.81, 98.81, 100.0, 100.0, 98.81, 97.62, 96.43, 92.86, 97.62, 100.0, 94.05, 98.81, 100.0, 97.62, 100.0]%	[83.33, 85.71, 100.0, 100.0, 83.33, 71.43, 57.14, 45.45, 71.43, 100.0, 37.5, 83.33, 100.0, 75.0, 100.0]%	[98.81, 100.0, 98.82, 96.55, 98.81, 98.8, 97.59, 98.73, 98.8, 97.67, 96.34, 98.81, 95.45, 100.0, 96.55]%	||	73.29%	73.33%	98.1%	79.58%	98.12%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  3  1  1  0  0  0  0  0  0  0  1  0  50.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  1  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  4  0  1  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  0  4  0  1  0  0  0  66.67%		10
  1  0  0  0  0  0  0  2  0  0  3  0  0  0  0  50.0%		11
  0  0  0  0  0  0  0  1  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  1  0  0  3  0  2  0  0  33.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  2  0  0  1  0  0  0  3  50.0%		15
Forest OOB Error: 58.08%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	77.78%	97.04%	76.19%	[96.67, 97.78, 98.89, 98.89, 96.67, 96.67, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 96.67, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 72.73, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 98.81, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 80.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.65, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	77.66%	77.78%	98.41%	81.09%	98.43%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	70.0%	96.0%	67.86%	[92.22, 94.44, 100.0, 98.89, 97.78, 95.56, 95.56, 94.44, 95.56, 94.44, 95.56, 96.67, 96.67, 95.56, 96.67]%	[36.36, 61.54, 100.0, 90.91, 83.33, 60.0, 66.67, 66.67, 75.0, 61.54, 60.0, 66.67, 76.92, 66.67, 72.73]%	[33.33, 66.67, 100.0, 83.33, 83.33, 50.0, 66.67, 83.33, 100.0, 66.67, 50.0, 50.0, 83.33, 66.67, 66.67]%	[96.43, 96.43, 100.0, 100.0, 98.81, 98.81, 97.62, 95.24, 95.24, 96.43, 98.81, 100.0, 97.62, 97.62, 98.81]%	[40.0, 57.14, 100.0, 100.0, 83.33, 75.0, 66.67, 55.56, 60.0, 57.14, 75.0, 100.0, 71.43, 66.67, 80.0]%	[95.29, 97.59, 100.0, 98.82, 98.81, 96.51, 97.62, 98.77, 100.0, 97.59, 96.51, 96.55, 98.8, 97.62, 97.65]%	||	69.67%	70.0%	97.86%	72.53%	97.88%	
  2  3  0  0  0  0  0  0  0  0  0  0  0  0  1  33.33%		1
  1  4  0  0  0  0  0  0  1  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  1  0  0  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  3  0  0  1  0  0  0  0  2  0  50.0%		6
  0  0  0  0  0  1  4  0  1  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  1  0  1  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  2  0  0  3  0  1  0  0  50.0%		11
  0  0  0  0  0  0  0  0  0  2  0  3  1  0  0  50.0%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  1  0  0  0  0  1  0  0  0  4  0  66.67%		14
  1  0  0  0  0  0  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 52.87%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	77.78%	97.04%	76.19%	[96.67, 97.78, 98.89, 98.89, 96.67, 96.67, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 96.67, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 72.73, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 98.81, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 80.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.65, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	77.66%	77.78%	98.41%	81.09%	98.43%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	71.11%	96.15%	69.05%	[96.67, 95.56, 94.44, 96.67, 95.56, 97.78, 96.67, 94.44, 97.78, 98.89, 94.44, 97.78, 93.33, 97.78, 94.44]%	[66.67, 75.0, 61.54, 72.73, 71.43, 80.0, 76.92, 54.55, 83.33, 92.31, 44.44, 80.0, 66.67, 85.71, 28.57]%	[50.0, 100.0, 66.67, 66.67, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 33.33, 66.67, 100.0, 100.0, 16.67]%	[100.0, 95.24, 96.43, 98.81, 96.43, 100.0, 97.62, 97.62, 98.81, 98.81, 98.81, 100.0, 92.86, 97.62, 100.0]%	[100.0, 60.0, 57.14, 80.0, 62.5, 100.0, 71.43, 60.0, 83.33, 85.71, 66.67, 100.0, 50.0, 75.0, 100.0]%	[96.55, 100.0, 97.59, 97.65, 98.78, 97.67, 98.8, 96.47, 98.81, 100.0, 95.4, 97.67, 100.0, 100.0, 94.38]%	||	69.32%	71.11%	97.94%	76.79%	97.99%	
  3  3  0  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  4  0  1  0  0  0  0  0  0  0  1  0  0  66.67%		3
  0  0  0  4  1  0  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  1  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  1  0  0  0  0  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  3  0  0  1  0  1  0  0  50.0%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  1  0  0  0  0  0  2  0  3  0  0  33.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  2  0  0  0  0  1  2  1  16.67%		15
Forest OOB Error: 61.0%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	77.78%	97.04%	76.19%	[96.67, 97.78, 98.89, 98.89, 96.67, 96.67, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 96.67, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 72.73, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 98.81, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 80.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.65, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	77.66%	77.78%	98.41%	81.09%	98.43%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	68.89%	95.85%	66.67%	[96.67, 95.56, 98.89, 95.56, 100.0, 96.67, 93.33, 93.33, 95.56, 96.67, 92.22, 96.67, 95.56, 95.56, 95.56]%	[66.67, 75.0, 90.91, 60.0, 100.0, 72.73, 40.0, 57.14, 75.0, 72.73, 46.15, 72.73, 66.67, 71.43, 60.0]%	[50.0, 100.0, 83.33, 50.0, 100.0, 66.67, 33.33, 66.67, 100.0, 66.67, 50.0, 66.67, 66.67, 83.33, 50.0]%	[100.0, 95.24, 100.0, 98.81, 100.0, 98.81, 97.62, 95.24, 95.24, 98.81, 95.24, 98.81, 97.62, 96.43, 98.81]%	[100.0, 60.0, 100.0, 75.0, 100.0, 80.0, 50.0, 50.0, 60.0, 80.0, 42.86, 80.0, 66.67, 62.5, 75.0]%	[96.55, 100.0, 98.82, 96.51, 100.0, 97.65, 95.35, 97.56, 100.0, 97.65, 96.39, 97.65, 97.62, 98.78, 96.51]%	||	68.48%	68.89%	97.78%	72.13%	97.8%	
  3  2  0  0  0  0  0  0  0  0  0  0  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  1  0  3  0  1  0  0  0  0  0  0  0  1  0  50.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  1  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  1  0  0  0  0  2  2  0  0  0  0  0  1  0  33.33%		7
  0  0  0  0  0  0  0  4  1  0  1  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  1  0  0  4  0  1  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  3  0  2  0  0  50.0%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  5  1  83.33%		14
  0  0  0  0  0  0  0  1  1  0  1  0  0  0  3  50.0%		15
Forest OOB Error: 57.83%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	77.78%	97.04%	76.19%	[96.67, 97.78, 98.89, 98.89, 96.67, 96.67, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 96.67, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 72.73, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 98.81, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 80.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.65, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	77.66%	77.78%	98.41%	81.09%	98.43%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	68.89%	95.85%	66.67%	[97.78, 98.89, 95.56, 96.67, 96.67, 97.78, 94.44, 92.22, 97.78, 91.11, 92.22, 95.56, 95.56, 98.89, 96.67]%	[80.0, 92.31, 71.43, 76.92, 72.73, 83.33, 61.54, 46.15, 85.71, 20.0, 36.36, 60.0, 71.43, 92.31, 66.67]%	[66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 50.0, 100.0, 16.67, 33.33, 50.0, 83.33, 100.0, 50.0]%	[100.0, 98.81, 96.43, 97.62, 98.81, 98.81, 96.43, 95.24, 97.62, 96.43, 96.43, 98.81, 96.43, 98.81, 100.0]%	[100.0, 85.71, 62.5, 71.43, 80.0, 83.33, 57.14, 42.86, 75.0, 25.0, 40.0, 75.0, 62.5, 85.71, 100.0]%	[97.67, 100.0, 98.78, 98.8, 97.65, 98.81, 97.59, 96.39, 100.0, 94.19, 95.29, 96.51, 98.78, 100.0, 96.55]%	||	67.79%	68.89%	97.78%	69.75%	97.8%	
  4  1  0  0  0  0  0  0  1  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  1  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  0  0  0  0  1  0  0  0  0  83.33%		4
  0  0  1  1  4  0  0  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  0  0  5  0  0  0  0  0  0  0  1  0  83.33%		6
  0  0  0  0  0  1  4  0  0  1  0  0  0  0  0  66.67%		7
  0  0  1  0  0  0  0  3  1  0  1  0  0  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  1  0  3  0  0  1  0  1  0  0  0  16.67%		10
  0  0  0  0  0  0  0  1  0  0  2  0  3  0  0  33.33%		11
  0  0  1  0  0  0  0  1  0  1  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  2  0  1  0  0  0  0  3  50.0%		15
Forest OOB Error: 57.03%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	77.78%	97.04%	76.19%	[96.67, 97.78, 98.89, 98.89, 96.67, 96.67, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 96.67, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 72.73, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 98.81, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 80.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.65, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	77.66%	77.78%	98.41%	81.09%	98.43%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	57.78%	94.37%	54.76%	[95.56, 92.22, 95.56, 95.56, 94.44, 97.78, 91.11, 93.33, 91.11, 93.33, 93.33, 96.67, 92.22, 96.67, 96.67]%	[66.67, 36.36, 71.43, 60.0, 66.67, 80.0, 42.86, 50.0, 50.0, 40.0, 57.14, 72.73, 22.22, 76.92, 66.67]%	[66.67, 33.33, 83.33, 50.0, 83.33, 66.67, 50.0, 50.0, 66.67, 33.33, 66.67, 66.67, 16.67, 83.33, 50.0]%	[97.62, 96.43, 96.43, 98.81, 95.24, 100.0, 94.05, 96.43, 92.86, 97.62, 95.24, 98.81, 97.62, 97.62, 100.0]%	[66.67, 40.0, 62.5, 75.0, 55.56, 100.0, 37.5, 50.0, 40.0, 50.0, 50.0, 80.0, 33.33, 71.43, 100.0]%	[97.62, 95.29, 98.78, 96.51, 98.77, 97.67, 96.34, 96.43, 97.5, 95.35, 97.56, 97.65, 94.25, 98.8, 96.55]%	||	57.31%	57.78%	96.98%	60.8%	97.0%	
  4  1  0  0  0  0  0  0  1  0  0  0  0  0  0  66.67%		1
  0  2  0  0  1  0  1  0  2  0  0  0  0  0  0  33.33%		2
  1  0  5  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  3  1  0  1  0  0  0  0  0  0  1  0  50.0%		4
  0  0  0  0  5  0  0  0  1  0  0  0  0  0  0  83.33%		5
  0  0  0  0  1  4  0  0  0  1  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  3  0  1  0  0  1  0  1  0  50.0%		7
  0  0  1  1  0  0  0  3  0  0  0  0  1  0  0  50.0%		8
  0  0  1  0  0  0  1  0  4  0  0  0  0  0  0  66.67%		9
  1  2  0  0  0  0  1  0  0  2  0  0  0  0  0  33.33%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  1  0  0  0  0  0  0  0  4  0  1  0  0  16.67%		13
  0  0  0  0  1  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  2  1  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 53.62%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	77.78%	97.04%	76.19%	[96.67, 97.78, 98.89, 98.89, 96.67, 96.67, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 96.67, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 72.73, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 98.81, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 80.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.65, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	77.66%	77.78%	98.41%	81.09%	98.43%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[98.89, 95.56, 98.89, 95.56, 98.89, 94.44, 93.33, 95.56, 95.56, 91.11, 97.78, 94.44, 98.89, 97.78, 97.78]%	[90.91, 60.0, 90.91, 71.43, 90.91, 54.55, 57.14, 66.67, 71.43, 42.86, 83.33, 54.55, 92.31, 83.33, 80.0]%	[83.33, 50.0, 83.33, 83.33, 83.33, 50.0, 66.67, 66.67, 83.33, 50.0, 83.33, 50.0, 100.0, 83.33, 66.67]%	[100.0, 98.81, 100.0, 96.43, 100.0, 97.62, 95.24, 97.62, 96.43, 94.05, 98.81, 97.62, 98.81, 98.81, 100.0]%	[100.0, 75.0, 100.0, 62.5, 100.0, 60.0, 50.0, 66.67, 62.5, 37.5, 83.33, 60.0, 85.71, 83.33, 100.0]%	[98.82, 96.51, 98.82, 98.78, 98.82, 96.47, 97.56, 97.62, 98.78, 96.34, 98.81, 96.47, 100.0, 98.81, 97.67]%	||	72.69%	72.22%	98.02%	75.1%	98.02%	
  5  0  0  1  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  3  0  0  0  0  3  0  0  0  0  0  0  0  0  50.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  1  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  1  0  3  0  0  1  0  0  0  0  1  0  50.0%		6
  0  0  0  0  0  1  4  0  0  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  0  0  1  0  1  0  0  66.67%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  0  3  0  2  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  1  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  3  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  2  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 56.3%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	77.78%	97.04%	76.19%	[96.67, 97.78, 98.89, 98.89, 96.67, 96.67, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 96.67, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 72.73, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 98.81, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 80.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.65, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	77.66%	77.78%	98.41%	81.09%	98.43%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	70.0%	96.0%	67.86%	[97.78, 98.89, 96.67, 97.78, 96.67, 94.44, 98.89, 95.56, 96.67, 91.11, 93.33, 94.44, 93.33, 97.78, 96.67]%	[83.33, 92.31, 72.73, 80.0, 72.73, 66.67, 90.91, 66.67, 76.92, 42.86, 50.0, 61.54, 57.14, 80.0, 66.67]%	[83.33, 100.0, 66.67, 66.67, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 50.0, 66.67, 66.67, 66.67, 50.0]%	[98.81, 98.81, 98.81, 100.0, 98.81, 95.24, 100.0, 97.62, 97.62, 94.05, 96.43, 96.43, 95.24, 100.0, 100.0]%	[83.33, 85.71, 80.0, 100.0, 80.0, 55.56, 100.0, 66.67, 71.43, 37.5, 50.0, 57.14, 50.0, 100.0, 100.0]%	[98.81, 100.0, 97.65, 97.67, 97.65, 98.77, 98.82, 97.62, 98.8, 96.34, 96.43, 97.59, 97.56, 97.67, 96.55]%	||	70.7%	70.0%	97.86%	74.49%	97.86%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  4  0  0  1  0  0  1  0  0  0  0  0  0  66.67%		3
  0  0  0  4  0  1  0  0  0  1  0  0  0  0  0  66.67%		4
  0  0  1  0  4  0  0  0  0  1  0  0  0  0  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  1  0  1  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  3  0  3  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  3  0  3  0  0  50.0%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  1  0  0  0  0  0  0  2  0  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 59.0%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	77.78%	97.04%	76.19%	[96.67, 97.78, 98.89, 98.89, 96.67, 96.67, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 96.67, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 72.73, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 98.81, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 80.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.65, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	77.66%	77.78%	98.41%	81.09%	98.43%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	66.67%	95.56%	64.29%	[97.78, 92.22, 94.44, 97.78, 96.67, 97.78, 94.44, 95.56, 97.78, 88.89, 95.56, 92.22, 97.78, 95.56, 98.89]%	[80.0, 46.15, 61.54, 80.0, 76.92, 83.33, 44.44, 60.0, 85.71, 28.57, 66.67, 46.15, 83.33, 71.43, 90.91]%	[66.67, 50.0, 66.67, 66.67, 83.33, 83.33, 33.33, 50.0, 100.0, 33.33, 66.67, 50.0, 83.33, 83.33, 83.33]%	[100.0, 95.24, 96.43, 100.0, 97.62, 98.81, 98.81, 98.81, 97.62, 92.86, 97.62, 95.24, 98.81, 96.43, 100.0]%	[100.0, 42.86, 57.14, 100.0, 71.43, 83.33, 66.67, 75.0, 75.0, 25.0, 66.67, 42.86, 83.33, 62.5, 100.0]%	[97.67, 96.39, 97.59, 97.67, 98.8, 98.81, 95.4, 96.51, 100.0, 95.12, 97.62, 96.39, 98.81, 98.78, 98.82]%	||	67.01%	66.67%	97.62%	70.12%	97.63%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  3  0  0  0  0  1  0  0  2  0  0  0  0  0  50.0%		2
  0  0  4  0  0  0  0  0  1  0  0  0  1  0  0  66.67%		3
  0  0  0  4  1  1  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  0  0  0  0  0  1  0  83.33%		6
  0  0  0  0  0  0  2  0  0  1  0  3  0  0  0  33.33%		7
  0  0  2  0  0  0  0  3  0  0  1  0  0  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  2  0  0  0  0  0  0  1  2  0  1  0  0  0  33.33%		10
  0  0  1  0  0  0  0  1  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  3  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  1  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  1  5  83.33%		15
Forest OOB Error: 57.26%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	77.78%	97.04%	76.19%	[96.67, 97.78, 98.89, 98.89, 96.67, 96.67, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 96.67, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 72.73, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 98.81, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 80.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.65, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	77.66%	77.78%	98.41%	81.09%	98.43%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	67.78%	95.7%	65.48%	[95.56, 98.89, 97.78, 97.78, 94.44, 96.67, 94.44, 94.44, 97.78, 90.0, 94.44, 93.33, 96.67, 97.78, 95.56]%	[66.67, 92.31, 80.0, 80.0, 54.55, 80.0, 44.44, 61.54, 85.71, 40.0, 44.44, 50.0, 76.92, 85.71, 60.0]%	[66.67, 100.0, 66.67, 66.67, 50.0, 100.0, 33.33, 66.67, 100.0, 50.0, 33.33, 50.0, 83.33, 100.0, 50.0]%	[97.62, 98.81, 100.0, 100.0, 97.62, 96.43, 98.81, 96.43, 97.62, 92.86, 98.81, 96.43, 97.62, 97.62, 98.81]%	[66.67, 85.71, 100.0, 100.0, 60.0, 66.67, 66.67, 57.14, 75.0, 33.33, 66.67, 50.0, 71.43, 75.0, 75.0]%	[97.62, 100.0, 97.67, 97.67, 96.47, 100.0, 95.4, 97.59, 100.0, 96.3, 95.4, 96.43, 98.8, 100.0, 96.51]%	||	66.82%	67.78%	97.7%	69.95%	97.72%	
  4  1  0  0  0  0  1  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  4  0  0  0  0  0  1  0  0  0  0  0  1  66.67%		3
  0  0  0  4  2  0  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  3  1  0  0  0  0  0  0  0  2  0  50.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  2  2  0  0  1  0  1  0  0  0  33.33%		7
  0  0  0  0  0  0  0  4  0  1  1  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  1  3  0  2  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  2  0  2  0  0  33.33%		11
  1  0  0  0  0  0  0  0  0  2  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  1  0  0  0  0  0  0  0  0  2  0  0  0  0  3  50.0%		15
Forest OOB Error: 59.43%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	77.78%	97.04%	76.19%	[96.67, 97.78, 98.89, 98.89, 96.67, 96.67, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 96.67, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 72.73, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 98.81, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 80.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.65, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	77.66%	77.78%	98.41%	81.09%	98.43%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	68.89%	95.85%	66.67%	[96.67, 98.89, 95.56, 97.78, 98.89, 96.67, 93.33, 94.44, 94.44, 94.44, 94.44, 95.56, 96.67, 96.67, 93.33]%	[72.73, 92.31, 71.43, 80.0, 90.91, 72.73, 57.14, 66.67, 66.67, 54.55, 66.67, 60.0, 66.67, 76.92, 25.0]%	[66.67, 100.0, 83.33, 66.67, 83.33, 66.67, 66.67, 83.33, 83.33, 50.0, 83.33, 50.0, 50.0, 83.33, 16.67]%	[98.81, 98.81, 96.43, 100.0, 100.0, 98.81, 95.24, 95.24, 95.24, 97.62, 95.24, 98.81, 100.0, 97.62, 98.81]%	[80.0, 85.71, 62.5, 100.0, 100.0, 80.0, 50.0, 55.56, 55.56, 60.0, 55.56, 75.0, 100.0, 71.43, 50.0]%	[97.65, 100.0, 98.78, 97.67, 98.82, 97.65, 97.56, 98.77, 98.77, 96.47, 98.77, 96.51, 96.55, 98.8, 94.32]%	||	68.03%	68.89%	97.78%	72.09%	97.81%	
  4  1  0  0  0  0  0  0  1  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  1  0  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  0  0  0  1  0  1  0  0  0  0  66.67%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  0  1  66.67%		6
  0  0  0  0  0  1  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  1  3  0  1  0  0  0  50.0%		10
  0  0  1  0  0  0  0  0  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  2  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  3  0  3  0  0  50.0%		13
  0  0  0  0  0  0  1  0  0  0  0  0  0  5  0  83.33%		14
  1  0  0  0  0  0  0  2  0  0  0  0  0  2  1  16.67%		15
Forest OOB Error: 58.3%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	77.78%	97.04%	76.19%	[96.67, 97.78, 98.89, 98.89, 96.67, 96.67, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 96.67, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 72.73, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 98.81, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 80.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.65, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	77.66%	77.78%	98.41%	81.09%	98.43%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	65.56%	95.41%	63.1%	[96.67, 92.22, 96.67, 97.78, 96.67, 95.56, 94.44, 94.44, 97.78, 96.67, 94.44, 95.56, 92.22, 94.44, 95.56]%	[66.67, 58.82, 72.73, 85.71, 66.67, 66.67, 54.55, 61.54, 83.33, 66.67, 54.55, 71.43, 53.33, 66.67, 50.0]%	[50.0, 83.33, 66.67, 100.0, 50.0, 66.67, 50.0, 66.67, 83.33, 50.0, 50.0, 83.33, 66.67, 83.33, 33.33]%	[100.0, 92.86, 98.81, 97.62, 100.0, 97.62, 97.62, 96.43, 98.81, 100.0, 97.62, 96.43, 94.05, 95.24, 100.0]%	[100.0, 45.45, 80.0, 75.0, 100.0, 66.67, 60.0, 57.14, 83.33, 100.0, 60.0, 62.5, 44.44, 55.56, 100.0]%	[96.55, 98.73, 97.65, 100.0, 96.55, 97.62, 96.47, 97.59, 98.81, 96.55, 96.47, 98.78, 97.53, 98.77, 95.45]%	||	65.29%	65.56%	97.54%	72.67%	97.57%	
  3  3  0  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  4  0  0  1  0  0  0  0  0  0  1  0  0  66.67%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  1  0  1  3  0  0  0  0  0  0  0  0  1  0  50.0%		5
  0  1  0  0  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  1  0  0  0  0  3  0  0  0  0  2  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  1  0  0  66.67%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  3  0  1  0  2  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  3  0  2  0  0  50.0%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  1  0  0  0  0  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  2  0  0  0  0  1  1  2  33.33%		15
Forest OOB Error: 60.57%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	77.78%	97.04%	76.19%	[96.67, 97.78, 98.89, 98.89, 96.67, 96.67, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 96.67, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 72.73, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 98.81, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 80.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.65, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	77.66%	77.78%	98.41%	81.09%	98.43%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	68.89%	95.85%	66.67%	[98.89, 95.56, 98.89, 96.67, 98.89, 96.67, 91.11, 91.11, 97.78, 90.0, 93.33, 95.56, 97.78, 98.89, 96.67]%	[90.91, 75.0, 90.91, 76.92, 90.91, 72.73, 33.33, 50.0, 83.33, 40.0, 50.0, 50.0, 80.0, 92.31, 66.67]%	[83.33, 100.0, 83.33, 83.33, 83.33, 66.67, 33.33, 66.67, 83.33, 50.0, 50.0, 33.33, 66.67, 100.0, 50.0]%	[100.0, 95.24, 100.0, 97.62, 100.0, 98.81, 95.24, 92.86, 98.81, 92.86, 96.43, 100.0, 100.0, 98.81, 100.0]%	[100.0, 60.0, 100.0, 71.43, 100.0, 80.0, 33.33, 40.0, 83.33, 33.33, 50.0, 100.0, 100.0, 85.71, 100.0]%	[98.82, 100.0, 98.82, 98.8, 98.82, 97.65, 95.24, 97.5, 98.81, 96.3, 96.43, 95.45, 97.67, 100.0, 96.55]%	||	69.53%	68.89%	97.78%	75.81%	97.79%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  1  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  0  0  1  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  0  1  0  0  0  1  0  66.67%		6
  0  1  0  0  0  0  2  1  0  2  0  0  0  0  0  33.33%		7
  0  1  0  1  0  0  0  4  0  0  0  0  0  0  0  66.67%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  3  0  0  3  0  0  0  0  0  50.0%		10
  0  0  0  0  0  0  0  3  0  0  3  0  0  0  0  50.0%		11
  0  0  0  0  0  0  1  0  0  3  0  2  0  0  0  33.33%		12
  0  0  0  1  0  0  0  0  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  2  0  0  0  3  50.0%		15
Forest OOB Error: 59.67%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	78.89%	97.19%	77.38%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	78.73%	78.89%	98.49%	82.66%	98.51%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	71.11%	96.15%	69.05%	[96.67, 98.89, 97.78, 97.78, 96.67, 95.56, 92.22, 95.56, 95.56, 94.44, 98.89, 97.78, 97.78, 88.89, 97.78]%	[66.67, 90.91, 80.0, 80.0, 76.92, 66.67, 53.33, 71.43, 75.0, 44.44, 90.91, 80.0, 83.33, 44.44, 80.0]%	[50.0, 83.33, 66.67, 66.67, 83.33, 66.67, 66.67, 83.33, 100.0, 33.33, 83.33, 66.67, 83.33, 66.67, 66.67]%	[100.0, 100.0, 100.0, 100.0, 97.62, 97.62, 94.05, 96.43, 95.24, 98.81, 100.0, 100.0, 98.81, 90.48, 100.0]%	[100.0, 100.0, 100.0, 100.0, 71.43, 66.67, 44.44, 62.5, 60.0, 66.67, 100.0, 100.0, 83.33, 33.33, 100.0]%	[96.55, 98.82, 97.67, 97.67, 98.8, 97.62, 97.53, 98.78, 100.0, 95.4, 98.82, 97.67, 98.81, 97.44, 97.67]%	||	72.27%	71.11%	97.94%	79.22%	97.95%	
  3  0  0  0  0  0  0  0  1  0  0  0  0  2  0  50.0%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  4  0  0  0  1  0  1  0  0  0  0  0  0  66.67%		3
  0  0  0  4  0  0  1  0  0  0  0  0  0  1  0  66.67%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  1  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  4  1  0  0  0  0  0  1  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  0  0  0  1  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  1  0  0  0  2  0  0  0  3  0  33.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  1  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  1  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 54.41%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	78.89%	97.19%	77.38%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	78.73%	78.89%	98.49%	82.66%	98.51%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[97.78, 96.67, 93.33, 96.67, 96.67, 97.78, 92.22, 93.33, 97.78, 97.78, 96.67, 98.89, 97.78, 100.0, 97.78]%	[83.33, 72.73, 25.0, 76.92, 76.92, 80.0, 46.15, 57.14, 85.71, 85.71, 76.92, 90.91, 83.33, 100.0, 80.0]%	[83.33, 66.67, 16.67, 83.33, 83.33, 66.67, 50.0, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 100.0, 66.67]%	[98.81, 98.81, 98.81, 97.62, 97.62, 100.0, 95.24, 95.24, 97.62, 97.62, 97.62, 100.0, 98.81, 100.0, 100.0]%	[83.33, 80.0, 50.0, 71.43, 71.43, 100.0, 42.86, 50.0, 75.0, 75.0, 71.43, 100.0, 83.33, 100.0, 100.0]%	[98.81, 97.65, 94.32, 98.8, 98.8, 97.67, 96.39, 97.56, 100.0, 100.0, 98.8, 98.82, 98.81, 100.0, 97.67]%	||	74.72%	75.56%	98.25%	76.92%	98.27%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  1  4  0  0  0  0  1  0  0  0  0  0  0  0  0  66.67%		2
  0  0  1  2  1  0  1  0  1  0  0  0  0  0  0  16.67%		3
  0  0  0  5  0  0  0  0  0  1  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  1  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  3  2  0  1  0  0  0  0  0  50.0%		7
  0  0  1  0  0  0  0  4  0  0  1  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  2  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 54.96%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	78.89%	97.19%	77.38%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	78.73%	78.89%	98.49%	82.66%	98.51%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	74.44%	96.59%	72.62%	[96.67, 95.56, 94.44, 98.89, 98.89, 98.89, 95.56, 93.33, 93.33, 96.67, 95.56, 95.56, 98.89, 100.0, 96.67]%	[72.73, 60.0, 54.55, 92.31, 92.31, 90.91, 71.43, 57.14, 62.5, 72.73, 66.67, 66.67, 90.91, 100.0, 66.67]%	[66.67, 50.0, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 66.67, 66.67, 83.33, 100.0, 50.0]%	[98.81, 98.81, 97.62, 98.81, 98.81, 100.0, 96.43, 95.24, 94.05, 98.81, 97.62, 97.62, 100.0, 100.0, 100.0]%	[80.0, 75.0, 60.0, 85.71, 85.71, 100.0, 62.5, 50.0, 50.0, 80.0, 66.67, 66.67, 100.0, 100.0, 100.0]%	[97.65, 96.51, 96.47, 100.0, 100.0, 98.82, 98.78, 97.56, 98.75, 97.65, 97.62, 97.62, 98.82, 100.0, 96.55]%	||	74.5%	74.44%	98.17%	77.48%	98.19%	
  4  1  0  0  0  0  0  0  1  0  0  0  0  0  0  66.67%		1
  0  3  0  0  0  0  2  0  1  0  0  0  0  0  0  50.0%		2
  0  0  3  1  1  0  0  0  0  0  0  1  0  0  0  50.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  0  0  1  0  0  0  83.33%		7
  0  0  1  0  0  0  0  4  0  0  1  0  0  0  0  66.67%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  2  4  0  0  0  0  0  66.67%		10
  1  0  0  0  0  0  0  1  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  2  0  0  1  0  0  0  3  50.0%		15
Forest OOB Error: 58.66%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	78.89%	97.19%	77.38%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	78.73%	78.89%	98.49%	82.66%	98.51%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	62.22%	94.96%	59.52%	[97.78, 94.44, 95.56, 95.56, 96.67, 94.44, 94.44, 93.33, 95.56, 90.0, 96.67, 93.33, 95.56, 95.56, 95.56]%	[83.33, 44.44, 75.0, 60.0, 72.73, 44.44, 66.67, 40.0, 71.43, 40.0, 72.73, 50.0, 71.43, 71.43, 50.0]%	[83.33, 33.33, 100.0, 50.0, 66.67, 33.33, 83.33, 33.33, 83.33, 50.0, 66.67, 50.0, 83.33, 83.33, 33.33]%	[98.81, 98.81, 95.24, 98.81, 98.81, 98.81, 95.24, 97.62, 96.43, 92.86, 98.81, 96.43, 96.43, 96.43, 100.0]%	[83.33, 66.67, 60.0, 75.0, 80.0, 66.67, 55.56, 50.0, 62.5, 33.33, 80.0, 50.0, 62.5, 62.5, 100.0]%	[98.81, 95.4, 100.0, 96.51, 97.65, 95.4, 98.77, 95.35, 98.78, 96.3, 97.65, 96.43, 98.78, 98.78, 95.45]%	||	60.91%	62.22%	97.3%	65.87%	97.34%	
  5  0  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		1
  0  2  0  0  0  0  2  0  1  1  0  0  0  0  0  33.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  1  0  3  1  1  0  0  0  0  0  0  0  0  0  50.0%		4
  0  0  1  0  4  0  1  0  0  0  0  0  0  0  0  66.67%		5
  0  0  2  0  0  2  0  0  1  0  0  0  0  1  0  33.33%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  2  0  0  1  0  1  1  0  33.33%		8
  0  0  0  0  0  0  0  0  5  0  0  0  0  1  0  83.33%		9
  0  0  0  0  0  0  0  0  0  3  0  3  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  2  0  3  0  0  0  50.0%		12
  0  0  0  1  0  0  0  0  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  1  0  0  0  0  0  0  2  0  1  0  0  0  0  2  33.33%		15
Forest OOB Error: 55.6%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	78.89%	97.19%	77.38%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	78.73%	78.89%	98.49%	82.66%	98.51%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[96.67, 95.56, 97.78, 98.89, 97.78, 97.78, 92.22, 94.44, 96.67, 92.22, 98.89, 96.67, 97.78, 97.78, 95.56]%	[66.67, 60.0, 85.71, 90.91, 80.0, 80.0, 46.15, 61.54, 76.92, 63.16, 92.31, 66.67, 85.71, 85.71, 50.0]%	[50.0, 50.0, 100.0, 83.33, 66.67, 66.67, 50.0, 66.67, 83.33, 100.0, 100.0, 50.0, 100.0, 100.0, 33.33]%	[100.0, 98.81, 97.62, 100.0, 100.0, 100.0, 95.24, 96.43, 97.62, 91.67, 98.81, 100.0, 97.62, 97.62, 100.0]%	[100.0, 75.0, 75.0, 100.0, 100.0, 100.0, 42.86, 57.14, 71.43, 46.15, 85.71, 100.0, 75.0, 75.0, 100.0]%	[96.55, 96.51, 100.0, 98.82, 97.67, 97.67, 96.39, 97.59, 98.8, 100.0, 100.0, 96.55, 100.0, 100.0, 95.45]%	||	72.76%	73.33%	98.1%	80.22%	98.13%	
  3  0  0  0  0  0  1  0  1  1  0  0  0  0  0  50.0%		1
  0  3  0  0  0  0  0  0  1  2  0  0  0  0  0  50.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  1  0  0  0  0  0  66.67%		5
  0  0  1  0  0  4  0  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  1  0  2  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  1  0  0  66.67%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  1  0  0  1  0  3  0  1  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  1  2  0  0  0  0  1  0  2  33.33%		15
Forest OOB Error: 56.96%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	78.89%	97.19%	77.38%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	78.73%	78.89%	98.49%	82.66%	98.51%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[96.67, 95.56, 98.89, 97.78, 97.78, 95.56, 91.11, 94.44, 95.56, 98.89, 95.56, 96.67, 96.67, 98.89, 96.67]%	[66.67, 60.0, 90.91, 83.33, 83.33, 66.67, 42.86, 61.54, 71.43, 90.91, 66.67, 76.92, 72.73, 92.31, 76.92]%	[50.0, 50.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 83.33, 66.67, 83.33, 66.67, 100.0, 83.33]%	[100.0, 98.81, 100.0, 98.81, 98.81, 97.62, 94.05, 96.43, 96.43, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62]%	[100.0, 75.0, 100.0, 83.33, 83.33, 66.67, 37.5, 57.14, 62.5, 100.0, 66.67, 71.43, 80.0, 85.71, 71.43]%	[96.55, 96.51, 98.82, 98.81, 98.81, 97.62, 96.34, 97.59, 98.78, 98.82, 97.62, 98.8, 97.65, 100.0, 98.8]%	||	73.55%	73.33%	98.1%	76.05%	98.1%	
  3  1  0  0  0  0  0  0  1  0  0  0  0  0  1  50.0%		1
  0  3  0  0  0  0  3  0  0  0  0  0  0  0  0  50.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  0  0  1  0  0  0  0  0  0  83.33%		4
  0  0  0  1  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  1  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  2  3  0  0  0  0  1  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  1  0  1  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  1  0  0  0  5  83.33%		15
Forest OOB Error: 52.82%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	77.78%	97.04%	76.19%	[96.67, 97.78, 98.89, 98.89, 96.67, 96.67, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 96.67, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 72.73, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 98.81, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 80.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.65, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	77.66%	77.78%	98.41%	81.09%	98.43%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	70.0%	96.0%	67.86%	[96.67, 95.56, 100.0, 95.56, 95.56, 94.44, 95.56, 96.67, 97.78, 93.33, 97.78, 94.44, 96.67, 93.33, 96.67]%	[76.92, 60.0, 100.0, 71.43, 60.0, 54.55, 71.43, 66.67, 85.71, 50.0, 80.0, 54.55, 80.0, 50.0, 76.92]%	[83.33, 50.0, 100.0, 83.33, 50.0, 50.0, 83.33, 50.0, 100.0, 50.0, 66.67, 50.0, 100.0, 50.0, 83.33]%	[97.62, 98.81, 100.0, 96.43, 98.81, 97.62, 96.43, 100.0, 97.62, 96.43, 100.0, 97.62, 96.43, 96.43, 97.62]%	[71.43, 75.0, 100.0, 62.5, 75.0, 60.0, 62.5, 100.0, 75.0, 50.0, 100.0, 60.0, 66.67, 50.0, 71.43]%	[98.8, 96.51, 100.0, 98.78, 96.51, 96.47, 98.78, 96.55, 100.0, 96.43, 97.67, 96.47, 100.0, 96.43, 98.8]%	||	69.21%	70.0%	97.86%	71.97%	97.88%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  1  3  0  1  0  0  1  0  0  0  0  0  0  0  0  50.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  2  3  0  0  0  0  0  0  0  0  1  0  50.0%		5
  0  0  0  0  1  3  0  0  1  0  0  0  0  1  0  50.0%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  3  0  0  0  0  1  1  1  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  1  3  0  2  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  2  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  1  0  0  1  0  0  0  3  1  50.0%		14
  1  0  0  0  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 56.65%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	77.78%	97.04%	76.19%	[96.67, 97.78, 98.89, 98.89, 96.67, 96.67, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 96.67, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 72.73, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 98.81, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 80.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.65, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	77.66%	77.78%	98.41%	81.09%	98.43%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	67.78%	95.7%	65.48%	[96.67, 96.67, 97.78, 96.67, 97.78, 96.67, 94.44, 95.56, 92.22, 92.22, 94.44, 95.56, 95.56, 97.78, 95.56]%	[72.73, 76.92, 83.33, 72.73, 83.33, 72.73, 44.44, 71.43, 58.82, 46.15, 44.44, 66.67, 71.43, 83.33, 60.0]%	[66.67, 83.33, 83.33, 66.67, 83.33, 66.67, 33.33, 83.33, 83.33, 50.0, 33.33, 66.67, 83.33, 83.33, 50.0]%	[98.81, 97.62, 98.81, 98.81, 98.81, 98.81, 98.81, 96.43, 92.86, 95.24, 98.81, 97.62, 96.43, 98.81, 98.81]%	[80.0, 71.43, 83.33, 80.0, 83.33, 80.0, 66.67, 62.5, 45.45, 42.86, 66.67, 66.67, 62.5, 83.33, 75.0]%	[97.65, 98.8, 98.81, 97.65, 98.81, 97.65, 95.4, 98.78, 98.73, 96.39, 95.4, 97.62, 98.78, 98.81, 96.51]%	||	67.23%	67.78%	97.7%	69.98%	97.72%	
  4  1  0  0  0  0  0  0  1  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  4  1  0  0  0  0  0  0  1  0  0  0  66.67%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  1  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  1  2  0  1  0  0  1  0  0  1  33.33%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  2  3  0  0  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  2  0  2  0  0  33.33%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  0  0  1  1  3  50.0%		15
Forest OOB Error: 58.73%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	77.78%	97.04%	76.19%	[96.67, 97.78, 98.89, 98.89, 96.67, 96.67, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 96.67, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 72.73, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 98.81, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 80.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.65, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	77.66%	77.78%	98.41%	81.09%	98.43%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	71.11%	96.15%	69.05%	[97.78, 97.78, 95.56, 94.44, 97.78, 93.33, 95.56, 93.33, 97.78, 94.44, 97.78, 95.56, 96.67, 97.78, 96.67]%	[83.33, 83.33, 66.67, 61.54, 83.33, 50.0, 75.0, 57.14, 80.0, 66.67, 80.0, 50.0, 76.92, 83.33, 66.67]%	[83.33, 83.33, 66.67, 66.67, 83.33, 50.0, 100.0, 66.67, 66.67, 83.33, 66.67, 33.33, 83.33, 83.33, 50.0]%	[98.81, 98.81, 97.62, 96.43, 98.81, 96.43, 95.24, 95.24, 100.0, 95.24, 100.0, 100.0, 97.62, 98.81, 100.0]%	[83.33, 83.33, 66.67, 57.14, 83.33, 50.0, 60.0, 50.0, 100.0, 55.56, 100.0, 100.0, 71.43, 83.33, 100.0]%	[98.81, 98.81, 97.62, 97.59, 98.81, 96.43, 100.0, 97.56, 97.67, 98.77, 97.67, 95.45, 98.8, 98.81, 96.55]%	||	70.93%	71.11%	97.94%	76.28%	97.96%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  1  0  0  0  0  0  0  0  0  0  0  0  83.33%		2
  0  0  4  0  0  1  1  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  4  0  2  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  1  1  0  3  0  0  0  0  0  0  0  1  0  50.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  1  0  0  0  1  4  0  0  0  0  0  0  0  66.67%		8
  0  0  0  0  1  0  1  0  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  0  1  0  3  0  2  0  0  0  33.33%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  1  0  0  0  0  0  0  2  0  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 53.97%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	77.78%	97.04%	76.19%	[96.67, 97.78, 98.89, 98.89, 96.67, 96.67, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 96.67, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 72.73, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 98.81, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 80.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.65, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	77.66%	77.78%	98.41%	81.09%	98.43%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[97.78, 97.78, 97.78, 96.67, 97.78, 96.67, 96.67, 92.22, 94.44, 94.44, 95.56, 96.67, 96.67, 96.67, 96.67]%	[80.0, 83.33, 83.33, 76.92, 83.33, 72.73, 72.73, 58.82, 70.59, 54.55, 66.67, 72.73, 66.67, 76.92, 66.67]%	[66.67, 83.33, 83.33, 83.33, 83.33, 66.67, 66.67, 83.33, 100.0, 50.0, 66.67, 66.67, 50.0, 83.33, 50.0]%	[100.0, 98.81, 98.81, 97.62, 98.81, 98.81, 98.81, 92.86, 94.05, 97.62, 97.62, 98.81, 100.0, 97.62, 100.0]%	[100.0, 83.33, 83.33, 71.43, 83.33, 80.0, 80.0, 45.45, 54.55, 60.0, 66.67, 80.0, 100.0, 71.43, 100.0]%	[97.67, 98.81, 98.81, 98.8, 98.81, 97.65, 97.65, 98.73, 100.0, 96.47, 97.62, 97.65, 96.55, 98.8, 96.55]%	||	72.4%	72.22%	98.02%	77.3%	98.04%	
  4  0  0  0  0  0  0  0  2  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  5  1  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  1  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  1  0  0  0  1  4  0  0  0  0  0  0  0  0  66.67%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  1  0  1  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  1  0  0  2  0  3  0  0  50.0%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  3  0  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 54.41%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	77.78%	97.04%	76.19%	[96.67, 97.78, 98.89, 98.89, 96.67, 96.67, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 96.67, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 72.73, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 98.81, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 80.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.65, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	77.66%	77.78%	98.41%	81.09%	98.43%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[97.78, 96.67, 97.78, 97.78, 98.89, 97.78, 95.56, 95.56, 96.67, 96.67, 95.56, 95.56, 94.44, 100.0, 96.67]%	[80.0, 80.0, 83.33, 80.0, 92.31, 83.33, 60.0, 66.67, 76.92, 76.92, 71.43, 66.67, 61.54, 100.0, 66.67]%	[66.67, 100.0, 83.33, 66.67, 100.0, 83.33, 50.0, 66.67, 83.33, 83.33, 83.33, 66.67, 66.67, 100.0, 50.0]%	[100.0, 96.43, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 97.62, 97.62, 96.43, 97.62, 96.43, 100.0, 100.0]%	[100.0, 66.67, 83.33, 100.0, 85.71, 83.33, 75.0, 66.67, 71.43, 71.43, 62.5, 66.67, 57.14, 100.0, 100.0]%	[97.67, 100.0, 98.81, 97.67, 100.0, 98.81, 96.51, 97.62, 98.8, 98.8, 98.78, 97.62, 97.59, 100.0, 96.55]%	||	76.39%	76.67%	98.33%	79.33%	98.35%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  1  0  0  0  0  83.33%		3
  0  1  0  4  1  0  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  3  0  0  0  0  2  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  1  0  0  0  1  0  0  66.67%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  2  0  0  0  0  1  0  3  50.0%		15
Forest OOB Error: 54.18%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	77.78%	97.04%	76.19%	[96.67, 97.78, 98.89, 98.89, 96.67, 96.67, 93.33, 92.22, 97.78, 96.67, 96.67, 98.89, 97.78, 96.67, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 72.73, 50.0, 53.33, 83.33, 66.67, 72.73, 92.31, 85.71, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 98.81, 96.43, 94.05, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 80.0, 50.0, 44.44, 83.33, 100.0, 80.0, 85.71, 75.0, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.65, 96.43, 97.53, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	77.66%	77.78%	98.41%	81.09%	98.43%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	70.0%	96.0%	67.86%	[96.67, 94.44, 95.56, 95.56, 94.44, 96.67, 93.33, 96.67, 96.67, 94.44, 96.67, 97.78, 96.67, 97.78, 96.67]%	[72.73, 61.54, 66.67, 71.43, 66.67, 76.92, 57.14, 66.67, 80.0, 44.44, 76.92, 83.33, 72.73, 80.0, 66.67]%	[66.67, 66.67, 66.67, 83.33, 83.33, 83.33, 66.67, 50.0, 100.0, 33.33, 83.33, 83.33, 66.67, 66.67, 50.0]%	[98.81, 96.43, 97.62, 96.43, 95.24, 97.62, 95.24, 100.0, 96.43, 98.81, 97.62, 98.81, 98.81, 100.0, 100.0]%	[80.0, 57.14, 66.67, 62.5, 55.56, 71.43, 50.0, 100.0, 66.67, 66.67, 71.43, 83.33, 80.0, 100.0, 100.0]%	[97.65, 97.59, 97.62, 98.78, 98.77, 98.8, 97.56, 96.55, 100.0, 95.4, 98.8, 98.81, 97.65, 97.67, 96.55]%	||	69.59%	70.0%	97.86%	74.09%	97.88%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  4  0  0  0  0  0  0  2  0  0  0  0  0  0  66.67%		2
  0  0  4  2  0  0  0  0  0  0  0  0  0  0  0  66.67%		3
  0  1  0  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  1  4  0  0  0  0  0  0  0  0  66.67%		7
  0  0  2  0  1  0  0  3  0  0  0  0  0  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  3  0  0  2  0  1  0  0  0  33.33%		10
  0  0  0  0  1  0  0  0  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  1  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  1  1  0  0  0  0  0  0  0  1  0  3  50.0%		15
Forest OOB Error: 55.56%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67, 98.89, 98.89, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 80.0, 76.92, 83.33, 66.67, 72.73, 92.31, 92.31, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 66.67, 71.43, 83.33, 100.0, 80.0, 85.71, 85.71, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 100.0, 98.8, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	82.74%	83.33%	98.81%	86.29%	98.83%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[93.33, 98.89, 96.67, 98.89, 97.78, 97.78, 95.56, 94.44, 95.56, 91.11, 98.89, 96.67, 97.78, 97.78, 95.56]%	[40.0, 92.31, 76.92, 90.91, 80.0, 80.0, 60.0, 61.54, 75.0, 50.0, 92.31, 66.67, 83.33, 85.71, 60.0]%	[33.33, 100.0, 83.33, 83.33, 66.67, 66.67, 50.0, 66.67, 100.0, 66.67, 100.0, 50.0, 83.33, 100.0, 50.0]%	[97.62, 98.81, 97.62, 100.0, 100.0, 100.0, 98.81, 96.43, 95.24, 92.86, 98.81, 100.0, 98.81, 97.62, 98.81]%	[50.0, 85.71, 71.43, 100.0, 100.0, 100.0, 75.0, 57.14, 60.0, 40.0, 85.71, 100.0, 83.33, 75.0, 75.0]%	[95.35, 100.0, 98.8, 98.82, 97.67, 97.67, 96.51, 97.59, 100.0, 97.5, 100.0, 96.55, 98.81, 100.0, 96.51]%	||	72.98%	73.33%	98.1%	77.22%	98.12%	
  2  0  0  0  0  0  0  0  2  2  0  0  0  0  0  33.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		3
  0  1  0  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  1  0  1  0  4  0  0  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  1  0  0  0  0  0  3  1  0  0  0  0  0  1  0  50.0%		7
  0  0  1  0  0  0  0  4  0  0  0  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  1  0  1  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  3  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  2  0  0  0  0  1  0  3  50.0%		15
Forest OOB Error: 52.12%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67, 98.89, 98.89, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 80.0, 76.92, 83.33, 66.67, 72.73, 92.31, 92.31, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 66.67, 71.43, 83.33, 100.0, 80.0, 85.71, 85.71, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 100.0, 98.8, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	82.74%	83.33%	98.81%	86.29%	98.83%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[94.44, 93.33, 97.78, 98.89, 100.0, 96.67, 94.44, 96.67, 93.33, 91.11, 97.78, 94.44, 97.78, 98.89, 98.89]%	[54.55, 57.14, 83.33, 90.91, 100.0, 72.73, 44.44, 72.73, 62.5, 33.33, 83.33, 54.55, 85.71, 92.31, 90.91]%	[50.0, 66.67, 83.33, 83.33, 100.0, 66.67, 33.33, 66.67, 83.33, 33.33, 83.33, 50.0, 100.0, 100.0, 83.33]%	[97.62, 95.24, 98.81, 100.0, 100.0, 98.81, 98.81, 98.81, 94.05, 95.24, 98.81, 97.62, 97.62, 98.81, 100.0]%	[60.0, 50.0, 83.33, 100.0, 100.0, 80.0, 66.67, 80.0, 50.0, 33.33, 83.33, 60.0, 75.0, 85.71, 100.0]%	[96.47, 97.56, 98.81, 98.82, 100.0, 97.65, 95.4, 97.65, 98.75, 95.24, 98.81, 96.47, 100.0, 100.0, 98.82]%	||	71.9%	72.22%	98.02%	73.83%	98.03%	
  3  0  0  0  0  0  0  0  2  1  0  0  0  0  0  50.0%		1
  0  4  0  0  0  0  0  0  2  0  0  0  0  0  0  66.67%		2
  0  0  5  0  0  0  0  1  0  0  0  0  0  0  0  83.33%		3
  0  1  0  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  1  1  0  0  0  1  2  0  0  1  0  0  0  0  0  33.33%		7
  0  0  0  0  0  0  0  4  0  0  1  0  1  0  0  66.67%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  2  0  0  0  0  0  0  0  2  0  2  0  0  0  33.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  2  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  1  0  0  0  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 56.13%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67, 98.89, 98.89, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 80.0, 76.92, 83.33, 66.67, 72.73, 92.31, 92.31, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 66.67, 71.43, 83.33, 100.0, 80.0, 85.71, 85.71, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 100.0, 98.8, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	82.74%	83.33%	98.81%	86.29%	98.83%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[96.67, 98.89, 100.0, 97.78, 98.89, 96.67, 96.67, 95.56, 95.56, 95.56, 98.89, 93.33, 97.78, 95.56, 95.56]%	[72.73, 90.91, 100.0, 83.33, 90.91, 72.73, 66.67, 50.0, 75.0, 60.0, 90.91, 62.5, 85.71, 71.43, 71.43]%	[66.67, 83.33, 100.0, 83.33, 83.33, 66.67, 50.0, 33.33, 100.0, 50.0, 83.33, 83.33, 100.0, 83.33, 83.33]%	[98.81, 100.0, 100.0, 98.81, 100.0, 98.81, 100.0, 100.0, 95.24, 98.81, 100.0, 94.05, 97.62, 96.43, 96.43]%	[80.0, 100.0, 100.0, 83.33, 100.0, 80.0, 100.0, 100.0, 60.0, 75.0, 100.0, 50.0, 75.0, 62.5, 62.5]%	[97.65, 98.82, 100.0, 98.81, 98.82, 97.65, 96.55, 95.45, 100.0, 96.51, 98.82, 98.75, 100.0, 98.78, 98.78]%	||	76.28%	76.67%	98.33%	81.89%	98.36%	
  4  0  0  0  0  0  0  0  1  1  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  0  0  1  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  1  0  0  3  0  0  0  0  2  0  0  0  50.0%		7
  0  0  0  0  0  0  0  2  0  0  0  0  1  1  2  33.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  3  0  3  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  1  0  0  0  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 53.39%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67, 98.89, 98.89, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 80.0, 76.92, 83.33, 66.67, 72.73, 92.31, 92.31, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 66.67, 71.43, 83.33, 100.0, 80.0, 85.71, 85.71, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 100.0, 98.8, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	82.74%	83.33%	98.81%	86.29%	98.83%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	70.0%	96.0%	67.86%	[97.78, 96.67, 96.67, 96.67, 97.78, 94.44, 95.56, 97.78, 94.44, 92.22, 95.56, 94.44, 96.67, 96.67, 96.67]%	[80.0, 80.0, 72.73, 72.73, 83.33, 61.54, 66.67, 83.33, 66.67, 53.33, 66.67, 54.55, 72.73, 72.73, 66.67]%	[66.67, 100.0, 66.67, 66.67, 83.33, 66.67, 66.67, 83.33, 83.33, 66.67, 66.67, 50.0, 66.67, 66.67, 50.0]%	[100.0, 96.43, 98.81, 98.81, 98.81, 96.43, 97.62, 98.81, 95.24, 94.05, 97.62, 97.62, 98.81, 98.81, 100.0]%	[100.0, 66.67, 80.0, 80.0, 83.33, 57.14, 66.67, 83.33, 55.56, 44.44, 66.67, 60.0, 80.0, 80.0, 100.0]%	[97.67, 100.0, 97.65, 97.65, 98.81, 97.59, 97.62, 98.81, 98.77, 97.53, 97.62, 96.47, 97.65, 97.65, 96.55]%	||	70.24%	70.0%	97.86%	73.59%	97.87%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  4  0  0  1  0  0  1  0  0  0  0  0  0  66.67%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  1  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  1  0  0  0  0  4  0  0  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  0  1  0  0  0  83.33%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  1  4  0  1  0  0  0  66.67%		10
  0  0  0  0  1  0  0  0  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  3  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  1  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  1  3  50.0%		15
Forest OOB Error: 59.22%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67, 98.89, 98.89, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 80.0, 76.92, 83.33, 66.67, 72.73, 92.31, 92.31, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 66.67, 71.43, 83.33, 100.0, 80.0, 85.71, 85.71, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 100.0, 98.8, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	82.74%	83.33%	98.81%	86.29%	98.83%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	74.44%	96.59%	72.62%	[96.67, 94.44, 100.0, 97.78, 97.78, 97.78, 92.22, 95.56, 100.0, 94.44, 95.56, 96.67, 97.78, 95.56, 96.67]%	[72.73, 54.55, 100.0, 83.33, 83.33, 83.33, 53.33, 66.67, 100.0, 61.54, 75.0, 72.73, 80.0, 66.67, 66.67]%	[66.67, 50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 66.67, 100.0, 66.67, 100.0, 66.67, 66.67, 66.67, 50.0]%	[98.81, 97.62, 100.0, 98.81, 98.81, 98.81, 94.05, 97.62, 100.0, 96.43, 95.24, 98.81, 100.0, 97.62, 100.0]%	[80.0, 60.0, 100.0, 83.33, 83.33, 83.33, 44.44, 66.67, 100.0, 57.14, 60.0, 80.0, 100.0, 66.67, 100.0]%	[97.65, 96.47, 100.0, 98.81, 98.81, 98.81, 97.53, 97.62, 100.0, 97.59, 100.0, 97.65, 97.67, 97.62, 96.55]%	||	74.66%	74.44%	98.17%	77.66%	98.19%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  3  0  0  0  0  3  0  0  0  0  0  0  0  0  50.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  1  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  0  0  0  0  0  1  0  83.33%		6
  0  0  0  0  0  0  4  0  0  1  0  0  0  1  0  66.67%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  1  0  0  4  0  1  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  1  1  0  0  0  0  0  0  0  4  0  66.67%		14
  1  0  0  0  0  0  0  2  0  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 57.36%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67, 98.89, 98.89, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 80.0, 76.92, 83.33, 66.67, 72.73, 92.31, 92.31, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 66.67, 71.43, 83.33, 100.0, 80.0, 85.71, 85.71, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 100.0, 98.8, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	82.74%	83.33%	98.81%	86.29%	98.83%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	62.22%	94.96%	59.52%	[97.78, 93.33, 95.56, 94.44, 95.56, 93.33, 92.22, 97.78, 98.89, 93.33, 93.33, 92.22, 93.33, 95.56, 97.78]%	[80.0, 57.14, 71.43, 54.55, 66.67, 40.0, 58.82, 80.0, 90.91, 40.0, 57.14, 46.15, 40.0, 71.43, 80.0]%	[66.67, 66.67, 83.33, 50.0, 66.67, 33.33, 83.33, 66.67, 83.33, 33.33, 66.67, 50.0, 33.33, 83.33, 66.67]%	[100.0, 95.24, 96.43, 97.62, 97.62, 97.62, 92.86, 100.0, 100.0, 97.62, 95.24, 95.24, 97.62, 96.43, 100.0]%	[100.0, 50.0, 62.5, 60.0, 66.67, 50.0, 45.45, 100.0, 100.0, 50.0, 50.0, 42.86, 50.0, 62.5, 100.0]%	[97.67, 97.56, 98.78, 96.47, 97.62, 95.35, 98.73, 97.67, 98.82, 95.35, 97.56, 96.39, 95.35, 98.78, 97.67]%	||	62.28%	62.22%	97.3%	66.0%	97.32%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  4  0  0  0  0  2  0  0  0  0  0  0  0  0  66.67%		2
  0  0  5  1  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  3  0  2  1  0  0  0  0  0  0  0  0  50.0%		4
  0  1  0  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  1  0  0  1  2  0  0  0  0  0  0  0  2  0  33.33%		6
  0  0  0  0  0  0  5  0  0  0  0  1  0  0  0  83.33%		7
  0  0  2  0  0  0  0  4  0  0  0  0  0  0  0  66.67%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  0  2  0  3  0  0  0  33.33%		10
  0  0  0  0  1  0  0  0  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  2  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  33.33%		13
  0  0  0  0  0  0  1  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  1  0  0  0  0  0  0  0  0  1  0  4  66.67%		15
Forest OOB Error: 55.74%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[96.67, 97.78, 98.89, 97.78, 96.67, 97.78, 95.56, 95.56, 97.78, 96.67, 96.67, 98.89, 98.89, 96.67, 100.0]%	[66.67, 85.71, 90.91, 83.33, 76.92, 80.0, 71.43, 71.43, 83.33, 66.67, 72.73, 92.31, 92.31, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 98.81, 97.62, 100.0, 96.43, 96.43, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 83.33, 71.43, 100.0, 62.5, 62.5, 83.33, 100.0, 80.0, 85.71, 85.71, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.81, 98.8, 97.67, 98.78, 98.78, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	80.71%	81.11%	98.65%	84.06%	98.67%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[96.67, 96.67, 97.78, 96.67, 97.78, 95.56, 93.33, 94.44, 95.56, 94.44, 96.67, 97.78, 95.56, 98.89, 96.67]%	[66.67, 76.92, 85.71, 72.73, 80.0, 71.43, 62.5, 54.55, 71.43, 44.44, 80.0, 80.0, 60.0, 90.91, 76.92]%	[50.0, 83.33, 100.0, 66.67, 66.67, 83.33, 83.33, 50.0, 83.33, 33.33, 100.0, 66.67, 50.0, 83.33, 83.33]%	[100.0, 97.62, 97.62, 98.81, 100.0, 96.43, 94.05, 97.62, 96.43, 98.81, 96.43, 100.0, 98.81, 100.0, 97.62]%	[100.0, 71.43, 75.0, 80.0, 100.0, 62.5, 50.0, 60.0, 62.5, 66.67, 66.67, 100.0, 75.0, 100.0, 71.43]%	[96.55, 98.8, 100.0, 97.65, 97.67, 98.78, 98.75, 96.47, 98.78, 95.4, 100.0, 97.67, 96.51, 98.82, 98.8]%	||	71.61%	72.22%	98.02%	76.08%	98.04%	
  3  2  0  0  0  0  0  0  1  0  0  0  0  0  0  50.0%		1
  0  5  0  1  0  0  0  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  4  1  1  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  3  0  0  0  0  1  0  1  50.0%		8
  0  0  0  0  0  0  0  1  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  3  0  1  2  0  0  0  0  0  33.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  3  0  3  0  0  50.0%		13
  0  0  1  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 51.33%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[96.67, 97.78, 98.89, 97.78, 96.67, 97.78, 95.56, 95.56, 97.78, 96.67, 96.67, 98.89, 98.89, 96.67, 100.0]%	[66.67, 85.71, 90.91, 83.33, 76.92, 80.0, 71.43, 71.43, 83.33, 66.67, 72.73, 92.31, 92.31, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 98.81, 97.62, 100.0, 96.43, 96.43, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 83.33, 71.43, 100.0, 62.5, 62.5, 83.33, 100.0, 80.0, 85.71, 85.71, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.81, 98.8, 97.67, 98.78, 98.78, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	80.71%	81.11%	98.65%	84.06%	98.67%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	55.56%	94.07%	52.38%	[92.22, 95.56, 90.0, 94.44, 95.56, 94.44, 92.22, 94.44, 95.56, 90.0, 94.44, 95.56, 95.56, 96.67, 94.44]%	[36.36, 66.67, 40.0, 44.44, 66.67, 61.54, 53.33, 54.55, 71.43, 18.18, 66.67, 60.0, 50.0, 76.92, 54.55]%	[33.33, 66.67, 50.0, 33.33, 66.67, 66.67, 66.67, 50.0, 83.33, 16.67, 83.33, 50.0, 33.33, 83.33, 50.0]%	[96.43, 97.62, 92.86, 98.81, 97.62, 96.43, 94.05, 97.62, 96.43, 95.24, 95.24, 98.81, 100.0, 97.62, 97.62]%	[40.0, 66.67, 33.33, 66.67, 66.67, 57.14, 44.44, 60.0, 62.5, 20.0, 55.56, 75.0, 100.0, 71.43, 60.0]%	[95.29, 97.62, 96.3, 95.4, 97.62, 97.59, 97.53, 96.47, 98.78, 94.12, 98.77, 96.51, 95.45, 98.8, 96.47]%	||	54.75%	55.56%	96.83%	58.63%	96.85%	
  2  2  0  1  0  0  0  0  0  0  0  0  0  0  1  33.33%		1
  0  4  0  0  0  0  0  0  0  1  0  0  0  1  0  66.67%		2
  3  0  3  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		3
  0  0  0  2  1  2  0  0  0  0  0  1  0  0  0  33.33%		4
  0  0  1  0  4  0  0  0  0  1  0  0  0  0  0  66.67%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  1  1  4  0  0  0  0  0  0  0  0  66.67%		7
  0  0  1  0  0  0  0  3  1  0  1  0  0  0  0  50.0%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  4  0  1  1  0  0  0  0  0  16.67%		10
  0  0  1  0  0  0  0  0  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  2  0  3  0  0  0  50.0%		12
  0  0  2  0  0  0  0  0  0  0  2  0  2  0  0  33.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  5  1  83.33%		14
  0  0  0  0  0  0  0  2  0  0  1  0  0  0  3  50.0%		15
Forest OOB Error: 61.09%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[96.67, 97.78, 98.89, 97.78, 96.67, 97.78, 95.56, 95.56, 97.78, 96.67, 96.67, 98.89, 98.89, 96.67, 100.0]%	[66.67, 85.71, 90.91, 83.33, 76.92, 80.0, 71.43, 71.43, 83.33, 66.67, 72.73, 92.31, 92.31, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 98.81, 97.62, 100.0, 96.43, 96.43, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 83.33, 71.43, 100.0, 62.5, 62.5, 83.33, 100.0, 80.0, 85.71, 85.71, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.81, 98.8, 97.67, 98.78, 98.78, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	80.71%	81.11%	98.65%	84.06%	98.67%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	71.11%	96.15%	69.05%	[96.67, 93.33, 98.89, 96.67, 97.78, 95.56, 93.33, 97.78, 95.56, 91.11, 95.56, 93.33, 98.89, 98.89, 98.89]%	[66.67, 57.14, 92.31, 66.67, 83.33, 71.43, 57.14, 83.33, 71.43, 20.0, 66.67, 50.0, 92.31, 90.91, 90.91]%	[50.0, 66.67, 100.0, 50.0, 83.33, 83.33, 66.67, 83.33, 83.33, 16.67, 66.67, 50.0, 100.0, 83.33, 83.33]%	[100.0, 95.24, 98.81, 100.0, 98.81, 96.43, 95.24, 98.81, 96.43, 96.43, 97.62, 96.43, 98.81, 100.0, 100.0]%	[100.0, 50.0, 85.71, 100.0, 83.33, 62.5, 50.0, 83.33, 62.5, 25.0, 66.67, 50.0, 85.71, 100.0, 100.0]%	[96.55, 97.56, 100.0, 96.55, 98.81, 98.78, 97.56, 98.81, 98.78, 94.19, 97.62, 96.43, 100.0, 98.82, 98.82]%	||	70.68%	71.11%	97.94%	73.65%	97.95%	
  3  2  0  0  0  0  0  0  1  0  0  0  0  0  0  50.0%		1
  0  4  1  0  0  0  1  0  0  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  3  0  2  0  0  0  0  0  1  0  0  0  50.0%		4
  0  1  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  4  0  0  0  0  1  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  3  0  1  1  0  1  0  0  0  16.67%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  3  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  1  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  1  0  0  0  5  83.33%		15
Forest OOB Error: 57.48%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[96.67, 97.78, 98.89, 97.78, 96.67, 97.78, 95.56, 95.56, 97.78, 96.67, 96.67, 98.89, 98.89, 96.67, 100.0]%	[66.67, 85.71, 90.91, 83.33, 76.92, 80.0, 71.43, 71.43, 83.33, 66.67, 72.73, 92.31, 92.31, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 98.81, 97.62, 100.0, 96.43, 96.43, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 83.33, 71.43, 100.0, 62.5, 62.5, 83.33, 100.0, 80.0, 85.71, 85.71, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.81, 98.8, 97.67, 98.78, 98.78, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	80.71%	81.11%	98.65%	84.06%	98.67%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	70.0%	96.0%	67.86%	[97.78, 94.44, 96.67, 97.78, 98.89, 97.78, 92.22, 94.44, 95.56, 92.22, 95.56, 93.33, 97.78, 100.0, 95.56]%	[83.33, 44.44, 76.92, 83.33, 90.91, 80.0, 58.82, 54.55, 71.43, 53.33, 71.43, 40.0, 83.33, 100.0, 50.0]%	[83.33, 33.33, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 66.67, 83.33, 33.33, 83.33, 100.0, 33.33]%	[98.81, 98.81, 97.62, 98.81, 100.0, 100.0, 92.86, 97.62, 96.43, 94.05, 96.43, 97.62, 98.81, 100.0, 100.0]%	[83.33, 66.67, 71.43, 83.33, 100.0, 100.0, 45.45, 60.0, 62.5, 44.44, 62.5, 50.0, 83.33, 100.0, 100.0]%	[98.81, 95.4, 98.8, 98.81, 98.82, 97.67, 98.73, 96.47, 98.78, 97.53, 98.78, 95.35, 98.81, 100.0, 95.45]%	||	69.46%	70.0%	97.86%	74.2%	97.88%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  2  0  0  0  0  1  0  3  0  0  0  0  0  0  33.33%		2
  0  0  5  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  1  0  4  1  0  0  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  2  0  0  0  0  3  0  0  1  0  0  0  0  50.0%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  4  0  2  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  3  0  2  0  0  0  33.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  1  0  0  0  0  0  0  2  0  0  1  0  0  0  2  33.33%		15
Forest OOB Error: 55.23%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[96.67, 97.78, 98.89, 97.78, 96.67, 97.78, 95.56, 95.56, 97.78, 96.67, 96.67, 98.89, 98.89, 96.67, 100.0]%	[66.67, 85.71, 90.91, 83.33, 76.92, 80.0, 71.43, 71.43, 83.33, 66.67, 72.73, 92.31, 92.31, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 98.81, 97.62, 100.0, 96.43, 96.43, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 83.33, 71.43, 100.0, 62.5, 62.5, 83.33, 100.0, 80.0, 85.71, 85.71, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.81, 98.8, 97.67, 98.78, 98.78, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	80.71%	81.11%	98.65%	84.06%	98.67%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[96.67, 95.56, 96.67, 97.78, 98.89, 96.67, 95.56, 94.44, 95.56, 95.56, 94.44, 96.67, 97.78, 97.78, 96.67]%	[76.92, 66.67, 72.73, 85.71, 90.91, 66.67, 50.0, 61.54, 71.43, 75.0, 54.55, 72.73, 85.71, 85.71, 66.67]%	[83.33, 66.67, 66.67, 100.0, 83.33, 50.0, 33.33, 66.67, 83.33, 100.0, 50.0, 66.67, 100.0, 100.0, 50.0]%	[97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0, 96.43, 96.43, 95.24, 97.62, 98.81, 97.62, 97.62, 100.0]%	[71.43, 66.67, 80.0, 75.0, 100.0, 100.0, 100.0, 57.14, 62.5, 60.0, 60.0, 80.0, 75.0, 75.0, 100.0]%	[98.8, 97.62, 97.65, 100.0, 98.82, 96.55, 95.45, 97.59, 98.78, 100.0, 96.47, 97.65, 100.0, 100.0, 96.55]%	||	72.2%	73.33%	98.1%	77.52%	98.13%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  4  0  0  0  0  0  0  1  0  0  1  0  0  0  66.67%		2
  1  0  4  0  0  0  0  0  0  0  1  0  0  0  0  66.67%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  1  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  1  0  3  0  0  1  0  0  0  0  1  0  50.0%		6
  0  0  0  0  0  0  2  0  1  2  0  0  0  1  0  33.33%		7
  0  0  1  0  0  0  0  4  0  0  1  0  0  0  0  66.67%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  3  0  2  0  0  50.0%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  1  0  0  0  0  0  0  2  0  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 52.0%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[96.67, 97.78, 98.89, 97.78, 96.67, 97.78, 95.56, 95.56, 97.78, 96.67, 96.67, 98.89, 98.89, 96.67, 100.0]%	[66.67, 85.71, 90.91, 83.33, 76.92, 80.0, 71.43, 71.43, 83.33, 66.67, 72.73, 92.31, 92.31, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 98.81, 97.62, 100.0, 96.43, 96.43, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 83.33, 71.43, 100.0, 62.5, 62.5, 83.33, 100.0, 80.0, 85.71, 85.71, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.81, 98.8, 97.67, 98.78, 98.78, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	80.71%	81.11%	98.65%	84.06%	98.67%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	71.11%	96.15%	69.05%	[97.78, 94.44, 97.78, 97.78, 98.89, 95.56, 95.56, 95.56, 94.44, 95.56, 96.67, 96.67, 94.44, 96.67, 94.44]%	[80.0, 54.55, 83.33, 83.33, 90.91, 66.67, 71.43, 60.0, 61.54, 75.0, 76.92, 66.67, 70.59, 72.73, 44.44]%	[66.67, 50.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 66.67, 100.0, 83.33, 50.0, 100.0, 66.67, 33.33]%	[100.0, 97.62, 98.81, 98.81, 100.0, 97.62, 96.43, 98.81, 96.43, 95.24, 97.62, 100.0, 94.05, 98.81, 98.81]%	[100.0, 60.0, 83.33, 83.33, 100.0, 66.67, 62.5, 75.0, 57.14, 60.0, 71.43, 100.0, 54.55, 80.0, 66.67]%	[97.67, 96.47, 98.81, 98.81, 98.82, 97.62, 98.78, 96.51, 97.59, 100.0, 98.8, 96.55, 100.0, 97.65, 95.4]%	||	70.54%	71.11%	97.94%	74.71%	97.97%	
  4  1  1  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  3  0  0  0  0  2  0  1  0  0  0  0  0  0  50.0%		2
  0  0  5  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  0  0  1  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  1  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  3  0  0  2  0  1  0  0  50.0%		8
  0  1  0  0  0  0  0  0  4  0  0  0  0  0  1  66.67%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  3  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  1  0  0  0  0  3  0  2  33.33%		15
Forest OOB Error: 55.6%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67, 98.89, 98.89, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 80.0, 76.92, 83.33, 66.67, 72.73, 92.31, 92.31, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 66.67, 71.43, 83.33, 100.0, 80.0, 85.71, 85.71, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 100.0, 98.8, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	82.74%	83.33%	98.81%	86.29%	98.83%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[96.67, 97.78, 95.56, 97.78, 100.0, 96.67, 94.44, 94.44, 97.78, 93.33, 96.67, 97.78, 96.67, 97.78, 97.78]%	[76.92, 83.33, 66.67, 85.71, 100.0, 72.73, 61.54, 61.54, 83.33, 50.0, 76.92, 80.0, 72.73, 83.33, 80.0]%	[83.33, 83.33, 66.67, 100.0, 100.0, 66.67, 66.67, 66.67, 83.33, 50.0, 83.33, 66.67, 66.67, 83.33, 66.67]%	[97.62, 98.81, 97.62, 97.62, 100.0, 98.81, 96.43, 96.43, 98.81, 96.43, 97.62, 100.0, 98.81, 98.81, 100.0]%	[71.43, 83.33, 66.67, 75.0, 100.0, 80.0, 57.14, 57.14, 83.33, 50.0, 71.43, 100.0, 80.0, 83.33, 100.0]%	[98.8, 98.81, 97.62, 100.0, 100.0, 97.65, 97.59, 97.59, 98.81, 96.43, 98.8, 97.67, 97.65, 98.81, 97.67]%	||	75.65%	75.56%	98.25%	77.25%	98.26%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		2
  1  0  4  0  0  0  0  1  0  0  0  0  0  0  0  66.67%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  1  4  0  0  1  0  0  0  0  0  66.67%		7
  0  0  1  1  0  0  0  4  0  0  0  0  0  0  0  66.67%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  1  0  3  0  0  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  1  0  0  0  0  0  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 55.13%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67, 98.89, 98.89, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 80.0, 76.92, 83.33, 66.67, 72.73, 92.31, 92.31, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 66.67, 71.43, 83.33, 100.0, 80.0, 85.71, 85.71, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 100.0, 98.8, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	82.74%	83.33%	98.81%	86.29%	98.83%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	68.89%	95.85%	66.67%	[96.67, 95.56, 95.56, 94.44, 96.67, 96.67, 92.22, 95.56, 96.67, 91.11, 98.89, 96.67, 96.67, 97.78, 96.67]%	[66.67, 71.43, 66.67, 61.54, 76.92, 72.73, 36.36, 50.0, 72.73, 60.0, 90.91, 66.67, 76.92, 85.71, 72.73]%	[50.0, 83.33, 66.67, 66.67, 83.33, 66.67, 33.33, 33.33, 66.67, 100.0, 83.33, 50.0, 83.33, 100.0, 66.67]%	[100.0, 96.43, 97.62, 96.43, 97.62, 98.81, 96.43, 100.0, 98.81, 90.48, 100.0, 100.0, 97.62, 97.62, 98.81]%	[100.0, 62.5, 66.67, 57.14, 71.43, 80.0, 40.0, 100.0, 80.0, 42.86, 100.0, 100.0, 71.43, 75.0, 80.0]%	[96.55, 98.78, 97.62, 97.59, 98.8, 97.65, 95.29, 95.45, 97.65, 100.0, 98.82, 96.55, 98.8, 100.0, 97.65]%	||	68.53%	68.89%	97.78%	75.13%	97.81%	
  3  2  0  0  0  0  0  0  0  0  0  0  0  0  1  50.0%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  4  1  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  1  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  1  0  0  0  0  2  0  0  3  0  0  0  0  0  33.33%		7
  0  0  2  0  0  0  1  2  0  0  0  0  1  0  0  33.33%		8
  0  0  0  1  1  0  0  0  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  3  0  3  0  0  0  50.0%		12
  0  0  0  0  1  0  0  0  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  2  4  66.67%		15
Forest OOB Error: 60.08%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67, 98.89, 98.89, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 80.0, 76.92, 83.33, 66.67, 72.73, 92.31, 92.31, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 66.67, 71.43, 83.33, 100.0, 80.0, 85.71, 85.71, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 100.0, 98.8, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	82.74%	83.33%	98.81%	86.29%	98.83%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[97.78, 97.78, 95.56, 98.89, 98.89, 95.56, 96.67, 94.44, 96.67, 94.44, 95.56, 96.67, 94.44, 96.67, 96.67]%	[80.0, 85.71, 71.43, 90.91, 90.91, 71.43, 76.92, 61.54, 72.73, 61.54, 66.67, 72.73, 61.54, 72.73, 66.67]%	[66.67, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 66.67, 66.67, 66.67, 66.67, 66.67, 66.67, 66.67, 50.0]%	[100.0, 97.62, 96.43, 100.0, 100.0, 96.43, 97.62, 96.43, 98.81, 96.43, 97.62, 98.81, 96.43, 98.81, 100.0]%	[100.0, 75.0, 62.5, 100.0, 100.0, 62.5, 71.43, 57.14, 80.0, 57.14, 66.67, 80.0, 57.14, 80.0, 100.0]%	[97.67, 100.0, 98.78, 98.82, 98.82, 98.78, 98.8, 97.59, 97.65, 97.59, 97.62, 97.65, 97.59, 97.65, 96.55]%	||	73.56%	73.33%	98.1%	76.63%	98.1%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  0  0  1  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  4  0  0  1  0  0  0  0  66.67%		8
  0  0  2  0  0  0  0  0  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  1  0  0  4  0  1  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  1  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  2  0  0  0  0  0  1  3  50.0%		15
Forest OOB Error: 50.96%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67, 98.89, 98.89, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 80.0, 76.92, 83.33, 66.67, 72.73, 92.31, 92.31, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 66.67, 71.43, 83.33, 100.0, 80.0, 85.71, 85.71, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 100.0, 98.8, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	82.74%	83.33%	98.81%	86.29%	98.83%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[97.78, 97.78, 95.56, 95.56, 98.89, 96.67, 95.56, 94.44, 96.67, 93.33, 95.56, 96.67, 94.44, 98.89, 96.67]%	[80.0, 83.33, 66.67, 66.67, 90.91, 76.92, 71.43, 61.54, 76.92, 62.5, 50.0, 66.67, 61.54, 90.91, 76.92]%	[66.67, 83.33, 66.67, 66.67, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 33.33, 50.0, 66.67, 83.33, 83.33]%	[100.0, 98.81, 97.62, 97.62, 100.0, 97.62, 96.43, 96.43, 97.62, 94.05, 100.0, 100.0, 96.43, 100.0, 97.62]%	[100.0, 83.33, 66.67, 66.67, 100.0, 71.43, 62.5, 57.14, 71.43, 50.0, 100.0, 100.0, 57.14, 100.0, 71.43]%	[97.67, 98.81, 97.62, 97.62, 98.82, 98.8, 98.78, 97.59, 98.8, 98.75, 95.45, 96.55, 97.59, 98.82, 98.8]%	||	72.2%	72.22%	98.02%	77.18%	98.03%	
  4  1  0  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  4  1  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  4  0  0  0  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  1  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  1  0  0  0  0  0  0  0  2  0  3  0  0  33.33%		11
  0  0  0  0  0  0  0  0  0  2  0  3  0  0  1  50.0%		12
  0  0  0  0  0  0  0  2  0  0  0  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 53.25%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67, 98.89, 98.89, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 80.0, 76.92, 83.33, 66.67, 72.73, 92.31, 92.31, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 66.67, 71.43, 83.33, 100.0, 80.0, 85.71, 85.71, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 100.0, 98.8, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	82.74%	83.33%	98.81%	86.29%	98.83%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[96.67, 96.67, 94.44, 98.89, 95.56, 96.67, 95.56, 95.56, 96.67, 94.44, 98.89, 95.56, 98.89, 95.56, 96.67]%	[72.73, 80.0, 66.67, 90.91, 50.0, 76.92, 75.0, 60.0, 76.92, 44.44, 90.91, 71.43, 90.91, 71.43, 66.67]%	[66.67, 100.0, 83.33, 83.33, 33.33, 83.33, 100.0, 50.0, 83.33, 33.33, 83.33, 83.33, 83.33, 83.33, 50.0]%	[98.81, 96.43, 95.24, 100.0, 100.0, 97.62, 95.24, 98.81, 97.62, 98.81, 100.0, 96.43, 100.0, 96.43, 100.0]%	[80.0, 66.67, 55.56, 100.0, 100.0, 71.43, 60.0, 75.0, 71.43, 66.67, 100.0, 62.5, 100.0, 62.5, 100.0]%	[97.65, 100.0, 98.77, 98.82, 95.45, 98.8, 100.0, 96.51, 98.8, 95.4, 98.82, 98.78, 98.82, 98.78, 96.55]%	||	72.33%	73.33%	98.1%	78.12%	98.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  0  1  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  1  2  0  2  0  0  0  0  0  0  1  0  0  0  33.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  1  0  0  0  1  3  1  0  0  0  0  0  0  50.0%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  3  0  0  2  0  1  0  0  0  33.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  0  1  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  1  0  0  0  0  0  0  0  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  2  3  50.0%		15
Forest OOB Error: 57.42%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67, 98.89, 98.89, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 80.0, 76.92, 83.33, 66.67, 72.73, 92.31, 92.31, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 66.67, 71.43, 83.33, 100.0, 80.0, 85.71, 85.71, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 100.0, 98.8, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	82.74%	83.33%	98.81%	86.29%	98.83%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[97.78, 98.89, 95.56, 97.78, 98.89, 95.56, 93.33, 94.44, 95.56, 93.33, 96.67, 95.56, 98.89, 95.56, 98.89]%	[80.0, 92.31, 71.43, 80.0, 90.91, 66.67, 62.5, 54.55, 66.67, 50.0, 72.73, 60.0, 92.31, 71.43, 90.91]%	[66.67, 100.0, 83.33, 66.67, 83.33, 66.67, 83.33, 50.0, 66.67, 50.0, 66.67, 50.0, 100.0, 83.33, 83.33]%	[100.0, 98.81, 96.43, 100.0, 100.0, 97.62, 94.05, 97.62, 97.62, 96.43, 98.81, 98.81, 98.81, 96.43, 100.0]%	[100.0, 85.71, 62.5, 100.0, 100.0, 66.67, 50.0, 60.0, 66.67, 50.0, 80.0, 75.0, 85.71, 62.5, 100.0]%	[97.67, 100.0, 98.78, 97.67, 98.82, 97.62, 98.75, 96.47, 97.62, 96.43, 97.65, 96.51, 100.0, 98.78, 98.82]%	||	73.49%	73.33%	98.1%	76.32%	98.11%	
  4  1  0  0  0  0  0  0  0  0  0  0  0  1  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		3
  0  0  0  4  0  1  0  0  0  0  0  1  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  0  0  0  0  0  0  1  0  83.33%		7
  0  0  1  0  0  0  0  3  1  0  1  0  0  0  0  50.0%		8
  0  0  2  0  0  0  0  0  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  3  0  0  3  0  0  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  2  0  0  1  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 55.24%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67, 98.89, 98.89, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 80.0, 76.92, 83.33, 66.67, 72.73, 92.31, 92.31, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 66.67, 71.43, 83.33, 100.0, 80.0, 85.71, 85.71, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 100.0, 98.8, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	82.74%	83.33%	98.81%	86.29%	98.83%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	74.44%	96.59%	72.62%	[96.67, 94.44, 96.67, 96.67, 96.67, 95.56, 96.67, 96.67, 93.33, 95.56, 98.89, 95.56, 100.0, 98.89, 96.67]%	[66.67, 54.55, 76.92, 66.67, 76.92, 66.67, 80.0, 76.92, 62.5, 66.67, 92.31, 60.0, 100.0, 92.31, 66.67]%	[50.0, 50.0, 83.33, 50.0, 83.33, 66.67, 100.0, 83.33, 83.33, 66.67, 100.0, 50.0, 100.0, 100.0, 50.0]%	[100.0, 97.62, 97.62, 100.0, 97.62, 97.62, 96.43, 97.62, 94.05, 97.62, 98.81, 98.81, 100.0, 98.81, 100.0]%	[100.0, 60.0, 71.43, 100.0, 71.43, 66.67, 66.67, 71.43, 50.0, 66.67, 85.71, 75.0, 100.0, 85.71, 100.0]%	[96.55, 96.47, 98.8, 96.55, 98.8, 97.62, 100.0, 98.8, 98.75, 97.62, 100.0, 96.51, 100.0, 100.0, 96.55]%	||	73.72%	74.44%	98.17%	78.05%	98.2%	
  3  1  0  0  0  0  0  0  2  0  0  0  0  0  0  50.0%		1
  0  3  0  0  0  0  2  0  1  0  0  0  0  0  0  50.0%		2
  0  0  5  0  0  0  0  0  0  0  1  0  0  0  0  83.33%		3
  0  1  0  3  1  1  0  0  0  0  0  0  0  0  0  50.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  1  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  1  4  0  1  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  1  0  0  2  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  2  0  0  0  0  0  1  3  50.0%		15
Forest OOB Error: 59.92%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67, 98.89, 98.89, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 80.0, 76.92, 83.33, 66.67, 72.73, 92.31, 92.31, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 66.67, 71.43, 83.33, 100.0, 80.0, 85.71, 85.71, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 100.0, 98.8, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	82.74%	83.33%	98.81%	86.29%	98.83%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	68.89%	95.85%	66.67%	[95.56, 95.56, 96.67, 97.78, 96.67, 96.67, 87.78, 96.67, 93.33, 92.22, 97.78, 95.56, 98.89, 96.67, 100.0]%	[50.0, 60.0, 80.0, 83.33, 76.92, 72.73, 35.29, 72.73, 62.5, 46.15, 83.33, 60.0, 90.91, 66.67, 100.0]%	[33.33, 50.0, 100.0, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 83.33, 50.0, 83.33, 50.0, 100.0]%	[100.0, 98.81, 96.43, 98.81, 97.62, 98.81, 90.48, 98.81, 94.05, 95.24, 98.81, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 66.67, 83.33, 71.43, 80.0, 27.27, 80.0, 50.0, 42.86, 83.33, 75.0, 100.0, 100.0, 100.0]%	[95.45, 96.51, 100.0, 98.81, 98.8, 97.65, 96.2, 97.65, 98.75, 96.39, 98.81, 96.51, 98.82, 96.55, 100.0]%	||	69.37%	68.89%	97.78%	75.66%	97.79%	
  2  1  2  0  0  0  0  0  1  0  0  0  0  0  0  33.33%		1
  0  3  0  0  0  0  2  0  1  0  0  0  0  0  0  50.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  1  4  1  0  0  0  0  0  0  0  0  66.67%		6
  0  0  0  1  1  0  3  0  0  1  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  1  4  1  0  0  0  0  0  0  66.67%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  2  3  0  0  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  3  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  2  0  0  0  0  1  0  3  0  50.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 58.89%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67, 98.89, 98.89, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 80.0, 76.92, 83.33, 66.67, 72.73, 92.31, 92.31, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 66.67, 71.43, 83.33, 100.0, 80.0, 85.71, 85.71, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 100.0, 98.8, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	82.74%	83.33%	98.81%	86.29%	98.83%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	64.44%	95.26%	61.9%	[97.78, 92.22, 97.78, 97.78, 98.89, 94.44, 93.33, 94.44, 91.11, 92.22, 93.33, 96.67, 95.56, 96.67, 96.67]%	[80.0, 46.15, 80.0, 80.0, 90.91, 54.55, 57.14, 54.55, 42.86, 53.33, 57.14, 66.67, 71.43, 80.0, 66.67]%	[66.67, 50.0, 66.67, 66.67, 83.33, 50.0, 66.67, 50.0, 50.0, 66.67, 66.67, 50.0, 83.33, 100.0, 50.0]%	[100.0, 95.24, 100.0, 100.0, 100.0, 97.62, 95.24, 97.62, 94.05, 94.05, 95.24, 100.0, 96.43, 96.43, 100.0]%	[100.0, 42.86, 100.0, 100.0, 100.0, 60.0, 50.0, 60.0, 37.5, 44.44, 50.0, 100.0, 62.5, 66.67, 100.0]%	[97.67, 96.39, 97.67, 97.67, 98.82, 96.47, 97.56, 96.47, 96.34, 97.53, 97.56, 96.55, 98.78, 100.0, 96.55]%	||	65.43%	64.44%	97.46%	71.6%	97.47%	
  4  0  0  0  0  0  1  0  1  0  0  0  0  0  0  66.67%		1
  0  3  0  0  0  0  1  0  1  1  0  0  0  0  0  50.0%		2
  0  0  4  0  0  1  0  0  0  1  0  0  0  0  0  66.67%		3
  0  1  0  4  0  1  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  3  0  0  1  0  0  0  0  2  0  50.0%		6
  0  0  0  0  0  0  4  1  0  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  3  0  0  1  0  1  1  0  50.0%		8
  0  3  0  0  0  0  0  0  3  0  0  0  0  0  0  50.0%		9
  0  0  0  0  0  0  0  0  2  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  2  0  0  1  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  2  0  0  0  3  50.0%		15
Forest OOB Error: 60.34%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67, 98.89, 98.89, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 80.0, 76.92, 83.33, 66.67, 72.73, 92.31, 92.31, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 66.67, 71.43, 83.33, 100.0, 80.0, 85.71, 85.71, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 100.0, 98.8, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	82.74%	83.33%	98.81%	86.29%	98.83%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	71.11%	96.15%	69.05%	[94.44, 94.44, 96.67, 96.67, 98.89, 95.56, 93.33, 91.11, 98.89, 97.78, 96.67, 96.67, 98.89, 96.67, 95.56]%	[44.44, 66.67, 72.73, 76.92, 90.91, 66.67, 62.5, 33.33, 90.91, 83.33, 80.0, 66.67, 92.31, 76.92, 50.0]%	[33.33, 83.33, 66.67, 83.33, 83.33, 66.67, 83.33, 33.33, 83.33, 83.33, 100.0, 50.0, 100.0, 83.33, 33.33]%	[98.81, 95.24, 98.81, 97.62, 100.0, 97.62, 94.05, 95.24, 100.0, 98.81, 96.43, 100.0, 98.81, 97.62, 100.0]%	[66.67, 55.56, 80.0, 71.43, 100.0, 66.67, 50.0, 33.33, 100.0, 83.33, 66.67, 100.0, 85.71, 71.43, 100.0]%	[95.4, 98.77, 97.65, 98.8, 98.82, 97.62, 98.75, 95.24, 98.82, 98.81, 100.0, 96.55, 100.0, 98.8, 95.45]%	||	70.29%	71.11%	97.94%	75.39%	97.97%	
  2  2  0  0  0  0  1  0  0  0  0  0  0  1  0  33.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  1  0  4  1  0  0  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  1  0  0  0  4  0  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  2  0  0  3  0  0  0  0  33.33%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  1  0  0  1  0  3  1  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  1  0  0  0  3  0  0  0  0  0  0  2  33.33%		15
Forest OOB Error: 57.21%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67, 98.89, 98.89, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 80.0, 76.92, 83.33, 66.67, 72.73, 92.31, 92.31, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 66.67, 71.43, 83.33, 100.0, 80.0, 85.71, 85.71, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 100.0, 98.8, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	82.74%	83.33%	98.81%	86.29%	98.83%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	61.11%	94.81%	58.33%	[97.78, 97.78, 96.67, 97.78, 95.56, 94.44, 91.11, 93.33, 93.33, 93.33, 94.44, 94.44, 93.33, 94.44, 94.44]%	[83.33, 83.33, 72.73, 80.0, 71.43, 61.54, 50.0, 57.14, 62.5, 40.0, 61.54, 54.55, 40.0, 28.57, 54.55]%	[83.33, 83.33, 66.67, 66.67, 83.33, 66.67, 66.67, 66.67, 83.33, 33.33, 66.67, 50.0, 33.33, 16.67, 50.0]%	[98.81, 98.81, 98.81, 100.0, 96.43, 96.43, 92.86, 95.24, 94.05, 97.62, 96.43, 97.62, 97.62, 100.0, 97.62]%	[83.33, 83.33, 80.0, 100.0, 62.5, 57.14, 40.0, 50.0, 50.0, 50.0, 57.14, 60.0, 50.0, 100.0, 60.0]%	[98.81, 98.81, 97.65, 97.67, 98.78, 97.59, 97.5, 97.56, 98.75, 95.35, 97.59, 96.47, 95.35, 94.38, 96.47]%	||	60.08%	61.11%	97.22%	65.56%	97.25%	
  5  0  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		2
  0  0  4  0  0  0  0  0  1  0  0  1  0  0  0  66.67%		3
  0  1  0  4  1  0  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  0  0  1  0  0  0  83.33%		5
  0  0  0  0  1  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  1  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  2  0  0  0  0  0  0  66.67%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  4  0  0  2  0  0  0  0  0  33.33%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  2  0  0  1  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  1  0  0  3  0  2  0  0  33.33%		13
  0  0  0  0  1  2  0  0  0  0  0  0  0  1  2  16.67%		14
  1  0  0  0  0  0  0  2  0  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 54.02%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67, 98.89, 98.89, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 80.0, 76.92, 83.33, 66.67, 72.73, 92.31, 92.31, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 66.67, 71.43, 83.33, 100.0, 80.0, 85.71, 85.71, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 100.0, 98.8, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	82.74%	83.33%	98.81%	86.29%	98.83%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	67.78%	95.7%	65.48%	[95.56, 98.89, 97.78, 98.89, 98.89, 96.67, 90.0, 96.67, 95.56, 92.22, 91.11, 96.67, 92.22, 96.67, 97.78]%	[71.43, 90.91, 83.33, 90.91, 92.31, 72.73, 30.77, 72.73, 71.43, 22.22, 20.0, 72.73, 53.33, 80.0, 80.0]%	[83.33, 83.33, 83.33, 83.33, 100.0, 66.67, 33.33, 66.67, 83.33, 16.67, 16.67, 66.67, 66.67, 100.0, 66.67]%	[96.43, 100.0, 98.81, 100.0, 98.81, 98.81, 94.05, 98.81, 96.43, 97.62, 96.43, 98.81, 94.05, 96.43, 100.0]%	[62.5, 100.0, 83.33, 100.0, 85.71, 80.0, 28.57, 80.0, 62.5, 33.33, 25.0, 80.0, 44.44, 66.67, 100.0]%	[98.78, 98.82, 98.81, 98.82, 100.0, 97.65, 95.18, 97.65, 98.78, 94.25, 94.19, 97.65, 97.53, 100.0, 97.67]%	||	66.99%	67.78%	97.7%	68.8%	97.72%	
  5  0  0  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		1
  1  5  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  0  0  1  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  4  0  0  0  0  0  0  0  2  0  66.67%		6
  2  0  0  0  0  1  2  0  1  0  0  0  0  0  0  33.33%		7
  0  0  1  0  0  0  0  4  0  0  0  0  1  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  3  0  0  1  0  1  0  1  0  16.67%		10
  0  0  0  0  0  0  0  0  2  0  1  0  3  0  0  16.67%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  1  0  4  66.67%		15
Forest OOB Error: 57.66%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[96.67, 97.78, 98.89, 97.78, 96.67, 97.78, 95.56, 95.56, 97.78, 96.67, 96.67, 98.89, 98.89, 96.67, 100.0]%	[66.67, 85.71, 90.91, 83.33, 76.92, 80.0, 71.43, 71.43, 83.33, 66.67, 72.73, 92.31, 92.31, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 98.81, 97.62, 100.0, 96.43, 96.43, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 83.33, 71.43, 100.0, 62.5, 62.5, 83.33, 100.0, 80.0, 85.71, 85.71, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.81, 98.8, 97.67, 98.78, 98.78, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	80.71%	81.11%	98.65%	84.06%	98.67%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[96.67, 96.67, 98.89, 97.78, 98.89, 96.67, 94.44, 97.78, 96.67, 97.78, 98.89, 96.67, 98.89, 98.89, 98.89]%	[66.67, 72.73, 92.31, 83.33, 90.91, 76.92, 66.67, 83.33, 80.0, 83.33, 90.91, 72.73, 92.31, 90.91, 90.91]%	[50.0, 66.67, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33]%	[100.0, 98.81, 98.81, 98.81, 100.0, 97.62, 95.24, 98.81, 96.43, 98.81, 100.0, 98.81, 98.81, 100.0, 100.0]%	[100.0, 80.0, 85.71, 83.33, 100.0, 71.43, 55.56, 83.33, 66.67, 83.33, 100.0, 80.0, 85.71, 100.0, 100.0]%	[96.55, 97.65, 100.0, 98.81, 98.82, 98.8, 98.77, 98.81, 100.0, 98.81, 98.82, 97.65, 100.0, 98.82, 98.82]%	||	82.26%	82.22%	98.73%	85.01%	98.74%	
  3  1  0  1  0  0  0  0  1  0  0  0  0  0  0  50.0%		1
  0  4  1  0  0  0  0  0  1  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  1  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  1  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 52.85%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[96.67, 97.78, 98.89, 97.78, 96.67, 97.78, 95.56, 95.56, 97.78, 96.67, 96.67, 98.89, 98.89, 96.67, 100.0]%	[66.67, 85.71, 90.91, 83.33, 76.92, 80.0, 71.43, 71.43, 83.33, 66.67, 72.73, 92.31, 92.31, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 98.81, 97.62, 100.0, 96.43, 96.43, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 83.33, 71.43, 100.0, 62.5, 62.5, 83.33, 100.0, 80.0, 85.71, 85.71, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.81, 98.8, 97.67, 98.78, 98.78, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	80.71%	81.11%	98.65%	84.06%	98.67%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[98.89, 97.78, 95.56, 97.78, 98.89, 97.78, 95.56, 94.44, 95.56, 96.67, 94.44, 96.67, 96.67, 98.89, 97.78]%	[92.31, 80.0, 71.43, 80.0, 90.91, 83.33, 71.43, 54.55, 71.43, 76.92, 61.54, 72.73, 72.73, 92.31, 80.0]%	[100.0, 66.67, 83.33, 66.67, 83.33, 83.33, 83.33, 50.0, 83.33, 83.33, 66.67, 66.67, 66.67, 100.0, 66.67]%	[98.81, 100.0, 96.43, 100.0, 100.0, 98.81, 96.43, 97.62, 96.43, 97.62, 96.43, 98.81, 98.81, 98.81, 100.0]%	[85.71, 100.0, 62.5, 100.0, 100.0, 83.33, 62.5, 60.0, 62.5, 71.43, 57.14, 80.0, 80.0, 85.71, 100.0]%	[100.0, 97.67, 98.78, 97.67, 98.82, 98.81, 98.78, 96.47, 98.78, 98.8, 97.59, 97.65, 97.65, 100.0, 97.67]%	||	76.77%	76.67%	98.33%	79.39%	98.34%	
  6  0  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		1
  0  4  0  0  0  0  1  0  0  1  0  0  0  0  0  66.67%		2
  0  0  5  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  1  0  0  0  0  0  1  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  1  0  0  0  0  0  0  83.33%		7
  0  0  2  0  0  0  0  3  0  0  1  0  0  0  0  50.0%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  1  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  1  0  0  0  0  0  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 53.82%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[96.67, 97.78, 98.89, 97.78, 96.67, 97.78, 95.56, 95.56, 97.78, 96.67, 96.67, 98.89, 98.89, 96.67, 100.0]%	[66.67, 85.71, 90.91, 83.33, 76.92, 80.0, 71.43, 71.43, 83.33, 66.67, 72.73, 92.31, 92.31, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 98.81, 97.62, 100.0, 96.43, 96.43, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 83.33, 71.43, 100.0, 62.5, 62.5, 83.33, 100.0, 80.0, 85.71, 85.71, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.81, 98.8, 97.67, 98.78, 98.78, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	80.71%	81.11%	98.65%	84.06%	98.67%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[98.89, 98.89, 96.67, 94.44, 94.44, 96.67, 91.11, 96.67, 97.78, 96.67, 96.67, 96.67, 95.56, 97.78, 95.56]%	[90.91, 92.31, 76.92, 61.54, 44.44, 72.73, 50.0, 76.92, 85.71, 76.92, 76.92, 66.67, 66.67, 83.33, 50.0]%	[83.33, 100.0, 83.33, 66.67, 33.33, 66.67, 66.67, 83.33, 100.0, 83.33, 83.33, 50.0, 66.67, 83.33, 33.33]%	[100.0, 98.81, 97.62, 96.43, 98.81, 98.81, 92.86, 97.62, 97.62, 97.62, 97.62, 100.0, 97.62, 98.81, 100.0]%	[100.0, 85.71, 71.43, 57.14, 66.67, 80.0, 40.0, 71.43, 75.0, 71.43, 71.43, 100.0, 66.67, 83.33, 100.0]%	[98.82, 100.0, 98.8, 97.59, 95.4, 97.65, 97.5, 98.8, 100.0, 98.8, 98.8, 96.55, 97.62, 98.81, 95.45]%	||	71.47%	72.22%	98.02%	76.02%	98.04%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  1  2  2  0  1  0  0  0  0  0  0  0  0  33.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  4  0  0  2  0  0  0  0  0  66.67%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  1  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  3  0  0  0  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  1  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  1  0  0  0  2  0  0  0  0  1  0  2  33.33%		15
Forest OOB Error: 54.63%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[96.67, 97.78, 98.89, 97.78, 96.67, 97.78, 95.56, 95.56, 97.78, 96.67, 96.67, 98.89, 98.89, 96.67, 100.0]%	[66.67, 85.71, 90.91, 83.33, 76.92, 80.0, 71.43, 71.43, 83.33, 66.67, 72.73, 92.31, 92.31, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 98.81, 97.62, 100.0, 96.43, 96.43, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 83.33, 71.43, 100.0, 62.5, 62.5, 83.33, 100.0, 80.0, 85.71, 85.71, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.81, 98.8, 97.67, 98.78, 98.78, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	80.71%	81.11%	98.65%	84.06%	98.67%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	71.11%	96.15%	69.05%	[96.67, 95.56, 97.78, 94.44, 97.78, 97.78, 93.33, 94.44, 94.44, 97.78, 96.67, 96.67, 95.56, 98.89, 94.44]%	[66.67, 60.0, 83.33, 61.54, 80.0, 83.33, 66.67, 61.54, 54.55, 85.71, 76.92, 72.73, 66.67, 92.31, 44.44]%	[50.0, 50.0, 83.33, 66.67, 66.67, 83.33, 100.0, 66.67, 50.0, 100.0, 83.33, 66.67, 66.67, 100.0, 33.33]%	[100.0, 98.81, 98.81, 96.43, 100.0, 98.81, 92.86, 96.43, 97.62, 97.62, 97.62, 98.81, 97.62, 98.81, 98.81]%	[100.0, 75.0, 83.33, 57.14, 100.0, 83.33, 50.0, 57.14, 60.0, 75.0, 71.43, 80.0, 66.67, 85.71, 66.67]%	[96.55, 96.51, 98.81, 97.59, 97.67, 98.81, 100.0, 97.59, 96.47, 100.0, 98.8, 97.65, 97.62, 100.0, 95.4]%	||	70.43%	71.11%	97.94%	74.1%	97.96%	
  3  1  0  0  0  0  0  0  0  1  0  0  0  0  1  50.0%		1
  0  3  0  1  0  0  1  0  1  0  0  0  0  0  0  50.0%		2
  0  0  5  0  0  0  0  0  0  0  0  0  0  1  0  83.33%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  1  4  0  0  0  0  0  0  1  0  0  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  1  0  0  66.67%		8
  0  0  0  0  0  0  3  0  3  0  0  0  0  0  0  50.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  1  0  0  0  0  0  0  0  5  0  0  0  0  83.33%		11
  0  0  0  1  0  0  1  0  0  0  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  2  0  1  0  0  1  0  2  33.33%		15
Forest OOB Error: 57.79%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[96.67, 97.78, 98.89, 97.78, 96.67, 97.78, 95.56, 95.56, 97.78, 96.67, 96.67, 98.89, 98.89, 96.67, 100.0]%	[66.67, 85.71, 90.91, 83.33, 76.92, 80.0, 71.43, 71.43, 83.33, 66.67, 72.73, 92.31, 92.31, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 98.81, 97.62, 100.0, 96.43, 96.43, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 83.33, 71.43, 100.0, 62.5, 62.5, 83.33, 100.0, 80.0, 85.71, 85.71, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.81, 98.8, 97.67, 98.78, 98.78, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	80.71%	81.11%	98.65%	84.06%	98.67%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	68.89%	95.85%	66.67%	[95.56, 93.33, 94.44, 95.56, 97.78, 93.33, 88.89, 96.67, 96.67, 95.56, 98.89, 96.67, 98.89, 96.67, 98.89]%	[50.0, 50.0, 66.67, 66.67, 80.0, 57.14, 50.0, 66.67, 80.0, 50.0, 90.91, 72.73, 92.31, 72.73, 90.91]%	[33.33, 50.0, 83.33, 66.67, 66.67, 66.67, 83.33, 50.0, 100.0, 33.33, 83.33, 66.67, 100.0, 66.67, 83.33]%	[100.0, 96.43, 95.24, 97.62, 100.0, 95.24, 89.29, 100.0, 96.43, 100.0, 100.0, 98.81, 98.81, 98.81, 100.0]%	[100.0, 50.0, 55.56, 66.67, 100.0, 50.0, 35.71, 100.0, 66.67, 100.0, 100.0, 80.0, 85.71, 80.0, 100.0]%	[95.45, 96.43, 98.77, 97.62, 97.67, 97.56, 98.68, 96.55, 100.0, 95.45, 98.82, 97.65, 100.0, 97.65, 98.82]%	||	69.11%	68.89%	97.78%	78.02%	97.81%	
  2  3  0  0  0  0  0  0  1  0  0  0  0  0  0  33.33%		1
  0  3  0  0  0  0  2  0  0  0  0  0  0  1  0  50.0%		2
  0  0  5  0  0  0  0  0  0  0  0  0  1  0  0  83.33%		3
  0  0  0  4  0  2  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  1  0  4  0  1  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  1  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  2  1  0  0  0  3  0  0  0  0  0  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  2  0  1  2  0  1  0  0  0  33.33%		10
  0  0  1  0  0  0  0  0  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  2  0  0  0  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  1  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  1  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 55.56%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[96.67, 97.78, 98.89, 97.78, 96.67, 97.78, 95.56, 95.56, 97.78, 96.67, 96.67, 98.89, 98.89, 96.67, 100.0]%	[66.67, 85.71, 90.91, 83.33, 76.92, 80.0, 71.43, 71.43, 83.33, 66.67, 72.73, 92.31, 92.31, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 98.81, 97.62, 100.0, 96.43, 96.43, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 83.33, 71.43, 100.0, 62.5, 62.5, 83.33, 100.0, 80.0, 85.71, 85.71, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.81, 98.8, 97.67, 98.78, 98.78, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	80.71%	81.11%	98.65%	84.06%	98.67%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	74.44%	96.59%	72.62%	[98.89, 96.67, 97.78, 98.89, 96.67, 97.78, 95.56, 91.11, 98.89, 95.56, 95.56, 96.67, 95.56, 97.78, 95.56]%	[90.91, 76.92, 83.33, 90.91, 76.92, 83.33, 60.0, 42.86, 92.31, 66.67, 71.43, 72.73, 66.67, 83.33, 60.0]%	[83.33, 83.33, 83.33, 83.33, 83.33, 83.33, 50.0, 50.0, 100.0, 66.67, 83.33, 66.67, 66.67, 83.33, 50.0]%	[100.0, 97.62, 98.81, 100.0, 97.62, 98.81, 98.81, 94.05, 98.81, 97.62, 96.43, 98.81, 97.62, 98.81, 98.81]%	[100.0, 71.43, 83.33, 100.0, 71.43, 83.33, 75.0, 37.5, 85.71, 66.67, 62.5, 80.0, 66.67, 83.33, 75.0]%	[98.82, 98.8, 98.81, 98.82, 98.8, 98.81, 96.51, 96.34, 100.0, 97.62, 98.78, 97.65, 97.62, 98.81, 96.51]%	||	74.55%	74.44%	98.17%	76.13%	98.18%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  1  0  0  0  0  0  0  0  83.33%		3
  0  1  0  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  1  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  3  2  0  1  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  3  0  1  1  0  1  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  1  4  0  1  0  0  0  66.67%		10
  0  0  1  0  0  0  0  0  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  1  0  0  0  0  0  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  2  0  0  0  0  1  0  3  50.0%		15
Forest OOB Error: 57.53%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67, 98.89, 98.89, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 80.0, 76.92, 83.33, 66.67, 72.73, 92.31, 92.31, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 66.67, 71.43, 83.33, 100.0, 80.0, 85.71, 85.71, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 100.0, 98.8, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	82.74%	83.33%	98.81%	86.29%	98.83%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[97.78, 96.67, 97.78, 96.67, 97.78, 95.56, 93.33, 96.67, 97.78, 94.44, 96.67, 96.67, 96.67, 100.0, 98.89]%	[83.33, 72.73, 80.0, 80.0, 83.33, 60.0, 62.5, 76.92, 85.71, 28.57, 72.73, 76.92, 76.92, 100.0, 90.91]%	[83.33, 66.67, 66.67, 100.0, 83.33, 50.0, 83.33, 83.33, 100.0, 16.67, 66.67, 83.33, 83.33, 100.0, 83.33]%	[98.81, 98.81, 100.0, 96.43, 98.81, 98.81, 94.05, 97.62, 97.62, 100.0, 98.81, 97.62, 97.62, 100.0, 100.0]%	[83.33, 80.0, 100.0, 66.67, 83.33, 75.0, 50.0, 71.43, 75.0, 100.0, 80.0, 71.43, 71.43, 100.0, 100.0]%	[98.81, 97.65, 97.67, 100.0, 98.81, 96.51, 98.75, 98.8, 100.0, 94.38, 97.65, 98.8, 98.8, 100.0, 98.82]%	||	75.37%	76.67%	98.33%	80.51%	98.36%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  1  4  0  0  0  0  0  0  1  0  0  0  0  0  0  66.67%		2
  0  0  4  1  0  0  0  0  0  0  1  0  0  0  0  66.67%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  1  0  0  0  83.33%		5
  0  0  0  1  1  3  0  0  1  0  0  0  0  0  0  50.0%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  1  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  3  1  0  1  0  1  0  0  0  16.67%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  1  0  0  0  0  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 52.47%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67, 98.89, 98.89, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 80.0, 76.92, 83.33, 66.67, 72.73, 92.31, 92.31, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 66.67, 71.43, 83.33, 100.0, 80.0, 85.71, 85.71, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 100.0, 98.8, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	82.74%	83.33%	98.81%	86.29%	98.83%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	67.78%	95.7%	65.48%	[93.33, 95.56, 96.67, 95.56, 98.89, 96.67, 88.89, 95.56, 95.56, 94.44, 96.67, 96.67, 96.67, 98.89, 95.56]%	[57.14, 60.0, 76.92, 66.67, 90.91, 72.73, 54.55, 60.0, 66.67, 54.55, 76.92, 66.67, 72.73, 92.31, 50.0]%	[66.67, 50.0, 83.33, 66.67, 83.33, 66.67, 100.0, 50.0, 66.67, 50.0, 83.33, 50.0, 66.67, 100.0, 33.33]%	[95.24, 98.81, 97.62, 97.62, 100.0, 98.81, 88.1, 98.81, 97.62, 97.62, 97.62, 100.0, 98.81, 98.81, 100.0]%	[50.0, 75.0, 71.43, 66.67, 100.0, 80.0, 37.5, 75.0, 66.67, 60.0, 71.43, 100.0, 80.0, 85.71, 100.0]%	[97.56, 96.51, 98.8, 97.62, 98.82, 97.65, 100.0, 96.51, 97.62, 96.47, 98.8, 96.55, 97.65, 100.0, 95.45]%	||	67.92%	67.78%	97.7%	74.63%	97.73%	
  4  1  0  0  0  0  1  0  0  0  0  0  0  0  0  66.67%		1
  1  3  0  0  0  0  2  0  0  0  0  0  0  0  0  50.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  1  4  0  1  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  1  1  0  0  0  3  0  0  1  0  0  0  0  50.0%		8
  0  0  0  1  0  0  1  0  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  3  0  0  3  0  0  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  2  0  3  0  0  0  50.0%		12
  2  0  0  0  0  0  0  0  0  0  0  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  1  0  0  0  0  0  1  1  0  0  1  0  0  0  2  33.33%		15
Forest OOB Error: 61.23%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67, 98.89, 98.89, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 80.0, 76.92, 83.33, 66.67, 72.73, 92.31, 92.31, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 66.67, 71.43, 83.33, 100.0, 80.0, 85.71, 85.71, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 100.0, 98.8, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	82.74%	83.33%	98.81%	86.29%	98.83%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[97.78, 95.56, 96.67, 95.56, 97.78, 97.78, 95.56, 96.67, 96.67, 95.56, 97.78, 97.78, 98.89, 97.78, 97.78]%	[80.0, 75.0, 72.73, 66.67, 83.33, 83.33, 71.43, 72.73, 76.92, 66.67, 83.33, 83.33, 90.91, 83.33, 80.0]%	[66.67, 100.0, 66.67, 66.67, 83.33, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33, 83.33, 83.33, 83.33, 66.67]%	[100.0, 95.24, 98.81, 97.62, 98.81, 98.81, 96.43, 98.81, 97.62, 97.62, 98.81, 98.81, 100.0, 98.81, 100.0]%	[100.0, 60.0, 80.0, 66.67, 83.33, 83.33, 62.5, 80.0, 71.43, 66.67, 83.33, 83.33, 100.0, 83.33, 100.0]%	[97.67, 100.0, 97.65, 97.62, 98.81, 98.81, 98.78, 97.65, 98.8, 97.62, 98.81, 98.81, 98.82, 98.81, 97.67]%	||	77.98%	77.78%	98.41%	80.26%	98.42%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  4  1  0  0  0  0  1  0  0  0  0  0  0  66.67%		3
  0  1  0  4  0  1  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  1  0  0  1  4  0  0  0  0  0  0  0  66.67%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  0  4  0  1  0  0  0  66.67%		10
  0  1  0  0  0  0  0  0  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  1  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  1  4  66.67%		15
Forest OOB Error: 55.73%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67, 98.89, 98.89, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 80.0, 76.92, 83.33, 66.67, 72.73, 92.31, 92.31, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 66.67, 71.43, 83.33, 100.0, 80.0, 85.71, 85.71, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 100.0, 98.8, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	82.74%	83.33%	98.81%	86.29%	98.83%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[95.56, 93.33, 96.67, 97.78, 97.78, 97.78, 97.78, 97.78, 93.33, 97.78, 94.44, 96.67, 95.56, 96.67, 97.78]%	[66.67, 50.0, 76.92, 83.33, 80.0, 83.33, 85.71, 83.33, 57.14, 85.71, 66.67, 66.67, 60.0, 72.73, 80.0]%	[66.67, 50.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33, 66.67, 100.0, 83.33, 50.0, 50.0, 66.67, 66.67]%	[97.62, 96.43, 97.62, 98.81, 100.0, 98.81, 97.62, 98.81, 95.24, 97.62, 95.24, 100.0, 98.81, 98.81, 100.0]%	[66.67, 50.0, 71.43, 83.33, 100.0, 83.33, 75.0, 83.33, 50.0, 75.0, 55.56, 100.0, 75.0, 80.0, 100.0]%	[97.62, 96.43, 98.8, 98.81, 97.67, 98.81, 100.0, 98.81, 97.56, 100.0, 98.77, 96.55, 96.51, 97.65, 97.67]%	||	73.21%	73.33%	98.1%	76.58%	98.11%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  3  0  0  0  0  1  0  2  0  0  0  0  0  0  50.0%		2
  0  0  5  1  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  0  0  1  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  1  0  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  1  1  0  0  0  0  0  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  2  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  3  0  3  0  0  50.0%		13
  2  0  0  0  0  0  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  1  4  66.67%		15
Forest OOB Error: 55.51%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67, 98.89, 98.89, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 80.0, 76.92, 83.33, 66.67, 72.73, 92.31, 92.31, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 66.67, 71.43, 83.33, 100.0, 80.0, 85.71, 85.71, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 100.0, 98.8, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	82.74%	83.33%	98.81%	86.29%	98.83%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[98.89, 95.56, 98.89, 97.78, 98.89, 96.67, 94.44, 92.22, 96.67, 95.56, 97.78, 97.78, 95.56, 98.89, 95.56]%	[92.31, 71.43, 90.91, 80.0, 90.91, 76.92, 61.54, 58.82, 72.73, 71.43, 83.33, 80.0, 66.67, 90.91, 50.0]%	[100.0, 83.33, 83.33, 66.67, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33, 83.33, 66.67, 66.67, 83.33, 33.33]%	[98.81, 96.43, 100.0, 100.0, 100.0, 97.62, 96.43, 92.86, 98.81, 96.43, 98.81, 100.0, 97.62, 100.0, 100.0]%	[85.71, 62.5, 100.0, 100.0, 100.0, 71.43, 57.14, 45.45, 80.0, 62.5, 83.33, 100.0, 66.67, 100.0, 100.0]%	[100.0, 98.78, 98.82, 97.67, 98.82, 98.8, 97.59, 98.73, 97.65, 98.78, 98.81, 97.67, 97.62, 98.82, 95.45]%	||	75.86%	75.56%	98.25%	80.98%	98.27%	
  6  0  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		1
  1  5  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		3
  0  1  0  4  0  1  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  1  0  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  4  0  1  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  1  0  0  0  0  0  1  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  3  0  0  0  0  1  0  2  33.33%		15
Forest OOB Error: 42.74%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67, 98.89, 98.89, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 80.0, 76.92, 83.33, 66.67, 72.73, 92.31, 92.31, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 66.67, 71.43, 83.33, 100.0, 80.0, 85.71, 85.71, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 100.0, 98.8, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	82.74%	83.33%	98.81%	86.29%	98.83%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[94.44, 97.78, 97.78, 97.78, 100.0, 97.78, 93.33, 95.56, 95.56, 97.78, 96.67, 96.67, 98.89, 98.89, 98.89]%	[61.54, 85.71, 83.33, 80.0, 100.0, 80.0, 50.0, 66.67, 71.43, 80.0, 76.92, 72.73, 92.31, 92.31, 90.91]%	[66.67, 100.0, 83.33, 66.67, 100.0, 66.67, 50.0, 66.67, 83.33, 66.67, 83.33, 66.67, 100.0, 100.0, 83.33]%	[96.43, 97.62, 98.81, 100.0, 100.0, 100.0, 96.43, 97.62, 96.43, 100.0, 97.62, 98.81, 98.81, 98.81, 100.0]%	[57.14, 75.0, 83.33, 100.0, 100.0, 100.0, 50.0, 66.67, 62.5, 100.0, 71.43, 80.0, 85.71, 85.71, 100.0]%	[97.59, 100.0, 98.81, 97.67, 100.0, 97.67, 96.43, 97.62, 98.78, 97.67, 98.8, 97.65, 100.0, 100.0, 98.82]%	||	78.92%	78.89%	98.49%	81.17%	98.5%	
  4  1  0  0  0  0  0  0  1  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  1  0  0  0  0  83.33%		3
  1  0  0  4  0  0  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  2  0  0  0  0  0  3  0  0  0  0  1  0  0  0  50.0%		7
  0  0  1  0  0  0  0  4  0  0  1  0  0  0  0  66.67%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  1  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  1  0  0  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 54.22%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67, 98.89, 98.89, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 80.0, 76.92, 83.33, 66.67, 72.73, 92.31, 92.31, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 66.67, 71.43, 83.33, 100.0, 80.0, 85.71, 85.71, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 100.0, 98.8, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	82.74%	83.33%	98.81%	86.29%	98.83%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[95.56, 97.78, 97.78, 96.67, 97.78, 97.78, 95.56, 97.78, 96.67, 94.44, 96.67, 96.67, 97.78, 98.89, 97.78]%	[66.67, 85.71, 83.33, 76.92, 83.33, 80.0, 66.67, 80.0, 76.92, 61.54, 76.92, 72.73, 83.33, 92.31, 80.0]%	[66.67, 100.0, 83.33, 83.33, 83.33, 66.67, 66.67, 66.67, 83.33, 66.67, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 97.62, 98.81, 97.62, 98.81, 100.0, 97.62, 100.0, 97.62, 96.43, 97.62, 98.81, 98.81, 98.81, 100.0]%	[66.67, 75.0, 83.33, 71.43, 83.33, 100.0, 66.67, 100.0, 71.43, 57.14, 71.43, 80.0, 83.33, 85.71, 100.0]%	[97.62, 100.0, 98.81, 98.8, 98.81, 97.67, 97.62, 97.67, 98.8, 97.59, 98.8, 97.65, 98.81, 100.0, 97.67]%	||	77.76%	77.78%	98.41%	79.7%	98.42%	
  4  1  0  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  1  0  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  1  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  1  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  4  0  0  0  0  1  0  1  0  66.67%		7
  0  0  1  0  0  0  0  4  0  0  1  0  0  0  0  66.67%		8
  1  0  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  1  0  0  1  0  0  0  0  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 63.74%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67, 98.89, 98.89, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 80.0, 76.92, 83.33, 66.67, 72.73, 92.31, 92.31, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 66.67, 71.43, 83.33, 100.0, 80.0, 85.71, 85.71, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 100.0, 98.8, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	82.74%	83.33%	98.81%	86.29%	98.83%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	71.11%	96.15%	69.05%	[98.89, 94.44, 98.89, 94.44, 96.67, 94.44, 95.56, 94.44, 96.67, 92.22, 97.78, 97.78, 97.78, 94.44, 97.78]%	[92.31, 54.55, 90.91, 54.55, 72.73, 54.55, 66.67, 61.54, 76.92, 53.33, 80.0, 80.0, 83.33, 66.67, 83.33]%	[100.0, 50.0, 83.33, 50.0, 66.67, 50.0, 66.67, 66.67, 83.33, 66.67, 66.67, 66.67, 83.33, 83.33, 83.33]%	[98.81, 97.62, 100.0, 97.62, 98.81, 97.62, 97.62, 96.43, 97.62, 94.05, 100.0, 100.0, 98.81, 95.24, 98.81]%	[85.71, 60.0, 100.0, 60.0, 80.0, 60.0, 66.67, 57.14, 71.43, 44.44, 100.0, 100.0, 83.33, 55.56, 83.33]%	[100.0, 96.47, 98.82, 96.47, 97.65, 96.47, 97.62, 97.59, 98.8, 97.53, 97.67, 97.67, 98.81, 98.77, 98.81]%	||	71.43%	71.11%	97.94%	73.84%	97.94%	
  6  0  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		1
  0  3  0  1  0  0  0  0  1  1  0  0  0  0  0  50.0%		2
  0  0  5  0  0  0  0  0  0  0  0  0  1  0  0  83.33%		3
  1  1  0  3  0  0  0  0  0  0  0  0  0  1  0  50.0%		4
  0  0  0  0  4  0  0  0  0  1  0  0  0  1  0  66.67%		5
  0  0  0  0  1  3  1  0  0  0  0  0  0  1  0  50.0%		6
  0  0  0  0  0  1  4  0  0  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  1  1  0  0  0  0  0  66.67%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  1  1  0  0  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  1  5  83.33%		15
Forest OOB Error: 60.23%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67, 98.89, 98.89, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 80.0, 76.92, 83.33, 66.67, 72.73, 92.31, 92.31, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 66.67, 71.43, 83.33, 100.0, 80.0, 85.71, 85.71, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 100.0, 98.8, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	82.74%	83.33%	98.81%	86.29%	98.83%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	71.11%	96.15%	69.05%	[97.78, 95.56, 95.56, 98.89, 98.89, 96.67, 95.56, 92.22, 96.67, 95.56, 96.67, 95.56, 95.56, 95.56, 95.56]%	[80.0, 66.67, 66.67, 92.31, 90.91, 66.67, 71.43, 46.15, 76.92, 71.43, 72.73, 60.0, 71.43, 75.0, 50.0]%	[66.67, 66.67, 66.67, 100.0, 83.33, 50.0, 83.33, 50.0, 83.33, 83.33, 66.67, 50.0, 83.33, 100.0, 33.33]%	[100.0, 97.62, 97.62, 98.81, 100.0, 100.0, 96.43, 95.24, 97.62, 96.43, 98.81, 98.81, 96.43, 95.24, 100.0]%	[100.0, 66.67, 66.67, 85.71, 100.0, 100.0, 62.5, 42.86, 71.43, 62.5, 80.0, 75.0, 62.5, 60.0, 100.0]%	[97.67, 97.62, 97.62, 100.0, 98.82, 96.55, 98.78, 96.39, 98.8, 98.78, 97.65, 96.51, 98.78, 100.0, 95.45]%	||	70.55%	71.11%	97.94%	75.72%	97.96%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  4  0  0  0  0  2  0  0  0  0  0  0  0  0  66.67%		2
  0  0  4  1  0  0  0  1  0  0  0  0  0  0  0  66.67%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  3  0  0  1  0  0  0  0  2  0  50.0%		6
  0  0  0  0  0  0  5  0  0  0  0  1  0  0  0  83.33%		7
  0  0  2  0  0  0  0  3  0  0  0  0  1  0  0  50.0%		8
  0  0  0  0  0  0  0  0  5  0  0  0  0  1  0  83.33%		9
  0  0  0  0  0  0  0  0  1  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  2  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  2  0  0  0  0  1  1  2  33.33%		15
Forest OOB Error: 58.52%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67, 98.89, 98.89, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 80.0, 76.92, 83.33, 66.67, 72.73, 92.31, 92.31, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 66.67, 71.43, 83.33, 100.0, 80.0, 85.71, 85.71, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 100.0, 98.8, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	82.74%	83.33%	98.81%	86.29%	98.83%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	64.44%	95.26%	61.9%	[96.67, 95.56, 91.11, 93.33, 96.67, 94.44, 96.67, 92.22, 94.44, 96.67, 92.22, 97.78, 97.78, 97.78, 95.56]%	[72.73, 66.67, 42.86, 50.0, 66.67, 61.54, 76.92, 46.15, 66.67, 76.92, 36.36, 80.0, 83.33, 85.71, 50.0]%	[66.67, 66.67, 50.0, 50.0, 50.0, 66.67, 83.33, 50.0, 83.33, 83.33, 33.33, 66.67, 83.33, 100.0, 33.33]%	[98.81, 97.62, 94.05, 96.43, 100.0, 96.43, 97.62, 95.24, 95.24, 97.62, 96.43, 100.0, 98.81, 97.62, 100.0]%	[80.0, 66.67, 37.5, 50.0, 100.0, 57.14, 71.43, 42.86, 55.56, 71.43, 40.0, 100.0, 83.33, 75.0, 100.0]%	[97.65, 97.62, 96.34, 96.43, 96.55, 97.59, 98.8, 96.39, 98.77, 98.8, 95.29, 97.67, 98.81, 100.0, 95.45]%	||	64.17%	64.44%	97.46%	68.73%	97.48%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  1  4  0  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		2
  0  0  3  2  0  1  0  0  0  0  0  0  0  0  0  50.0%		3
  0  0  0  3  0  2  0  0  1  0  0  0  0  0  0  50.0%		4
  0  0  1  1  3  0  0  0  1  0  0  0  0  0  0  50.0%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  1  0  0  0  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  2  0  0  0  0  3  0  0  1  0  0  0  0  50.0%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  2  1  0  2  0  1  0  0  33.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  2  0  0  1  0  0  1  2  33.33%		15
Forest OOB Error: 55.38%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67, 98.89, 98.89, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 80.0, 76.92, 83.33, 66.67, 72.73, 92.31, 92.31, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 66.67, 71.43, 83.33, 100.0, 80.0, 85.71, 85.71, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 100.0, 98.8, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	82.74%	83.33%	98.81%	86.29%	98.83%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[97.78, 96.67, 97.78, 95.56, 97.78, 96.67, 95.56, 95.56, 95.56, 93.33, 97.78, 96.67, 97.78, 95.56, 96.67]%	[80.0, 80.0, 80.0, 66.67, 80.0, 72.73, 75.0, 66.67, 71.43, 40.0, 83.33, 72.73, 83.33, 75.0, 66.67]%	[66.67, 100.0, 66.67, 66.67, 66.67, 66.67, 100.0, 66.67, 83.33, 33.33, 83.33, 66.67, 83.33, 100.0, 50.0]%	[100.0, 96.43, 100.0, 97.62, 100.0, 98.81, 95.24, 97.62, 96.43, 97.62, 98.81, 98.81, 98.81, 95.24, 100.0]%	[100.0, 66.67, 100.0, 66.67, 100.0, 80.0, 60.0, 66.67, 62.5, 50.0, 83.33, 80.0, 83.33, 60.0, 100.0]%	[97.67, 100.0, 97.67, 97.62, 97.67, 97.65, 100.0, 97.62, 98.78, 95.35, 98.81, 97.65, 98.81, 100.0, 96.55]%	||	72.9%	73.33%	98.1%	77.28%	98.12%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  4  0  0  0  0  0  1  0  0  0  0  1  0  66.67%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  2  4  0  0  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  4  1  0  0  0  0  1  0  66.67%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  3  0  0  2  0  1  0  0  0  33.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  2  0  0  0  0  0  1  3  50.0%		15
Forest OOB Error: 55.73%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67, 98.89, 98.89, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 80.0, 76.92, 83.33, 66.67, 72.73, 92.31, 92.31, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 66.67, 71.43, 83.33, 100.0, 80.0, 85.71, 85.71, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 100.0, 98.8, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	82.74%	83.33%	98.81%	86.29%	98.83%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	66.67%	95.56%	64.29%	[96.67, 94.44, 98.89, 96.67, 96.67, 95.56, 92.22, 96.67, 94.44, 94.44, 94.44, 94.44, 97.78, 95.56, 94.44]%	[72.73, 61.54, 90.91, 72.73, 72.73, 66.67, 53.33, 76.92, 66.67, 44.44, 66.67, 54.55, 83.33, 66.67, 44.44]%	[66.67, 66.67, 83.33, 66.67, 66.67, 66.67, 66.67, 83.33, 83.33, 33.33, 83.33, 50.0, 83.33, 66.67, 33.33]%	[98.81, 96.43, 100.0, 98.81, 98.81, 97.62, 94.05, 97.62, 95.24, 98.81, 95.24, 97.62, 98.81, 97.62, 98.81]%	[80.0, 57.14, 100.0, 80.0, 80.0, 66.67, 44.44, 71.43, 55.56, 66.67, 55.56, 60.0, 83.33, 66.67, 66.67]%	[97.65, 97.59, 98.82, 97.65, 97.65, 97.62, 97.53, 98.8, 98.77, 95.4, 98.77, 96.47, 98.81, 97.62, 95.4]%	||	66.29%	66.67%	97.62%	68.94%	97.64%	
  4  1  0  0  0  0  0  0  1  0  0  0  0  0  0  66.67%		1
  0  4  0  0  0  0  1  0  1  0  0  0  0  0  0  66.67%		2
  0  0  5  0  0  0  0  0  0  0  0  0  0  1  0  83.33%		3
  0  0  0  4  0  0  0  0  1  0  0  0  0  1  0  66.67%		4
  0  0  0  0  4  0  1  0  0  0  0  1  0  0  0  66.67%		5
  0  0  0  1  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  1  0  0  0  0  1  4  0  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  2  0  0  0  0  1  0  0  2  0  1  0  0  0  33.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  2  0  0  1  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  4  1  66.67%		14
  0  0  0  0  0  0  0  2  0  0  2  0  0  0  2  33.33%		15
Forest OOB Error: 53.62%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[96.67, 97.78, 98.89, 97.78, 96.67, 97.78, 95.56, 95.56, 97.78, 96.67, 96.67, 98.89, 98.89, 96.67, 100.0]%	[66.67, 85.71, 90.91, 83.33, 76.92, 80.0, 71.43, 71.43, 83.33, 66.67, 72.73, 92.31, 92.31, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 98.81, 97.62, 100.0, 96.43, 96.43, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 83.33, 71.43, 100.0, 62.5, 62.5, 83.33, 100.0, 80.0, 85.71, 85.71, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.81, 98.8, 97.67, 98.78, 98.78, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	80.71%	81.11%	98.65%	84.06%	98.67%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	71.11%	96.15%	69.05%	[97.78, 95.56, 96.67, 97.78, 97.78, 93.33, 95.56, 96.67, 94.44, 93.33, 97.78, 95.56, 96.67, 96.67, 96.67]%	[80.0, 75.0, 72.73, 80.0, 80.0, 57.14, 71.43, 76.92, 66.67, 40.0, 83.33, 60.0, 76.92, 76.92, 66.67]%	[66.67, 100.0, 66.67, 66.67, 66.67, 66.67, 83.33, 83.33, 83.33, 33.33, 83.33, 50.0, 83.33, 83.33, 50.0]%	[100.0, 95.24, 98.81, 100.0, 100.0, 95.24, 96.43, 97.62, 95.24, 97.62, 98.81, 98.81, 97.62, 97.62, 100.0]%	[100.0, 60.0, 80.0, 100.0, 100.0, 50.0, 62.5, 71.43, 55.56, 50.0, 83.33, 75.0, 71.43, 71.43, 100.0]%	[97.67, 100.0, 97.65, 97.67, 97.67, 97.56, 98.78, 98.8, 98.77, 95.35, 98.81, 96.51, 98.8, 98.8, 96.55]%	||	70.92%	71.11%	97.94%	75.38%	97.96%	
  4  1  0  0  0  0  0  0  1  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  4  0  0  0  0  1  1  0  0  0  0  0  0  66.67%		3
  0  1  0  4  0  1  0  0  0  0  0  0  0  0  0  66.67%		4
  0  1  0  0  4  1  0  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  0  1  0  83.33%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  1  2  0  1  0  0  0  33.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  2  0  3  0  0  0  50.0%		12
  0  0  1  0  0  0  0  0  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  1  0  1  0  3  50.0%		15
Forest OOB Error: 56.27%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[96.67, 97.78, 98.89, 97.78, 96.67, 97.78, 95.56, 95.56, 97.78, 96.67, 96.67, 98.89, 98.89, 96.67, 100.0]%	[66.67, 85.71, 90.91, 83.33, 76.92, 80.0, 71.43, 71.43, 83.33, 66.67, 72.73, 92.31, 92.31, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 98.81, 97.62, 100.0, 96.43, 96.43, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 83.33, 71.43, 100.0, 62.5, 62.5, 83.33, 100.0, 80.0, 85.71, 85.71, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.81, 98.8, 97.67, 98.78, 98.78, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	80.71%	81.11%	98.65%	84.06%	98.67%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	71.11%	96.15%	69.05%	[96.67, 95.56, 95.56, 96.67, 97.78, 96.67, 97.78, 94.44, 96.67, 93.33, 96.67, 96.67, 97.78, 95.56, 94.44]%	[66.67, 66.67, 60.0, 76.92, 80.0, 72.73, 85.71, 54.55, 76.92, 62.5, 76.92, 72.73, 83.33, 75.0, 44.44]%	[50.0, 66.67, 50.0, 83.33, 66.67, 66.67, 100.0, 50.0, 83.33, 83.33, 83.33, 66.67, 83.33, 100.0, 33.33]%	[100.0, 97.62, 98.81, 97.62, 100.0, 98.81, 97.62, 97.62, 97.62, 94.05, 97.62, 98.81, 98.81, 95.24, 98.81]%	[100.0, 66.67, 75.0, 71.43, 100.0, 80.0, 75.0, 60.0, 71.43, 50.0, 71.43, 80.0, 83.33, 60.0, 66.67]%	[96.55, 97.62, 96.51, 98.8, 97.67, 97.65, 100.0, 96.47, 98.8, 98.75, 98.8, 97.65, 98.81, 100.0, 95.4]%	||	70.34%	71.11%	97.94%	74.06%	97.96%	
  3  2  0  1  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  4  0  0  0  0  1  0  0  1  0  0  0  0  0  66.67%		2
  0  0  3  0  0  0  0  0  0  1  0  0  0  1  1  50.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  1  0  0  0  0  0  66.67%		5
  0  0  0  1  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  3  1  0  1  0  0  1  0  50.0%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  5  1  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  2  0  0  1  0  0  1  2  33.33%		15
Forest OOB Error: 53.33%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[96.67, 97.78, 98.89, 97.78, 96.67, 97.78, 95.56, 95.56, 97.78, 96.67, 96.67, 98.89, 98.89, 96.67, 100.0]%	[66.67, 85.71, 90.91, 83.33, 76.92, 80.0, 71.43, 71.43, 83.33, 66.67, 72.73, 92.31, 92.31, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 98.81, 97.62, 100.0, 96.43, 96.43, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 83.33, 71.43, 100.0, 62.5, 62.5, 83.33, 100.0, 80.0, 85.71, 85.71, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.81, 98.8, 97.67, 98.78, 98.78, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	80.71%	81.11%	98.65%	84.06%	98.67%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	70.0%	96.0%	67.86%	[97.78, 93.33, 96.67, 97.78, 98.89, 95.56, 94.44, 93.33, 95.56, 94.44, 97.78, 95.56, 98.89, 94.44, 95.56]%	[80.0, 62.5, 76.92, 83.33, 90.91, 66.67, 61.54, 57.14, 60.0, 66.67, 83.33, 60.0, 92.31, 54.55, 50.0]%	[66.67, 83.33, 83.33, 83.33, 83.33, 66.67, 66.67, 66.67, 50.0, 83.33, 83.33, 50.0, 100.0, 50.0, 33.33]%	[100.0, 94.05, 97.62, 98.81, 100.0, 97.62, 96.43, 95.24, 98.81, 95.24, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 50.0, 71.43, 83.33, 100.0, 66.67, 57.14, 50.0, 75.0, 55.56, 83.33, 75.0, 85.71, 60.0, 100.0]%	[97.67, 98.75, 98.8, 98.81, 98.82, 97.62, 97.59, 97.56, 96.51, 98.77, 98.81, 96.51, 100.0, 96.47, 95.45]%	||	69.72%	70.0%	97.86%	74.21%	97.88%	
  4  1  0  1  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		3
  0  1  0  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  4  1  0  0  0  1  0  0  0  66.67%		7
  0  0  1  0  0  0  0  4  0  0  0  0  1  0  0  66.67%		8
  0  3  0  0  0  0  0  0  3  0  0  0  0  0  0  50.0%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  2  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  1  0  0  2  0  0  0  0  0  0  0  3  0  50.0%		14
  0  0  0  0  0  0  0  2  0  0  1  0  0  1  2  33.33%		15
Forest OOB Error: 57.98%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[96.67, 97.78, 98.89, 97.78, 96.67, 97.78, 95.56, 95.56, 97.78, 96.67, 96.67, 98.89, 98.89, 96.67, 100.0]%	[66.67, 85.71, 90.91, 83.33, 76.92, 80.0, 71.43, 71.43, 83.33, 66.67, 72.73, 92.31, 92.31, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 98.81, 97.62, 100.0, 96.43, 96.43, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 83.33, 71.43, 100.0, 62.5, 62.5, 83.33, 100.0, 80.0, 85.71, 85.71, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.81, 98.8, 97.67, 98.78, 98.78, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	80.71%	81.11%	98.65%	84.06%	98.67%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	70.0%	96.0%	67.86%	[97.78, 96.67, 97.78, 97.78, 97.78, 96.67, 91.11, 95.56, 95.56, 95.56, 93.33, 95.56, 93.33, 100.0, 95.56]%	[83.33, 72.73, 83.33, 80.0, 83.33, 76.92, 33.33, 71.43, 71.43, 66.67, 62.5, 66.67, 40.0, 100.0, 50.0]%	[83.33, 66.67, 83.33, 66.67, 83.33, 83.33, 33.33, 83.33, 83.33, 66.67, 83.33, 66.67, 33.33, 100.0, 33.33]%	[98.81, 98.81, 98.81, 100.0, 98.81, 97.62, 95.24, 96.43, 96.43, 97.62, 94.05, 97.62, 97.62, 100.0, 100.0]%	[83.33, 80.0, 83.33, 100.0, 83.33, 71.43, 33.33, 62.5, 62.5, 66.67, 50.0, 66.67, 50.0, 100.0, 100.0]%	[98.81, 97.65, 98.81, 97.67, 98.81, 98.8, 95.24, 98.78, 98.78, 97.62, 98.75, 97.62, 95.35, 100.0, 95.45]%	||	69.44%	70.0%	97.86%	72.87%	97.88%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  4  0  0  1  0  0  0  1  0  0  0  0  0  0  66.67%		2
  0  0  5  0  0  0  0  1  0  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  1  0  0  1  0  0  0  0  0  0  66.67%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  1  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  2  0  1  0  0  2  0  0  0  33.33%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  33.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  2  0  0  1  0  1  0  2  33.33%		15
Forest OOB Error: 60.08%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[96.67, 97.78, 98.89, 97.78, 96.67, 97.78, 95.56, 95.56, 97.78, 96.67, 96.67, 98.89, 98.89, 96.67, 100.0]%	[66.67, 85.71, 90.91, 83.33, 76.92, 80.0, 71.43, 71.43, 83.33, 66.67, 72.73, 92.31, 92.31, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 98.81, 97.62, 100.0, 96.43, 96.43, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 83.33, 71.43, 100.0, 62.5, 62.5, 83.33, 100.0, 80.0, 85.71, 85.71, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.81, 98.8, 97.67, 98.78, 98.78, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	80.71%	81.11%	98.65%	84.06%	98.67%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[97.78, 98.89, 96.67, 96.67, 95.56, 96.67, 95.56, 95.56, 97.78, 97.78, 96.67, 97.78, 94.44, 97.78, 97.78]%	[80.0, 92.31, 76.92, 80.0, 50.0, 72.73, 71.43, 66.67, 83.33, 85.71, 76.92, 80.0, 54.55, 85.71, 80.0]%	[66.67, 100.0, 83.33, 100.0, 33.33, 66.67, 83.33, 66.67, 83.33, 100.0, 83.33, 66.67, 50.0, 100.0, 66.67]%	[100.0, 98.81, 97.62, 96.43, 100.0, 98.81, 96.43, 97.62, 98.81, 97.62, 97.62, 100.0, 97.62, 97.62, 100.0]%	[100.0, 85.71, 71.43, 66.67, 100.0, 80.0, 62.5, 66.67, 83.33, 75.0, 71.43, 100.0, 60.0, 75.0, 100.0]%	[97.67, 100.0, 98.8, 100.0, 95.45, 97.65, 98.78, 97.62, 98.81, 100.0, 98.8, 97.67, 96.47, 100.0, 97.67]%	||	75.75%	76.67%	98.33%	79.85%	98.36%	
  4  1  0  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  0  0  1  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  1  2  0  2  1  0  0  0  0  0  0  0  33.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  4  0  0  0  0  1  0  0  66.67%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  1  0  0  0  0  0  0  2  0  3  0  0  50.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  1  4  66.67%		15
Forest OOB Error: 50.4%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[96.67, 97.78, 98.89, 97.78, 96.67, 97.78, 95.56, 95.56, 97.78, 96.67, 96.67, 98.89, 98.89, 96.67, 100.0]%	[66.67, 85.71, 90.91, 83.33, 76.92, 80.0, 71.43, 71.43, 83.33, 66.67, 72.73, 92.31, 92.31, 76.92, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 100.0]%	[100.0, 97.62, 100.0, 98.81, 97.62, 100.0, 96.43, 96.43, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 83.33, 71.43, 100.0, 62.5, 62.5, 83.33, 100.0, 80.0, 85.71, 85.71, 71.43, 100.0]%	[96.55, 100.0, 98.82, 98.81, 98.8, 97.67, 98.78, 98.78, 98.81, 96.55, 97.65, 100.0, 100.0, 98.8, 100.0]%	||	80.71%	81.11%	98.65%	84.06%	98.67%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	68.89%	95.85%	66.67%	[97.78, 91.11, 98.89, 96.67, 96.67, 96.67, 93.33, 93.33, 96.67, 92.22, 96.67, 96.67, 98.89, 96.67, 95.56]%	[80.0, 42.86, 90.91, 72.73, 72.73, 72.73, 66.67, 50.0, 80.0, 46.15, 76.92, 66.67, 90.91, 76.92, 50.0]%	[66.67, 50.0, 83.33, 66.67, 66.67, 66.67, 100.0, 50.0, 100.0, 50.0, 83.33, 50.0, 83.33, 83.33, 33.33]%	[100.0, 94.05, 100.0, 98.81, 98.81, 98.81, 92.86, 96.43, 96.43, 95.24, 97.62, 100.0, 100.0, 97.62, 100.0]%	[100.0, 37.5, 100.0, 80.0, 80.0, 80.0, 50.0, 50.0, 66.67, 42.86, 71.43, 100.0, 100.0, 71.43, 100.0]%	[97.67, 96.34, 98.82, 97.65, 97.65, 97.65, 100.0, 96.43, 100.0, 96.39, 98.8, 96.55, 98.82, 98.8, 95.45]%	||	69.08%	68.89%	97.78%	75.33%	97.8%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  3  0  0  0  0  2  0  1  0  0  0  0  0  0  50.0%		2
  0  0  5  1  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  4  0  1  0  0  1  0  0  0  0  0  66.67%		5
  0  1  0  0  1  4  0  0  0  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  3  2  0  1  0  0  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  2  0  0  0  0  1  0  0  3  0  0  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  2  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  1  0  0  2  2  33.33%		15
Forest OOB Error: 58.87%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67, 98.89, 98.89, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 80.0, 76.92, 83.33, 66.67, 72.73, 92.31, 92.31, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 66.67, 71.43, 83.33, 100.0, 80.0, 85.71, 85.71, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 100.0, 98.8, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	82.74%	83.33%	98.81%	86.29%	98.83%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	66.67%	95.56%	64.29%	[95.56, 96.67, 95.56, 97.78, 98.89, 96.67, 91.11, 95.56, 94.44, 93.33, 95.56, 95.56, 94.44, 95.56, 96.67]%	[50.0, 76.92, 71.43, 80.0, 90.91, 76.92, 55.56, 66.67, 66.67, 25.0, 60.0, 60.0, 66.67, 71.43, 66.67]%	[33.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 66.67, 83.33, 16.67, 50.0, 50.0, 83.33, 83.33, 50.0]%	[100.0, 97.62, 96.43, 100.0, 100.0, 97.62, 91.67, 97.62, 95.24, 98.81, 98.81, 98.81, 95.24, 96.43, 100.0]%	[100.0, 71.43, 62.5, 100.0, 100.0, 71.43, 41.67, 66.67, 55.56, 50.0, 75.0, 75.0, 55.56, 62.5, 100.0]%	[95.45, 98.8, 98.78, 97.67, 98.82, 98.8, 98.72, 97.62, 98.77, 94.32, 96.51, 96.51, 98.77, 98.78, 96.55]%	||	65.66%	66.67%	97.62%	72.49%	97.66%	
  2  2  0  0  0  0  0  0  2  0  0  0  0  0  0  33.33%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  0  0  0  0  1  0  0  83.33%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  0  0  0  0  1  0  83.33%		7
  0  0  1  0  0  0  1  4  0  0  0  0  0  0  0  66.67%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  3  0  0  1  0  1  0  1  0  16.67%		10
  0  0  0  0  0  0  0  1  0  0  3  0  2  0  0  50.0%		11
  0  0  0  0  0  0  2  0  0  1  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  0  0  1  1  3  50.0%		15
Forest OOB Error: 55.34%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67, 98.89, 98.89, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 80.0, 76.92, 83.33, 66.67, 72.73, 92.31, 92.31, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 66.67, 71.43, 83.33, 100.0, 80.0, 85.71, 85.71, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 100.0, 98.8, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	82.74%	83.33%	98.81%	86.29%	98.83%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[98.89, 97.78, 98.89, 97.78, 98.89, 97.78, 94.44, 95.56, 96.67, 94.44, 95.56, 97.78, 93.33, 98.89, 98.89]%	[90.91, 83.33, 90.91, 83.33, 90.91, 83.33, 61.54, 66.67, 76.92, 66.67, 60.0, 80.0, 57.14, 90.91, 92.31]%	[83.33, 83.33, 83.33, 83.33, 83.33, 83.33, 66.67, 66.67, 83.33, 83.33, 50.0, 66.67, 66.67, 83.33, 100.0]%	[100.0, 98.81, 100.0, 98.81, 100.0, 98.81, 96.43, 97.62, 97.62, 95.24, 98.81, 100.0, 95.24, 100.0, 98.81]%	[100.0, 83.33, 100.0, 83.33, 100.0, 83.33, 57.14, 66.67, 71.43, 55.56, 75.0, 100.0, 50.0, 100.0, 85.71]%	[98.82, 98.81, 98.82, 98.81, 98.82, 98.81, 97.59, 97.62, 98.8, 98.77, 96.51, 97.67, 97.56, 98.82, 100.0]%	||	78.33%	77.78%	98.41%	80.77%	98.42%	
  5  0  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  0  0  0  0  1  0  0  83.33%		3
  0  1  0  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  1  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  4  0  0  2  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  0  0  0  0  1  0  1  66.67%		8
  0  0  0  1  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  3  0  2  0  0  50.0%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 51.21%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67, 98.89, 98.89, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 80.0, 76.92, 83.33, 66.67, 72.73, 92.31, 92.31, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 66.67, 71.43, 83.33, 100.0, 80.0, 85.71, 85.71, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 100.0, 98.8, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	82.74%	83.33%	98.81%	86.29%	98.83%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	71.11%	96.15%	69.05%	[98.89, 96.67, 94.44, 97.78, 98.89, 96.67, 93.33, 92.22, 96.67, 92.22, 96.67, 94.44, 97.78, 98.89, 96.67]%	[90.91, 80.0, 54.55, 83.33, 90.91, 76.92, 57.14, 36.36, 72.73, 46.15, 76.92, 54.55, 80.0, 90.91, 76.92]%	[83.33, 100.0, 50.0, 83.33, 83.33, 83.33, 66.67, 33.33, 66.67, 50.0, 83.33, 50.0, 66.67, 83.33, 83.33]%	[100.0, 96.43, 97.62, 98.81, 100.0, 97.62, 95.24, 96.43, 98.81, 95.24, 97.62, 97.62, 100.0, 100.0, 97.62]%	[100.0, 66.67, 60.0, 83.33, 100.0, 71.43, 50.0, 40.0, 80.0, 42.86, 71.43, 60.0, 100.0, 100.0, 71.43]%	[98.82, 100.0, 96.47, 98.81, 98.82, 98.8, 97.56, 95.29, 97.65, 96.39, 98.8, 96.47, 97.67, 98.82, 98.8]%	||	71.22%	71.11%	97.94%	73.14%	97.94%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  3  0  0  1  0  0  1  1  0  0  0  0  0  50.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  1  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  0  0  1  0  0  0  0  0  66.67%		7
  0  0  2  0  0  0  0  2  0  0  1  0  0  0  1  33.33%		8
  0  1  0  0  0  0  1  0  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  1  0  0  3  0  2  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  2  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  5  1  83.33%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 55.81%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67, 98.89, 98.89, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 80.0, 76.92, 83.33, 66.67, 72.73, 92.31, 92.31, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 66.67, 71.43, 83.33, 100.0, 80.0, 85.71, 85.71, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 100.0, 98.8, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	82.74%	83.33%	98.81%	86.29%	98.83%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	68.89%	95.85%	66.67%	[96.67, 96.67, 96.67, 97.78, 96.67, 95.56, 91.11, 95.56, 96.67, 93.33, 95.56, 96.67, 97.78, 97.78, 93.33]%	[72.73, 80.0, 76.92, 80.0, 66.67, 71.43, 42.86, 60.0, 76.92, 50.0, 66.67, 66.67, 83.33, 80.0, 62.5]%	[66.67, 100.0, 83.33, 66.67, 50.0, 83.33, 50.0, 50.0, 83.33, 50.0, 66.67, 50.0, 83.33, 66.67, 83.33]%	[98.81, 96.43, 97.62, 100.0, 100.0, 96.43, 94.05, 98.81, 97.62, 96.43, 97.62, 100.0, 98.81, 100.0, 94.05]%	[80.0, 66.67, 71.43, 100.0, 100.0, 62.5, 37.5, 75.0, 71.43, 50.0, 66.67, 100.0, 83.33, 100.0, 50.0]%	[97.65, 100.0, 98.8, 97.67, 96.55, 98.78, 96.34, 96.51, 98.8, 96.43, 97.62, 96.55, 98.81, 97.67, 98.75]%	||	69.11%	68.89%	97.78%	74.3%	97.8%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  2  0  3  0  1  0  0  0  0  0  0  0  0  50.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  1  3  0  0  1  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  3  0  0  1  0  0  0  2  50.0%		8
  0  0  0  0  0  0  0  0  5  0  0  0  0  0  1  83.33%		9
  0  1  0  0  0  0  2  0  0  3  0  0  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  2  0  3  0  0  1  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  4  1  66.67%		14
  0  0  0  0  0  0  1  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 52.17%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67, 98.89, 98.89, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 80.0, 76.92, 83.33, 66.67, 72.73, 92.31, 92.31, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 66.67, 71.43, 83.33, 100.0, 80.0, 85.71, 85.71, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 100.0, 98.8, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	82.74%	83.33%	98.81%	86.29%	98.83%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	70.0%	96.0%	67.86%	[95.56, 97.78, 98.89, 96.67, 97.78, 93.33, 88.89, 94.44, 97.78, 93.33, 97.78, 96.67, 98.89, 95.56, 96.67]%	[66.67, 85.71, 90.91, 72.73, 80.0, 57.14, 37.5, 54.55, 85.71, 40.0, 83.33, 66.67, 92.31, 71.43, 66.67]%	[66.67, 100.0, 83.33, 66.67, 66.67, 66.67, 50.0, 50.0, 100.0, 33.33, 83.33, 50.0, 100.0, 83.33, 50.0]%	[97.62, 97.62, 100.0, 98.81, 100.0, 95.24, 91.67, 97.62, 97.62, 97.62, 98.81, 100.0, 98.81, 96.43, 100.0]%	[66.67, 75.0, 100.0, 80.0, 100.0, 50.0, 30.0, 60.0, 75.0, 50.0, 83.33, 100.0, 85.71, 62.5, 100.0]%	[97.62, 100.0, 98.82, 97.65, 97.67, 97.56, 96.25, 96.47, 100.0, 95.35, 98.81, 96.55, 100.0, 98.78, 96.55]%	||	70.09%	70.0%	97.86%	74.55%	97.87%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  1  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  4  0  1  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  4  0  0  0  1  0  0  0  1  0  66.67%		6
  1  0  0  0  0  0  3  1  1  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  3  1  0  1  0  1  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  1  0  0  0  0  0  3  0  0  2  0  0  0  0  0  33.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  0  1  0  83.33%		11
  0  0  0  0  0  0  2  0  0  1  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  2  0  1  0  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 63.56%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67, 98.89, 98.89, 97.78, 100.0]%	[66.67, 85.71, 90.91, 90.91, 76.92, 80.0, 80.0, 76.92, 83.33, 66.67, 72.73, 92.31, 92.31, 85.71, 100.0]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 96.43, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 71.43, 100.0, 66.67, 71.43, 83.33, 100.0, 80.0, 85.71, 85.71, 75.0, 100.0]%	[96.55, 100.0, 98.82, 98.82, 98.8, 97.67, 100.0, 98.8, 98.81, 96.55, 97.65, 100.0, 100.0, 100.0, 100.0]%	||	82.74%	83.33%	98.81%	86.29%	98.83%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[95.56, 96.67, 94.44, 95.56, 97.78, 94.44, 95.56, 93.33, 98.89, 94.44, 98.89, 93.33, 98.89, 98.89, 97.78]%	[71.43, 66.67, 54.55, 66.67, 83.33, 54.55, 71.43, 50.0, 92.31, 66.67, 90.91, 50.0, 90.91, 92.31, 80.0]%	[83.33, 50.0, 50.0, 66.67, 83.33, 50.0, 83.33, 50.0, 100.0, 83.33, 83.33, 50.0, 83.33, 100.0, 66.67]%	[96.43, 100.0, 97.62, 97.62, 98.81, 97.62, 96.43, 96.43, 98.81, 95.24, 100.0, 96.43, 100.0, 98.81, 100.0]%	[62.5, 100.0, 60.0, 66.67, 83.33, 60.0, 62.5, 50.0, 85.71, 55.56, 100.0, 50.0, 100.0, 85.71, 100.0]%	[98.78, 96.55, 96.47, 97.62, 98.81, 96.47, 98.78, 96.43, 100.0, 98.77, 98.82, 96.43, 98.82, 100.0, 97.67]%	||	72.11%	72.22%	98.02%	74.8%	98.03%	
  5  0  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		1
  1  3  0  0  0  0  0  0  0  1  0  0  0  1  0  50.0%		2
  2  0  3  0  0  0  0  0  0  0  0  1  0  0  0  50.0%		3
  0  0  0  4  0  1  0  0  0  0  0  1  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  2  0  3  0  0  1  0  0  0  0  0  0  50.0%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  2  0  0  0  0  3  0  1  0  0  0  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  2  0  0  1  0  3  0  0  0  50.0%		12
  0  0  0  0  1  0  0  0  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  2  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 53.78%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[97.78, 97.78, 100.0, 96.67, 97.78, 96.67, 98.89, 94.44, 97.78, 96.67, 95.56, 98.89, 97.78, 97.78, 100.0]%	[80.0, 85.71, 100.0, 80.0, 83.33, 76.92, 90.91, 61.54, 83.33, 66.67, 71.43, 92.31, 80.0, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 66.67, 100.0]%	[100.0, 97.62, 100.0, 96.43, 98.81, 97.62, 100.0, 96.43, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 66.67, 83.33, 71.43, 100.0, 57.14, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.59, 98.81, 96.55, 98.78, 100.0, 97.67, 97.67, 100.0]%	||	82.14%	82.22%	98.73%	85.67%	98.75%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[95.56, 96.67, 98.89, 98.89, 94.44, 95.56, 95.56, 96.67, 98.89, 98.89, 97.78, 95.56, 96.67, 95.56, 95.56]%	[71.43, 72.73, 90.91, 90.91, 61.54, 60.0, 66.67, 66.67, 92.31, 90.91, 83.33, 71.43, 76.92, 71.43, 66.67]%	[83.33, 66.67, 83.33, 83.33, 66.67, 50.0, 66.67, 50.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 66.67]%	[96.43, 98.81, 100.0, 100.0, 96.43, 98.81, 97.62, 100.0, 98.81, 100.0, 98.81, 96.43, 97.62, 96.43, 97.62]%	[62.5, 80.0, 100.0, 100.0, 57.14, 75.0, 66.67, 100.0, 85.71, 100.0, 83.33, 62.5, 71.43, 62.5, 66.67]%	[98.78, 97.65, 98.82, 98.82, 97.59, 96.51, 97.62, 96.55, 100.0, 98.82, 98.81, 98.78, 98.8, 98.78, 97.62]%	||	75.59%	75.56%	98.25%	78.23%	98.26%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  1  4  0  0  0  0  1  0  0  0  0  0  0  0  0  66.67%		2
  1  0  5  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  4  0  1  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  1  3  0  0  1  0  0  0  0  1  0  50.0%		6
  0  0  0  0  0  0  4  0  0  0  0  2  0  0  0  66.67%		7
  0  0  0  0  1  0  0  3  0  0  0  0  1  0  1  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  1  0  0  0  0  0  0  0  0  5  0  83.33%		14
  1  0  0  0  0  0  0  0  0  0  0  0  0  1  4  66.67%		15
Forest OOB Error: 51.33%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[97.78, 97.78, 100.0, 96.67, 97.78, 96.67, 98.89, 94.44, 97.78, 96.67, 95.56, 98.89, 97.78, 97.78, 100.0]%	[80.0, 85.71, 100.0, 80.0, 83.33, 76.92, 90.91, 61.54, 83.33, 66.67, 71.43, 92.31, 80.0, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 66.67, 100.0]%	[100.0, 97.62, 100.0, 96.43, 98.81, 97.62, 100.0, 96.43, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 66.67, 83.33, 71.43, 100.0, 57.14, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.59, 98.81, 96.55, 98.78, 100.0, 97.67, 97.67, 100.0]%	||	82.14%	82.22%	98.73%	85.67%	98.75%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[97.78, 97.78, 96.67, 97.78, 98.89, 96.67, 96.67, 96.67, 97.78, 96.67, 96.67, 96.67, 98.89, 98.89, 97.78]%	[80.0, 85.71, 76.92, 85.71, 90.91, 72.73, 72.73, 72.73, 83.33, 76.92, 76.92, 72.73, 90.91, 92.31, 83.33]%	[66.67, 100.0, 83.33, 100.0, 83.33, 66.67, 66.67, 66.67, 83.33, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 97.62, 97.62, 97.62, 100.0, 98.81, 98.81, 98.81, 98.81, 97.62, 97.62, 98.81, 100.0, 98.81, 98.81]%	[100.0, 75.0, 71.43, 75.0, 100.0, 80.0, 80.0, 80.0, 83.33, 71.43, 71.43, 80.0, 100.0, 85.71, 83.33]%	[97.67, 100.0, 98.8, 100.0, 98.82, 97.65, 97.65, 97.65, 98.81, 98.8, 98.8, 97.65, 98.82, 100.0, 98.81]%	||	80.93%	81.11%	98.65%	82.44%	98.66%	
  4  1  0  1  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  1  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  1  0  0  0  1  4  0  0  0  0  0  0  0  0  66.67%		7
  0  0  1  0  0  0  0  4  0  0  0  0  0  0  1  66.67%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 54.58%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[97.78, 97.78, 100.0, 96.67, 97.78, 96.67, 98.89, 94.44, 97.78, 96.67, 95.56, 98.89, 97.78, 97.78, 100.0]%	[80.0, 85.71, 100.0, 80.0, 83.33, 76.92, 90.91, 61.54, 83.33, 66.67, 71.43, 92.31, 80.0, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 66.67, 100.0]%	[100.0, 97.62, 100.0, 96.43, 98.81, 97.62, 100.0, 96.43, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 66.67, 83.33, 71.43, 100.0, 57.14, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.59, 98.81, 96.55, 98.78, 100.0, 97.67, 97.67, 100.0]%	||	82.14%	82.22%	98.73%	85.67%	98.75%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	70.0%	96.0%	67.86%	[96.67, 97.78, 97.78, 96.67, 98.89, 98.89, 88.89, 93.33, 98.89, 90.0, 93.33, 96.67, 95.56, 98.89, 97.78]%	[72.73, 83.33, 83.33, 72.73, 90.91, 90.91, 37.5, 40.0, 92.31, 47.06, 57.14, 66.67, 50.0, 92.31, 83.33]%	[66.67, 83.33, 83.33, 66.67, 83.33, 83.33, 50.0, 33.33, 100.0, 66.67, 66.67, 50.0, 33.33, 100.0, 83.33]%	[98.81, 98.81, 98.81, 98.81, 100.0, 100.0, 91.67, 97.62, 98.81, 91.67, 95.24, 100.0, 100.0, 98.81, 98.81]%	[80.0, 83.33, 83.33, 80.0, 100.0, 100.0, 30.0, 50.0, 85.71, 36.36, 50.0, 100.0, 100.0, 85.71, 83.33]%	[97.65, 98.81, 98.81, 97.65, 98.82, 98.82, 96.25, 95.35, 100.0, 97.47, 97.56, 96.55, 95.45, 100.0, 98.81]%	||	70.68%	70.0%	97.86%	76.52%	97.87%	
  4  1  0  0  0  0  1  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  0  0  0  0  0  1  0  0  1  0  66.67%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  3  0  0  3  0  0  0  0  0  50.0%		7
  0  0  1  1  0  0  1  2  0  0  0  0  0  0  1  33.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  2  0  0  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  1  1  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  3  0  3  0  0  0  50.0%		12
  1  0  0  0  0  0  0  0  0  0  3  0  2  0  0  33.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 51.85%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[97.78, 97.78, 100.0, 96.67, 97.78, 96.67, 98.89, 94.44, 97.78, 96.67, 95.56, 98.89, 97.78, 97.78, 100.0]%	[80.0, 85.71, 100.0, 80.0, 83.33, 76.92, 90.91, 61.54, 83.33, 66.67, 71.43, 92.31, 80.0, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 66.67, 100.0]%	[100.0, 97.62, 100.0, 96.43, 98.81, 97.62, 100.0, 96.43, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 66.67, 83.33, 71.43, 100.0, 57.14, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.59, 98.81, 96.55, 98.78, 100.0, 97.67, 97.67, 100.0]%	||	82.14%	82.22%	98.73%	85.67%	98.75%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[96.67, 97.78, 96.67, 96.67, 98.89, 96.67, 95.56, 93.33, 96.67, 93.33, 95.56, 94.44, 96.67, 98.89, 96.67]%	[72.73, 85.71, 76.92, 72.73, 90.91, 72.73, 66.67, 57.14, 76.92, 57.14, 66.67, 54.55, 72.73, 92.31, 66.67]%	[66.67, 100.0, 83.33, 66.67, 83.33, 66.67, 66.67, 66.67, 83.33, 66.67, 66.67, 50.0, 66.67, 100.0, 50.0]%	[98.81, 97.62, 97.62, 98.81, 100.0, 98.81, 97.62, 95.24, 97.62, 95.24, 97.62, 97.62, 98.81, 98.81, 100.0]%	[80.0, 75.0, 71.43, 80.0, 100.0, 80.0, 66.67, 50.0, 71.43, 50.0, 66.67, 60.0, 80.0, 85.71, 100.0]%	[97.65, 100.0, 98.8, 97.65, 98.82, 97.65, 97.62, 97.56, 98.8, 97.56, 97.62, 96.47, 97.65, 100.0, 96.55]%	||	72.17%	72.22%	98.02%	74.46%	98.03%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  1  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  4  2  0  0  0  0  0  0  0  66.67%		7
  0  0  2  0  0  0  0  4  0  0  0  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  5  0  1  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  4  0  2  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  2  0  3  0  0  0  50.0%		12
  1  0  0  0  0  0  0  0  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  1  0  0  0  1  3  50.0%		15
Forest OOB Error: 50.0%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[97.78, 97.78, 100.0, 96.67, 97.78, 96.67, 98.89, 94.44, 97.78, 96.67, 95.56, 98.89, 97.78, 97.78, 100.0]%	[80.0, 85.71, 100.0, 80.0, 83.33, 76.92, 90.91, 61.54, 83.33, 66.67, 71.43, 92.31, 80.0, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 66.67, 100.0]%	[100.0, 97.62, 100.0, 96.43, 98.81, 97.62, 100.0, 96.43, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 66.67, 83.33, 71.43, 100.0, 57.14, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.59, 98.81, 96.55, 98.78, 100.0, 97.67, 97.67, 100.0]%	||	82.14%	82.22%	98.73%	85.67%	98.75%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[96.67, 94.44, 100.0, 97.78, 100.0, 95.56, 92.22, 94.44, 94.44, 94.44, 96.67, 96.67, 96.67, 98.89, 97.78]%	[72.73, 70.59, 100.0, 83.33, 100.0, 66.67, 46.15, 61.54, 54.55, 44.44, 66.67, 76.92, 76.92, 92.31, 80.0]%	[66.67, 100.0, 100.0, 83.33, 100.0, 66.67, 50.0, 66.67, 50.0, 33.33, 50.0, 83.33, 83.33, 100.0, 66.67]%	[98.81, 94.05, 100.0, 98.81, 100.0, 97.62, 95.24, 96.43, 97.62, 98.81, 100.0, 97.62, 97.62, 98.81, 100.0]%	[80.0, 54.55, 100.0, 83.33, 100.0, 66.67, 42.86, 57.14, 60.0, 66.67, 100.0, 71.43, 71.43, 85.71, 100.0]%	[97.65, 100.0, 100.0, 98.81, 100.0, 97.62, 96.39, 97.59, 96.47, 95.4, 96.55, 98.8, 98.8, 100.0, 97.67]%	||	72.85%	73.33%	98.1%	75.99%	98.12%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  1  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  1  3  1  0  0  0  1  0  0  0  50.0%		7
  0  0  0  0  0  0  1  4  1  0  0  0  0  0  0  66.67%		8
  0  3  0  0  0  0  0  0  3  0  0  0  0  0  0  50.0%		9
  0  0  0  0  0  0  3  0  0  2  0  1  0  0  0  33.33%		10
  0  0  0  0  0  0  0  1  0  0  3  0  2  0  0  50.0%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  1  0  0  0  0  0  0  0  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  1  4  66.67%		15
Forest OOB Error: 53.97%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[97.78, 97.78, 100.0, 96.67, 97.78, 96.67, 98.89, 94.44, 97.78, 96.67, 95.56, 98.89, 97.78, 97.78, 100.0]%	[80.0, 85.71, 100.0, 80.0, 83.33, 76.92, 90.91, 61.54, 83.33, 66.67, 71.43, 92.31, 80.0, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 66.67, 100.0]%	[100.0, 97.62, 100.0, 96.43, 98.81, 97.62, 100.0, 96.43, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 66.67, 83.33, 71.43, 100.0, 57.14, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.59, 98.81, 96.55, 98.78, 100.0, 97.67, 97.67, 100.0]%	||	82.14%	82.22%	98.73%	85.67%	98.75%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[96.67, 95.56, 95.56, 95.56, 98.89, 95.56, 94.44, 95.56, 100.0, 95.56, 93.33, 97.78, 96.67, 96.67, 96.67]%	[76.92, 71.43, 60.0, 66.67, 90.91, 71.43, 54.55, 66.67, 100.0, 71.43, 57.14, 80.0, 72.73, 76.92, 66.67]%	[83.33, 83.33, 50.0, 66.67, 83.33, 83.33, 50.0, 66.67, 100.0, 83.33, 66.67, 66.67, 66.67, 83.33, 50.0]%	[97.62, 96.43, 98.81, 97.62, 100.0, 96.43, 97.62, 97.62, 100.0, 96.43, 95.24, 100.0, 98.81, 97.62, 100.0]%	[71.43, 62.5, 75.0, 66.67, 100.0, 62.5, 60.0, 66.67, 100.0, 62.5, 50.0, 100.0, 80.0, 71.43, 100.0]%	[98.8, 98.78, 96.51, 97.62, 98.82, 98.78, 96.47, 97.62, 100.0, 98.78, 97.56, 97.67, 97.65, 98.8, 96.55]%	||	72.23%	72.22%	98.02%	75.25%	98.03%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		2
  1  0  3  0  0  1  0  0  0  0  0  0  0  1  0  50.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  1  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  1  0  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  1  0  0  3  0  0  1  0  0  0  1  0  50.0%		7
  0  0  1  0  0  0  0  4  0  0  1  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  1  0  0  0  0  0  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  1  0  0  0  0  0  0  1  0  0  1  0  0  0  3  50.0%		15
Forest OOB Error: 58.44%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[96.67, 97.78, 100.0, 97.78, 97.78, 96.67, 97.78, 94.44, 97.78, 95.56, 95.56, 97.78, 97.78, 98.89, 100.0]%	[66.67, 85.71, 100.0, 85.71, 83.33, 76.92, 83.33, 61.54, 83.33, 50.0, 71.43, 85.71, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 33.33, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0, 96.43, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 75.0, 83.33, 71.43, 83.33, 57.14, 83.33, 100.0, 62.5, 75.0, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.81, 97.59, 98.81, 95.45, 98.78, 100.0, 97.67, 98.82, 100.0]%	||	80.31%	81.11%	98.65%	84.4%	98.67%	
  3  2  0  0  0  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  2  0  2  0  0  0  33.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[98.89, 97.78, 96.67, 100.0, 97.78, 96.67, 94.44, 95.56, 96.67, 97.78, 97.78, 97.78, 97.78, 97.78, 96.67]%	[92.31, 83.33, 72.73, 100.0, 83.33, 76.92, 54.55, 71.43, 76.92, 85.71, 83.33, 80.0, 83.33, 80.0, 72.73]%	[100.0, 83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 83.33, 83.33, 100.0, 83.33, 66.67, 83.33, 66.67, 66.67]%	[98.81, 98.81, 98.81, 100.0, 98.81, 97.62, 97.62, 96.43, 97.62, 97.62, 98.81, 100.0, 98.81, 100.0, 98.81]%	[85.71, 83.33, 80.0, 100.0, 83.33, 71.43, 60.0, 62.5, 71.43, 75.0, 83.33, 100.0, 83.33, 100.0, 80.0]%	[100.0, 98.81, 97.65, 100.0, 98.81, 98.8, 96.47, 98.78, 98.8, 100.0, 98.81, 97.67, 98.81, 97.67, 97.65]%	||	79.78%	80.0%	98.57%	81.29%	98.58%	
  6  0  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  1  0  4  0  0  0  1  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  2  3  0  0  0  0  0  0  0  1  50.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  1  0  0  0  0  1  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  2  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 51.89%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[96.67, 97.78, 100.0, 97.78, 97.78, 96.67, 97.78, 94.44, 97.78, 95.56, 95.56, 97.78, 97.78, 98.89, 100.0]%	[66.67, 85.71, 100.0, 85.71, 83.33, 76.92, 83.33, 61.54, 83.33, 50.0, 71.43, 85.71, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 33.33, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0, 96.43, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 75.0, 83.33, 71.43, 83.33, 57.14, 83.33, 100.0, 62.5, 75.0, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.81, 97.59, 98.81, 95.45, 98.78, 100.0, 97.67, 98.82, 100.0]%	||	80.31%	81.11%	98.65%	84.4%	98.67%	
  3  2  0  0  0  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  2  0  2  0  0  0  33.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[97.78, 98.89, 97.78, 98.89, 100.0, 98.89, 97.78, 95.56, 95.56, 95.56, 95.56, 96.67, 96.67, 100.0, 96.67]%	[80.0, 92.31, 83.33, 92.31, 100.0, 90.91, 83.33, 66.67, 71.43, 66.67, 66.67, 72.73, 72.73, 100.0, 76.92]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 66.67, 66.67, 66.67, 100.0, 83.33]%	[100.0, 98.81, 98.81, 98.81, 100.0, 100.0, 98.81, 97.62, 96.43, 97.62, 97.62, 98.81, 98.81, 100.0, 97.62]%	[100.0, 85.71, 83.33, 85.71, 100.0, 100.0, 83.33, 66.67, 62.5, 66.67, 66.67, 80.0, 80.0, 100.0, 71.43]%	[97.67, 100.0, 98.81, 100.0, 100.0, 98.82, 98.81, 97.62, 98.78, 97.62, 97.62, 97.65, 97.65, 100.0, 98.8]%	||	81.07%	81.11%	98.65%	82.13%	98.66%	
  4  1  0  0  0  0  0  0  1  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  1  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  1  4  0  0  0  0  0  0  1  66.67%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  1  4  0  1  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  1  0  0  0  0  5  83.33%		15
Forest OOB Error: 47.27%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[96.67, 97.78, 100.0, 97.78, 97.78, 96.67, 97.78, 94.44, 97.78, 95.56, 95.56, 97.78, 97.78, 98.89, 100.0]%	[66.67, 85.71, 100.0, 85.71, 83.33, 76.92, 83.33, 61.54, 83.33, 50.0, 71.43, 85.71, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 33.33, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0, 96.43, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 75.0, 83.33, 71.43, 83.33, 57.14, 83.33, 100.0, 62.5, 75.0, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.81, 97.59, 98.81, 95.45, 98.78, 100.0, 97.67, 98.82, 100.0]%	||	80.31%	81.11%	98.65%	84.4%	98.67%	
  3  2  0  0  0  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  2  0  2  0  0  0  33.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[97.78, 96.67, 96.67, 95.56, 97.78, 96.67, 94.44, 95.56, 98.89, 96.67, 97.78, 96.67, 97.78, 97.78, 98.89]%	[80.0, 80.0, 80.0, 60.0, 80.0, 76.92, 70.59, 60.0, 92.31, 72.73, 83.33, 72.73, 80.0, 83.33, 90.91]%	[66.67, 100.0, 100.0, 50.0, 66.67, 83.33, 100.0, 50.0, 100.0, 66.67, 83.33, 66.67, 66.67, 83.33, 83.33]%	[100.0, 96.43, 96.43, 98.81, 100.0, 97.62, 94.05, 98.81, 98.81, 98.81, 98.81, 98.81, 100.0, 98.81, 100.0]%	[100.0, 66.67, 66.67, 75.0, 100.0, 71.43, 54.55, 75.0, 85.71, 80.0, 83.33, 80.0, 100.0, 83.33, 100.0]%	[97.67, 100.0, 100.0, 96.51, 97.67, 98.8, 100.0, 96.51, 100.0, 97.65, 98.81, 97.65, 97.67, 98.81, 98.82]%	||	77.52%	77.78%	98.41%	81.45%	98.44%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  3  0  1  1  0  0  0  1  0  0  0  0  50.0%		4
  0  0  0  0  4  0  2  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  2  1  0  0  0  3  0  0  0  0  0  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  1  0  0  4  0  1  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  1  1  0  0  0  0  0  0  0  0  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  1  5  83.33%		15
Forest OOB Error: 57.03%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[96.67, 97.78, 100.0, 97.78, 97.78, 96.67, 97.78, 94.44, 97.78, 95.56, 95.56, 97.78, 97.78, 98.89, 100.0]%	[66.67, 85.71, 100.0, 85.71, 83.33, 76.92, 83.33, 61.54, 83.33, 50.0, 71.43, 85.71, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 33.33, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0, 96.43, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 75.0, 83.33, 71.43, 83.33, 57.14, 83.33, 100.0, 62.5, 75.0, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.81, 97.59, 98.81, 95.45, 98.78, 100.0, 97.67, 98.82, 100.0]%	||	80.31%	81.11%	98.65%	84.4%	98.67%	
  3  2  0  0  0  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  2  0  2  0  0  0  33.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	70.0%	96.0%	67.86%	[95.56, 98.89, 97.78, 96.67, 98.89, 95.56, 92.22, 93.33, 98.89, 91.11, 96.67, 97.78, 95.56, 96.67, 94.44]%	[60.0, 92.31, 83.33, 72.73, 90.91, 66.67, 46.15, 50.0, 92.31, 42.86, 72.73, 80.0, 75.0, 76.92, 44.44]%	[50.0, 100.0, 83.33, 66.67, 83.33, 66.67, 50.0, 50.0, 100.0, 50.0, 66.67, 66.67, 100.0, 83.33, 33.33]%	[98.81, 98.81, 98.81, 98.81, 100.0, 97.62, 95.24, 96.43, 98.81, 94.05, 98.81, 100.0, 95.24, 97.62, 98.81]%	[75.0, 85.71, 83.33, 80.0, 100.0, 66.67, 42.86, 50.0, 85.71, 37.5, 80.0, 100.0, 60.0, 71.43, 66.67]%	[96.51, 100.0, 98.81, 97.65, 98.82, 97.62, 96.39, 96.43, 100.0, 96.34, 97.65, 97.67, 100.0, 98.8, 95.4]%	||	69.76%	70.0%	97.86%	72.33%	97.87%	
  3  1  0  1  0  0  0  0  0  1  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  1  0  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  1  0  0  0  0  0  3  0  0  2  0  0  0  0  0  50.0%		7
  0  0  1  0  0  0  0  3  0  0  0  0  2  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  3  0  0  3  0  0  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  2  0  1  1  0  0  0  2  33.33%		15
Forest OOB Error: 48.32%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[96.67, 97.78, 100.0, 97.78, 97.78, 96.67, 97.78, 94.44, 97.78, 95.56, 95.56, 97.78, 97.78, 98.89, 100.0]%	[66.67, 85.71, 100.0, 85.71, 83.33, 76.92, 83.33, 61.54, 83.33, 50.0, 71.43, 85.71, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 33.33, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0, 96.43, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 75.0, 83.33, 71.43, 83.33, 57.14, 83.33, 100.0, 62.5, 75.0, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.81, 97.59, 98.81, 95.45, 98.78, 100.0, 97.67, 98.82, 100.0]%	||	80.31%	81.11%	98.65%	84.4%	98.67%	
  3  2  0  0  0  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  2  0  2  0  0  0  33.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[96.67, 97.78, 95.56, 98.89, 95.56, 95.56, 94.44, 94.44, 96.67, 95.56, 96.67, 95.56, 98.89, 95.56, 98.89]%	[72.73, 85.71, 71.43, 90.91, 66.67, 60.0, 61.54, 54.55, 76.92, 66.67, 72.73, 71.43, 92.31, 60.0, 90.91]%	[66.67, 100.0, 83.33, 83.33, 66.67, 50.0, 66.67, 50.0, 83.33, 66.67, 66.67, 83.33, 100.0, 50.0, 83.33]%	[98.81, 97.62, 96.43, 100.0, 97.62, 98.81, 96.43, 97.62, 97.62, 97.62, 98.81, 96.43, 98.81, 98.81, 100.0]%	[80.0, 75.0, 62.5, 100.0, 66.67, 75.0, 57.14, 60.0, 71.43, 66.67, 80.0, 62.5, 85.71, 75.0, 100.0]%	[97.65, 100.0, 98.78, 98.82, 97.62, 96.51, 97.59, 96.47, 98.8, 97.62, 97.65, 98.78, 100.0, 96.51, 98.82]%	||	72.97%	73.33%	98.1%	74.51%	98.11%	
  4  1  0  0  0  0  0  0  1  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  1  0  0  0  0  0  0  0  83.33%		3
  1  0  0  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  1  0  0  0  0  0  66.67%		5
  0  0  1  0  0  3  0  0  1  0  0  0  0  1  0  50.0%		6
  0  0  0  0  0  0  4  0  0  0  0  2  0  0  0  66.67%		7
  0  0  1  0  0  0  1  3  0  0  1  0  0  0  0  50.0%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  0  4  0  1  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  2  1  0  0  0  0  0  0  0  3  0  50.0%		14
  0  0  0  0  0  0  0  0  0  1  0  0  0  0  5  83.33%		15
Forest OOB Error: 47.01%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[96.67, 97.78, 100.0, 97.78, 97.78, 96.67, 97.78, 94.44, 97.78, 95.56, 95.56, 97.78, 97.78, 98.89, 100.0]%	[66.67, 85.71, 100.0, 85.71, 83.33, 76.92, 83.33, 61.54, 83.33, 50.0, 71.43, 85.71, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 33.33, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0, 96.43, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 75.0, 83.33, 71.43, 83.33, 57.14, 83.33, 100.0, 62.5, 75.0, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.81, 97.59, 98.81, 95.45, 98.78, 100.0, 97.67, 98.82, 100.0]%	||	80.31%	81.11%	98.65%	84.4%	98.67%	
  3  2  0  0  0  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  2  0  2  0  0  0  33.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[95.56, 97.78, 97.78, 95.56, 97.78, 97.78, 92.22, 95.56, 96.67, 94.44, 95.56, 97.78, 95.56, 96.67, 97.78]%	[66.67, 85.71, 83.33, 66.67, 80.0, 83.33, 46.15, 60.0, 76.92, 44.44, 60.0, 83.33, 75.0, 76.92, 83.33]%	[66.67, 100.0, 83.33, 66.67, 66.67, 83.33, 50.0, 50.0, 83.33, 33.33, 50.0, 83.33, 100.0, 83.33, 83.33]%	[97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 95.24, 98.81, 97.62, 98.81, 98.81, 98.81, 95.24, 97.62, 98.81]%	[66.67, 75.0, 83.33, 66.67, 100.0, 83.33, 42.86, 75.0, 71.43, 66.67, 75.0, 83.33, 60.0, 71.43, 83.33]%	[97.62, 100.0, 98.81, 97.62, 97.67, 98.81, 96.39, 96.51, 98.8, 95.4, 96.51, 98.81, 100.0, 98.8, 98.81]%	||	71.46%	72.22%	98.02%	73.6%	98.04%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  0  0  1  0  0  83.33%		3
  1  0  0  4  0  0  0  0  0  0  0  0  0  1  0  66.67%		4
  0  0  0  0  4  1  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  3  0  0  0  0  1  0  0  1  50.0%		7
  0  0  1  0  0  0  0  3  1  0  1  0  0  0  0  50.0%		8
  0  0  0  1  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  4  0  0  2  0  0  0  0  0  33.33%		10
  0  0  0  0  0  0  0  1  0  0  3  0  2  0  0  50.0%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 57.09%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[96.67, 97.78, 100.0, 97.78, 97.78, 96.67, 97.78, 94.44, 97.78, 96.67, 95.56, 98.89, 97.78, 98.89, 100.0]%	[66.67, 85.71, 100.0, 85.71, 83.33, 76.92, 83.33, 61.54, 83.33, 66.67, 71.43, 92.31, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 75.0, 83.33, 71.43, 83.33, 57.14, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.81, 97.59, 98.81, 96.55, 98.78, 100.0, 97.67, 98.82, 100.0]%	||	81.86%	82.22%	98.73%	85.12%	98.75%	
  3  2  0  0  0  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[96.67, 97.78, 97.78, 95.56, 96.67, 95.56, 94.44, 93.33, 94.44, 97.78, 94.44, 98.89, 98.89, 97.78, 96.67]%	[66.67, 83.33, 83.33, 75.0, 66.67, 66.67, 66.67, 50.0, 66.67, 80.0, 61.54, 90.91, 90.91, 83.33, 72.73]%	[50.0, 83.33, 83.33, 100.0, 50.0, 66.67, 83.33, 50.0, 83.33, 66.67, 66.67, 83.33, 83.33, 83.33, 66.67]%	[100.0, 98.81, 98.81, 95.24, 100.0, 97.62, 95.24, 96.43, 95.24, 100.0, 96.43, 100.0, 100.0, 98.81, 98.81]%	[100.0, 83.33, 83.33, 60.0, 100.0, 66.67, 55.56, 50.0, 55.56, 100.0, 57.14, 100.0, 100.0, 83.33, 80.0]%	[96.55, 98.81, 98.81, 100.0, 96.55, 97.62, 98.77, 96.43, 98.77, 97.67, 97.59, 98.82, 98.82, 98.81, 97.65]%	||	73.63%	73.33%	98.1%	78.33%	98.11%	
  3  1  0  0  0  0  0  0  1  0  0  0  0  1  0  50.0%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  0  0  1  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  2  3  0  1  0  0  0  0  0  0  0  0  50.0%		5
  0  0  0  1  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  3  0  0  1  0  0  0  1  50.0%		8
  0  0  0  1  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  1  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  1  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 53.61%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[96.67, 97.78, 100.0, 97.78, 97.78, 96.67, 97.78, 94.44, 97.78, 96.67, 95.56, 98.89, 97.78, 98.89, 100.0]%	[66.67, 85.71, 100.0, 85.71, 83.33, 76.92, 83.33, 61.54, 83.33, 66.67, 71.43, 92.31, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 75.0, 83.33, 71.43, 83.33, 57.14, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.81, 97.59, 98.81, 96.55, 98.78, 100.0, 97.67, 98.82, 100.0]%	||	81.86%	82.22%	98.73%	85.12%	98.75%	
  3  2  0  0  0  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[98.89, 93.33, 98.89, 95.56, 98.89, 95.56, 94.44, 94.44, 97.78, 96.67, 96.67, 97.78, 96.67, 94.44, 96.67]%	[90.91, 50.0, 90.91, 66.67, 90.91, 60.0, 61.54, 54.55, 83.33, 80.0, 76.92, 80.0, 80.0, 66.67, 66.67]%	[83.33, 50.0, 83.33, 66.67, 83.33, 50.0, 66.67, 50.0, 83.33, 100.0, 83.33, 66.67, 100.0, 83.33, 50.0]%	[100.0, 96.43, 100.0, 97.62, 100.0, 98.81, 96.43, 97.62, 98.81, 96.43, 97.62, 100.0, 96.43, 95.24, 100.0]%	[100.0, 50.0, 100.0, 66.67, 100.0, 75.0, 57.14, 60.0, 83.33, 66.67, 71.43, 100.0, 66.67, 55.56, 100.0]%	[98.82, 96.43, 98.82, 97.62, 98.82, 96.51, 97.59, 96.47, 98.81, 100.0, 98.8, 97.67, 100.0, 98.77, 96.55]%	||	73.27%	73.33%	98.1%	76.83%	98.11%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  3  0  0  0  0  2  0  1  0  0  0  0  0  0  50.0%		2
  0  0  5  0  0  0  0  0  0  0  0  0  0  1  0  83.33%		3
  0  0  0  4  0  1  0  0  0  1  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  1  0  1  0  3  0  0  0  0  0  0  0  1  0  50.0%		6
  0  0  0  0  0  0  4  1  0  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  3  0  0  2  0  1  0  0  50.0%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  0  0  1  1  3  50.0%		15
Forest OOB Error: 56.9%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[96.67, 97.78, 100.0, 97.78, 97.78, 96.67, 97.78, 94.44, 97.78, 96.67, 95.56, 98.89, 97.78, 98.89, 100.0]%	[66.67, 85.71, 100.0, 85.71, 83.33, 76.92, 83.33, 61.54, 83.33, 66.67, 71.43, 92.31, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 75.0, 83.33, 71.43, 83.33, 57.14, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.81, 97.59, 98.81, 96.55, 98.78, 100.0, 97.67, 98.82, 100.0]%	||	81.86%	82.22%	98.73%	85.12%	98.75%	
  3  2  0  0  0  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[97.78, 98.89, 93.33, 97.78, 96.67, 97.78, 96.67, 95.56, 98.89, 94.44, 98.89, 97.78, 96.67, 97.78, 98.89]%	[85.71, 90.91, 62.5, 83.33, 66.67, 83.33, 80.0, 66.67, 92.31, 44.44, 92.31, 83.33, 66.67, 83.33, 90.91]%	[100.0, 83.33, 83.33, 83.33, 50.0, 83.33, 100.0, 66.67, 100.0, 33.33, 100.0, 83.33, 50.0, 83.33, 83.33]%	[97.62, 100.0, 94.05, 98.81, 100.0, 98.81, 96.43, 97.62, 98.81, 98.81, 98.81, 98.81, 100.0, 98.81, 100.0]%	[75.0, 100.0, 50.0, 83.33, 100.0, 83.33, 66.67, 66.67, 85.71, 66.67, 85.71, 83.33, 100.0, 83.33, 100.0]%	[100.0, 98.82, 98.75, 98.81, 96.55, 98.81, 100.0, 97.62, 100.0, 95.4, 100.0, 98.81, 96.55, 98.81, 98.82]%	||	78.16%	78.89%	98.49%	81.98%	98.52%	
  6  0  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		1
  1  5  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  0  0  0  0  0  0  0  1  0  83.33%		4
  0  0  2  1  3  0  0  0  0  0  0  0  0  0  0  50.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  2  0  0  0  0  4  0  0  0  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  1  0  0  0  0  0  2  0  0  2  0  1  0  0  0  33.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  1  0  0  0  0  1  0  0  1  0  3  0  0  50.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 53.64%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[96.67, 97.78, 100.0, 97.78, 97.78, 96.67, 97.78, 94.44, 97.78, 96.67, 95.56, 98.89, 97.78, 98.89, 100.0]%	[66.67, 85.71, 100.0, 85.71, 83.33, 76.92, 83.33, 61.54, 83.33, 66.67, 71.43, 92.31, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 75.0, 83.33, 71.43, 83.33, 57.14, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.81, 97.59, 98.81, 96.55, 98.78, 100.0, 97.67, 98.82, 100.0]%	||	81.86%	82.22%	98.73%	85.12%	98.75%	
  3  2  0  0  0  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[96.67, 95.56, 95.56, 93.33, 98.89, 96.67, 95.56, 90.0, 97.78, 98.89, 95.56, 97.78, 98.89, 96.67, 96.67]%	[66.67, 71.43, 66.67, 57.14, 90.91, 72.73, 66.67, 30.77, 83.33, 92.31, 66.67, 80.0, 92.31, 80.0, 66.67]%	[50.0, 83.33, 66.67, 66.67, 83.33, 66.67, 66.67, 33.33, 83.33, 100.0, 66.67, 66.67, 100.0, 100.0, 50.0]%	[100.0, 96.43, 97.62, 95.24, 100.0, 98.81, 97.62, 94.05, 98.81, 98.81, 97.62, 100.0, 98.81, 96.43, 100.0]%	[100.0, 62.5, 66.67, 50.0, 100.0, 80.0, 66.67, 28.57, 83.33, 85.71, 66.67, 100.0, 85.71, 66.67, 100.0]%	[96.55, 98.78, 97.62, 97.56, 98.82, 97.65, 97.62, 95.18, 98.81, 100.0, 97.62, 97.67, 100.0, 100.0, 96.55]%	||	72.28%	72.22%	98.02%	76.17%	98.03%	
  3  2  0  1  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  4  1  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  4  0  1  0  0  0  0  0  0  0  1  0  66.67%		4
  0  0  0  1  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  1  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  2  0  0  0  0  2  0  0  2  0  0  0  0  33.33%		8
  0  0  0  0  0  0  0  1  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  1  1  0  0  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  2  3  50.0%		15
Forest OOB Error: 59.75%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[96.67, 97.78, 100.0, 97.78, 97.78, 96.67, 97.78, 94.44, 97.78, 96.67, 95.56, 98.89, 97.78, 98.89, 100.0]%	[66.67, 85.71, 100.0, 85.71, 83.33, 76.92, 83.33, 61.54, 83.33, 66.67, 71.43, 92.31, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 75.0, 83.33, 71.43, 83.33, 57.14, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.81, 97.59, 98.81, 96.55, 98.78, 100.0, 97.67, 98.82, 100.0]%	||	81.86%	82.22%	98.73%	85.12%	98.75%	
  3  2  0  0  0  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	63.33%	95.11%	60.71%	[96.67, 98.89, 94.44, 97.78, 97.78, 94.44, 92.22, 95.56, 94.44, 93.33, 92.22, 94.44, 92.22, 94.44, 97.78]%	[72.73, 90.91, 66.67, 80.0, 80.0, 61.54, 46.15, 50.0, 66.67, 57.14, 22.22, 54.55, 58.82, 54.55, 83.33]%	[66.67, 83.33, 83.33, 66.67, 66.67, 66.67, 50.0, 33.33, 83.33, 66.67, 16.67, 50.0, 83.33, 50.0, 83.33]%	[98.81, 100.0, 95.24, 100.0, 100.0, 96.43, 95.24, 100.0, 95.24, 95.24, 97.62, 97.62, 92.86, 97.62, 98.81]%	[80.0, 100.0, 55.56, 100.0, 100.0, 57.14, 42.86, 100.0, 55.56, 50.0, 33.33, 60.0, 45.45, 60.0, 83.33]%	[97.65, 98.82, 98.77, 97.67, 97.67, 97.59, 96.39, 95.45, 98.77, 97.56, 94.25, 96.47, 98.73, 96.47, 98.81]%	||	63.02%	63.33%	97.38%	68.22%	97.41%	
  4  0  0  0  0  0  0  0  1  0  0  1  0  0  0  66.67%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  1  0  0  1  0  0  0  0  0  0  66.67%		4
  1  0  0  0  4  1  0  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  0  0  2  0  0  0  1  0  50.0%		7
  0  0  2  0  0  0  0  2  0  0  0  0  1  0  1  33.33%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  0  4  0  1  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  16.67%		11
  0  0  0  0  0  0  2  0  0  1  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  1  0  0  0  1  0  0  1  0  0  0  3  0  50.0%		14
  0  0  0  0  0  0  0  0  0  0  1  0  0  0  5  83.33%		15
Forest OOB Error: 58.82%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[96.67, 97.78, 100.0, 97.78, 97.78, 96.67, 97.78, 94.44, 97.78, 96.67, 95.56, 98.89, 97.78, 98.89, 100.0]%	[66.67, 85.71, 100.0, 85.71, 83.33, 76.92, 83.33, 61.54, 83.33, 66.67, 71.43, 92.31, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 75.0, 83.33, 71.43, 83.33, 57.14, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.81, 97.59, 98.81, 96.55, 98.78, 100.0, 97.67, 98.82, 100.0]%	||	81.86%	82.22%	98.73%	85.12%	98.75%	
  3  2  0  0  0  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[97.78, 94.44, 96.67, 97.78, 97.78, 95.56, 94.44, 95.56, 94.44, 95.56, 98.89, 95.56, 97.78, 98.89, 95.56]%	[80.0, 66.67, 76.92, 80.0, 80.0, 66.67, 70.59, 66.67, 61.54, 66.67, 90.91, 66.67, 85.71, 90.91, 50.0]%	[66.67, 83.33, 83.33, 66.67, 66.67, 66.67, 100.0, 66.67, 66.67, 66.67, 83.33, 66.67, 100.0, 83.33, 33.33]%	[100.0, 95.24, 97.62, 100.0, 100.0, 97.62, 94.05, 97.62, 96.43, 97.62, 100.0, 97.62, 97.62, 100.0, 100.0]%	[100.0, 55.56, 71.43, 100.0, 100.0, 66.67, 54.55, 66.67, 57.14, 66.67, 100.0, 66.67, 75.0, 100.0, 100.0]%	[97.67, 98.77, 98.8, 97.67, 97.67, 97.62, 100.0, 97.62, 97.59, 97.62, 98.82, 97.62, 100.0, 98.82, 95.45]%	||	73.33%	73.33%	98.1%	78.69%	98.12%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  0  0  0  1  0  0  0  83.33%		3
  0  0  0  4  0  1  0  0  0  0  0  1  0  0  0  66.67%		4
  0  0  1  0  4  0  0  0  0  1  0  0  0  0  0  66.67%		5
  0  1  0  0  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  1  0  0  0  1  4  0  0  0  0  0  0  0  66.67%		8
  0  0  0  0  0  0  2  0  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  0  0  2  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  1  0  0  0  0  0  2  0  0  0  0  1  0  2  33.33%		15
Forest OOB Error: 53.02%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[97.78, 97.78, 100.0, 96.67, 97.78, 96.67, 98.89, 94.44, 97.78, 96.67, 95.56, 98.89, 97.78, 97.78, 100.0]%	[80.0, 85.71, 100.0, 80.0, 83.33, 76.92, 90.91, 61.54, 83.33, 66.67, 71.43, 92.31, 80.0, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 66.67, 100.0]%	[100.0, 97.62, 100.0, 96.43, 98.81, 97.62, 100.0, 96.43, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 66.67, 83.33, 71.43, 100.0, 57.14, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.59, 98.81, 96.55, 98.78, 100.0, 97.67, 97.67, 100.0]%	||	82.14%	82.22%	98.73%	85.67%	98.75%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[97.78, 97.78, 98.89, 97.78, 98.89, 96.67, 95.56, 98.89, 96.67, 97.78, 95.56, 98.89, 97.78, 98.89, 98.89]%	[83.33, 85.71, 90.91, 83.33, 90.91, 72.73, 75.0, 90.91, 72.73, 83.33, 66.67, 90.91, 83.33, 92.31, 90.91]%	[83.33, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 66.67, 83.33, 66.67, 83.33, 83.33, 100.0, 83.33]%	[98.81, 97.62, 100.0, 98.81, 100.0, 98.81, 95.24, 100.0, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81, 100.0]%	[83.33, 75.0, 100.0, 83.33, 100.0, 80.0, 60.0, 100.0, 80.0, 83.33, 66.67, 100.0, 83.33, 85.71, 100.0]%	[98.81, 100.0, 98.82, 98.81, 98.82, 97.65, 100.0, 98.82, 97.65, 98.81, 97.62, 98.82, 98.81, 100.0, 98.82]%	||	83.53%	83.33%	98.81%	85.38%	98.82%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  1  0  1  0  0  0  0  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  1  0  0  0  0  0  0  0  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  1  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 51.7%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[97.78, 97.78, 100.0, 96.67, 97.78, 96.67, 98.89, 94.44, 97.78, 96.67, 95.56, 98.89, 97.78, 97.78, 100.0]%	[80.0, 85.71, 100.0, 80.0, 83.33, 76.92, 90.91, 61.54, 83.33, 66.67, 71.43, 92.31, 80.0, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 66.67, 100.0]%	[100.0, 97.62, 100.0, 96.43, 98.81, 97.62, 100.0, 96.43, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 66.67, 83.33, 71.43, 100.0, 57.14, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.59, 98.81, 96.55, 98.78, 100.0, 97.67, 97.67, 100.0]%	||	82.14%	82.22%	98.73%	85.67%	98.75%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[95.56, 97.78, 94.44, 97.78, 98.89, 100.0, 97.78, 93.33, 98.89, 98.89, 94.44, 97.78, 96.67, 98.89, 96.67]%	[66.67, 83.33, 54.55, 85.71, 90.91, 100.0, 83.33, 40.0, 90.91, 92.31, 61.54, 83.33, 76.92, 92.31, 72.73]%	[66.67, 83.33, 50.0, 100.0, 83.33, 100.0, 83.33, 33.33, 83.33, 100.0, 66.67, 83.33, 83.33, 100.0, 66.67]%	[97.62, 98.81, 97.62, 97.62, 100.0, 100.0, 98.81, 97.62, 100.0, 98.81, 96.43, 98.81, 97.62, 98.81, 98.81]%	[66.67, 83.33, 60.0, 75.0, 100.0, 100.0, 83.33, 50.0, 100.0, 85.71, 57.14, 83.33, 71.43, 85.71, 80.0]%	[97.62, 98.81, 96.47, 100.0, 98.82, 100.0, 98.81, 95.35, 98.82, 100.0, 97.59, 98.81, 98.8, 100.0, 97.65]%	||	78.3%	78.89%	98.49%	78.78%	98.5%	
  4  1  0  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		1
  1  5  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		2
  1  0  3  1  0  0  0  0  0  0  0  0  1  0  0  50.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  1  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  0  0  0  0  1  0  0  0  83.33%		7
  0  0  1  0  0  0  0  2  0  0  2  0  0  0  1  33.33%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  1  4  66.67%		15
Forest OOB Error: 54.66%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[97.78, 97.78, 100.0, 96.67, 97.78, 96.67, 98.89, 94.44, 97.78, 96.67, 95.56, 98.89, 97.78, 97.78, 100.0]%	[80.0, 85.71, 100.0, 80.0, 83.33, 76.92, 90.91, 61.54, 83.33, 66.67, 71.43, 92.31, 80.0, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 66.67, 100.0]%	[100.0, 97.62, 100.0, 96.43, 98.81, 97.62, 100.0, 96.43, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 66.67, 83.33, 71.43, 100.0, 57.14, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.59, 98.81, 96.55, 98.78, 100.0, 97.67, 97.67, 100.0]%	||	82.14%	82.22%	98.73%	85.67%	98.75%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	70.0%	96.0%	67.86%	[96.67, 95.56, 96.67, 95.56, 97.78, 97.78, 94.44, 93.33, 94.44, 94.44, 94.44, 95.56, 95.56, 98.89, 98.89]%	[66.67, 71.43, 76.92, 60.0, 83.33, 83.33, 54.55, 50.0, 66.67, 66.67, 61.54, 60.0, 60.0, 92.31, 90.91]%	[50.0, 83.33, 83.33, 50.0, 83.33, 83.33, 50.0, 50.0, 83.33, 83.33, 66.67, 50.0, 50.0, 100.0, 83.33]%	[100.0, 96.43, 97.62, 98.81, 98.81, 98.81, 97.62, 96.43, 95.24, 95.24, 96.43, 98.81, 98.81, 98.81, 100.0]%	[100.0, 62.5, 71.43, 75.0, 83.33, 83.33, 60.0, 50.0, 55.56, 55.56, 57.14, 75.0, 75.0, 85.71, 100.0]%	[96.55, 98.78, 98.8, 96.51, 98.81, 98.81, 96.47, 96.43, 98.77, 98.77, 97.59, 96.51, 96.51, 100.0, 98.82]%	||	69.62%	70.0%	97.86%	72.64%	97.88%	
  3  2  0  0  0  0  0  0  1  0  0  0  0  0  0  50.0%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  5  1  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  3  1  1  1  0  0  0  0  0  0  0  0  50.0%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  3  1  1  0  0  1  0  0  0  50.0%		7
  0  0  2  0  0  0  0  3  0  0  1  0  0  0  0  50.0%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  3  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  1  0  0  2  0  3  0  0  50.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  1  5  83.33%		15
Forest OOB Error: 57.43%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[97.78, 97.78, 100.0, 96.67, 97.78, 96.67, 98.89, 94.44, 97.78, 96.67, 95.56, 98.89, 97.78, 97.78, 100.0]%	[80.0, 85.71, 100.0, 80.0, 83.33, 76.92, 90.91, 61.54, 83.33, 66.67, 71.43, 92.31, 80.0, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 66.67, 100.0]%	[100.0, 97.62, 100.0, 96.43, 98.81, 97.62, 100.0, 96.43, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 66.67, 83.33, 71.43, 100.0, 57.14, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.59, 98.81, 96.55, 98.78, 100.0, 97.67, 97.67, 100.0]%	||	82.14%	82.22%	98.73%	85.67%	98.75%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	68.89%	95.85%	66.67%	[97.78, 96.67, 96.67, 96.67, 97.78, 96.67, 88.89, 91.11, 96.67, 97.78, 95.56, 97.78, 95.56, 97.78, 94.44]%	[80.0, 76.92, 76.92, 66.67, 80.0, 76.92, 37.5, 20.0, 76.92, 83.33, 71.43, 80.0, 66.67, 85.71, 54.55]%	[66.67, 83.33, 83.33, 50.0, 66.67, 83.33, 50.0, 16.67, 83.33, 83.33, 83.33, 66.67, 66.67, 100.0, 50.0]%	[100.0, 97.62, 97.62, 100.0, 100.0, 97.62, 91.67, 96.43, 97.62, 98.81, 96.43, 100.0, 97.62, 97.62, 97.62]%	[100.0, 71.43, 71.43, 100.0, 100.0, 71.43, 30.0, 25.0, 71.43, 83.33, 62.5, 100.0, 66.67, 75.0, 60.0]%	[97.67, 98.8, 98.8, 96.55, 97.67, 98.8, 96.25, 94.19, 98.8, 98.81, 98.78, 97.67, 97.62, 100.0, 96.47]%	||	68.9%	68.89%	97.78%	72.55%	97.79%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  0  0  0  0  1  0  0  83.33%		3
  0  0  0  3  0  2  1  0  0  0  0  0  0  0  0  50.0%		4
  0  0  0  0  4  0  1  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  3  0  1  0  1  0  0  0  1  50.0%		7
  0  0  1  0  0  0  2  1  0  0  0  0  1  0  1  16.67%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  2  0  0  0  0  0  1  3  50.0%		15
Forest OOB Error: 54.23%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[97.78, 97.78, 100.0, 96.67, 97.78, 96.67, 98.89, 94.44, 97.78, 96.67, 95.56, 98.89, 97.78, 97.78, 100.0]%	[80.0, 85.71, 100.0, 80.0, 83.33, 76.92, 90.91, 61.54, 83.33, 66.67, 71.43, 92.31, 80.0, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 66.67, 100.0]%	[100.0, 97.62, 100.0, 96.43, 98.81, 97.62, 100.0, 96.43, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 66.67, 83.33, 71.43, 100.0, 57.14, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.59, 98.81, 96.55, 98.78, 100.0, 97.67, 97.67, 100.0]%	||	82.14%	82.22%	98.73%	85.67%	98.75%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	66.67%	95.56%	64.29%	[98.89, 95.56, 94.44, 95.56, 98.89, 95.56, 88.89, 94.44, 96.67, 95.56, 97.78, 95.56, 95.56, 94.44, 95.56]%	[92.31, 50.0, 61.54, 66.67, 90.91, 60.0, 50.0, 61.54, 76.92, 60.0, 80.0, 66.67, 71.43, 61.54, 50.0]%	[100.0, 33.33, 66.67, 66.67, 83.33, 50.0, 83.33, 66.67, 83.33, 50.0, 66.67, 66.67, 83.33, 66.67, 33.33]%	[98.81, 100.0, 96.43, 97.62, 100.0, 98.81, 89.29, 96.43, 97.62, 98.81, 100.0, 97.62, 96.43, 96.43, 100.0]%	[85.71, 100.0, 57.14, 66.67, 100.0, 75.0, 35.71, 57.14, 71.43, 75.0, 100.0, 66.67, 62.5, 57.14, 100.0]%	[100.0, 95.45, 97.59, 97.62, 98.82, 96.51, 98.68, 97.59, 98.8, 96.51, 97.67, 97.62, 98.78, 97.59, 95.45]%	||	66.63%	66.67%	97.62%	74.01%	97.65%	
  6  0  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		1
  1  2  0  0  0  0  1  0  0  0  0  0  2  0  0  33.33%		2
  0  0  4  0  0  0  1  0  1  0  0  0  0  0  0  66.67%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  0  0  1  0  0  0  83.33%		5
  0  0  0  1  0  3  0  0  1  0  0  0  0  1  0  50.0%		6
  0  0  0  0  0  0  5  0  0  0  0  1  0  0  0  83.33%		7
  0  0  2  0  0  0  0  4  0  0  0  0  0  0  0  66.67%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  3  0  0  3  0  0  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  1  0  0  0  0  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  2  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  2  0  0  0  0  0  2  2  33.33%		15
Forest OOB Error: 55.74%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[97.78, 97.78, 100.0, 96.67, 97.78, 96.67, 98.89, 94.44, 97.78, 96.67, 95.56, 98.89, 97.78, 97.78, 100.0]%	[80.0, 85.71, 100.0, 80.0, 83.33, 76.92, 90.91, 61.54, 83.33, 66.67, 71.43, 92.31, 80.0, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 66.67, 100.0]%	[100.0, 97.62, 100.0, 96.43, 98.81, 97.62, 100.0, 96.43, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 66.67, 83.33, 71.43, 100.0, 57.14, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.59, 98.81, 96.55, 98.78, 100.0, 97.67, 97.67, 100.0]%	||	82.14%	82.22%	98.73%	85.67%	98.75%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[98.89, 98.89, 93.33, 94.44, 97.78, 95.56, 100.0, 96.67, 95.56, 94.44, 97.78, 94.44, 98.89, 98.89, 97.78]%	[90.91, 90.91, 57.14, 54.55, 80.0, 66.67, 100.0, 72.73, 71.43, 66.67, 85.71, 54.55, 90.91, 92.31, 80.0]%	[83.33, 83.33, 66.67, 50.0, 66.67, 66.67, 100.0, 66.67, 83.33, 83.33, 100.0, 50.0, 83.33, 100.0, 66.67]%	[100.0, 100.0, 95.24, 97.62, 100.0, 97.62, 100.0, 98.81, 96.43, 95.24, 97.62, 97.62, 100.0, 98.81, 100.0]%	[100.0, 100.0, 50.0, 60.0, 100.0, 66.67, 100.0, 80.0, 62.5, 55.56, 75.0, 60.0, 100.0, 85.71, 100.0]%	[98.82, 98.82, 97.56, 96.47, 97.67, 97.62, 100.0, 97.65, 98.78, 98.77, 100.0, 96.47, 98.82, 100.0, 97.67]%	||	76.96%	76.67%	98.33%	79.7%	98.34%	
  5  0  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  4  1  0  0  0  0  0  0  0  1  0  0  0  66.67%		3
  0  0  0  3  0  2  0  0  0  0  1  0  0  0  0  50.0%		4
  0  0  1  0  4  0  0  0  0  1  0  0  0  0  0  66.67%		5
  0  0  0  1  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  2  0  0  0  0  4  0  0  0  0  0  0  0  66.67%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  3  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  1  4  66.67%		15
Forest OOB Error: 56.4%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[96.67, 97.78, 100.0, 97.78, 97.78, 96.67, 97.78, 94.44, 97.78, 95.56, 95.56, 97.78, 97.78, 98.89, 100.0]%	[66.67, 85.71, 100.0, 85.71, 83.33, 76.92, 83.33, 61.54, 83.33, 50.0, 71.43, 85.71, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 33.33, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0, 96.43, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 75.0, 83.33, 71.43, 83.33, 57.14, 83.33, 100.0, 62.5, 75.0, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.81, 97.59, 98.81, 95.45, 98.78, 100.0, 97.67, 98.82, 100.0]%	||	80.31%	81.11%	98.65%	84.4%	98.67%	
  3  2  0  0  0  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  2  0  2  0  0  0  33.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[97.78, 97.78, 95.56, 98.89, 100.0, 98.89, 92.22, 97.78, 97.78, 96.67, 100.0, 96.67, 100.0, 100.0, 96.67]%	[83.33, 85.71, 66.67, 90.91, 100.0, 90.91, 58.82, 83.33, 80.0, 72.73, 100.0, 72.73, 100.0, 100.0, 72.73]%	[83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 66.67, 66.67, 100.0, 66.67, 100.0, 100.0, 66.67]%	[98.81, 97.62, 97.62, 100.0, 100.0, 100.0, 92.86, 98.81, 100.0, 98.81, 100.0, 98.81, 100.0, 100.0, 98.81]%	[83.33, 75.0, 66.67, 100.0, 100.0, 100.0, 45.45, 83.33, 100.0, 80.0, 100.0, 80.0, 100.0, 100.0, 80.0]%	[98.81, 100.0, 97.62, 98.82, 100.0, 98.82, 98.73, 98.81, 97.67, 97.65, 100.0, 97.65, 100.0, 100.0, 97.65]%	||	83.86%	83.33%	98.81%	86.25%	98.82%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  1  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  1  0  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  1  0  0  0  1  0  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  1  0  0  4  0  1  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  1  0  0  0  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  1  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 52.09%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[96.67, 97.78, 100.0, 97.78, 97.78, 96.67, 97.78, 94.44, 97.78, 95.56, 95.56, 97.78, 97.78, 98.89, 100.0]%	[66.67, 85.71, 100.0, 85.71, 83.33, 76.92, 83.33, 61.54, 83.33, 50.0, 71.43, 85.71, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 33.33, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0, 96.43, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 75.0, 83.33, 71.43, 83.33, 57.14, 83.33, 100.0, 62.5, 75.0, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.81, 97.59, 98.81, 95.45, 98.78, 100.0, 97.67, 98.82, 100.0]%	||	80.31%	81.11%	98.65%	84.4%	98.67%	
  3  2  0  0  0  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  2  0  2  0  0  0  33.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[96.67, 96.67, 97.78, 95.56, 98.89, 94.44, 95.56, 94.44, 97.78, 94.44, 94.44, 98.89, 94.44, 98.89, 97.78]%	[72.73, 80.0, 85.71, 66.67, 90.91, 61.54, 60.0, 54.55, 83.33, 61.54, 44.44, 90.91, 66.67, 92.31, 80.0]%	[66.67, 100.0, 100.0, 66.67, 83.33, 66.67, 50.0, 50.0, 83.33, 66.67, 33.33, 83.33, 83.33, 100.0, 66.67]%	[98.81, 96.43, 97.62, 97.62, 100.0, 96.43, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0, 95.24, 98.81, 100.0]%	[80.0, 66.67, 75.0, 66.67, 100.0, 57.14, 75.0, 60.0, 83.33, 57.14, 66.67, 100.0, 55.56, 85.71, 100.0]%	[97.65, 100.0, 100.0, 97.62, 98.82, 97.59, 96.51, 96.47, 98.81, 97.59, 95.4, 98.82, 98.77, 100.0, 97.67]%	||	72.75%	73.33%	98.1%	75.26%	98.12%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  1  0  0  4  0  1  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  1  0  0  0  4  0  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  1  3  0  0  2  0  0  0  0  0  50.0%		7
  0  0  1  1  0  0  0  3  0  0  1  0  0  0  0  50.0%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  1  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  2  0  3  0  0  33.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  1  0  0  0  0  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  1  0  4  66.67%		15
Forest OOB Error: 56.05%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[96.67, 97.78, 100.0, 97.78, 97.78, 96.67, 97.78, 94.44, 97.78, 95.56, 95.56, 97.78, 97.78, 98.89, 100.0]%	[66.67, 85.71, 100.0, 85.71, 83.33, 76.92, 83.33, 61.54, 83.33, 50.0, 71.43, 85.71, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 33.33, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0, 96.43, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 75.0, 83.33, 71.43, 83.33, 57.14, 83.33, 100.0, 62.5, 75.0, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.81, 97.59, 98.81, 95.45, 98.78, 100.0, 97.67, 98.82, 100.0]%	||	80.31%	81.11%	98.65%	84.4%	98.67%	
  3  2  0  0  0  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  2  0  2  0  0  0  33.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[97.78, 95.56, 93.33, 98.89, 96.67, 96.67, 95.56, 96.67, 94.44, 100.0, 95.56, 96.67, 97.78, 98.89, 98.89]%	[80.0, 66.67, 57.14, 92.31, 72.73, 72.73, 75.0, 66.67, 61.54, 100.0, 66.67, 76.92, 83.33, 90.91, 90.91]%	[66.67, 66.67, 66.67, 100.0, 66.67, 66.67, 100.0, 50.0, 66.67, 100.0, 66.67, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 95.24, 98.81, 98.81, 98.81, 95.24, 100.0, 96.43, 100.0, 97.62, 97.62, 98.81, 100.0, 100.0]%	[100.0, 66.67, 50.0, 85.71, 80.0, 80.0, 60.0, 100.0, 57.14, 100.0, 66.67, 71.43, 83.33, 100.0, 100.0]%	[97.67, 97.62, 97.56, 100.0, 97.65, 97.65, 100.0, 96.55, 97.59, 100.0, 97.62, 98.8, 98.81, 98.82, 98.82]%	||	76.9%	76.67%	98.33%	80.06%	98.34%	
  4  1  0  0  0  0  0  0  1  0  0  0  0  0  0  66.67%		1
  0  4  0  0  0  0  1  0  1  0  0  0  0  0  0  66.67%		2
  0  0  4  0  0  0  0  0  0  0  1  1  0  0  0  66.67%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  4  0  0  0  0  0  0  1  0  0  0  66.67%		5
  0  0  0  1  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  1  0  0  0  1  3  0  0  1  0  0  0  0  50.0%		8
  0  1  0  0  0  0  1  0  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  1  0  0  0  0  0  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  1  0  0  0  0  0  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  1  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 49.39%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[96.67, 97.78, 100.0, 97.78, 97.78, 96.67, 97.78, 94.44, 97.78, 95.56, 95.56, 97.78, 97.78, 98.89, 100.0]%	[66.67, 85.71, 100.0, 85.71, 83.33, 76.92, 83.33, 61.54, 83.33, 50.0, 71.43, 85.71, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 33.33, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0, 96.43, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 75.0, 83.33, 71.43, 83.33, 57.14, 83.33, 100.0, 62.5, 75.0, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.81, 97.59, 98.81, 95.45, 98.78, 100.0, 97.67, 98.82, 100.0]%	||	80.31%	81.11%	98.65%	84.4%	98.67%	
  3  2  0  0  0  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  2  0  2  0  0  0  33.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[100.0, 97.78, 96.67, 95.56, 97.78, 98.89, 94.44, 92.22, 98.89, 94.44, 95.56, 97.78, 96.67, 98.89, 97.78]%	[100.0, 83.33, 76.92, 66.67, 83.33, 90.91, 54.55, 46.15, 92.31, 66.67, 60.0, 83.33, 76.92, 90.91, 80.0]%	[100.0, 83.33, 83.33, 66.67, 83.33, 83.33, 50.0, 50.0, 100.0, 83.33, 50.0, 83.33, 83.33, 83.33, 66.67]%	[100.0, 98.81, 97.62, 97.62, 98.81, 100.0, 97.62, 95.24, 98.81, 95.24, 98.81, 98.81, 97.62, 100.0, 100.0]%	[100.0, 83.33, 71.43, 66.67, 83.33, 100.0, 60.0, 42.86, 85.71, 55.56, 75.0, 83.33, 71.43, 100.0, 100.0]%	[100.0, 98.81, 98.8, 97.62, 98.81, 98.82, 96.47, 96.39, 100.0, 98.77, 96.51, 98.81, 98.8, 98.82, 97.67]%	||	76.8%	76.67%	98.33%	78.58%	98.34%	
  6  0  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  1  0  0  0  0  0  0  0  83.33%		3
  0  1  0  4  0  0  0  1  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  1  0  0  3  0  0  2  0  0  0  0  0  50.0%		7
  0  0  2  1  0  0  0  3  0  0  0  0  0  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  3  0  2  0  0  50.0%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  1  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  1  0  0  0  0  4  66.67%		15
Forest OOB Error: 53.33%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[96.67, 97.78, 100.0, 97.78, 97.78, 96.67, 97.78, 94.44, 97.78, 95.56, 95.56, 97.78, 97.78, 98.89, 100.0]%	[66.67, 85.71, 100.0, 85.71, 83.33, 76.92, 83.33, 61.54, 83.33, 50.0, 71.43, 85.71, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 33.33, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0, 96.43, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 75.0, 83.33, 71.43, 83.33, 57.14, 83.33, 100.0, 62.5, 75.0, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.81, 97.59, 98.81, 95.45, 98.78, 100.0, 97.67, 98.82, 100.0]%	||	80.31%	81.11%	98.65%	84.4%	98.67%	
  3  2  0  0  0  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  2  0  2  0  0  0  33.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[97.78, 97.78, 94.44, 98.89, 98.89, 97.78, 94.44, 95.56, 95.56, 100.0, 97.78, 98.89, 97.78, 98.89, 97.78]%	[80.0, 83.33, 61.54, 92.31, 90.91, 83.33, 66.67, 60.0, 71.43, 100.0, 83.33, 90.91, 83.33, 90.91, 83.33]%	[66.67, 83.33, 66.67, 100.0, 83.33, 83.33, 83.33, 50.0, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 98.81, 96.43, 98.81, 100.0, 98.81, 95.24, 98.81, 96.43, 100.0, 98.81, 100.0, 98.81, 100.0, 98.81]%	[100.0, 83.33, 57.14, 85.71, 100.0, 83.33, 55.56, 75.0, 62.5, 100.0, 83.33, 100.0, 83.33, 100.0, 83.33]%	[97.67, 98.81, 97.59, 100.0, 98.82, 98.81, 98.77, 96.51, 98.78, 100.0, 98.81, 98.82, 98.81, 98.82, 98.81]%	||	81.42%	81.11%	98.65%	83.51%	98.66%	
  4  1  0  0  0  0  0  0  1  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  4  1  0  0  1  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  0  0  0  0  0  1  83.33%		7
  0  0  1  0  0  0  1  3  0  0  0  0  1  0  0  50.0%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  1  0  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 49.81%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[96.67, 97.78, 100.0, 97.78, 97.78, 96.67, 97.78, 94.44, 97.78, 95.56, 95.56, 97.78, 97.78, 98.89, 100.0]%	[66.67, 85.71, 100.0, 85.71, 83.33, 76.92, 83.33, 61.54, 83.33, 50.0, 71.43, 85.71, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 33.33, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0, 96.43, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 75.0, 83.33, 71.43, 83.33, 57.14, 83.33, 100.0, 62.5, 75.0, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.81, 97.59, 98.81, 95.45, 98.78, 100.0, 97.67, 98.82, 100.0]%	||	80.31%	81.11%	98.65%	84.4%	98.67%	
  3  2  0  0  0  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  2  0  2  0  0  0  33.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[95.56, 97.78, 94.44, 98.89, 100.0, 97.78, 95.56, 93.33, 97.78, 96.67, 96.67, 96.67, 97.78, 98.89, 97.78]%	[66.67, 85.71, 61.54, 92.31, 100.0, 80.0, 60.0, 50.0, 83.33, 76.92, 76.92, 72.73, 83.33, 92.31, 80.0]%	[66.67, 100.0, 66.67, 100.0, 100.0, 66.67, 50.0, 50.0, 83.33, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 97.62, 96.43, 98.81, 100.0, 100.0, 98.81, 96.43, 98.81, 97.62, 97.62, 98.81, 98.81, 98.81, 100.0]%	[66.67, 75.0, 57.14, 85.71, 100.0, 100.0, 75.0, 50.0, 83.33, 71.43, 71.43, 80.0, 83.33, 85.71, 100.0]%	[97.62, 100.0, 97.59, 100.0, 100.0, 97.67, 96.51, 96.43, 98.81, 98.8, 98.8, 97.65, 98.81, 100.0, 97.67]%	||	77.45%	77.78%	98.41%	78.98%	98.42%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  4  1  0  0  0  0  0  0  0  0  1  0  0  66.67%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  1  0  0  0  0  0  3  1  0  0  0  1  0  0  0  50.0%		7
  0  0  2  0  0  0  0  3  0  0  1  0  0  0  0  50.0%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  1  0  0  0  0  0  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 45.85%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[96.67, 97.78, 100.0, 97.78, 97.78, 96.67, 97.78, 94.44, 97.78, 96.67, 95.56, 98.89, 97.78, 98.89, 100.0]%	[66.67, 85.71, 100.0, 85.71, 83.33, 76.92, 83.33, 61.54, 83.33, 66.67, 71.43, 92.31, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 75.0, 83.33, 71.43, 83.33, 57.14, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.81, 97.59, 98.81, 96.55, 98.78, 100.0, 97.67, 98.82, 100.0]%	||	81.86%	82.22%	98.73%	85.12%	98.75%	
  3  2  0  0  0  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	71.11%	96.15%	69.05%	[96.67, 95.56, 96.67, 96.67, 96.67, 94.44, 96.67, 93.33, 95.56, 96.67, 96.67, 97.78, 97.78, 94.44, 96.67]%	[72.73, 75.0, 76.92, 72.73, 72.73, 61.54, 80.0, 50.0, 60.0, 66.67, 72.73, 83.33, 83.33, 61.54, 72.73]%	[66.67, 100.0, 83.33, 66.67, 66.67, 66.67, 100.0, 50.0, 50.0, 50.0, 66.67, 83.33, 83.33, 66.67, 66.67]%	[98.81, 95.24, 97.62, 98.81, 98.81, 96.43, 96.43, 96.43, 98.81, 100.0, 98.81, 98.81, 98.81, 96.43, 98.81]%	[80.0, 60.0, 71.43, 80.0, 80.0, 57.14, 66.67, 50.0, 75.0, 100.0, 80.0, 83.33, 83.33, 57.14, 80.0]%	[97.65, 100.0, 98.8, 97.65, 97.65, 97.59, 100.0, 96.43, 96.51, 96.55, 97.65, 98.81, 98.81, 97.59, 97.65]%	||	70.8%	71.11%	97.94%	73.6%	97.95%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  1  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  1  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  1  0  0  0  1  3  0  0  0  0  1  0  0  50.0%		8
  0  2  1  0  0  0  0  0  3  0  0  0  0  0  0  50.0%		9
  0  0  0  0  0  0  0  0  0  3  0  1  0  2  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  1  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 50.57%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[96.67, 97.78, 100.0, 97.78, 97.78, 96.67, 97.78, 94.44, 97.78, 96.67, 95.56, 98.89, 97.78, 98.89, 100.0]%	[66.67, 85.71, 100.0, 85.71, 83.33, 76.92, 83.33, 61.54, 83.33, 66.67, 71.43, 92.31, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 75.0, 83.33, 71.43, 83.33, 57.14, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.81, 97.59, 98.81, 96.55, 98.78, 100.0, 97.67, 98.82, 100.0]%	||	81.86%	82.22%	98.73%	85.12%	98.75%	
  3  2  0  0  0  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[98.89, 96.67, 98.89, 97.78, 100.0, 95.56, 93.33, 95.56, 97.78, 94.44, 96.67, 95.56, 96.67, 97.78, 97.78]%	[90.91, 80.0, 90.91, 80.0, 100.0, 66.67, 62.5, 66.67, 83.33, 44.44, 72.73, 71.43, 76.92, 83.33, 80.0]%	[83.33, 100.0, 83.33, 66.67, 100.0, 66.67, 83.33, 66.67, 83.33, 33.33, 66.67, 83.33, 83.33, 83.33, 66.67]%	[100.0, 96.43, 100.0, 100.0, 100.0, 97.62, 94.05, 97.62, 98.81, 98.81, 98.81, 96.43, 97.62, 98.81, 100.0]%	[100.0, 66.67, 100.0, 100.0, 100.0, 66.67, 50.0, 66.67, 83.33, 66.67, 80.0, 62.5, 71.43, 83.33, 100.0]%	[98.82, 100.0, 98.82, 97.67, 100.0, 97.62, 98.75, 97.62, 98.81, 95.4, 97.65, 98.78, 98.8, 98.81, 97.67]%	||	76.66%	76.67%	98.33%	79.82%	98.35%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		3
  0  1  0  4  0  1  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  1  0  0  0  4  0  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  1  0  0  0  1  0  0  66.67%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  3  0  0  2  0  1  0  0  0  33.33%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  1  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  0  1  0  0  4  66.67%		15
Forest OOB Error: 52.73%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[96.67, 97.78, 100.0, 97.78, 97.78, 96.67, 97.78, 94.44, 97.78, 96.67, 95.56, 98.89, 97.78, 98.89, 100.0]%	[66.67, 85.71, 100.0, 85.71, 83.33, 76.92, 83.33, 61.54, 83.33, 66.67, 71.43, 92.31, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 75.0, 83.33, 71.43, 83.33, 57.14, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.81, 97.59, 98.81, 96.55, 98.78, 100.0, 97.67, 98.82, 100.0]%	||	81.86%	82.22%	98.73%	85.12%	98.75%	
  3  2  0  0  0  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[100.0, 100.0, 97.78, 98.89, 98.89, 98.89, 94.44, 95.56, 98.89, 93.33, 94.44, 96.67, 97.78, 98.89, 97.78]%	[100.0, 100.0, 83.33, 90.91, 90.91, 92.31, 54.55, 66.67, 90.91, 62.5, 54.55, 72.73, 83.33, 92.31, 83.33]%	[100.0, 100.0, 83.33, 83.33, 83.33, 100.0, 50.0, 66.67, 83.33, 83.33, 50.0, 66.67, 83.33, 100.0, 83.33]%	[100.0, 100.0, 98.81, 100.0, 100.0, 98.81, 97.62, 97.62, 100.0, 94.05, 97.62, 98.81, 98.81, 98.81, 98.81]%	[100.0, 100.0, 83.33, 100.0, 100.0, 85.71, 60.0, 66.67, 100.0, 50.0, 60.0, 80.0, 83.33, 85.71, 83.33]%	[100.0, 100.0, 98.81, 98.82, 98.82, 100.0, 96.47, 97.62, 98.82, 98.75, 96.47, 97.65, 98.81, 100.0, 98.81]%	||	81.22%	81.11%	98.65%	82.54%	98.66%	
  6  0  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  1  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  3  0  0  3  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  2  0  0  3  0  1  0  0  50.0%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  1  5  83.33%		15
Forest OOB Error: 50.0%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[96.67, 97.78, 100.0, 97.78, 97.78, 96.67, 97.78, 94.44, 97.78, 96.67, 95.56, 98.89, 97.78, 98.89, 100.0]%	[66.67, 85.71, 100.0, 85.71, 83.33, 76.92, 83.33, 61.54, 83.33, 66.67, 71.43, 92.31, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 75.0, 83.33, 71.43, 83.33, 57.14, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.81, 97.59, 98.81, 96.55, 98.78, 100.0, 97.67, 98.82, 100.0]%	||	81.86%	82.22%	98.73%	85.12%	98.75%	
  3  2  0  0  0  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	86.67%	98.22%	85.71%	[98.89, 98.89, 97.78, 98.89, 98.89, 97.78, 98.89, 96.67, 97.78, 97.78, 97.78, 97.78, 100.0, 97.78, 97.78]%	[90.91, 92.31, 80.0, 90.91, 90.91, 83.33, 92.31, 72.73, 83.33, 85.71, 83.33, 80.0, 100.0, 85.71, 85.71]%	[83.33, 100.0, 66.67, 83.33, 83.33, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 66.67, 100.0, 100.0, 100.0]%	[100.0, 98.81, 100.0, 100.0, 100.0, 98.81, 98.81, 98.81, 98.81, 97.62, 98.81, 100.0, 100.0, 97.62, 97.62]%	[100.0, 85.71, 100.0, 100.0, 100.0, 83.33, 85.71, 80.0, 83.33, 75.0, 83.33, 100.0, 100.0, 75.0, 75.0]%	[98.82, 100.0, 97.67, 98.82, 98.82, 98.81, 100.0, 97.65, 98.81, 100.0, 98.81, 97.67, 100.0, 100.0, 100.0]%	||	86.48%	86.67%	99.05%	88.43%	99.06%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  4  0  0  0  0  0  0  1  0  0  0  1  0  66.67%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  5  0  0  0  0  0  1  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 47.56%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[96.67, 97.78, 100.0, 97.78, 97.78, 96.67, 97.78, 94.44, 97.78, 96.67, 95.56, 98.89, 97.78, 98.89, 100.0]%	[66.67, 85.71, 100.0, 85.71, 83.33, 76.92, 83.33, 61.54, 83.33, 66.67, 71.43, 92.31, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 75.0, 83.33, 71.43, 83.33, 57.14, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.81, 97.59, 98.81, 96.55, 98.78, 100.0, 97.67, 98.82, 100.0]%	||	81.86%	82.22%	98.73%	85.12%	98.75%	
  3  2  0  0  0  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[96.67, 94.44, 98.89, 93.33, 96.67, 96.67, 97.78, 97.78, 100.0, 95.56, 94.44, 94.44, 94.44, 97.78, 95.56]%	[72.73, 61.54, 90.91, 57.14, 66.67, 72.73, 85.71, 83.33, 100.0, 71.43, 28.57, 61.54, 70.59, 83.33, 60.0]%	[66.67, 66.67, 83.33, 66.67, 50.0, 66.67, 100.0, 83.33, 100.0, 83.33, 16.67, 66.67, 100.0, 83.33, 50.0]%	[98.81, 96.43, 100.0, 95.24, 100.0, 98.81, 97.62, 98.81, 100.0, 96.43, 100.0, 96.43, 94.05, 98.81, 98.81]%	[80.0, 57.14, 100.0, 50.0, 100.0, 80.0, 75.0, 83.33, 100.0, 62.5, 100.0, 57.14, 54.55, 83.33, 75.0]%	[97.65, 97.59, 98.82, 97.56, 96.55, 97.65, 100.0, 98.81, 100.0, 98.78, 94.38, 97.59, 100.0, 98.81, 96.51]%	||	71.08%	72.22%	98.02%	77.2%	98.05%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  1  4  0  0  0  0  1  0  0  0  0  0  0  0  0  66.67%		2
  0  0  5  0  0  0  0  0  0  0  0  1  0  0  0  83.33%		3
  0  1  0  4  0  1  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  2  3  0  0  0  0  0  0  1  0  0  0  50.0%		5
  0  0  0  1  0  4  0  0  0  1  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  1  1  0  4  0  0  16.67%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  5  1  83.33%		14
  0  0  0  1  0  0  0  1  0  0  0  0  0  1  3  50.0%		15
Forest OOB Error: 55.22%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[96.67, 97.78, 100.0, 97.78, 97.78, 96.67, 97.78, 94.44, 97.78, 96.67, 95.56, 98.89, 97.78, 98.89, 100.0]%	[66.67, 85.71, 100.0, 85.71, 83.33, 76.92, 83.33, 61.54, 83.33, 66.67, 71.43, 92.31, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 75.0, 83.33, 71.43, 83.33, 57.14, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.81, 97.59, 98.81, 96.55, 98.78, 100.0, 97.67, 98.82, 100.0]%	||	81.86%	82.22%	98.73%	85.12%	98.75%	
  3  2  0  0  0  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	64.44%	95.26%	61.9%	[96.67, 90.0, 98.89, 96.67, 98.89, 92.22, 95.56, 94.44, 97.78, 92.22, 96.67, 95.56, 93.33, 94.44, 95.56]%	[72.73, 30.77, 92.31, 72.73, 90.91, 53.33, 71.43, 66.67, 83.33, 46.15, 72.73, 60.0, 57.14, 44.44, 50.0]%	[66.67, 33.33, 100.0, 66.67, 83.33, 66.67, 83.33, 83.33, 83.33, 50.0, 66.67, 50.0, 66.67, 33.33, 33.33]%	[98.81, 94.05, 98.81, 98.81, 100.0, 94.05, 96.43, 95.24, 98.81, 95.24, 98.81, 98.81, 95.24, 98.81, 100.0]%	[80.0, 28.57, 85.71, 80.0, 100.0, 44.44, 62.5, 55.56, 83.33, 42.86, 80.0, 75.0, 50.0, 66.67, 100.0]%	[97.65, 95.18, 100.0, 97.65, 98.82, 97.53, 98.78, 98.77, 98.81, 96.39, 97.65, 96.51, 97.56, 95.4, 95.45]%	||	64.31%	64.44%	97.46%	68.98%	97.48%	
  4  1  0  0  0  0  0  0  0  0  0  0  0  1  0  66.67%		1
  1  2  0  0  0  0  2  0  0  1  0  0  0  0  0  33.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  1  0  4  0  1  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  1  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  2  0  0  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  2  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  4  0  0  0  0  0  0  0  2  0  33.33%		14
  0  0  0  0  0  0  0  2  0  1  0  0  1  0  2  33.33%		15
Forest OOB Error: 55.07%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[97.78, 97.78, 100.0, 96.67, 97.78, 96.67, 98.89, 94.44, 97.78, 96.67, 95.56, 98.89, 97.78, 97.78, 100.0]%	[80.0, 85.71, 100.0, 80.0, 83.33, 76.92, 90.91, 61.54, 83.33, 66.67, 71.43, 92.31, 80.0, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 66.67, 100.0]%	[100.0, 97.62, 100.0, 96.43, 98.81, 97.62, 100.0, 96.43, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 66.67, 83.33, 71.43, 100.0, 57.14, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.59, 98.81, 96.55, 98.78, 100.0, 97.67, 97.67, 100.0]%	||	82.14%	82.22%	98.73%	85.67%	98.75%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[96.67, 94.44, 97.78, 98.89, 96.67, 97.78, 95.56, 97.78, 95.56, 95.56, 96.67, 96.67, 96.67, 97.78, 98.89]%	[66.67, 66.67, 83.33, 90.91, 76.92, 80.0, 71.43, 83.33, 71.43, 66.67, 76.92, 72.73, 72.73, 83.33, 90.91]%	[50.0, 83.33, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 66.67, 83.33, 66.67, 66.67, 83.33, 83.33]%	[100.0, 95.24, 98.81, 100.0, 97.62, 100.0, 96.43, 98.81, 96.43, 97.62, 97.62, 98.81, 98.81, 98.81, 100.0]%	[100.0, 55.56, 83.33, 100.0, 71.43, 100.0, 62.5, 83.33, 62.5, 66.67, 71.43, 80.0, 80.0, 83.33, 100.0]%	[96.55, 98.77, 98.81, 98.82, 98.8, 97.67, 98.78, 98.81, 98.78, 97.62, 98.8, 97.65, 97.65, 98.81, 98.82]%	||	76.93%	76.67%	98.33%	80.01%	98.34%	
  3  2  0  0  0  0  0  0  1  0  0  0  0  0  0  50.0%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  0  0  0  0  1  0  0  83.33%		3
  0  1  0  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  1  0  1  4  0  0  0  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  5  0  0  0  0  1  0  0  0  83.33%		7
  0  0  0  0  0  0  1  5  0  0  0  0  0  0  0  83.33%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  1  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  1  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 52.27%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[97.78, 97.78, 100.0, 96.67, 97.78, 96.67, 98.89, 94.44, 97.78, 96.67, 95.56, 98.89, 97.78, 97.78, 100.0]%	[80.0, 85.71, 100.0, 80.0, 83.33, 76.92, 90.91, 61.54, 83.33, 66.67, 71.43, 92.31, 80.0, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 66.67, 100.0]%	[100.0, 97.62, 100.0, 96.43, 98.81, 97.62, 100.0, 96.43, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 66.67, 83.33, 71.43, 100.0, 57.14, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.59, 98.81, 96.55, 98.78, 100.0, 97.67, 97.67, 100.0]%	||	82.14%	82.22%	98.73%	85.67%	98.75%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[95.56, 93.33, 95.56, 97.78, 98.89, 97.78, 95.56, 96.67, 97.78, 95.56, 95.56, 95.56, 94.44, 98.89, 97.78]%	[60.0, 62.5, 66.67, 83.33, 90.91, 83.33, 60.0, 76.92, 83.33, 60.0, 75.0, 66.67, 54.55, 92.31, 80.0]%	[50.0, 83.33, 66.67, 83.33, 83.33, 83.33, 50.0, 83.33, 83.33, 50.0, 100.0, 66.67, 50.0, 100.0, 66.67]%	[98.81, 94.05, 97.62, 98.81, 100.0, 98.81, 98.81, 97.62, 98.81, 98.81, 95.24, 97.62, 97.62, 98.81, 100.0]%	[75.0, 50.0, 66.67, 83.33, 100.0, 83.33, 75.0, 71.43, 83.33, 75.0, 60.0, 66.67, 60.0, 85.71, 100.0]%	[96.51, 98.75, 97.62, 98.81, 98.82, 98.81, 96.51, 98.8, 98.81, 96.51, 100.0, 97.62, 96.47, 100.0, 97.67]%	||	73.03%	73.33%	98.1%	75.7%	98.11%	
  3  2  0  0  0  0  0  0  0  0  0  0  0  1  0  50.0%		1
  0  5  0  0  0  0  0  0  0  0  0  0  1  0  0  83.33%		2
  0  0  4  0  0  1  0  0  0  0  0  1  0  0  0  66.67%		3
  0  1  0  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  1  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  3  2  0  0  0  0  0  0  0  50.0%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  2  0  0  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  3  0  3  0  0  50.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  1  0  1  0  4  66.67%		15
Forest OOB Error: 58.02%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[97.78, 97.78, 100.0, 96.67, 97.78, 96.67, 98.89, 94.44, 97.78, 96.67, 95.56, 98.89, 97.78, 97.78, 100.0]%	[80.0, 85.71, 100.0, 80.0, 83.33, 76.92, 90.91, 61.54, 83.33, 66.67, 71.43, 92.31, 80.0, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 66.67, 100.0]%	[100.0, 97.62, 100.0, 96.43, 98.81, 97.62, 100.0, 96.43, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 66.67, 83.33, 71.43, 100.0, 57.14, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.59, 98.81, 96.55, 98.78, 100.0, 97.67, 97.67, 100.0]%	||	82.14%	82.22%	98.73%	85.67%	98.75%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[98.89, 98.89, 96.67, 98.89, 96.67, 92.22, 97.78, 94.44, 97.78, 96.67, 95.56, 95.56, 97.78, 95.56, 97.78]%	[90.91, 92.31, 76.92, 90.91, 72.73, 53.33, 83.33, 54.55, 85.71, 72.73, 71.43, 71.43, 80.0, 60.0, 80.0]%	[83.33, 100.0, 83.33, 83.33, 66.67, 66.67, 83.33, 50.0, 100.0, 66.67, 83.33, 83.33, 66.67, 50.0, 66.67]%	[100.0, 98.81, 97.62, 100.0, 98.81, 94.05, 98.81, 97.62, 97.62, 98.81, 96.43, 96.43, 100.0, 98.81, 100.0]%	[100.0, 85.71, 71.43, 100.0, 80.0, 44.44, 83.33, 60.0, 75.0, 80.0, 62.5, 62.5, 100.0, 75.0, 100.0]%	[98.82, 100.0, 98.8, 98.82, 97.65, 97.53, 98.81, 96.47, 100.0, 97.65, 98.78, 98.78, 97.67, 96.51, 97.67]%	||	75.75%	75.56%	98.25%	78.66%	98.26%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  1  4  0  0  0  0  0  1  0  0  0  66.67%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  1  3  0  0  1  0  0  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  4  0  2  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  3  0  0  0  0  0  0  0  3  0  50.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 53.1%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[97.78, 97.78, 100.0, 96.67, 97.78, 96.67, 98.89, 94.44, 97.78, 96.67, 95.56, 98.89, 97.78, 97.78, 100.0]%	[80.0, 85.71, 100.0, 80.0, 83.33, 76.92, 90.91, 61.54, 83.33, 66.67, 71.43, 92.31, 80.0, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 66.67, 100.0]%	[100.0, 97.62, 100.0, 96.43, 98.81, 97.62, 100.0, 96.43, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 66.67, 83.33, 71.43, 100.0, 57.14, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.59, 98.81, 96.55, 98.78, 100.0, 97.67, 97.67, 100.0]%	||	82.14%	82.22%	98.73%	85.67%	98.75%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[95.56, 97.78, 96.67, 97.78, 98.89, 97.78, 96.67, 93.33, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 97.78]%	[60.0, 85.71, 72.73, 83.33, 90.91, 83.33, 76.92, 50.0, 71.43, 85.71, 44.44, 72.73, 71.43, 92.31, 80.0]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 83.33, 50.0, 83.33, 100.0, 33.33, 66.67, 83.33, 100.0, 66.67]%	[98.81, 97.62, 98.81, 98.81, 100.0, 98.81, 97.62, 96.43, 96.43, 97.62, 98.81, 98.81, 96.43, 98.81, 100.0]%	[75.0, 75.0, 80.0, 83.33, 100.0, 83.33, 71.43, 50.0, 62.5, 75.0, 66.67, 80.0, 62.5, 85.71, 100.0]%	[96.51, 100.0, 97.65, 98.81, 98.82, 98.81, 98.8, 96.43, 98.78, 100.0, 95.4, 97.65, 98.78, 100.0, 97.67]%	||	74.73%	75.56%	98.25%	76.7%	98.27%	
  3  2  0  0  0  0  0  0  0  1  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  4  1  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  0  0  0  0  0  0  0  1  0  83.33%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  0  0  1  0  0  0  83.33%		7
  0  0  1  0  0  0  0  3  1  0  1  0  0  0  0  50.0%		8
  1  0  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  2  0  0  2  0  2  0  0  33.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  1  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  1  0  4  66.67%		15
Forest OOB Error: 54.44%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[97.78, 97.78, 100.0, 96.67, 97.78, 96.67, 98.89, 94.44, 97.78, 96.67, 95.56, 98.89, 97.78, 97.78, 100.0]%	[80.0, 85.71, 100.0, 80.0, 83.33, 76.92, 90.91, 61.54, 83.33, 66.67, 71.43, 92.31, 80.0, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 66.67, 100.0]%	[100.0, 97.62, 100.0, 96.43, 98.81, 97.62, 100.0, 96.43, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 66.67, 83.33, 71.43, 100.0, 57.14, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.59, 98.81, 96.55, 98.78, 100.0, 97.67, 97.67, 100.0]%	||	82.14%	82.22%	98.73%	85.67%	98.75%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[98.89, 98.89, 94.44, 96.67, 98.89, 96.67, 94.44, 97.78, 93.33, 96.67, 93.33, 97.78, 94.44, 95.56, 98.89]%	[92.31, 90.91, 66.67, 66.67, 92.31, 76.92, 54.55, 80.0, 50.0, 76.92, 62.5, 80.0, 54.55, 66.67, 90.91]%	[100.0, 83.33, 83.33, 50.0, 100.0, 83.33, 50.0, 66.67, 50.0, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33]%	[98.81, 100.0, 95.24, 100.0, 98.81, 97.62, 97.62, 100.0, 96.43, 97.62, 94.05, 100.0, 97.62, 97.62, 100.0]%	[85.71, 100.0, 55.56, 100.0, 85.71, 71.43, 60.0, 100.0, 50.0, 71.43, 50.0, 100.0, 60.0, 66.67, 100.0]%	[100.0, 98.82, 98.77, 96.55, 100.0, 98.8, 96.47, 97.67, 96.43, 98.8, 98.75, 97.67, 96.47, 97.62, 98.82]%	||	73.46%	73.33%	98.1%	77.1%	98.11%	
  6  0  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		1
  0  5  0  0  0  0  0  0  0  0  0  0  1  0  0  83.33%		2
  0  0  5  0  0  0  0  0  0  0  1  0  0  0  0  83.33%		3
  0  0  0  3  0  2  0  0  0  0  1  0  0  0  0  50.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  3  0  0  1  0  0  0  1  0  50.0%		7
  0  0  1  0  0  0  0  4  0  0  1  0  0  0  0  66.67%		8
  0  0  3  0  0  0  0  0  3  0  0  0  0  0  0  50.0%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  1  0  2  0  3  0  0  50.0%		13
  0  0  0  0  1  0  0  0  1  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  1  5  83.33%		15
Forest OOB Error: 59.62%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[97.78, 97.78, 100.0, 96.67, 97.78, 96.67, 98.89, 94.44, 97.78, 96.67, 95.56, 98.89, 97.78, 97.78, 100.0]%	[80.0, 85.71, 100.0, 80.0, 83.33, 76.92, 90.91, 61.54, 83.33, 66.67, 71.43, 92.31, 80.0, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 66.67, 100.0]%	[100.0, 97.62, 100.0, 96.43, 98.81, 97.62, 100.0, 96.43, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 66.67, 83.33, 71.43, 100.0, 57.14, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.59, 98.81, 96.55, 98.78, 100.0, 97.67, 97.67, 100.0]%	||	82.14%	82.22%	98.73%	85.67%	98.75%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	74.44%	96.59%	72.62%	[94.44, 96.67, 95.56, 97.78, 98.89, 97.78, 95.56, 93.33, 95.56, 94.44, 95.56, 97.78, 97.78, 100.0, 97.78]%	[54.55, 76.92, 66.67, 80.0, 92.31, 83.33, 75.0, 40.0, 75.0, 54.55, 66.67, 80.0, 83.33, 100.0, 80.0]%	[50.0, 83.33, 66.67, 66.67, 100.0, 83.33, 100.0, 33.33, 100.0, 50.0, 66.67, 66.67, 83.33, 100.0, 66.67]%	[97.62, 97.62, 97.62, 100.0, 98.81, 98.81, 95.24, 97.62, 95.24, 97.62, 97.62, 100.0, 98.81, 100.0, 100.0]%	[60.0, 71.43, 66.67, 100.0, 85.71, 83.33, 60.0, 50.0, 60.0, 60.0, 66.67, 100.0, 83.33, 100.0, 100.0]%	[96.47, 98.8, 97.62, 97.67, 100.0, 98.81, 100.0, 95.35, 100.0, 96.47, 97.62, 97.67, 98.81, 100.0, 97.67]%	||	73.89%	74.44%	98.17%	76.48%	98.2%	
  3  2  0  0  1  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  4  0  1  0  0  1  0  0  0  0  0  0  66.67%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  2  0  0  0  0  2  1  0  1  0  0  0  0  33.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  2  0  1  3  0  0  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  1  0  0  0  0  0  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 58.24%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[96.67, 97.78, 100.0, 97.78, 97.78, 96.67, 97.78, 94.44, 97.78, 95.56, 95.56, 97.78, 97.78, 98.89, 100.0]%	[66.67, 85.71, 100.0, 85.71, 83.33, 76.92, 83.33, 61.54, 83.33, 50.0, 71.43, 85.71, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 33.33, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0, 96.43, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 75.0, 83.33, 71.43, 83.33, 57.14, 83.33, 100.0, 62.5, 75.0, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.81, 97.59, 98.81, 95.45, 98.78, 100.0, 97.67, 98.82, 100.0]%	||	80.31%	81.11%	98.65%	84.4%	98.67%	
  3  2  0  0  0  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  2  0  2  0  0  0  33.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[96.67, 97.78, 95.56, 97.78, 98.89, 97.78, 96.67, 96.67, 98.89, 95.56, 97.78, 97.78, 97.78, 98.89, 97.78]%	[66.67, 85.71, 66.67, 83.33, 90.91, 83.33, 80.0, 76.92, 92.31, 50.0, 83.33, 83.33, 85.71, 92.31, 80.0]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 33.33, 83.33, 83.33, 100.0, 100.0, 66.67]%	[100.0, 97.62, 97.62, 98.81, 100.0, 98.81, 96.43, 97.62, 98.81, 100.0, 98.81, 98.81, 97.62, 98.81, 100.0]%	[100.0, 75.0, 66.67, 83.33, 100.0, 83.33, 66.67, 71.43, 85.71, 100.0, 83.33, 83.33, 75.0, 85.71, 100.0]%	[96.55, 100.0, 97.62, 98.81, 98.82, 98.81, 100.0, 98.8, 100.0, 95.45, 98.81, 98.81, 100.0, 100.0, 97.67]%	||	80.04%	81.11%	98.65%	83.97%	98.68%	
  3  1  1  0  0  0  0  0  0  0  0  0  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  4  1  0  0  0  0  0  0  0  0  1  0  0  66.67%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  1  0  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  2  0  1  2  0  1  0  0  0  33.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  1  0  4  66.67%		15
Forest OOB Error: 53.03%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[96.67, 97.78, 100.0, 97.78, 97.78, 96.67, 97.78, 94.44, 97.78, 95.56, 95.56, 97.78, 97.78, 98.89, 100.0]%	[66.67, 85.71, 100.0, 85.71, 83.33, 76.92, 83.33, 61.54, 83.33, 50.0, 71.43, 85.71, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 33.33, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0, 96.43, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 75.0, 83.33, 71.43, 83.33, 57.14, 83.33, 100.0, 62.5, 75.0, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.81, 97.59, 98.81, 95.45, 98.78, 100.0, 97.67, 98.82, 100.0]%	||	80.31%	81.11%	98.65%	84.4%	98.67%	
  3  2  0  0  0  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  2  0  2  0  0  0  33.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	74.44%	96.59%	72.62%	[97.78, 93.33, 98.89, 97.78, 96.67, 97.78, 95.56, 95.56, 94.44, 95.56, 97.78, 94.44, 98.89, 98.89, 95.56]%	[80.0, 57.14, 92.31, 83.33, 66.67, 83.33, 71.43, 71.43, 54.55, 71.43, 83.33, 54.55, 90.91, 92.31, 60.0]%	[66.67, 66.67, 100.0, 83.33, 50.0, 83.33, 83.33, 83.33, 50.0, 83.33, 83.33, 50.0, 83.33, 100.0, 50.0]%	[100.0, 95.24, 98.81, 98.81, 100.0, 98.81, 96.43, 96.43, 97.62, 96.43, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 50.0, 85.71, 83.33, 100.0, 83.33, 62.5, 62.5, 60.0, 62.5, 83.33, 60.0, 100.0, 85.71, 75.0]%	[97.67, 97.56, 100.0, 98.81, 96.55, 98.81, 98.78, 98.78, 96.47, 98.78, 98.81, 96.47, 98.82, 100.0, 96.51]%	||	74.18%	74.44%	98.17%	76.93%	98.19%	
  4  1  0  0  0  0  0  0  1  0  0  0  0  0  0  66.67%		1
  0  4  0  0  0  0  2  0  0  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  1  3  0  0  0  0  0  0  1  0  1  0  50.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  3  0  0  0  0  0  0  3  0  0  0  0  0  0  50.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  2  0  3  0  0  1  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  1  1  0  1  0  0  0  0  3  50.0%		15
Forest OOB Error: 54.92%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[96.67, 97.78, 100.0, 97.78, 97.78, 96.67, 97.78, 94.44, 97.78, 95.56, 95.56, 97.78, 97.78, 98.89, 100.0]%	[66.67, 85.71, 100.0, 85.71, 83.33, 76.92, 83.33, 61.54, 83.33, 50.0, 71.43, 85.71, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 33.33, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0, 96.43, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 75.0, 83.33, 71.43, 83.33, 57.14, 83.33, 100.0, 62.5, 75.0, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.81, 97.59, 98.81, 95.45, 98.78, 100.0, 97.67, 98.82, 100.0]%	||	80.31%	81.11%	98.65%	84.4%	98.67%	
  3  2  0  0  0  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  2  0  2  0  0  0  33.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[95.56, 96.67, 96.67, 96.67, 98.89, 97.78, 92.22, 95.56, 96.67, 96.67, 96.67, 97.78, 97.78, 98.89, 96.67]%	[66.67, 80.0, 72.73, 72.73, 90.91, 83.33, 46.15, 60.0, 76.92, 80.0, 80.0, 80.0, 83.33, 90.91, 66.67]%	[66.67, 100.0, 66.67, 66.67, 83.33, 83.33, 50.0, 50.0, 83.33, 100.0, 100.0, 66.67, 83.33, 83.33, 50.0]%	[97.62, 96.43, 98.81, 98.81, 100.0, 98.81, 95.24, 98.81, 97.62, 96.43, 96.43, 100.0, 98.81, 100.0, 100.0]%	[66.67, 66.67, 80.0, 80.0, 100.0, 83.33, 42.86, 75.0, 71.43, 66.67, 66.67, 100.0, 83.33, 100.0, 100.0]%	[97.62, 100.0, 97.65, 97.65, 98.82, 98.81, 96.39, 96.51, 98.8, 100.0, 100.0, 97.67, 98.81, 98.82, 96.55]%	||	75.36%	75.56%	98.25%	78.84%	98.27%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  4  0  0  0  2  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  1  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  3  0  0  1  1  0  0  0  0  50.0%		7
  0  0  1  0  0  0  0  3  1  0  1  0  0  0  0  50.0%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  1  0  0  0  0  0  0  5  0  83.33%		14
  1  0  0  0  0  0  0  1  0  0  0  0  1  0  3  50.0%		15
Forest OOB Error: 57.59%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[96.67, 97.78, 100.0, 97.78, 97.78, 96.67, 97.78, 94.44, 97.78, 95.56, 95.56, 97.78, 97.78, 98.89, 100.0]%	[66.67, 85.71, 100.0, 85.71, 83.33, 76.92, 83.33, 61.54, 83.33, 50.0, 71.43, 85.71, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 33.33, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0, 96.43, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 75.0, 83.33, 71.43, 83.33, 57.14, 83.33, 100.0, 62.5, 75.0, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.81, 97.59, 98.81, 95.45, 98.78, 100.0, 97.67, 98.82, 100.0]%	||	80.31%	81.11%	98.65%	84.4%	98.67%	
  3  2  0  0  0  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  2  0  2  0  0  0  33.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[97.78, 97.78, 100.0, 95.56, 97.78, 95.56, 95.56, 94.44, 95.56, 97.78, 93.33, 98.89, 96.67, 100.0, 96.67]%	[80.0, 85.71, 100.0, 60.0, 80.0, 71.43, 66.67, 61.54, 71.43, 83.33, 57.14, 90.91, 66.67, 100.0, 76.92]%	[66.67, 100.0, 100.0, 50.0, 66.67, 83.33, 66.67, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 100.0, 83.33]%	[100.0, 97.62, 100.0, 98.81, 100.0, 96.43, 97.62, 96.43, 96.43, 98.81, 95.24, 100.0, 100.0, 100.0, 97.62]%	[100.0, 75.0, 100.0, 75.0, 100.0, 62.5, 66.67, 57.14, 62.5, 83.33, 50.0, 100.0, 100.0, 100.0, 71.43]%	[97.67, 100.0, 100.0, 96.51, 97.67, 98.78, 97.62, 97.59, 98.78, 98.81, 97.56, 98.82, 96.55, 100.0, 98.8]%	||	76.78%	76.67%	98.33%	80.24%	98.34%	
  4  1  0  0  0  0  0  0  1  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  1  0  3  0  2  0  0  0  0  0  0  0  0  0  50.0%		4
  0  0  0  1  4  0  0  0  1  0  0  0  0  0  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  4  0  0  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  5  0  0  0  0  0  1  83.33%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  3  0  3  0  0  50.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 55.86%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[96.67, 97.78, 100.0, 97.78, 97.78, 96.67, 97.78, 94.44, 97.78, 95.56, 95.56, 97.78, 97.78, 98.89, 100.0]%	[66.67, 85.71, 100.0, 85.71, 83.33, 76.92, 83.33, 61.54, 83.33, 50.0, 71.43, 85.71, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 33.33, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0, 96.43, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 75.0, 83.33, 71.43, 83.33, 57.14, 83.33, 100.0, 62.5, 75.0, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.81, 97.59, 98.81, 95.45, 98.78, 100.0, 97.67, 98.82, 100.0]%	||	80.31%	81.11%	98.65%	84.4%	98.67%	
  3  2  0  0  0  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  2  0  2  0  0  0  33.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	67.78%	95.7%	65.48%	[95.56, 94.44, 94.44, 94.44, 97.78, 94.44, 95.56, 94.44, 95.56, 95.56, 97.78, 96.67, 95.56, 97.78, 95.56]%	[60.0, 66.67, 66.67, 54.55, 83.33, 44.44, 75.0, 61.54, 60.0, 75.0, 83.33, 66.67, 60.0, 83.33, 60.0]%	[50.0, 83.33, 83.33, 50.0, 83.33, 33.33, 100.0, 66.67, 50.0, 100.0, 83.33, 50.0, 50.0, 83.33, 50.0]%	[98.81, 95.24, 95.24, 97.62, 98.81, 98.81, 95.24, 96.43, 98.81, 95.24, 98.81, 100.0, 98.81, 98.81, 98.81]%	[75.0, 55.56, 55.56, 60.0, 83.33, 66.67, 60.0, 57.14, 75.0, 60.0, 83.33, 100.0, 75.0, 83.33, 75.0]%	[96.51, 98.77, 98.77, 96.47, 98.81, 95.4, 100.0, 97.59, 96.51, 100.0, 98.81, 96.55, 96.51, 98.81, 96.51]%	||	66.7%	67.78%	97.7%	70.99%	97.73%	
  3  3  0  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  5  0  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  3  0  1  1  0  0  0  0  0  1  0  0  50.0%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  2  1  2  0  0  1  0  0  0  0  0  0  33.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  2  0  0  0  0  4  0  0  0  0  0  0  0  66.67%		8
  0  1  1  0  0  0  0  1  3  0  0  0  0  0  0  50.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  2  0  3  0  0  0  50.0%		12
  1  0  1  0  0  0  0  0  0  0  1  0  3  0  0  50.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  5  1  83.33%		14
  0  0  0  0  0  0  0  1  0  1  0  0  0  1  3  50.0%		15
Forest OOB Error: 53.88%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[96.67, 97.78, 100.0, 97.78, 97.78, 96.67, 97.78, 94.44, 97.78, 95.56, 95.56, 97.78, 97.78, 98.89, 100.0]%	[66.67, 85.71, 100.0, 85.71, 83.33, 76.92, 83.33, 61.54, 83.33, 50.0, 71.43, 85.71, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 33.33, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0, 96.43, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 75.0, 83.33, 71.43, 83.33, 57.14, 83.33, 100.0, 62.5, 75.0, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.81, 97.59, 98.81, 95.45, 98.78, 100.0, 97.67, 98.82, 100.0]%	||	80.31%	81.11%	98.65%	84.4%	98.67%	
  3  2  0  0  0  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  2  0  2  0  0  0  33.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	70.0%	96.0%	67.86%	[97.78, 94.44, 96.67, 97.78, 97.78, 97.78, 90.0, 95.56, 93.33, 93.33, 95.56, 97.78, 94.44, 100.0, 97.78]%	[80.0, 66.67, 76.92, 80.0, 80.0, 83.33, 40.0, 60.0, 40.0, 62.5, 60.0, 83.33, 66.67, 100.0, 80.0]%	[66.67, 83.33, 83.33, 66.67, 66.67, 83.33, 50.0, 50.0, 33.33, 83.33, 50.0, 83.33, 83.33, 100.0, 66.67]%	[100.0, 95.24, 97.62, 100.0, 100.0, 98.81, 92.86, 98.81, 97.62, 94.05, 98.81, 98.81, 95.24, 100.0, 100.0]%	[100.0, 55.56, 71.43, 100.0, 100.0, 83.33, 33.33, 75.0, 50.0, 50.0, 75.0, 83.33, 55.56, 100.0, 100.0]%	[97.67, 98.77, 98.8, 97.67, 97.67, 98.81, 96.3, 96.51, 95.35, 98.75, 96.51, 98.81, 98.77, 100.0, 97.67]%	||	70.63%	70.0%	97.86%	75.5%	97.87%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		3
  0  1  0  4  0  1  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  4  0  1  1  0  0  0  0  0  0  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  3  0  0  3  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  1  3  1  0  0  0  1  0  0  50.0%		8
  0  1  2  0  0  0  1  0  2  0  0  0  0  0  0  33.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  3  0  3  0  0  50.0%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  2  0  0  0  0  4  66.67%		15
Forest OOB Error: 58.47%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[96.67, 97.78, 100.0, 97.78, 97.78, 96.67, 97.78, 94.44, 97.78, 96.67, 95.56, 98.89, 97.78, 98.89, 100.0]%	[66.67, 85.71, 100.0, 85.71, 83.33, 76.92, 83.33, 61.54, 83.33, 66.67, 71.43, 92.31, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 75.0, 83.33, 71.43, 83.33, 57.14, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.81, 97.59, 98.81, 96.55, 98.78, 100.0, 97.67, 98.82, 100.0]%	||	81.86%	82.22%	98.73%	85.12%	98.75%	
  3  2  0  0  0  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[98.89, 97.78, 96.67, 97.78, 97.78, 96.67, 93.33, 93.33, 97.78, 95.56, 96.67, 98.89, 95.56, 96.67, 97.78]%	[90.91, 85.71, 76.92, 83.33, 83.33, 66.67, 57.14, 50.0, 83.33, 66.67, 66.67, 90.91, 75.0, 76.92, 80.0]%	[83.33, 100.0, 83.33, 83.33, 83.33, 50.0, 66.67, 50.0, 83.33, 66.67, 50.0, 83.33, 100.0, 83.33, 66.67]%	[100.0, 97.62, 97.62, 98.81, 98.81, 100.0, 95.24, 96.43, 98.81, 97.62, 100.0, 100.0, 95.24, 97.62, 100.0]%	[100.0, 75.0, 71.43, 83.33, 83.33, 100.0, 50.0, 50.0, 83.33, 66.67, 100.0, 100.0, 60.0, 71.43, 100.0]%	[98.82, 100.0, 98.8, 98.81, 98.81, 96.55, 97.56, 96.43, 98.81, 97.62, 96.55, 98.82, 100.0, 98.8, 97.67]%	||	75.57%	75.56%	98.25%	79.63%	98.27%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  0  0  0  1  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  1  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  1  3  1  0  0  0  0  0  0  1  0  50.0%		6
  0  0  0  1  0  0  4  0  0  1  0  0  0  0  0  66.67%		7
  0  0  1  0  0  0  0  3  0  0  0  0  2  0  0  50.0%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  1  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  3  0  2  0  0  50.0%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  1  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  1  0  0  0  0  4  66.67%		15
Forest OOB Error: 51.33%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[96.67, 97.78, 100.0, 97.78, 97.78, 96.67, 97.78, 94.44, 97.78, 96.67, 95.56, 98.89, 97.78, 98.89, 100.0]%	[66.67, 85.71, 100.0, 85.71, 83.33, 76.92, 83.33, 61.54, 83.33, 66.67, 71.43, 92.31, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 75.0, 83.33, 71.43, 83.33, 57.14, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.81, 97.59, 98.81, 96.55, 98.78, 100.0, 97.67, 98.82, 100.0]%	||	81.86%	82.22%	98.73%	85.12%	98.75%	
  3  2  0  0  0  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[96.67, 98.89, 97.78, 100.0, 95.56, 97.78, 96.67, 96.67, 98.89, 97.78, 97.78, 96.67, 97.78, 97.78, 97.78]%	[72.73, 92.31, 83.33, 100.0, 66.67, 83.33, 80.0, 72.73, 92.31, 83.33, 83.33, 72.73, 83.33, 80.0, 83.33]%	[66.67, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[98.81, 98.81, 98.81, 100.0, 97.62, 98.81, 96.43, 98.81, 98.81, 98.81, 98.81, 98.81, 98.81, 100.0, 98.81]%	[80.0, 85.71, 83.33, 100.0, 66.67, 83.33, 66.67, 80.0, 85.71, 83.33, 83.33, 80.0, 83.33, 100.0, 83.33]%	[97.65, 100.0, 98.81, 100.0, 97.62, 98.81, 100.0, 97.65, 100.0, 98.81, 98.81, 97.65, 98.81, 97.67, 98.81]%	||	81.96%	82.22%	98.73%	82.98%	98.74%	
  4  1  0  0  0  0  1  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  1  0  1  0  4  0  0  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  1  4  0  0  0  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  1  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 50.59%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[96.67, 97.78, 100.0, 97.78, 97.78, 96.67, 97.78, 94.44, 97.78, 96.67, 95.56, 98.89, 97.78, 98.89, 100.0]%	[66.67, 85.71, 100.0, 85.71, 83.33, 76.92, 83.33, 61.54, 83.33, 66.67, 71.43, 92.31, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 75.0, 83.33, 71.43, 83.33, 57.14, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.81, 97.59, 98.81, 96.55, 98.78, 100.0, 97.67, 98.82, 100.0]%	||	81.86%	82.22%	98.73%	85.12%	98.75%	
  3  2  0  0  0  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	67.78%	95.7%	65.48%	[96.67, 95.56, 97.78, 97.78, 95.56, 96.67, 93.33, 94.44, 95.56, 93.33, 95.56, 95.56, 92.22, 97.78, 97.78]%	[72.73, 71.43, 80.0, 80.0, 71.43, 72.73, 40.0, 61.54, 71.43, 57.14, 60.0, 60.0, 58.82, 83.33, 80.0]%	[66.67, 83.33, 66.67, 66.67, 83.33, 66.67, 33.33, 66.67, 83.33, 66.67, 50.0, 50.0, 83.33, 83.33, 66.67]%	[98.81, 96.43, 100.0, 100.0, 96.43, 98.81, 97.62, 96.43, 96.43, 95.24, 98.81, 98.81, 92.86, 98.81, 100.0]%	[80.0, 62.5, 100.0, 100.0, 62.5, 80.0, 50.0, 57.14, 62.5, 50.0, 75.0, 75.0, 45.45, 83.33, 100.0]%	[97.65, 98.78, 97.67, 97.67, 98.78, 97.65, 95.35, 97.59, 98.78, 97.56, 96.51, 96.51, 98.73, 98.81, 97.67]%	||	68.04%	67.78%	97.7%	72.23%	97.72%	
  4  1  0  0  0  0  0  0  1  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  1  0  4  0  0  0  0  0  0  0  0  0  1  0  0  66.67%		3
  0  0  0  4  2  0  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  1  0  0  0  4  0  0  0  0  0  0  0  1  0  66.67%		6
  0  1  0  0  0  0  2  1  0  2  0  0  0  0  0  33.33%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  1  4  0  1  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  3  0  3  0  0  50.0%		11
  0  0  0  0  0  0  1  1  0  1  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  1  0  0  0  0  4  66.67%		15
Forest OOB Error: 57.71%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[96.67, 97.78, 100.0, 97.78, 97.78, 96.67, 97.78, 94.44, 97.78, 96.67, 95.56, 98.89, 97.78, 98.89, 100.0]%	[66.67, 85.71, 100.0, 85.71, 83.33, 76.92, 83.33, 61.54, 83.33, 66.67, 71.43, 92.31, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 75.0, 83.33, 71.43, 83.33, 57.14, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.81, 97.59, 98.81, 96.55, 98.78, 100.0, 97.67, 98.82, 100.0]%	||	81.86%	82.22%	98.73%	85.12%	98.75%	
  3  2  0  0  0  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[97.78, 100.0, 100.0, 98.89, 98.89, 96.67, 95.56, 93.33, 96.67, 95.56, 97.78, 95.56, 96.67, 96.67, 97.78]%	[80.0, 100.0, 100.0, 90.91, 90.91, 76.92, 60.0, 57.14, 76.92, 71.43, 80.0, 66.67, 80.0, 72.73, 83.33]%	[66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 50.0, 66.67, 83.33, 83.33, 66.67, 66.67, 100.0, 66.67, 83.33]%	[100.0, 100.0, 100.0, 100.0, 100.0, 97.62, 98.81, 95.24, 97.62, 96.43, 100.0, 97.62, 96.43, 98.81, 98.81]%	[100.0, 100.0, 100.0, 100.0, 100.0, 71.43, 75.0, 50.0, 71.43, 62.5, 100.0, 66.67, 66.67, 80.0, 83.33]%	[97.67, 100.0, 100.0, 98.82, 98.82, 98.8, 96.51, 97.56, 98.8, 98.78, 97.67, 97.62, 100.0, 97.65, 98.81]%	||	79.13%	78.89%	98.49%	81.8%	98.5%	
  4  0  0  0  0  0  0  0  1  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  0  0  1  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  0  0  0  1  0  0  0  83.33%		6
  0  0  0  0  0  0  3  2  0  1  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  0  0  0  0  5  0  0  0  0  0  1  83.33%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 57.31%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[96.67, 97.78, 100.0, 97.78, 97.78, 96.67, 97.78, 94.44, 97.78, 96.67, 95.56, 98.89, 97.78, 98.89, 100.0]%	[66.67, 85.71, 100.0, 85.71, 83.33, 76.92, 83.33, 61.54, 83.33, 66.67, 71.43, 92.31, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 75.0, 83.33, 71.43, 83.33, 57.14, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.81, 97.59, 98.81, 96.55, 98.78, 100.0, 97.67, 98.82, 100.0]%	||	81.86%	82.22%	98.73%	85.12%	98.75%	
  3  2  0  0  0  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[98.89, 97.78, 96.67, 98.89, 98.89, 96.67, 97.78, 93.33, 95.56, 97.78, 95.56, 96.67, 97.78, 97.78, 97.78]%	[92.31, 83.33, 72.73, 90.91, 92.31, 66.67, 83.33, 57.14, 66.67, 85.71, 66.67, 72.73, 80.0, 85.71, 83.33]%	[100.0, 83.33, 66.67, 83.33, 100.0, 50.0, 83.33, 66.67, 66.67, 100.0, 66.67, 66.67, 66.67, 100.0, 83.33]%	[98.81, 98.81, 98.81, 100.0, 98.81, 100.0, 98.81, 95.24, 97.62, 97.62, 97.62, 98.81, 100.0, 97.62, 98.81]%	[85.71, 83.33, 80.0, 100.0, 85.71, 100.0, 83.33, 50.0, 66.67, 75.0, 66.67, 80.0, 100.0, 75.0, 83.33]%	[100.0, 98.81, 97.65, 98.82, 100.0, 96.55, 98.81, 97.56, 97.62, 100.0, 97.62, 97.65, 97.67, 100.0, 98.81]%	||	78.64%	78.89%	98.49%	80.98%	98.5%	
  6  0  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  1  0  4  0  0  0  0  1  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  0  0  0  0  0  1  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  3  0  0  1  0  0  0  0  2  0  50.0%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  4  0  0  0  0  0  0  1  66.67%		8
  0  1  0  0  1  0  0  0  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 52.65%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[96.67, 97.78, 100.0, 97.78, 97.78, 96.67, 97.78, 94.44, 97.78, 96.67, 95.56, 98.89, 97.78, 98.89, 100.0]%	[66.67, 85.71, 100.0, 85.71, 83.33, 76.92, 83.33, 61.54, 83.33, 66.67, 71.43, 92.31, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 75.0, 83.33, 71.43, 83.33, 57.14, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.81, 97.59, 98.81, 96.55, 98.78, 100.0, 97.67, 98.82, 100.0]%	||	81.86%	82.22%	98.73%	85.12%	98.75%	
  3  2  0  0  0  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	68.89%	95.85%	66.67%	[95.56, 93.33, 97.78, 97.78, 97.78, 95.56, 94.44, 95.56, 97.78, 88.89, 95.56, 96.67, 95.56, 98.89, 96.67]%	[66.67, 57.14, 80.0, 83.33, 80.0, 60.0, 61.54, 60.0, 83.33, 44.44, 71.43, 66.67, 71.43, 92.31, 66.67]%	[66.67, 66.67, 66.67, 83.33, 66.67, 50.0, 66.67, 50.0, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 50.0]%	[97.62, 95.24, 100.0, 98.81, 100.0, 98.81, 96.43, 98.81, 98.81, 90.48, 96.43, 100.0, 96.43, 98.81, 100.0]%	[66.67, 50.0, 100.0, 83.33, 100.0, 75.0, 57.14, 75.0, 83.33, 33.33, 62.5, 100.0, 62.5, 85.71, 100.0]%	[97.62, 97.56, 97.67, 98.81, 97.67, 96.51, 97.59, 96.51, 98.81, 97.44, 98.78, 96.55, 98.78, 100.0, 96.55]%	||	69.66%	68.89%	97.78%	75.63%	97.79%	
  4  1  0  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		1
  0  4  0  0  0  0  1  0  0  1  0  0  0  0  0  66.67%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  1  0  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  1  4  0  0  0  0  1  0  0  0  0  0  66.67%		5
  0  0  0  0  0  3  0  0  1  1  0  0  0  1  0  50.0%		6
  1  0  0  0  0  0  4  0  0  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  3  0  0  2  0  1  0  0  50.0%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  2  0  0  0  0  0  0  0  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  2  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  1  0  0  1  0  3  50.0%		15
Forest OOB Error: 51.11%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[97.78, 97.78, 100.0, 96.67, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 97.78, 100.0]%	[80.0, 85.71, 100.0, 80.0, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 66.67, 100.0]%	[100.0, 97.62, 100.0, 96.43, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 66.67, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	83.21%	83.33%	98.81%	86.31%	98.82%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[97.78, 97.78, 97.78, 97.78, 96.67, 98.89, 94.44, 95.56, 97.78, 95.56, 96.67, 97.78, 97.78, 98.89, 96.67]%	[85.71, 80.0, 80.0, 80.0, 72.73, 92.31, 66.67, 71.43, 85.71, 71.43, 76.92, 80.0, 83.33, 90.91, 66.67]%	[100.0, 66.67, 66.67, 66.67, 66.67, 100.0, 83.33, 83.33, 100.0, 83.33, 83.33, 66.67, 83.33, 83.33, 50.0]%	[97.62, 100.0, 100.0, 100.0, 98.81, 98.81, 95.24, 96.43, 97.62, 96.43, 97.62, 100.0, 98.81, 100.0, 100.0]%	[75.0, 100.0, 100.0, 100.0, 80.0, 85.71, 55.56, 62.5, 75.0, 62.5, 71.43, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.67, 97.67, 97.67, 97.65, 100.0, 98.77, 98.78, 100.0, 98.78, 98.8, 97.67, 98.81, 98.82, 96.55]%	||	78.92%	78.89%	98.49%	83.4%	98.51%	
  6  0  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		1
  1  4  0  0  0  0  1  0  0  0  0  0  0  0  0  66.67%		2
  0  0  4  0  0  0  0  0  1  0  0  0  1  0  0  66.67%		3
  0  0  0  4  0  1  0  0  0  0  1  0  0  0  0  66.67%		4
  0  0  0  0  4  0  2  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  1  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  1  0  0  0  0  0  0  0  0  5  0  83.33%		14
  1  0  0  0  0  0  0  2  0  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 55.34%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[97.78, 97.78, 100.0, 96.67, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 97.78, 100.0]%	[80.0, 85.71, 100.0, 80.0, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 66.67, 100.0]%	[100.0, 97.62, 100.0, 96.43, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 66.67, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	83.21%	83.33%	98.81%	86.31%	98.82%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	71.11%	96.15%	69.05%	[97.78, 96.67, 98.89, 95.56, 98.89, 95.56, 91.11, 95.56, 96.67, 93.33, 95.56, 96.67, 95.56, 97.78, 96.67]%	[80.0, 72.73, 92.31, 60.0, 90.91, 66.67, 50.0, 71.43, 76.92, 50.0, 66.67, 66.67, 71.43, 85.71, 66.67]%	[66.67, 66.67, 100.0, 50.0, 83.33, 66.67, 66.67, 83.33, 83.33, 50.0, 66.67, 50.0, 83.33, 100.0, 50.0]%	[100.0, 98.81, 98.81, 98.81, 100.0, 97.62, 92.86, 96.43, 97.62, 96.43, 97.62, 100.0, 96.43, 97.62, 100.0]%	[100.0, 80.0, 85.71, 75.0, 100.0, 66.67, 40.0, 62.5, 71.43, 50.0, 66.67, 100.0, 62.5, 75.0, 100.0]%	[97.67, 97.65, 100.0, 96.51, 98.82, 97.62, 97.5, 98.78, 98.8, 96.43, 97.62, 96.55, 98.78, 100.0, 96.55]%	||	71.21%	71.11%	97.94%	75.7%	97.95%	
  4  1  1  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  4  0  0  0  0  2  0  0  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  3  0  2  0  0  1  0  0  0  0  0  0  50.0%		4
  0  0  0  1  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  4  1  0  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  5  0  0  0  1  0  0  83.33%		9
  0  0  0  0  0  0  3  0  0  3  0  0  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  2  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  1  1  3  50.0%		15
Forest OOB Error: 53.65%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[97.78, 97.78, 100.0, 96.67, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 97.78, 100.0]%	[80.0, 85.71, 100.0, 80.0, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 66.67, 100.0]%	[100.0, 97.62, 100.0, 96.43, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 66.67, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	83.21%	83.33%	98.81%	86.31%	98.82%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[98.89, 98.89, 98.89, 100.0, 97.78, 96.67, 97.78, 97.78, 98.89, 94.44, 94.44, 95.56, 96.67, 97.78, 97.78]%	[90.91, 92.31, 92.31, 100.0, 80.0, 76.92, 83.33, 83.33, 92.31, 61.54, 61.54, 66.67, 76.92, 80.0, 80.0]%	[83.33, 100.0, 100.0, 100.0, 66.67, 83.33, 83.33, 83.33, 100.0, 66.67, 66.67, 66.67, 83.33, 66.67, 66.67]%	[100.0, 98.81, 98.81, 100.0, 100.0, 97.62, 98.81, 98.81, 98.81, 96.43, 96.43, 97.62, 97.62, 100.0, 100.0]%	[100.0, 85.71, 85.71, 100.0, 100.0, 71.43, 83.33, 83.33, 85.71, 57.14, 57.14, 66.67, 71.43, 100.0, 100.0]%	[98.82, 100.0, 100.0, 100.0, 97.67, 98.8, 98.81, 98.81, 100.0, 97.59, 97.59, 97.62, 98.8, 97.67, 97.67]%	||	81.21%	81.11%	98.65%	83.17%	98.66%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  4  0  0  0  0  0  0  1  0  0  0  66.67%		5
  0  0  0  0  0  5  1  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  1  4  0  1  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  1  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  1  0  0  1  0  0  0  4  66.67%		15
Forest OOB Error: 50.79%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[97.78, 97.78, 100.0, 96.67, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 97.78, 100.0]%	[80.0, 85.71, 100.0, 80.0, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 66.67, 100.0]%	[100.0, 97.62, 100.0, 96.43, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 66.67, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	83.21%	83.33%	98.81%	86.31%	98.82%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	74.44%	96.59%	72.62%	[97.78, 96.67, 96.67, 95.56, 98.89, 96.67, 92.22, 96.67, 94.44, 95.56, 98.89, 95.56, 96.67, 98.89, 97.78]%	[80.0, 76.92, 76.92, 60.0, 90.91, 76.92, 58.82, 66.67, 61.54, 71.43, 90.91, 60.0, 72.73, 92.31, 83.33]%	[66.67, 83.33, 83.33, 50.0, 83.33, 83.33, 83.33, 50.0, 66.67, 83.33, 83.33, 50.0, 66.67, 100.0, 83.33]%	[100.0, 97.62, 97.62, 98.81, 100.0, 97.62, 92.86, 100.0, 96.43, 96.43, 100.0, 98.81, 98.81, 98.81, 98.81]%	[100.0, 71.43, 71.43, 75.0, 100.0, 71.43, 45.45, 100.0, 57.14, 62.5, 100.0, 75.0, 80.0, 85.71, 83.33]%	[97.67, 98.8, 98.8, 96.51, 98.82, 98.8, 98.73, 96.55, 97.59, 98.78, 98.82, 96.51, 97.65, 100.0, 98.81]%	||	74.63%	74.44%	98.17%	78.56%	98.19%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  3  0  2  0  0  0  1  0  0  0  0  0  50.0%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  3  1  0  0  0  0  0  1  50.0%		8
  0  0  1  0  0  0  1  0  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  2  0  0  1  0  3  0  0  0  50.0%		12
  0  0  0  1  0  0  0  0  1  0  0  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  1  5  83.33%		15
Forest OOB Error: 50.83%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[97.78, 97.78, 100.0, 96.67, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 97.78, 100.0]%	[80.0, 85.71, 100.0, 80.0, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 66.67, 100.0]%	[100.0, 97.62, 100.0, 96.43, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 66.67, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	83.21%	83.33%	98.81%	86.31%	98.82%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[97.78, 97.78, 100.0, 96.67, 98.89, 98.89, 96.67, 94.44, 97.78, 95.56, 96.67, 96.67, 97.78, 95.56, 96.67]%	[83.33, 83.33, 100.0, 76.92, 92.31, 90.91, 72.73, 54.55, 85.71, 75.0, 76.92, 72.73, 80.0, 66.67, 66.67]%	[83.33, 83.33, 100.0, 83.33, 100.0, 83.33, 66.67, 50.0, 100.0, 100.0, 83.33, 66.67, 66.67, 66.67, 50.0]%	[98.81, 98.81, 100.0, 97.62, 98.81, 100.0, 98.81, 97.62, 97.62, 95.24, 97.62, 98.81, 100.0, 97.62, 100.0]%	[83.33, 83.33, 100.0, 71.43, 85.71, 100.0, 80.0, 60.0, 75.0, 60.0, 71.43, 80.0, 100.0, 66.67, 100.0]%	[98.81, 98.81, 100.0, 98.8, 100.0, 98.82, 97.65, 96.47, 100.0, 100.0, 98.8, 97.65, 97.67, 97.62, 96.55]%	||	78.52%	78.89%	98.49%	81.13%	98.51%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  1  5  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  4  0  0  1  0  1  0  0  0  66.67%		7
  0  0  0  2  0  0  0  3  1  0  0  0  0  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  1  0  0  0  0  1  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  2  3  50.0%		15
Forest OOB Error: 48.82%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[97.78, 97.78, 100.0, 96.67, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 97.78, 100.0]%	[80.0, 85.71, 100.0, 80.0, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 66.67, 100.0]%	[100.0, 97.62, 100.0, 96.43, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 66.67, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	83.21%	83.33%	98.81%	86.31%	98.82%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[96.67, 95.56, 97.78, 97.78, 100.0, 96.67, 95.56, 94.44, 96.67, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89]%	[72.73, 75.0, 80.0, 80.0, 100.0, 76.92, 71.43, 44.44, 76.92, 80.0, 83.33, 83.33, 66.67, 92.31, 92.31]%	[66.67, 100.0, 66.67, 66.67, 100.0, 83.33, 83.33, 33.33, 83.33, 66.67, 83.33, 83.33, 66.67, 100.0, 100.0]%	[98.81, 95.24, 100.0, 100.0, 100.0, 97.62, 96.43, 98.81, 97.62, 100.0, 98.81, 98.81, 97.62, 98.81, 98.81]%	[80.0, 60.0, 100.0, 100.0, 100.0, 71.43, 62.5, 66.67, 71.43, 100.0, 83.33, 83.33, 66.67, 85.71, 85.71]%	[97.65, 100.0, 97.67, 97.67, 100.0, 98.8, 98.78, 95.4, 98.8, 97.67, 98.81, 98.81, 97.62, 100.0, 100.0]%	||	78.36%	78.89%	98.49%	81.12%	98.51%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  4  0  0  1  0  0  0  0  0  0  1  0  0  66.67%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  2  1  0  0  0  1  1  1  33.33%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  0  4  0  1  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  1  0  0  0  0  0  0  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 48.81%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 98.89, 100.0]%	[66.67, 85.71, 92.31, 85.71, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 83.33, 100.0]%	[100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 75.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 98.82, 100.0]%	||	82.92%	83.33%	98.81%	85.91%	98.83%	
  3  2  1  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[98.89, 97.78, 98.89, 100.0, 97.78, 97.78, 96.67, 97.78, 96.67, 93.33, 95.56, 97.78, 98.89, 97.78, 96.67]%	[90.91, 85.71, 92.31, 100.0, 80.0, 80.0, 72.73, 83.33, 72.73, 62.5, 71.43, 80.0, 90.91, 83.33, 76.92]%	[83.33, 100.0, 100.0, 100.0, 66.67, 66.67, 66.67, 83.33, 66.67, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 100.0, 98.81, 98.81, 98.81, 94.05, 96.43, 100.0, 100.0, 98.81, 97.62]%	[100.0, 75.0, 85.71, 100.0, 100.0, 100.0, 80.0, 83.33, 80.0, 50.0, 62.5, 100.0, 100.0, 83.33, 71.43]%	[98.82, 100.0, 100.0, 100.0, 97.67, 97.67, 97.65, 98.81, 97.65, 98.75, 98.78, 97.67, 98.82, 98.81, 98.8]%	||	81.52%	81.11%	98.65%	84.75%	98.66%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  4  0  1  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  4  0  0  1  0  0  0  0  1  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  4  2  0  0  0  0  0  66.67%		9
  0  1  0  0  0  0  0  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  1  0  0  0  5  83.33%		15
Forest OOB Error: 53.58%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 98.89, 100.0]%	[66.67, 85.71, 92.31, 85.71, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 83.33, 100.0]%	[100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 75.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 98.82, 100.0]%	||	82.92%	83.33%	98.81%	85.91%	98.83%	
  3  2  1  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[97.78, 96.67, 96.67, 98.89, 98.89, 98.89, 95.56, 94.44, 93.33, 95.56, 98.89, 97.78, 98.89, 97.78, 97.78]%	[80.0, 76.92, 76.92, 92.31, 90.91, 90.91, 71.43, 61.54, 62.5, 60.0, 92.31, 80.0, 90.91, 83.33, 80.0]%	[66.67, 83.33, 83.33, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 100.0, 66.67, 83.33, 83.33, 66.67]%	[100.0, 97.62, 97.62, 98.81, 100.0, 100.0, 96.43, 96.43, 94.05, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0]%	[100.0, 71.43, 71.43, 85.71, 100.0, 100.0, 62.5, 57.14, 50.0, 75.0, 85.71, 100.0, 100.0, 83.33, 100.0]%	[97.67, 98.8, 98.8, 100.0, 98.82, 98.82, 98.78, 97.59, 98.75, 96.51, 100.0, 97.67, 98.82, 98.81, 97.67]%	||	79.33%	78.89%	98.49%	82.82%	98.5%	
  4  1  0  0  0  0  0  0  1  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  1  5  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  2  0  0  0  0  4  0  0  0  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  1  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  1  3  0  0  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 52.49%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 98.89, 100.0]%	[66.67, 85.71, 92.31, 85.71, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 83.33, 100.0]%	[100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 75.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 98.82, 100.0]%	||	82.92%	83.33%	98.81%	85.91%	98.83%	
  3  2  1  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[98.89, 97.78, 96.67, 94.44, 96.67, 94.44, 97.78, 94.44, 95.56, 93.33, 96.67, 97.78, 97.78, 97.78, 96.67]%	[90.91, 85.71, 76.92, 54.55, 66.67, 61.54, 85.71, 44.44, 71.43, 50.0, 72.73, 83.33, 83.33, 85.71, 72.73]%	[83.33, 100.0, 83.33, 50.0, 50.0, 66.67, 100.0, 33.33, 83.33, 50.0, 66.67, 83.33, 83.33, 100.0, 66.67]%	[100.0, 97.62, 97.62, 97.62, 100.0, 96.43, 97.62, 98.81, 96.43, 96.43, 98.81, 98.81, 98.81, 97.62, 98.81]%	[100.0, 75.0, 71.43, 60.0, 100.0, 57.14, 75.0, 66.67, 62.5, 50.0, 80.0, 83.33, 83.33, 75.0, 80.0]%	[98.82, 100.0, 98.8, 96.47, 96.55, 97.59, 100.0, 95.4, 98.78, 96.43, 97.65, 98.81, 98.81, 100.0, 97.65]%	||	72.38%	73.33%	98.1%	74.63%	98.12%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  1  0  0  0  0  83.33%		3
  0  0  0  3  0  2  0  0  0  1  0  0  0  0  0  50.0%		4
  0  0  0  0  3  1  0  0  0  0  0  1  0  1  0  50.0%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  2  1  0  0  0  2  0  0  0  0  0  0  1  33.33%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  1  3  0  0  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  1  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  1  0  0  0  0  0  1  0  0  0  0  4  66.67%		15
Forest OOB Error: 57.2%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 98.89, 100.0]%	[66.67, 85.71, 92.31, 85.71, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 83.33, 100.0]%	[100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 75.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 98.82, 100.0]%	||	82.92%	83.33%	98.81%	85.91%	98.83%	
  3  2  1  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[96.67, 97.78, 97.78, 93.33, 100.0, 96.67, 97.78, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89, 96.67, 98.89]%	[66.67, 85.71, 83.33, 57.14, 100.0, 72.73, 83.33, 83.33, 85.71, 83.33, 75.0, 90.91, 90.91, 66.67, 90.91]%	[50.0, 100.0, 83.33, 66.67, 100.0, 66.67, 83.33, 83.33, 100.0, 83.33, 100.0, 83.33, 83.33, 50.0, 83.33]%	[100.0, 97.62, 98.81, 95.24, 100.0, 98.81, 98.81, 98.81, 97.62, 98.81, 95.24, 100.0, 100.0, 100.0, 100.0]%	[100.0, 75.0, 83.33, 50.0, 100.0, 80.0, 83.33, 83.33, 75.0, 83.33, 60.0, 100.0, 100.0, 100.0, 100.0]%	[96.55, 100.0, 98.81, 97.56, 100.0, 97.65, 98.81, 98.81, 100.0, 98.81, 100.0, 98.82, 98.82, 96.55, 98.82]%	||	81.05%	81.11%	98.65%	84.89%	98.67%	
  3  2  0  1  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  1  0  0  0  0  83.33%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  1  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  1  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  1  2  0  0  0  0  0  0  0  0  0  3  0  50.0%		14
  0  0  0  0  0  0  0  0  0  0  1  0  0  0  5  83.33%		15
Forest OOB Error: 51.72%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 98.89, 100.0]%	[66.67, 85.71, 92.31, 85.71, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 83.33, 100.0]%	[100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 75.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 98.82, 100.0]%	||	82.92%	83.33%	98.81%	85.91%	98.83%	
  3  2  1  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[96.67, 97.78, 100.0, 100.0, 97.78, 95.56, 94.44, 97.78, 95.56, 95.56, 98.89, 94.44, 98.89, 96.67, 97.78]%	[66.67, 83.33, 100.0, 100.0, 83.33, 66.67, 66.67, 83.33, 75.0, 60.0, 92.31, 54.55, 90.91, 76.92, 80.0]%	[50.0, 83.33, 100.0, 100.0, 83.33, 66.67, 83.33, 83.33, 100.0, 50.0, 100.0, 50.0, 83.33, 83.33, 66.67]%	[100.0, 98.81, 100.0, 100.0, 98.81, 97.62, 95.24, 98.81, 95.24, 98.81, 98.81, 97.62, 100.0, 97.62, 100.0]%	[100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 55.56, 83.33, 60.0, 75.0, 85.71, 60.0, 100.0, 71.43, 100.0]%	[96.55, 98.81, 100.0, 100.0, 98.81, 97.62, 98.77, 98.81, 100.0, 96.51, 100.0, 96.47, 98.82, 98.8, 97.67]%	||	78.65%	78.89%	98.49%	81.62%	98.51%	
  3  1  0  0  0  0  0  0  1  0  0  0  0  1  0  50.0%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  1  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  1  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  2  0  0  1  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  1  0  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 54.75%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 98.89, 100.0]%	[66.67, 85.71, 92.31, 85.71, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 83.33, 100.0]%	[100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 75.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 98.82, 100.0]%	||	82.92%	83.33%	98.81%	85.91%	98.83%	
  3  2  1  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[96.67, 96.67, 96.67, 98.89, 97.78, 97.78, 97.78, 94.44, 95.56, 93.33, 96.67, 98.89, 97.78, 100.0, 96.67]%	[72.73, 80.0, 72.73, 90.91, 83.33, 80.0, 83.33, 61.54, 71.43, 57.14, 72.73, 90.91, 85.71, 100.0, 66.67]%	[66.67, 100.0, 66.67, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33, 66.67, 66.67, 83.33, 100.0, 100.0, 50.0]%	[98.81, 96.43, 98.81, 100.0, 98.81, 100.0, 98.81, 96.43, 96.43, 95.24, 98.81, 100.0, 97.62, 100.0, 100.0]%	[80.0, 66.67, 80.0, 100.0, 83.33, 100.0, 83.33, 57.14, 62.5, 50.0, 80.0, 100.0, 75.0, 100.0, 100.0]%	[97.65, 100.0, 97.65, 98.82, 98.81, 97.67, 98.81, 97.59, 98.78, 97.56, 97.65, 98.82, 100.0, 100.0, 96.55]%	||	77.94%	77.78%	98.41%	81.2%	98.42%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  0  0  0  1  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  1  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  4  0  0  1  0  0  0  0  66.67%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  2  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  2  0  1  0  0  0  0  3  50.0%		15
Forest OOB Error: 49.15%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 98.89, 100.0]%	[66.67, 85.71, 92.31, 85.71, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 83.33, 100.0]%	[100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 75.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 98.82, 100.0]%	||	82.92%	83.33%	98.81%	85.91%	98.83%	
  3  2  1  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[98.89, 97.78, 97.78, 97.78, 100.0, 95.56, 92.22, 97.78, 97.78, 96.67, 97.78, 98.89, 95.56, 98.89, 96.67]%	[90.91, 83.33, 83.33, 80.0, 100.0, 66.67, 46.15, 83.33, 83.33, 80.0, 83.33, 90.91, 71.43, 92.31, 66.67]%	[83.33, 83.33, 83.33, 66.67, 100.0, 66.67, 50.0, 83.33, 83.33, 100.0, 83.33, 83.33, 83.33, 100.0, 50.0]%	[100.0, 98.81, 98.81, 100.0, 100.0, 97.62, 95.24, 98.81, 98.81, 96.43, 98.81, 100.0, 96.43, 98.81, 100.0]%	[100.0, 83.33, 83.33, 100.0, 100.0, 66.67, 42.86, 83.33, 83.33, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0]%	[98.82, 98.81, 98.81, 97.67, 100.0, 97.62, 96.39, 98.81, 98.81, 100.0, 98.81, 98.82, 98.78, 100.0, 96.55]%	||	80.11%	80.0%	98.57%	82.74%	98.58%	
  5  0  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  1  0  0  0  4  0  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  1  3  0  1  1  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  1  0  0  1  0  3  50.0%		15
Forest OOB Error: 55.09%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 98.89, 100.0]%	[66.67, 85.71, 92.31, 85.71, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 83.33, 100.0]%	[100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 75.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 98.82, 100.0]%	||	82.92%	83.33%	98.81%	85.91%	98.83%	
  3  2  1  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[98.89, 97.78, 96.67, 96.67, 98.89, 93.33, 97.78, 93.33, 97.78, 97.78, 92.22, 97.78, 98.89, 97.78, 97.78]%	[90.91, 83.33, 72.73, 66.67, 90.91, 57.14, 83.33, 50.0, 85.71, 80.0, 58.82, 83.33, 90.91, 83.33, 83.33]%	[83.33, 83.33, 66.67, 50.0, 83.33, 66.67, 83.33, 50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 98.81, 98.81, 100.0, 100.0, 95.24, 98.81, 96.43, 97.62, 100.0, 92.86, 98.81, 100.0, 98.81, 98.81]%	[100.0, 83.33, 80.0, 100.0, 100.0, 50.0, 83.33, 50.0, 75.0, 100.0, 45.45, 83.33, 100.0, 83.33, 83.33]%	[98.82, 98.81, 97.65, 96.55, 98.82, 97.56, 98.81, 96.43, 100.0, 97.67, 98.73, 98.81, 98.82, 98.81, 98.81]%	||	77.36%	76.67%	98.33%	81.14%	98.34%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  4  0  0  1  0  0  0  0  1  0  0  0  0  66.67%		3
  0  0  0  3  0  2  1  0  0  0  0  0  0  0  0  50.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  0  1  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  3  0  0  2  0  0  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  4  1  1  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  1  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  1  0  0  0  5  83.33%		15
Forest OOB Error: 52.16%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 98.89, 100.0]%	[66.67, 85.71, 92.31, 85.71, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 83.33, 100.0]%	[100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 75.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 98.82, 100.0]%	||	82.92%	83.33%	98.81%	85.91%	98.83%	
  3  2  1  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	74.44%	96.59%	72.62%	[97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 88.89, 93.33, 97.78, 92.22, 93.33, 97.78, 97.78, 98.89, 98.89]%	[83.33, 100.0, 92.31, 80.0, 80.0, 83.33, 37.5, 50.0, 85.71, 36.36, 50.0, 80.0, 83.33, 92.31, 90.91]%	[83.33, 100.0, 100.0, 66.67, 66.67, 83.33, 50.0, 50.0, 100.0, 33.33, 50.0, 66.67, 83.33, 100.0, 83.33]%	[98.81, 100.0, 98.81, 100.0, 100.0, 98.81, 91.67, 96.43, 97.62, 96.43, 96.43, 100.0, 98.81, 98.81, 100.0]%	[83.33, 100.0, 85.71, 100.0, 100.0, 83.33, 30.0, 50.0, 75.0, 40.0, 50.0, 100.0, 83.33, 85.71, 100.0]%	[98.81, 100.0, 100.0, 97.67, 97.67, 98.81, 96.25, 96.43, 100.0, 95.29, 96.43, 97.67, 98.81, 100.0, 98.82]%	||	75.01%	74.44%	98.17%	77.76%	98.18%	
  5  0  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  4  0  1  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  3  2  0  0  0  0  0  0  0  50.0%		7
  0  0  1  0  0  0  0  3  0  0  2  0  0  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  4  0  0  2  0  0  0  0  0  33.33%		10
  0  0  0  0  0  0  1  1  0  0  3  0  1  0  0  50.0%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  1  0  0  0  0  5  83.33%		15
Forest OOB Error: 47.83%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 98.89, 100.0]%	[66.67, 85.71, 92.31, 85.71, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 83.33, 100.0]%	[100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 75.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 98.82, 100.0]%	||	82.92%	83.33%	98.81%	85.91%	98.83%	
  3  2  1  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[95.56, 97.78, 98.89, 96.67, 98.89, 97.78, 93.33, 95.56, 97.78, 98.89, 94.44, 96.67, 95.56, 98.89, 98.89]%	[50.0, 85.71, 90.91, 72.73, 92.31, 83.33, 57.14, 66.67, 85.71, 90.91, 61.54, 76.92, 66.67, 90.91, 90.91]%	[33.33, 100.0, 83.33, 66.67, 100.0, 83.33, 66.67, 66.67, 100.0, 83.33, 66.67, 83.33, 66.67, 83.33, 83.33]%	[100.0, 97.62, 100.0, 98.81, 98.81, 98.81, 95.24, 97.62, 97.62, 100.0, 96.43, 97.62, 97.62, 100.0, 100.0]%	[100.0, 75.0, 100.0, 80.0, 85.71, 83.33, 50.0, 66.67, 75.0, 100.0, 57.14, 71.43, 66.67, 100.0, 100.0]%	[95.45, 100.0, 98.82, 97.65, 100.0, 98.81, 97.56, 97.62, 100.0, 98.82, 97.59, 98.8, 97.62, 98.82, 98.82]%	||	77.49%	77.78%	98.41%	80.73%	98.43%	
  2  2  0  0  0  1  1  0  0  0  0  0  0  0  0  33.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  1  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  4  1  0  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  1  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  4  0  0  0  0  2  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  1  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  1  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 55.34%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 98.89, 100.0]%	[66.67, 85.71, 92.31, 85.71, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 83.33, 100.0]%	[100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 75.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 98.82, 100.0]%	||	82.92%	83.33%	98.81%	85.91%	98.83%	
  3  2  1  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[96.67, 95.56, 97.78, 96.67, 98.89, 97.78, 93.33, 93.33, 98.89, 95.56, 94.44, 97.78, 94.44, 98.89, 96.67]%	[72.73, 71.43, 83.33, 72.73, 90.91, 83.33, 50.0, 57.14, 90.91, 66.67, 61.54, 80.0, 66.67, 90.91, 72.73]%	[66.67, 83.33, 83.33, 66.67, 83.33, 83.33, 50.0, 66.67, 83.33, 66.67, 66.67, 66.67, 83.33, 83.33, 66.67]%	[98.81, 96.43, 98.81, 98.81, 100.0, 98.81, 96.43, 95.24, 100.0, 97.62, 96.43, 100.0, 95.24, 100.0, 98.81]%	[80.0, 62.5, 83.33, 80.0, 100.0, 83.33, 50.0, 50.0, 100.0, 66.67, 57.14, 100.0, 55.56, 100.0, 80.0]%	[97.65, 98.78, 98.81, 97.65, 98.82, 98.81, 96.43, 97.56, 98.82, 97.62, 97.59, 97.67, 98.77, 98.82, 97.65]%	||	74.07%	73.33%	98.1%	76.57%	98.1%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  0  0  1  0  0  0  0  83.33%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  1  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  1  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  1  0  0  66.67%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  0  0  1  0  4  66.67%		15
Forest OOB Error: 54.7%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 98.89, 100.0]%	[66.67, 85.71, 92.31, 85.71, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 83.33, 100.0]%	[100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 75.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 98.82, 100.0]%	||	82.92%	83.33%	98.81%	85.91%	98.83%	
  3  2  1  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[96.67, 97.78, 96.67, 97.78, 100.0, 98.89, 100.0, 96.67, 95.56, 96.67, 96.67, 97.78, 96.67, 100.0, 96.67]%	[72.73, 85.71, 76.92, 83.33, 100.0, 90.91, 100.0, 72.73, 71.43, 72.73, 76.92, 83.33, 72.73, 100.0, 72.73]%	[66.67, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 66.67, 83.33, 83.33, 66.67, 100.0, 66.67]%	[98.81, 97.62, 97.62, 98.81, 100.0, 100.0, 100.0, 98.81, 96.43, 98.81, 97.62, 98.81, 98.81, 100.0, 98.81]%	[80.0, 75.0, 71.43, 83.33, 100.0, 100.0, 100.0, 80.0, 62.5, 80.0, 71.43, 83.33, 80.0, 100.0, 80.0]%	[97.65, 100.0, 98.8, 98.81, 100.0, 98.82, 100.0, 97.65, 98.78, 97.65, 98.8, 98.81, 97.65, 100.0, 97.65]%	||	82.15%	82.22%	98.73%	83.13%	98.74%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  5  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  0  0  1  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  1  0  0  0  0  4  0  0  0  0  0  0  1  66.67%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  1  4  0  1  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  1  0  0  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 51.2%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[97.78, 97.78, 100.0, 96.67, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 97.78, 100.0]%	[80.0, 85.71, 100.0, 80.0, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 66.67, 100.0]%	[100.0, 97.62, 100.0, 96.43, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 66.67, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	83.21%	83.33%	98.81%	86.31%	98.82%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[97.78, 96.67, 98.89, 98.89, 98.89, 96.67, 94.44, 96.67, 96.67, 94.44, 98.89, 96.67, 98.89, 96.67, 96.67]%	[80.0, 72.73, 90.91, 92.31, 90.91, 72.73, 61.54, 80.0, 80.0, 54.55, 90.91, 72.73, 92.31, 76.92, 72.73]%	[66.67, 66.67, 83.33, 100.0, 83.33, 66.67, 66.67, 100.0, 100.0, 50.0, 83.33, 66.67, 100.0, 83.33, 66.67]%	[100.0, 98.81, 100.0, 98.81, 100.0, 98.81, 96.43, 96.43, 96.43, 97.62, 100.0, 98.81, 98.81, 97.62, 98.81]%	[100.0, 80.0, 100.0, 85.71, 100.0, 80.0, 57.14, 66.67, 66.67, 60.0, 100.0, 80.0, 85.71, 71.43, 80.0]%	[97.67, 97.65, 98.82, 100.0, 98.82, 97.65, 97.59, 100.0, 100.0, 96.47, 98.82, 97.65, 100.0, 98.8, 97.65]%	||	78.75%	78.89%	98.49%	80.89%	98.51%	
  4  1  0  0  0  0  0  0  1  0  0  0  0  0  0  66.67%		1
  0  4  0  0  0  0  0  0  1  0  0  0  1  0  0  66.67%		2
  0  0  5  0  0  0  0  1  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  1  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  1  4  0  0  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  5  1  83.33%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  1  4  66.67%		15
Forest OOB Error: 52.09%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[97.78, 97.78, 100.0, 96.67, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 97.78, 100.0]%	[80.0, 85.71, 100.0, 80.0, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 66.67, 100.0]%	[100.0, 97.62, 100.0, 96.43, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 66.67, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	83.21%	83.33%	98.81%	86.31%	98.82%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[100.0, 98.89, 97.78, 95.56, 97.78, 94.44, 93.33, 97.78, 97.78, 92.22, 97.78, 97.78, 97.78, 100.0, 98.89]%	[100.0, 92.31, 85.71, 50.0, 83.33, 70.59, 40.0, 80.0, 85.71, 46.15, 85.71, 80.0, 80.0, 100.0, 90.91]%	[100.0, 100.0, 100.0, 33.33, 83.33, 100.0, 33.33, 66.67, 100.0, 50.0, 100.0, 66.67, 66.67, 100.0, 83.33]%	[100.0, 98.81, 97.62, 100.0, 98.81, 94.05, 97.62, 100.0, 97.62, 95.24, 97.62, 100.0, 100.0, 100.0, 100.0]%	[100.0, 85.71, 75.0, 100.0, 83.33, 54.55, 50.0, 100.0, 75.0, 42.86, 75.0, 100.0, 100.0, 100.0, 100.0]%	[100.0, 100.0, 100.0, 95.45, 98.81, 100.0, 95.35, 97.67, 100.0, 96.39, 100.0, 97.67, 97.67, 100.0, 98.82]%	||	78.03%	78.89%	98.49%	82.76%	98.52%	
  6  0  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  1  2  0  3  0  0  0  0  0  0  0  0  0  33.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  1  0  0  0  1  2  0  0  2  0  0  0  0  0  33.33%		7
  0  0  0  0  1  1  0  4  0  0  0  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  2  0  1  3  0  0  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 60.32%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[97.78, 97.78, 100.0, 96.67, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 97.78, 100.0]%	[80.0, 85.71, 100.0, 80.0, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 66.67, 100.0]%	[100.0, 97.62, 100.0, 96.43, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 66.67, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	83.21%	83.33%	98.81%	86.31%	98.82%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[98.89, 96.67, 98.89, 98.89, 98.89, 96.67, 95.56, 91.11, 97.78, 98.89, 91.11, 97.78, 93.33, 98.89, 97.78]%	[90.91, 72.73, 90.91, 90.91, 90.91, 72.73, 71.43, 50.0, 83.33, 92.31, 33.33, 80.0, 57.14, 92.31, 80.0]%	[83.33, 66.67, 83.33, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33, 100.0, 33.33, 66.67, 66.67, 100.0, 66.67]%	[100.0, 98.81, 100.0, 100.0, 100.0, 98.81, 96.43, 92.86, 98.81, 98.81, 95.24, 100.0, 95.24, 98.81, 100.0]%	[100.0, 80.0, 100.0, 100.0, 100.0, 80.0, 62.5, 40.0, 83.33, 85.71, 33.33, 100.0, 50.0, 85.71, 100.0]%	[98.82, 97.65, 98.82, 98.82, 98.82, 97.65, 98.78, 97.5, 98.81, 100.0, 95.24, 97.67, 97.56, 100.0, 97.67]%	||	76.6%	75.56%	98.25%	80.04%	98.26%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  4  0  0  0  0  2  0  0  0  0  0  0  0  0  66.67%		2
  0  0  5  0  0  0  0  0  0  0  1  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  1  0  1  0  0  66.67%		8
  0  0  0  0  0  0  0  1  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  2  0  3  0  0  33.33%		11
  0  0  0  0  0  0  0  1  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  1  0  0  0  4  66.67%		15
Forest OOB Error: 53.28%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[97.78, 97.78, 100.0, 96.67, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 97.78, 100.0]%	[80.0, 85.71, 100.0, 80.0, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 66.67, 100.0]%	[100.0, 97.62, 100.0, 96.43, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 66.67, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	83.21%	83.33%	98.81%	86.31%	98.82%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[97.78, 96.67, 97.78, 97.78, 97.78, 96.67, 96.67, 94.44, 93.33, 94.44, 94.44, 96.67, 96.67, 98.89, 96.67]%	[80.0, 80.0, 83.33, 80.0, 83.33, 72.73, 76.92, 54.55, 62.5, 44.44, 66.67, 72.73, 72.73, 92.31, 72.73]%	[66.67, 100.0, 83.33, 66.67, 83.33, 66.67, 83.33, 50.0, 83.33, 33.33, 83.33, 66.67, 66.67, 100.0, 66.67]%	[100.0, 96.43, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 94.05, 98.81, 95.24, 98.81, 98.81, 98.81, 98.81]%	[100.0, 66.67, 83.33, 100.0, 83.33, 80.0, 71.43, 60.0, 50.0, 66.67, 55.56, 80.0, 80.0, 85.71, 80.0]%	[97.67, 100.0, 98.81, 97.67, 98.81, 97.65, 98.8, 96.47, 98.75, 95.4, 98.77, 97.65, 97.65, 100.0, 97.65]%	||	73.0%	73.33%	98.1%	76.18%	98.12%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  4  1  1  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  0  1  66.67%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  3  1  0  1  0  0  0  0  50.0%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  3  2  0  1  0  0  0  33.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  1  0  0  0  4  66.67%		15
Forest OOB Error: 54.3%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[97.78, 97.78, 100.0, 96.67, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 97.78, 100.0]%	[80.0, 85.71, 100.0, 80.0, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 66.67, 100.0]%	[100.0, 97.62, 100.0, 96.43, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 66.67, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	83.21%	83.33%	98.81%	86.31%	98.82%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[97.78, 98.89, 95.56, 97.78, 97.78, 100.0, 97.78, 97.78, 98.89, 96.67, 97.78, 93.33, 97.78, 97.78, 98.89]%	[80.0, 92.31, 60.0, 85.71, 83.33, 100.0, 80.0, 80.0, 90.91, 76.92, 83.33, 57.14, 85.71, 85.71, 90.91]%	[66.67, 100.0, 50.0, 100.0, 83.33, 100.0, 66.67, 66.67, 83.33, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33]%	[100.0, 98.81, 98.81, 97.62, 98.81, 100.0, 100.0, 100.0, 100.0, 97.62, 98.81, 95.24, 97.62, 97.62, 100.0]%	[100.0, 85.71, 75.0, 75.0, 83.33, 100.0, 100.0, 100.0, 100.0, 71.43, 83.33, 50.0, 75.0, 75.0, 100.0]%	[97.67, 100.0, 96.51, 100.0, 98.81, 100.0, 97.67, 97.67, 98.82, 98.8, 98.81, 97.56, 100.0, 100.0, 98.82]%	||	82.13%	82.22%	98.73%	84.92%	98.74%	
  4  1  0  1  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  3  1  1  0  0  0  0  0  0  1  0  0  0  50.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  4  0  0  0  0  2  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  0  0  1  0  1  0  0  66.67%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  1  5  83.33%		15
Forest OOB Error: 48.61%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[97.78, 97.78, 100.0, 96.67, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 97.78, 100.0]%	[80.0, 85.71, 100.0, 80.0, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 66.67, 100.0]%	[100.0, 97.62, 100.0, 96.43, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 66.67, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	83.21%	83.33%	98.81%	86.31%	98.82%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[95.56, 94.44, 93.33, 97.78, 97.78, 96.67, 98.89, 95.56, 96.67, 96.67, 97.78, 97.78, 100.0, 98.89, 97.78]%	[66.67, 66.67, 50.0, 83.33, 80.0, 72.73, 92.31, 60.0, 72.73, 80.0, 83.33, 80.0, 100.0, 90.91, 85.71]%	[66.67, 83.33, 50.0, 83.33, 66.67, 66.67, 100.0, 50.0, 66.67, 100.0, 83.33, 66.67, 100.0, 83.33, 100.0]%	[97.62, 95.24, 96.43, 98.81, 100.0, 98.81, 98.81, 98.81, 98.81, 96.43, 98.81, 100.0, 100.0, 100.0, 97.62]%	[66.67, 55.56, 50.0, 83.33, 100.0, 80.0, 85.71, 75.0, 80.0, 66.67, 83.33, 100.0, 100.0, 100.0, 75.0]%	[97.62, 98.77, 96.43, 98.81, 97.67, 97.65, 100.0, 96.51, 97.65, 100.0, 98.81, 97.67, 100.0, 98.82, 100.0]%	||	77.63%	77.78%	98.41%	80.08%	98.43%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  1  5  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		2
  1  0  3  1  0  0  0  0  0  1  0  0  0  0  0  50.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  1  0  0  4  0  0  0  0  1  0  0  0  0  0  66.67%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  0  1  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  2  0  0  0  0  3  0  0  1  0  0  0  0  50.0%		8
  0  1  1  0  0  0  0  0  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  5  1  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 54.44%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 98.89, 100.0]%	[66.67, 85.71, 92.31, 85.71, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 83.33, 100.0]%	[100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 75.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 98.82, 100.0]%	||	82.92%	83.33%	98.81%	85.91%	98.83%	
  3  2  1  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[98.89, 95.56, 100.0, 100.0, 98.89, 97.78, 96.67, 98.89, 96.67, 95.56, 97.78, 98.89, 97.78, 98.89, 98.89]%	[90.91, 71.43, 100.0, 100.0, 90.91, 83.33, 76.92, 92.31, 72.73, 71.43, 85.71, 90.91, 80.0, 90.91, 90.91]%	[83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33]%	[100.0, 96.43, 100.0, 100.0, 100.0, 98.81, 97.62, 98.81, 98.81, 96.43, 97.62, 100.0, 100.0, 100.0, 100.0]%	[100.0, 62.5, 100.0, 100.0, 100.0, 83.33, 71.43, 85.71, 80.0, 62.5, 75.0, 100.0, 100.0, 100.0, 100.0]%	[98.82, 98.78, 100.0, 100.0, 98.82, 98.81, 98.8, 100.0, 97.65, 98.78, 100.0, 98.82, 97.67, 98.82, 98.82]%	||	85.89%	85.56%	98.97%	88.03%	98.97%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  2  0  0  0  0  0  0  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 52.27%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 98.89, 100.0]%	[66.67, 85.71, 92.31, 85.71, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 83.33, 100.0]%	[100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 75.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 98.82, 100.0]%	||	82.92%	83.33%	98.81%	85.91%	98.83%	
  3  2  1  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[97.78, 96.67, 95.56, 96.67, 100.0, 93.33, 95.56, 95.56, 95.56, 95.56, 96.67, 98.89, 97.78, 96.67, 98.89]%	[83.33, 72.73, 66.67, 76.92, 100.0, 57.14, 66.67, 66.67, 71.43, 60.0, 76.92, 90.91, 83.33, 72.73, 90.91]%	[83.33, 66.67, 66.67, 83.33, 100.0, 66.67, 66.67, 66.67, 83.33, 50.0, 83.33, 83.33, 83.33, 66.67, 83.33]%	[98.81, 98.81, 97.62, 97.62, 100.0, 95.24, 97.62, 97.62, 96.43, 98.81, 97.62, 100.0, 98.81, 98.81, 100.0]%	[83.33, 80.0, 66.67, 71.43, 100.0, 50.0, 66.67, 66.67, 62.5, 75.0, 71.43, 100.0, 83.33, 80.0, 100.0]%	[98.81, 97.65, 97.62, 98.8, 100.0, 97.56, 97.62, 97.62, 98.78, 96.51, 98.8, 98.82, 98.81, 97.65, 98.82]%	||	75.76%	75.56%	98.25%	77.13%	98.26%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  1  4  0  0  0  0  0  0  1  0  0  0  0  0  0  66.67%		2
  0  0  4  1  0  0  0  0  0  0  1  0  0  0  0  66.67%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  1  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  1  0  0  0  0  4  0  0  0  0  1  0  0  66.67%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  1  3  0  0  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 54.8%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 98.89, 100.0]%	[66.67, 85.71, 92.31, 85.71, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 83.33, 100.0]%	[100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 75.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 98.82, 100.0]%	||	82.92%	83.33%	98.81%	85.91%	98.83%	
  3  2  1  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[97.78, 97.78, 97.78, 95.56, 100.0, 97.78, 95.56, 96.67, 96.67, 96.67, 96.67, 98.89, 96.67, 98.89, 98.89]%	[83.33, 85.71, 85.71, 66.67, 100.0, 85.71, 66.67, 72.73, 72.73, 76.92, 72.73, 90.91, 72.73, 90.91, 90.91]%	[83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 66.67, 66.67, 66.67, 83.33, 66.67, 83.33, 66.67, 83.33, 83.33]%	[98.81, 97.62, 97.62, 97.62, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 98.81, 100.0, 98.81, 100.0, 100.0]%	[83.33, 75.0, 75.0, 66.67, 100.0, 75.0, 66.67, 80.0, 80.0, 71.43, 80.0, 100.0, 80.0, 100.0, 100.0]%	[98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 97.62, 97.65, 97.65, 98.8, 97.65, 98.82, 97.65, 98.82, 98.82]%	||	80.96%	81.11%	98.65%	82.21%	98.66%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  1  0  4  0  1  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  1  4  0  0  1  0  0  0  0  0  66.67%		7
  0  0  0  1  0  0  1  4  0  0  0  0  0  0  0  66.67%		8
  0  0  1  0  0  0  1  0  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  0  0  1  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  1  0  0  0  0  0  0  0  1  0  4  0  0  66.67%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  1  0  0  0  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 55.91%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 98.89, 100.0]%	[66.67, 85.71, 92.31, 85.71, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 83.33, 100.0]%	[100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 75.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 98.82, 100.0]%	||	82.92%	83.33%	98.81%	85.91%	98.83%	
  3  2  1  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[95.56, 97.78, 96.67, 100.0, 98.89, 98.89, 97.78, 97.78, 97.78, 96.67, 94.44, 97.78, 95.56, 97.78, 98.89]%	[66.67, 83.33, 76.92, 100.0, 90.91, 90.91, 83.33, 80.0, 85.71, 76.92, 66.67, 80.0, 66.67, 83.33, 90.91]%	[66.67, 83.33, 83.33, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 66.67, 66.67, 83.33, 83.33]%	[97.62, 98.81, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 95.24, 100.0, 97.62, 98.81, 100.0]%	[66.67, 83.33, 71.43, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 71.43, 55.56, 100.0, 66.67, 83.33, 100.0]%	[97.62, 98.81, 98.8, 100.0, 98.82, 98.82, 98.81, 97.67, 100.0, 98.8, 98.77, 97.67, 97.62, 98.81, 98.82]%	||	81.49%	81.11%	98.65%	83.78%	98.66%	
  4  1  0  0  0  0  0  0  0  0  0  0  0  1  0  66.67%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  0  0  1  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  4  0  0  1  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  1  0  0  0  0  0  0  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 51.37%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 98.89, 100.0]%	[66.67, 85.71, 92.31, 85.71, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 83.33, 100.0]%	[100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 75.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 98.82, 100.0]%	||	82.92%	83.33%	98.81%	85.91%	98.83%	
  3  2  1  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[98.89, 97.78, 96.67, 98.89, 98.89, 98.89, 95.56, 94.44, 96.67, 97.78, 95.56, 95.56, 96.67, 100.0, 97.78]%	[92.31, 83.33, 66.67, 90.91, 90.91, 92.31, 66.67, 61.54, 76.92, 85.71, 60.0, 66.67, 76.92, 100.0, 83.33]%	[100.0, 83.33, 50.0, 83.33, 83.33, 100.0, 66.67, 66.67, 83.33, 100.0, 50.0, 66.67, 83.33, 100.0, 83.33]%	[98.81, 98.81, 100.0, 100.0, 100.0, 98.81, 97.62, 96.43, 97.62, 97.62, 98.81, 97.62, 97.62, 100.0, 98.81]%	[85.71, 83.33, 100.0, 100.0, 100.0, 85.71, 66.67, 57.14, 71.43, 75.0, 75.0, 66.67, 71.43, 100.0, 83.33]%	[100.0, 98.81, 96.55, 98.82, 98.82, 100.0, 97.62, 97.59, 98.8, 100.0, 96.51, 97.62, 98.8, 100.0, 98.81]%	||	79.61%	80.0%	98.57%	81.43%	98.58%	
  6  0  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  3  0  0  0  0  1  1  0  0  0  0  0  1  50.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  4  0  0  0  0  2  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  1  0  1  0  0  0  0  66.67%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  1  0  0  0  0  0  1  0  0  3  0  1  0  0  50.0%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 54.17%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 98.89, 100.0]%	[66.67, 85.71, 92.31, 85.71, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 83.33, 100.0]%	[100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 75.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 98.82, 100.0]%	||	82.92%	83.33%	98.81%	85.91%	98.83%	
  3  2  1  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[97.78, 97.78, 98.89, 97.78, 97.78, 95.56, 98.89, 98.89, 96.67, 100.0, 96.67, 98.89, 97.78, 97.78, 100.0]%	[83.33, 83.33, 90.91, 80.0, 83.33, 66.67, 92.31, 90.91, 80.0, 100.0, 76.92, 90.91, 83.33, 83.33, 100.0]%	[83.33, 83.33, 83.33, 66.67, 83.33, 66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0]%	[98.81, 98.81, 100.0, 100.0, 98.81, 97.62, 98.81, 100.0, 96.43, 100.0, 97.62, 100.0, 98.81, 98.81, 100.0]%	[83.33, 83.33, 100.0, 100.0, 83.33, 66.67, 85.71, 100.0, 66.67, 100.0, 71.43, 100.0, 83.33, 83.33, 100.0]%	[98.81, 98.81, 98.82, 97.67, 98.81, 97.62, 100.0, 98.82, 100.0, 100.0, 98.8, 98.82, 98.81, 98.81, 100.0]%	||	85.69%	85.56%	98.97%	87.14%	98.97%	
  5  0  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  1  0  5  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  1  0  4  0  1  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  1  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 50.38%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 94.44, 98.89, 97.78, 98.89, 100.0]%	[66.67, 85.71, 92.31, 85.71, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 66.67, 92.31, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 95.24, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 75.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 55.56, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.77, 100.0, 97.67, 98.82, 100.0]%	||	81.87%	82.22%	98.73%	85.45%	98.75%	
  3  2  1  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[97.78, 96.67, 98.89, 96.67, 96.67, 96.67, 95.56, 96.67, 98.89, 95.56, 95.56, 97.78, 98.89, 97.78, 97.78]%	[80.0, 80.0, 90.91, 72.73, 72.73, 76.92, 71.43, 72.73, 92.31, 66.67, 71.43, 83.33, 90.91, 80.0, 83.33]%	[66.67, 100.0, 83.33, 66.67, 66.67, 83.33, 83.33, 66.67, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 83.33]%	[100.0, 96.43, 100.0, 98.81, 98.81, 97.62, 96.43, 98.81, 98.81, 97.62, 96.43, 98.81, 100.0, 100.0, 98.81]%	[100.0, 66.67, 100.0, 80.0, 80.0, 71.43, 62.5, 80.0, 85.71, 66.67, 62.5, 83.33, 100.0, 100.0, 83.33]%	[97.67, 100.0, 98.82, 97.65, 97.65, 98.8, 98.78, 97.65, 100.0, 97.62, 98.78, 98.81, 98.82, 97.67, 98.81]%	||	79.03%	78.89%	98.49%	81.48%	98.5%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  1  0  0  0  0  83.33%		3
  0  0  0  4  0  2  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  4  0  2  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  1  0  0  5  0  0  0  0  0  0  0  0  83.33%		7
  0  1  0  0  0  0  0  4  0  0  0  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  1  0  0  4  0  1  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  1  0  0  0  0  1  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  1  0  0  0  5  83.33%		15
Forest OOB Error: 53.03%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 94.44, 98.89, 97.78, 98.89, 100.0]%	[66.67, 85.71, 92.31, 85.71, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 66.67, 92.31, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 95.24, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 75.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 55.56, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.77, 100.0, 97.67, 98.82, 100.0]%	||	81.87%	82.22%	98.73%	85.45%	98.75%	
  3  2  1  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[97.78, 95.56, 97.78, 100.0, 97.78, 97.78, 98.89, 97.78, 95.56, 97.78, 95.56, 95.56, 93.33, 100.0, 96.67]%	[80.0, 75.0, 83.33, 100.0, 83.33, 80.0, 92.31, 83.33, 60.0, 83.33, 71.43, 66.67, 57.14, 100.0, 66.67]%	[66.67, 100.0, 83.33, 100.0, 83.33, 66.67, 100.0, 83.33, 50.0, 83.33, 83.33, 66.67, 66.67, 100.0, 50.0]%	[100.0, 95.24, 98.81, 100.0, 98.81, 100.0, 98.81, 98.81, 98.81, 98.81, 96.43, 97.62, 95.24, 100.0, 100.0]%	[100.0, 60.0, 83.33, 100.0, 83.33, 100.0, 85.71, 83.33, 75.0, 83.33, 62.5, 66.67, 50.0, 100.0, 100.0]%	[97.67, 100.0, 98.81, 100.0, 98.81, 97.67, 100.0, 98.81, 96.51, 98.81, 98.78, 97.62, 97.56, 100.0, 96.55]%	||	78.84%	78.89%	98.49%	82.21%	98.51%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  1  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  1  0  0  0  83.33%		5
  0  0  0  0  1  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  2  1  0  0  0  0  0  3  0  0  0  0  0  0  50.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  2  0  3  50.0%		15
Forest OOB Error: 55.7%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 94.44, 98.89, 97.78, 98.89, 100.0]%	[66.67, 85.71, 92.31, 85.71, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 66.67, 92.31, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 95.24, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 75.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 55.56, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.77, 100.0, 97.67, 98.82, 100.0]%	||	81.87%	82.22%	98.73%	85.45%	98.75%	
  3  2  1  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[96.67, 97.78, 100.0, 96.67, 98.89, 94.44, 96.67, 97.78, 94.44, 100.0, 98.89, 98.89, 100.0, 96.67, 98.89]%	[72.73, 83.33, 100.0, 72.73, 90.91, 66.67, 76.92, 80.0, 66.67, 100.0, 92.31, 90.91, 100.0, 66.67, 92.31]%	[66.67, 83.33, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 83.33, 100.0, 100.0, 83.33, 100.0, 50.0, 100.0]%	[98.81, 98.81, 100.0, 98.81, 100.0, 95.24, 97.62, 100.0, 95.24, 100.0, 98.81, 100.0, 100.0, 100.0, 98.81]%	[80.0, 83.33, 100.0, 80.0, 100.0, 55.56, 71.43, 100.0, 55.56, 100.0, 85.71, 100.0, 100.0, 100.0, 85.71]%	[97.65, 98.81, 100.0, 97.65, 98.82, 98.77, 98.8, 97.67, 98.77, 100.0, 100.0, 98.82, 100.0, 96.55, 100.0]%	||	83.48%	83.33%	98.81%	86.49%	98.82%	
  4  0  0  0  0  0  1  0  1  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  0  0  1  0  0  0  0  0  0  66.67%		4
  0  0  0  1  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  1  0  0  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  2  0  0  1  0  0  0  0  3  0  50.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 55.81%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 94.44, 98.89, 97.78, 98.89, 100.0]%	[66.67, 85.71, 92.31, 85.71, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 66.67, 92.31, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 95.24, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 75.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 55.56, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.77, 100.0, 97.67, 98.82, 100.0]%	||	81.87%	82.22%	98.73%	85.45%	98.75%	
  3  2  1  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[97.78, 98.89, 98.89, 97.78, 98.89, 97.78, 93.33, 96.67, 94.44, 96.67, 97.78, 93.33, 97.78, 96.67, 96.67]%	[80.0, 92.31, 90.91, 83.33, 90.91, 83.33, 50.0, 76.92, 66.67, 72.73, 83.33, 57.14, 83.33, 76.92, 66.67]%	[66.67, 100.0, 83.33, 83.33, 83.33, 83.33, 50.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33, 83.33, 50.0]%	[100.0, 98.81, 100.0, 98.81, 100.0, 98.81, 96.43, 97.62, 95.24, 98.81, 98.81, 95.24, 98.81, 97.62, 100.0]%	[100.0, 85.71, 100.0, 83.33, 100.0, 83.33, 50.0, 71.43, 55.56, 80.0, 83.33, 50.0, 83.33, 71.43, 100.0]%	[97.67, 100.0, 98.82, 98.81, 98.82, 98.81, 96.43, 98.8, 98.77, 97.65, 98.81, 97.56, 98.81, 98.8, 96.55]%	||	76.97%	76.67%	98.33%	79.83%	98.34%	
  4  1  0  0  0  0  0  0  1  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  0  1  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  3  1  0  0  0  2  0  0  0  50.0%		7
  0  0  0  0  0  0  0  5  1  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  1  4  0  1  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  4  0  1  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  1  1  0  1  0  0  0  0  3  50.0%		15
Forest OOB Error: 51.44%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 94.44, 98.89, 97.78, 98.89, 100.0]%	[66.67, 85.71, 92.31, 85.71, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 66.67, 92.31, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 95.24, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 75.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 55.56, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.77, 100.0, 97.67, 98.82, 100.0]%	||	81.87%	82.22%	98.73%	85.45%	98.75%	
  3  2  1  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	70.0%	96.0%	67.86%	[98.89, 98.89, 95.56, 97.78, 96.67, 93.33, 92.22, 95.56, 94.44, 92.22, 97.78, 96.67, 96.67, 96.67, 96.67]%	[90.91, 92.31, 66.67, 83.33, 72.73, 50.0, 58.82, 66.67, 66.67, 46.15, 80.0, 66.67, 76.92, 72.73, 66.67]%	[83.33, 100.0, 66.67, 83.33, 66.67, 50.0, 83.33, 66.67, 83.33, 50.0, 66.67, 50.0, 83.33, 66.67, 50.0]%	[100.0, 98.81, 97.62, 98.81, 98.81, 96.43, 92.86, 97.62, 95.24, 95.24, 100.0, 100.0, 97.62, 98.81, 100.0]%	[100.0, 85.71, 66.67, 83.33, 80.0, 50.0, 45.45, 66.67, 55.56, 42.86, 100.0, 100.0, 71.43, 80.0, 100.0]%	[98.82, 100.0, 97.62, 98.81, 97.65, 96.43, 98.73, 97.62, 98.77, 96.39, 97.67, 96.55, 98.8, 97.65, 96.55]%	||	70.48%	70.0%	97.86%	75.18%	97.87%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  4  0  0  0  0  0  1  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  1  0  0  0  0  0  66.67%		5
  0  0  0  1  1  3  0  0  1  0  0  0  0  0  0  50.0%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  1  4  1  0  0  0  0  0  0  66.67%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  3  0  0  3  0  0  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  2  0  0  1  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  1  3  50.0%		15
Forest OOB Error: 57.85%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 94.44, 98.89, 97.78, 98.89, 100.0]%	[66.67, 85.71, 92.31, 85.71, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 66.67, 92.31, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 95.24, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 75.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 55.56, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.77, 100.0, 97.67, 98.82, 100.0]%	||	81.87%	82.22%	98.73%	85.45%	98.75%	
  3  2  1  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[95.56, 95.56, 94.44, 91.11, 98.89, 95.56, 93.33, 97.78, 96.67, 95.56, 97.78, 97.78, 96.67, 100.0, 97.78]%	[60.0, 66.67, 61.54, 42.86, 90.91, 66.67, 50.0, 80.0, 76.92, 75.0, 83.33, 80.0, 76.92, 100.0, 80.0]%	[50.0, 66.67, 66.67, 50.0, 83.33, 66.67, 50.0, 66.67, 83.33, 100.0, 83.33, 66.67, 83.33, 100.0, 66.67]%	[98.81, 97.62, 96.43, 94.05, 100.0, 97.62, 96.43, 100.0, 97.62, 95.24, 98.81, 100.0, 97.62, 100.0, 100.0]%	[75.0, 66.67, 57.14, 37.5, 100.0, 66.67, 50.0, 100.0, 71.43, 60.0, 83.33, 100.0, 71.43, 100.0, 100.0]%	[96.51, 97.62, 97.59, 96.34, 98.82, 97.62, 96.43, 97.67, 98.8, 100.0, 98.81, 97.67, 98.8, 100.0, 97.67]%	||	72.72%	72.22%	98.02%	75.94%	98.02%	
  3  2  0  1  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  1  4  0  0  0  0  1  0  0  0  0  0  0  0  0  66.67%		2
  0  0  4  2  0  0  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  3  0  2  0  0  1  0  0  0  0  0  0  50.0%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  1  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  1  0  0  3  0  0  2  0  0  0  0  0  50.0%		7
  0  0  2  0  0  0  0  4  0  0  0  0  0  0  0  66.67%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  1  0  0  0  0  0  1  0  4  66.67%		15
Forest OOB Error: 54.04%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[97.78, 97.78, 100.0, 96.67, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 97.78, 100.0]%	[80.0, 85.71, 100.0, 80.0, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 66.67, 100.0]%	[100.0, 97.62, 100.0, 96.43, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 66.67, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	83.21%	83.33%	98.81%	86.31%	98.82%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[95.56, 97.78, 97.78, 98.89, 97.78, 97.78, 95.56, 96.67, 100.0, 97.78, 96.67, 98.89, 97.78, 98.89, 98.89]%	[60.0, 85.71, 83.33, 90.91, 83.33, 85.71, 75.0, 66.67, 100.0, 83.33, 76.92, 90.91, 83.33, 90.91, 90.91]%	[50.0, 100.0, 83.33, 83.33, 83.33, 100.0, 100.0, 50.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[98.81, 97.62, 98.81, 100.0, 98.81, 97.62, 95.24, 100.0, 100.0, 98.81, 97.62, 100.0, 98.81, 100.0, 100.0]%	[75.0, 75.0, 83.33, 100.0, 83.33, 75.0, 60.0, 100.0, 100.0, 83.33, 71.43, 100.0, 83.33, 100.0, 100.0]%	[96.51, 100.0, 98.81, 98.82, 98.81, 100.0, 100.0, 96.55, 100.0, 98.81, 98.8, 98.82, 98.81, 98.82, 98.82]%	||	83.13%	83.33%	98.81%	85.98%	98.83%	
  3  2  0  0  0  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  1  0  0  0  1  3  0  0  1  0  0  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  1  0  0  0  0  0  0  0  0  5  0  83.33%		14
  1  0  0  0  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 50.57%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[97.78, 97.78, 100.0, 96.67, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 97.78, 100.0]%	[80.0, 85.71, 100.0, 80.0, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 66.67, 100.0]%	[100.0, 97.62, 100.0, 96.43, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 66.67, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	83.21%	83.33%	98.81%	86.31%	98.82%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	68.89%	95.85%	66.67%	[96.67, 97.78, 96.67, 96.67, 96.67, 95.56, 91.11, 94.44, 95.56, 93.33, 96.67, 96.67, 96.67, 96.67, 96.67]%	[76.92, 83.33, 72.73, 72.73, 76.92, 60.0, 60.0, 54.55, 71.43, 50.0, 72.73, 66.67, 76.92, 72.73, 66.67]%	[83.33, 83.33, 66.67, 66.67, 83.33, 50.0, 100.0, 50.0, 83.33, 50.0, 66.67, 50.0, 83.33, 66.67, 50.0]%	[97.62, 98.81, 98.81, 98.81, 97.62, 98.81, 90.48, 97.62, 96.43, 96.43, 98.81, 100.0, 97.62, 98.81, 100.0]%	[71.43, 83.33, 80.0, 80.0, 71.43, 75.0, 42.86, 60.0, 62.5, 50.0, 80.0, 100.0, 71.43, 80.0, 100.0]%	[98.8, 98.81, 97.65, 97.65, 98.8, 96.51, 100.0, 96.47, 98.78, 96.43, 97.65, 96.55, 98.8, 97.65, 96.55]%	||	68.95%	68.89%	97.78%	73.87%	97.81%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  1  5  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		2
  0  0  4  0  0  0  0  1  1  0  0  0  0  0  0  66.67%		3
  0  0  0  4  0  0  1  0  0  0  1  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  1  0  3  0  0  1  0  0  0  0  1  0  50.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  1  0  0  0  2  3  0  0  0  0  0  0  0  50.0%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  1  3  0  0  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  2  0  0  1  0  3  0  0  0  50.0%		12
  1  0  0  0  0  0  0  0  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  2  0  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  1  0  1  0  1  0  0  0  0  3  50.0%		15
Forest OOB Error: 53.45%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[97.78, 97.78, 100.0, 96.67, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 97.78, 100.0]%	[80.0, 85.71, 100.0, 80.0, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 66.67, 100.0]%	[100.0, 97.62, 100.0, 96.43, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 66.67, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	83.21%	83.33%	98.81%	86.31%	98.82%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	67.78%	95.7%	65.48%	[96.67, 92.22, 94.44, 98.89, 94.44, 96.67, 95.56, 96.67, 92.22, 94.44, 95.56, 97.78, 96.67, 96.67, 96.67]%	[66.67, 46.15, 66.67, 90.91, 44.44, 72.73, 66.67, 72.73, 58.82, 61.54, 75.0, 83.33, 66.67, 76.92, 66.67]%	[50.0, 50.0, 83.33, 83.33, 33.33, 66.67, 66.67, 66.67, 83.33, 66.67, 100.0, 83.33, 50.0, 83.33, 50.0]%	[100.0, 95.24, 95.24, 100.0, 98.81, 98.81, 97.62, 98.81, 92.86, 96.43, 95.24, 98.81, 100.0, 97.62, 100.0]%	[100.0, 42.86, 55.56, 100.0, 66.67, 80.0, 66.67, 80.0, 45.45, 57.14, 60.0, 83.33, 100.0, 71.43, 100.0]%	[96.55, 96.39, 98.77, 98.82, 95.4, 97.65, 97.62, 97.65, 98.73, 97.59, 100.0, 98.81, 96.55, 98.8, 96.55]%	||	67.73%	67.78%	97.7%	73.94%	97.72%	
  3  1  0  0  0  0  0  0  1  1  0  0  0  0  0  50.0%		1
  0  3  0  0  0  0  1  0  1  1  0  0  0  0  0  50.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  2  0  0  0  1  0  0  0  0  2  0  33.33%		5
  0  0  0  0  1  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  4  0  0  1  0  1  0  0  0  66.67%		7
  0  0  2  0  0  0  0  4  0  0  0  0  0  0  0  66.67%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  2  0  0  0  0  0  0  0  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  3  0  3  0  0  50.0%		13
  0  0  1  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  1  0  1  0  0  0  3  50.0%		15
Forest OOB Error: 52.38%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[97.78, 97.78, 100.0, 96.67, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 97.78, 100.0]%	[80.0, 85.71, 100.0, 80.0, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 66.67, 100.0]%	[100.0, 97.62, 100.0, 96.43, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 66.67, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	83.21%	83.33%	98.81%	86.31%	98.82%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[97.78, 95.56, 100.0, 97.78, 98.89, 94.44, 93.33, 94.44, 95.56, 92.22, 97.78, 96.67, 96.67, 96.67, 96.67]%	[80.0, 60.0, 100.0, 83.33, 90.91, 54.55, 62.5, 54.55, 71.43, 46.15, 85.71, 72.73, 76.92, 76.92, 66.67]%	[66.67, 50.0, 100.0, 83.33, 83.33, 50.0, 83.33, 50.0, 83.33, 50.0, 100.0, 66.67, 83.33, 83.33, 50.0]%	[100.0, 98.81, 100.0, 98.81, 100.0, 97.62, 94.05, 97.62, 96.43, 95.24, 97.62, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 83.33, 100.0, 60.0, 50.0, 60.0, 62.5, 42.86, 75.0, 80.0, 71.43, 71.43, 100.0]%	[97.67, 96.51, 100.0, 98.81, 98.82, 96.47, 98.75, 96.47, 98.78, 96.39, 100.0, 97.65, 98.8, 98.8, 96.55]%	||	72.16%	72.22%	98.02%	75.44%	98.03%	
  4  1  0  0  0  0  0  0  1  0  0  0  0  0  0  66.67%		1
  0  3  0  0  0  0  1  0  1  1  0  0  0  0  0  50.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  3  0  0  1  0  0  0  0  2  0  50.0%		6
  0  0  0  0  0  0  5  0  0  0  0  1  0  0  0  83.33%		7
  0  0  0  1  0  0  0  3  0  0  2  0  0  0  0  50.0%		8
  0  0  0  0  0  0  0  0  5  1  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  3  0  0  3  0  0  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  0  0  2  0  3  50.0%		15
Forest OOB Error: 49.11%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[97.78, 97.78, 100.0, 96.67, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 97.78, 100.0]%	[80.0, 85.71, 100.0, 80.0, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 66.67, 100.0]%	[100.0, 97.62, 100.0, 96.43, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 66.67, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	83.21%	83.33%	98.81%	86.31%	98.82%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	71.11%	96.15%	69.05%	[96.67, 92.22, 98.89, 97.78, 98.89, 95.56, 94.44, 94.44, 95.56, 95.56, 95.56, 95.56, 97.78, 95.56, 97.78]%	[72.73, 36.36, 90.91, 83.33, 90.91, 66.67, 54.55, 66.67, 71.43, 71.43, 66.67, 71.43, 80.0, 66.67, 80.0]%	[66.67, 33.33, 83.33, 83.33, 83.33, 66.67, 50.0, 83.33, 83.33, 83.33, 66.67, 83.33, 66.67, 66.67, 66.67]%	[98.81, 96.43, 100.0, 98.81, 100.0, 97.62, 97.62, 95.24, 96.43, 96.43, 97.62, 96.43, 100.0, 97.62, 100.0]%	[80.0, 40.0, 100.0, 83.33, 100.0, 66.67, 60.0, 55.56, 62.5, 62.5, 66.67, 62.5, 100.0, 66.67, 100.0]%	[97.65, 95.29, 98.82, 98.81, 98.82, 97.62, 96.47, 98.77, 98.78, 98.78, 97.62, 98.78, 97.67, 97.62, 97.67]%	||	71.32%	71.11%	97.94%	73.76%	97.95%	
  4  1  0  0  0  0  0  1  0  0  0  0  0  0  0  66.67%		1
  0  2  0  0  0  0  0  0  3  1  0  0  0  0  0  33.33%		2
  0  0  5  0  0  0  0  0  0  0  1  0  0  0  0  83.33%		3
  0  1  0  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  1  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  1  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  1  3  0  0  0  0  2  0  0  0  50.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  0  1  0  83.33%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  1  0  0  0  4  0  66.67%		14
  1  0  0  0  0  0  0  0  0  1  0  0  0  0  4  66.67%		15
Forest OOB Error: 58.78%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[97.78, 97.78, 100.0, 96.67, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 97.78, 100.0]%	[80.0, 85.71, 100.0, 80.0, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 66.67, 100.0]%	[100.0, 97.62, 100.0, 96.43, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 66.67, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	83.21%	83.33%	98.81%	86.31%	98.82%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	74.44%	96.59%	72.62%	[98.89, 96.67, 93.33, 98.89, 97.78, 94.44, 94.44, 96.67, 94.44, 98.89, 95.56, 96.67, 97.78, 97.78, 96.67]%	[90.91, 72.73, 57.14, 90.91, 80.0, 66.67, 70.59, 72.73, 54.55, 92.31, 71.43, 66.67, 80.0, 83.33, 72.73]%	[83.33, 66.67, 66.67, 83.33, 66.67, 83.33, 100.0, 66.67, 50.0, 100.0, 83.33, 50.0, 66.67, 83.33, 66.67]%	[100.0, 98.81, 95.24, 100.0, 100.0, 95.24, 94.05, 98.81, 97.62, 98.81, 96.43, 100.0, 100.0, 98.81, 98.81]%	[100.0, 80.0, 50.0, 100.0, 100.0, 55.56, 54.55, 80.0, 60.0, 85.71, 62.5, 100.0, 100.0, 83.33, 80.0]%	[98.82, 97.65, 97.56, 98.82, 97.67, 98.77, 100.0, 97.65, 96.47, 100.0, 98.78, 96.55, 97.67, 98.81, 97.65]%	||	74.85%	74.44%	98.17%	79.44%	98.19%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  4  0  0  0  0  2  0  0  0  0  0  0  0  0  66.67%		2
  0  0  4  0  0  1  0  0  1  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  1  0  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  1  0  0  0  0  4  0  0  1  0  0  0  0  66.67%		8
  0  0  1  0  0  0  2  0  3  0  0  0  0  0  0  50.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  1  0  3  0  0  1  50.0%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  1  0  0  0  0  0  0  0  0  0  0  1  4  66.67%		15
Forest OOB Error: 51.68%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 98.89, 100.0]%	[66.67, 85.71, 92.31, 85.71, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 83.33, 100.0]%	[100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 75.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 98.82, 100.0]%	||	82.92%	83.33%	98.81%	85.91%	98.83%	
  3  2  1  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[98.89, 98.89, 98.89, 95.56, 98.89, 95.56, 95.56, 98.89, 96.67, 96.67, 95.56, 97.78, 96.67, 98.89, 98.89]%	[90.91, 92.31, 92.31, 71.43, 92.31, 60.0, 60.0, 90.91, 72.73, 76.92, 75.0, 80.0, 66.67, 92.31, 92.31]%	[83.33, 100.0, 100.0, 83.33, 100.0, 50.0, 50.0, 83.33, 66.67, 83.33, 100.0, 66.67, 50.0, 100.0, 100.0]%	[100.0, 98.81, 98.81, 96.43, 98.81, 98.81, 98.81, 100.0, 98.81, 97.62, 95.24, 100.0, 100.0, 98.81, 98.81]%	[100.0, 85.71, 85.71, 62.5, 85.71, 75.0, 75.0, 100.0, 80.0, 71.43, 60.0, 100.0, 100.0, 85.71, 85.71]%	[98.82, 100.0, 100.0, 98.78, 100.0, 96.51, 96.51, 98.82, 97.65, 98.8, 100.0, 97.67, 96.55, 100.0, 100.0]%	||	80.41%	81.11%	98.65%	83.5%	98.67%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  1  1  3  0  0  0  0  0  0  0  1  0  50.0%		6
  0  0  0  1  0  0  3  0  1  1  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  1  1  0  0  0  0  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  3  0  3  0  0  50.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 50.19%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 98.89, 100.0]%	[66.67, 85.71, 92.31, 85.71, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 83.33, 100.0]%	[100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 75.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 98.82, 100.0]%	||	82.92%	83.33%	98.81%	85.91%	98.83%	
  3  2  1  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[95.56, 94.44, 100.0, 97.78, 98.89, 94.44, 92.22, 96.67, 98.89, 95.56, 95.56, 97.78, 96.67, 100.0, 98.89]%	[60.0, 61.54, 100.0, 83.33, 90.91, 66.67, 46.15, 76.92, 90.91, 66.67, 66.67, 80.0, 76.92, 100.0, 90.91]%	[50.0, 66.67, 100.0, 83.33, 83.33, 83.33, 50.0, 83.33, 83.33, 66.67, 66.67, 66.67, 83.33, 100.0, 83.33]%	[98.81, 96.43, 100.0, 98.81, 100.0, 95.24, 95.24, 97.62, 100.0, 97.62, 97.62, 100.0, 97.62, 100.0, 100.0]%	[75.0, 57.14, 100.0, 83.33, 100.0, 55.56, 42.86, 71.43, 100.0, 66.67, 66.67, 100.0, 71.43, 100.0, 100.0]%	[96.51, 97.59, 100.0, 98.81, 98.82, 98.77, 96.39, 98.8, 98.82, 97.62, 97.62, 97.67, 98.8, 100.0, 98.82]%	||	77.17%	76.67%	98.33%	79.34%	98.34%	
  3  1  0  1  0  1  0  0  0  0  0  0  0  0  0  50.0%		1
  0  4  0  0  0  0  1  0  0  1  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  1  0  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  1  0  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  2  3  0  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  1  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 52.24%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 98.89, 100.0]%	[66.67, 85.71, 92.31, 85.71, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 83.33, 100.0]%	[100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 75.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 98.82, 100.0]%	||	82.92%	83.33%	98.81%	85.91%	98.83%	
  3  2  1  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[96.67, 97.78, 97.78, 96.67, 97.78, 96.67, 92.22, 97.78, 94.44, 94.44, 96.67, 96.67, 97.78, 98.89, 98.89]%	[72.73, 85.71, 83.33, 66.67, 83.33, 72.73, 58.82, 83.33, 66.67, 44.44, 76.92, 72.73, 83.33, 90.91, 90.91]%	[66.67, 100.0, 83.33, 50.0, 83.33, 66.67, 83.33, 83.33, 83.33, 33.33, 83.33, 66.67, 83.33, 83.33, 83.33]%	[98.81, 97.62, 98.81, 100.0, 98.81, 98.81, 92.86, 98.81, 95.24, 98.81, 97.62, 98.81, 98.81, 100.0, 100.0]%	[80.0, 75.0, 83.33, 100.0, 83.33, 80.0, 45.45, 83.33, 55.56, 66.67, 71.43, 80.0, 83.33, 100.0, 100.0]%	[97.65, 100.0, 98.81, 96.55, 98.81, 97.65, 98.73, 98.81, 98.77, 95.4, 98.8, 97.65, 98.81, 98.82, 98.82]%	||	75.5%	75.56%	98.25%	79.16%	98.27%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  1  3  0  1  0  0  0  0  1  0  0  0  0  50.0%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  1  0  0  66.67%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  1  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  1  2  0  1  0  0  0  33.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  2  0  0  0  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  1  0  0  0  0  0  0  0  0  5  0  83.33%		14
  1  0  0  0  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 55.08%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 98.89, 100.0]%	[66.67, 85.71, 92.31, 85.71, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 83.33, 100.0]%	[100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 75.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 98.82, 100.0]%	||	82.92%	83.33%	98.81%	85.91%	98.83%	
  3  2  1  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[96.67, 97.78, 97.78, 97.78, 97.78, 97.78, 94.44, 95.56, 100.0, 95.56, 94.44, 96.67, 95.56, 96.67, 98.89]%	[66.67, 85.71, 83.33, 80.0, 83.33, 83.33, 66.67, 60.0, 100.0, 66.67, 66.67, 76.92, 60.0, 76.92, 90.91]%	[50.0, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 50.0, 100.0, 66.67, 83.33, 83.33, 50.0, 83.33, 83.33]%	[100.0, 97.62, 98.81, 100.0, 98.81, 98.81, 95.24, 98.81, 100.0, 97.62, 95.24, 97.62, 98.81, 97.62, 100.0]%	[100.0, 75.0, 83.33, 100.0, 83.33, 83.33, 55.56, 75.0, 100.0, 66.67, 55.56, 71.43, 75.0, 71.43, 100.0]%	[96.55, 100.0, 98.81, 97.67, 98.81, 98.81, 98.77, 96.51, 100.0, 97.62, 98.77, 98.8, 96.51, 98.8, 98.82]%	||	76.48%	76.67%	98.33%	79.71%	98.35%	
  3  2  0  0  0  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  1  0  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  0  0  1  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  0  1  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  0  0  0  0  1  0  83.33%		7
  0  0  1  0  0  0  1  3  0  0  1  0  0  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  1  0  0  4  0  1  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  3  0  3  0  0  50.0%		13
  0  0  0  0  1  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  1  5  83.33%		15
Forest OOB Error: 48.25%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 98.89, 100.0]%	[66.67, 85.71, 92.31, 85.71, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 83.33, 100.0]%	[100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 75.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 98.82, 100.0]%	||	82.92%	83.33%	98.81%	85.91%	98.83%	
  3  2  1  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[97.78, 97.78, 96.67, 95.56, 97.78, 96.67, 92.22, 94.44, 98.89, 93.33, 97.78, 95.56, 98.89, 98.89, 98.89]%	[83.33, 83.33, 76.92, 50.0, 85.71, 76.92, 53.33, 44.44, 92.31, 50.0, 83.33, 66.67, 92.31, 90.91, 90.91]%	[83.33, 83.33, 83.33, 33.33, 100.0, 83.33, 66.67, 33.33, 100.0, 50.0, 83.33, 66.67, 100.0, 83.33, 83.33]%	[98.81, 98.81, 97.62, 100.0, 97.62, 97.62, 94.05, 98.81, 98.81, 96.43, 98.81, 97.62, 98.81, 100.0, 100.0]%	[83.33, 83.33, 71.43, 100.0, 75.0, 71.43, 44.44, 66.67, 85.71, 50.0, 83.33, 66.67, 85.71, 100.0, 100.0]%	[98.81, 98.81, 98.8, 95.45, 100.0, 98.8, 97.53, 95.4, 100.0, 96.43, 98.81, 97.62, 100.0, 98.82, 98.82]%	||	74.7%	75.56%	98.25%	77.8%	98.27%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  0  0  0  1  0  0  0  83.33%		3
  1  0  0  2  1  1  1  0  0  0  0  0  0  0  0  33.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  2  0  0  0  0  2  0  1  1  0  0  0  0  33.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  1  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  1  0  0  0  0  5  83.33%		15
Forest OOB Error: 54.9%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56, 98.89, 98.89, 98.89, 100.0]%	[66.67, 85.71, 92.31, 85.71, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 71.43, 92.31, 90.91, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 83.33, 100.0]%	[100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 75.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.78, 100.0, 98.82, 98.82, 100.0]%	||	82.92%	83.33%	98.81%	85.91%	98.83%	
  3  2  1  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[97.78, 96.67, 97.78, 96.67, 98.89, 94.44, 94.44, 96.67, 97.78, 93.33, 94.44, 94.44, 96.67, 97.78, 96.67]%	[80.0, 76.92, 85.71, 72.73, 90.91, 54.55, 66.67, 66.67, 85.71, 40.0, 66.67, 61.54, 72.73, 83.33, 72.73]%	[66.67, 83.33, 100.0, 66.67, 83.33, 50.0, 83.33, 50.0, 100.0, 33.33, 83.33, 66.67, 66.67, 83.33, 66.67]%	[100.0, 97.62, 97.62, 98.81, 100.0, 97.62, 95.24, 100.0, 97.62, 97.62, 95.24, 96.43, 98.81, 98.81, 98.81]%	[100.0, 71.43, 75.0, 80.0, 100.0, 60.0, 55.56, 100.0, 75.0, 50.0, 55.56, 57.14, 80.0, 83.33, 80.0]%	[97.67, 98.8, 100.0, 97.65, 98.82, 96.47, 98.77, 96.55, 100.0, 95.35, 98.77, 97.59, 97.65, 98.81, 97.65]%	||	71.79%	72.22%	98.02%	74.87%	98.04%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  2  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  0  0  1  0  0  0  83.33%		5
  0  0  1  1  0  3  0  0  1  0  0  0  0  0  0  50.0%		6
  0  0  0  0  0  0  5  0  0  0  0  1  0  0  0  83.33%		7
  0  0  1  0  0  0  0  3  0  0  1  0  0  0  1  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  2  0  1  2  0  1  0  0  0  33.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  1  0  0  1  4  66.67%		15
Forest OOB Error: 53.46%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 94.44, 98.89, 97.78, 98.89, 100.0]%	[66.67, 85.71, 92.31, 85.71, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 66.67, 92.31, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 95.24, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 75.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 55.56, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.77, 100.0, 97.67, 98.82, 100.0]%	||	81.87%	82.22%	98.73%	85.45%	98.75%	
  3  2  1  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[97.78, 97.78, 100.0, 98.89, 98.89, 96.67, 97.78, 97.78, 95.56, 95.56, 96.67, 96.67, 94.44, 97.78, 97.78]%	[80.0, 83.33, 100.0, 92.31, 90.91, 72.73, 80.0, 85.71, 71.43, 71.43, 76.92, 72.73, 54.55, 85.71, 80.0]%	[66.67, 83.33, 100.0, 100.0, 83.33, 66.67, 66.67, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 100.0, 66.67]%	[100.0, 98.81, 100.0, 98.81, 100.0, 98.81, 100.0, 97.62, 96.43, 96.43, 97.62, 98.81, 97.62, 97.62, 100.0]%	[100.0, 83.33, 100.0, 85.71, 100.0, 80.0, 100.0, 75.0, 62.5, 62.5, 71.43, 80.0, 60.0, 75.0, 100.0]%	[97.67, 98.81, 100.0, 100.0, 98.82, 97.65, 97.67, 100.0, 98.78, 98.78, 98.8, 97.65, 96.47, 100.0, 97.67]%	||	79.85%	80.0%	98.57%	82.37%	98.59%	
  4  1  0  0  0  0  0  0  1  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  1  4  0  0  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  1  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  1  0  0  2  0  3  0  0  50.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  1  0  4  66.67%		15
Forest OOB Error: 51.7%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 94.44, 98.89, 97.78, 98.89, 100.0]%	[66.67, 85.71, 92.31, 85.71, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 66.67, 92.31, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 95.24, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 75.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 55.56, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.77, 100.0, 97.67, 98.82, 100.0]%	||	81.87%	82.22%	98.73%	85.45%	98.75%	
  3  2  1  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	67.78%	95.7%	65.48%	[96.67, 98.89, 97.78, 95.56, 94.44, 94.44, 92.22, 97.78, 96.67, 93.33, 93.33, 96.67, 94.44, 96.67, 96.67]%	[66.67, 90.91, 83.33, 60.0, 61.54, 61.54, 63.16, 85.71, 80.0, 40.0, 57.14, 66.67, 54.55, 72.73, 66.67]%	[50.0, 83.33, 83.33, 50.0, 66.67, 66.67, 100.0, 100.0, 100.0, 33.33, 66.67, 50.0, 50.0, 66.67, 50.0]%	[100.0, 100.0, 98.81, 98.81, 96.43, 96.43, 91.67, 97.62, 96.43, 97.62, 95.24, 100.0, 97.62, 98.81, 100.0]%	[100.0, 100.0, 83.33, 75.0, 57.14, 57.14, 46.15, 75.0, 66.67, 50.0, 50.0, 100.0, 60.0, 80.0, 100.0]%	[96.55, 98.82, 98.81, 96.51, 97.59, 97.59, 100.0, 100.0, 100.0, 95.35, 97.56, 96.55, 96.47, 97.65, 96.55]%	||	67.37%	67.78%	97.7%	73.36%	97.73%	
  3  0  1  0  0  0  1  0  1  0  0  0  0  0  0  50.0%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  0  0  0  0  0  1  0  83.33%		3
  0  0  0  3  1  1  1  0  0  0  0  0  0  0  0  50.0%		4
  0  0  0  1  4  0  1  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  0  1  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  1  3  0  0  2  0  0  0  0  0  33.33%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  2  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  3  0  3  0  0  50.0%		13
  0  0  0  0  1  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  1  0  0  1  0  1  0  3  50.0%		15
Forest OOB Error: 51.63%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 94.44, 98.89, 97.78, 98.89, 100.0]%	[66.67, 85.71, 92.31, 85.71, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 66.67, 92.31, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 95.24, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 75.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 55.56, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.77, 100.0, 97.67, 98.82, 100.0]%	||	81.87%	82.22%	98.73%	85.45%	98.75%	
  3  2  1  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[94.44, 95.56, 97.78, 96.67, 98.89, 97.78, 92.22, 94.44, 94.44, 93.33, 95.56, 97.78, 98.89, 100.0, 98.89]%	[54.55, 75.0, 83.33, 76.92, 90.91, 80.0, 53.33, 54.55, 61.54, 40.0, 66.67, 80.0, 92.31, 100.0, 90.91]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 66.67, 50.0, 66.67, 33.33, 66.67, 66.67, 100.0, 100.0, 83.33]%	[97.62, 95.24, 98.81, 97.62, 100.0, 100.0, 94.05, 97.62, 96.43, 97.62, 97.62, 100.0, 98.81, 100.0, 100.0]%	[60.0, 60.0, 83.33, 71.43, 100.0, 100.0, 44.44, 60.0, 57.14, 50.0, 66.67, 100.0, 85.71, 100.0, 100.0]%	[96.47, 100.0, 98.81, 98.8, 98.82, 97.67, 97.53, 96.47, 97.59, 95.35, 97.62, 97.67, 100.0, 100.0, 98.82]%	||	73.33%	73.33%	98.1%	75.92%	98.11%	
  3  2  0  1  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  1  0  0  0  0  83.33%		3
  0  0  0  5  0  0  0  0  0  0  1  0  0  0  0  83.33%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  1  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  1  0  0  0  1  3  1  0  0  0  0  0  0  50.0%		8
  0  2  0  0  0  0  0  0  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  3  0  1  2  0  0  0  0  0  33.33%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  1  0  0  0  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 55.7%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 94.44, 98.89, 97.78, 98.89, 100.0]%	[66.67, 85.71, 92.31, 85.71, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 66.67, 92.31, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 95.24, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 75.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 55.56, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.77, 100.0, 97.67, 98.82, 100.0]%	||	81.87%	82.22%	98.73%	85.45%	98.75%	
  3  2  1  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[96.67, 95.56, 98.89, 96.67, 97.78, 96.67, 96.67, 95.56, 96.67, 96.67, 96.67, 97.78, 97.78, 100.0, 97.78]%	[72.73, 71.43, 92.31, 72.73, 80.0, 72.73, 80.0, 66.67, 80.0, 76.92, 72.73, 80.0, 83.33, 100.0, 80.0]%	[66.67, 83.33, 100.0, 66.67, 66.67, 66.67, 100.0, 66.67, 100.0, 83.33, 66.67, 66.67, 83.33, 100.0, 66.67]%	[98.81, 96.43, 98.81, 98.81, 100.0, 98.81, 96.43, 97.62, 96.43, 97.62, 98.81, 100.0, 98.81, 100.0, 100.0]%	[80.0, 62.5, 85.71, 80.0, 100.0, 80.0, 66.67, 66.67, 66.67, 71.43, 80.0, 100.0, 83.33, 100.0, 100.0]%	[97.65, 98.78, 100.0, 97.65, 97.67, 97.65, 100.0, 97.62, 100.0, 98.8, 97.65, 97.67, 98.81, 100.0, 97.67]%	||	78.77%	78.89%	98.49%	81.53%	98.51%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  1  5  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  1  4  0  1  0  0  0  0  0  0  0  0  66.67%		5
  0  1  0  0  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  1  0  0  0  0  4  1  0  0  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  1  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  1  0  0  0  0  4  66.67%		15
Forest OOB Error: 56.18%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 94.44, 98.89, 97.78, 98.89, 100.0]%	[66.67, 85.71, 92.31, 85.71, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 66.67, 92.31, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 95.24, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 75.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 55.56, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.77, 100.0, 97.67, 98.82, 100.0]%	||	81.87%	82.22%	98.73%	85.45%	98.75%	
  3  2  1  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	74.44%	96.59%	72.62%	[95.56, 95.56, 97.78, 96.67, 97.78, 98.89, 97.78, 96.67, 98.89, 94.44, 96.67, 94.44, 95.56, 95.56, 96.67]%	[50.0, 71.43, 83.33, 76.92, 83.33, 92.31, 83.33, 76.92, 90.91, 66.67, 72.73, 44.44, 71.43, 71.43, 66.67]%	[33.33, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 66.67, 33.33, 83.33, 83.33, 50.0]%	[100.0, 96.43, 98.81, 97.62, 98.81, 98.81, 98.81, 97.62, 100.0, 95.24, 98.81, 98.81, 96.43, 96.43, 100.0]%	[100.0, 62.5, 83.33, 71.43, 83.33, 85.71, 83.33, 71.43, 100.0, 55.56, 80.0, 66.67, 62.5, 62.5, 100.0]%	[95.45, 98.78, 98.81, 98.8, 98.81, 100.0, 98.81, 98.8, 98.82, 98.77, 97.65, 95.4, 98.78, 98.78, 96.55]%	||	73.46%	74.44%	98.17%	77.89%	98.2%	
  2  3  0  0  0  0  0  0  0  0  0  0  1  0  0  33.33%		1
  0  5  0  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  1  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  0  0  0  0  1  0  0  0  83.33%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  1  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  2  0  0  0  0  0  2  0  2  0  0  0  33.33%		12
  0  0  0  0  1  0  0  0  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  1  0  0  2  3  50.0%		15
Forest OOB Error: 55.37%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 95.56, 97.78, 96.67, 94.44, 98.89, 97.78, 98.89, 100.0]%	[66.67, 85.71, 92.31, 85.71, 83.33, 76.92, 90.91, 66.67, 83.33, 66.67, 66.67, 92.31, 80.0, 90.91, 100.0]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 66.67, 83.33, 100.0]%	[100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 95.24, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 75.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 55.56, 85.71, 100.0, 100.0, 100.0]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 96.55, 98.77, 100.0, 97.67, 98.82, 100.0]%	||	81.87%	82.22%	98.73%	85.45%	98.75%	
  3  2  1  0  0  0  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[97.78, 98.89, 97.78, 96.67, 97.78, 98.89, 94.44, 96.67, 96.67, 95.56, 96.67, 97.78, 97.78, 100.0, 98.89]%	[80.0, 92.31, 83.33, 76.92, 80.0, 90.91, 66.67, 72.73, 76.92, 71.43, 72.73, 80.0, 85.71, 100.0, 90.91]%	[66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 83.33, 66.67, 83.33, 83.33, 66.67, 66.67, 100.0, 100.0, 83.33]%	[100.0, 98.81, 98.81, 97.62, 100.0, 100.0, 95.24, 98.81, 97.62, 96.43, 98.81, 100.0, 97.62, 100.0, 100.0]%	[100.0, 85.71, 83.33, 71.43, 100.0, 100.0, 55.56, 80.0, 71.43, 62.5, 80.0, 100.0, 75.0, 100.0, 100.0]%	[97.67, 100.0, 98.81, 98.8, 97.67, 98.82, 98.77, 97.65, 98.8, 98.78, 97.65, 97.67, 100.0, 100.0, 98.82]%	||	81.37%	81.11%	98.65%	84.33%	98.66%	
  4  0  1  0  0  0  1  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  1  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  1  0  0  4  0  0  0  0  1  0  0  0  0  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  1  0  0  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  1  0  0  0  4  1  0  0  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  1  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  1  0  0  0  0  5  83.33%		15
Forest OOB Error: 54.44%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[97.78, 97.78, 100.0, 98.89, 97.78, 96.67, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[80.0, 85.71, 100.0, 92.31, 83.33, 76.92, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 66.67, 100.0]%	[100.0, 97.62, 100.0, 98.81, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 85.71, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	85.65%	85.56%	98.97%	87.58%	98.98%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[97.78, 96.67, 95.56, 100.0, 98.89, 97.78, 95.56, 96.67, 95.56, 95.56, 100.0, 97.78, 98.89, 98.89, 96.67]%	[80.0, 72.73, 66.67, 100.0, 90.91, 83.33, 71.43, 72.73, 75.0, 71.43, 100.0, 80.0, 92.31, 90.91, 72.73]%	[66.67, 66.67, 66.67, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 100.0, 66.67, 100.0, 83.33, 66.67]%	[100.0, 98.81, 97.62, 100.0, 100.0, 98.81, 96.43, 98.81, 95.24, 96.43, 100.0, 100.0, 98.81, 100.0, 98.81]%	[100.0, 80.0, 66.67, 100.0, 100.0, 83.33, 62.5, 80.0, 60.0, 62.5, 100.0, 100.0, 85.71, 100.0, 80.0]%	[97.67, 97.65, 97.62, 100.0, 98.82, 98.81, 98.78, 97.65, 100.0, 98.78, 100.0, 97.67, 100.0, 98.82, 97.65]%	||	81.34%	81.11%	98.65%	84.05%	98.66%	
  4  1  0  0  0  0  0  0  1  0  0  0  0  0  0  66.67%		1
  0  4  0  0  0  0  2  0  0  0  0  0  0  0  0  66.67%		2
  0  0  4  0  0  0  0  0  2  0  0  0  0  0  0  66.67%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  1  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  2  0  0  0  0  4  0  0  0  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  5  1  83.33%		14
  0  0  0  0  0  0  0  1  0  1  0  0  0  0  4  66.67%		15
Forest OOB Error: 50.0%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[97.78, 97.78, 100.0, 98.89, 97.78, 96.67, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[80.0, 85.71, 100.0, 92.31, 83.33, 76.92, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 66.67, 100.0]%	[100.0, 97.62, 100.0, 98.81, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 85.71, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	85.65%	85.56%	98.97%	87.58%	98.98%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[97.78, 98.89, 97.78, 97.78, 96.67, 97.78, 92.22, 94.44, 97.78, 94.44, 97.78, 94.44, 97.78, 98.89, 96.67]%	[80.0, 92.31, 83.33, 83.33, 72.73, 80.0, 46.15, 61.54, 83.33, 54.55, 80.0, 66.67, 85.71, 92.31, 72.73]%	[66.67, 100.0, 83.33, 83.33, 66.67, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 83.33, 100.0, 100.0, 66.67]%	[100.0, 98.81, 98.81, 98.81, 98.81, 100.0, 95.24, 96.43, 98.81, 97.62, 100.0, 95.24, 97.62, 98.81, 98.81]%	[100.0, 85.71, 83.33, 83.33, 80.0, 100.0, 42.86, 57.14, 83.33, 60.0, 100.0, 55.56, 75.0, 85.71, 80.0]%	[97.67, 100.0, 98.81, 98.81, 97.65, 97.67, 96.39, 97.59, 98.81, 96.47, 97.67, 98.77, 100.0, 100.0, 97.65]%	||	75.65%	75.56%	98.25%	78.13%	98.26%	
  4  1  0  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  0  0  1  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  1  4  0  0  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  0  0  1  0  2  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  1  0  1  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  1  0  0  4  66.67%		15
Forest OOB Error: 46.48%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[97.78, 97.78, 100.0, 98.89, 97.78, 96.67, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[80.0, 85.71, 100.0, 92.31, 83.33, 76.92, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 66.67, 100.0]%	[100.0, 97.62, 100.0, 98.81, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 85.71, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	85.65%	85.56%	98.97%	87.58%	98.98%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[97.78, 96.67, 95.56, 97.78, 97.78, 96.67, 97.78, 95.56, 96.67, 97.78, 97.78, 98.89, 98.89, 97.78, 98.89]%	[80.0, 76.92, 71.43, 80.0, 83.33, 76.92, 83.33, 60.0, 76.92, 85.71, 83.33, 90.91, 90.91, 83.33, 92.31]%	[66.67, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 50.0, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0]%	[100.0, 97.62, 96.43, 100.0, 98.81, 97.62, 98.81, 98.81, 97.62, 97.62, 98.81, 100.0, 100.0, 98.81, 98.81]%	[100.0, 71.43, 62.5, 100.0, 83.33, 71.43, 83.33, 75.0, 71.43, 75.0, 83.33, 100.0, 100.0, 83.33, 85.71]%	[97.67, 98.8, 98.78, 97.67, 98.81, 98.8, 98.81, 96.51, 98.8, 100.0, 98.81, 98.82, 98.82, 98.81, 100.0]%	||	81.02%	81.11%	98.65%	83.06%	98.66%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  2  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  2  0  0  0  0  3  0  0  0  0  0  0  1  50.0%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  1  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 56.92%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[97.78, 97.78, 100.0, 98.89, 97.78, 96.67, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[80.0, 85.71, 100.0, 92.31, 83.33, 76.92, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 66.67, 100.0]%	[100.0, 97.62, 100.0, 98.81, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 85.71, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	85.65%	85.56%	98.97%	87.58%	98.98%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[98.89, 97.78, 96.67, 97.78, 97.78, 95.56, 94.44, 93.33, 96.67, 93.33, 96.67, 96.67, 97.78, 97.78, 95.56]%	[90.91, 83.33, 76.92, 80.0, 83.33, 71.43, 61.54, 57.14, 76.92, 50.0, 76.92, 72.73, 83.33, 83.33, 50.0]%	[83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 66.67, 66.67, 83.33, 50.0, 83.33, 66.67, 83.33, 83.33, 33.33]%	[100.0, 98.81, 97.62, 100.0, 98.81, 96.43, 96.43, 95.24, 97.62, 96.43, 97.62, 98.81, 98.81, 98.81, 100.0]%	[100.0, 83.33, 71.43, 100.0, 83.33, 62.5, 57.14, 50.0, 71.43, 50.0, 71.43, 80.0, 83.33, 83.33, 100.0]%	[98.82, 98.81, 98.8, 97.67, 98.81, 98.78, 97.59, 97.56, 98.8, 96.43, 98.8, 97.65, 98.81, 98.81, 95.45]%	||	73.19%	73.33%	98.1%	76.48%	98.11%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  4  1  0  0  0  0  1  0  0  0  0  0  66.67%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  0  0  0  0  0  1  0  83.33%		6
  0  0  0  0  0  1  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  1  0  1  0  0  0  0  66.67%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  2  0  1  0  0  1  0  2  33.33%		15
Forest OOB Error: 52.76%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[97.78, 97.78, 100.0, 98.89, 97.78, 96.67, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[80.0, 85.71, 100.0, 92.31, 83.33, 76.92, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 66.67, 100.0]%	[100.0, 97.62, 100.0, 98.81, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 85.71, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	85.65%	85.56%	98.97%	87.58%	98.98%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	74.44%	96.59%	72.62%	[97.78, 98.89, 96.67, 97.78, 97.78, 95.56, 95.56, 93.33, 96.67, 95.56, 95.56, 97.78, 94.44, 97.78, 97.78]%	[80.0, 92.31, 72.73, 83.33, 80.0, 66.67, 60.0, 62.5, 72.73, 71.43, 50.0, 80.0, 70.59, 85.71, 83.33]%	[66.67, 100.0, 66.67, 83.33, 66.67, 66.67, 50.0, 83.33, 66.67, 83.33, 33.33, 66.67, 100.0, 100.0, 83.33]%	[100.0, 98.81, 98.81, 98.81, 100.0, 97.62, 98.81, 94.05, 98.81, 96.43, 100.0, 100.0, 94.05, 97.62, 98.81]%	[100.0, 85.71, 80.0, 83.33, 100.0, 66.67, 75.0, 50.0, 80.0, 62.5, 100.0, 100.0, 54.55, 75.0, 83.33]%	[97.67, 100.0, 97.65, 98.81, 97.67, 97.62, 96.51, 98.75, 97.65, 98.78, 95.45, 97.67, 100.0, 100.0, 98.81]%	||	74.09%	74.44%	98.17%	79.74%	98.2%	
  4  0  0  0  0  0  0  0  1  1  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  4  0  0  0  0  1  0  0  0  0  0  1  0  66.67%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  4  1  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  1  1  0  4  0  0  0  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  1  0  0  0  0  0  0  4  1  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  2  0  3  0  0  33.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 46.84%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[97.78, 97.78, 100.0, 98.89, 97.78, 96.67, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[80.0, 85.71, 100.0, 92.31, 83.33, 76.92, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 66.67, 100.0]%	[100.0, 97.62, 100.0, 98.81, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 85.71, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	85.65%	85.56%	98.97%	87.58%	98.98%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[98.89, 100.0, 96.67, 97.78, 97.78, 97.78, 95.56, 94.44, 96.67, 97.78, 97.78, 97.78, 97.78, 100.0, 97.78]%	[90.91, 100.0, 72.73, 80.0, 83.33, 83.33, 71.43, 54.55, 80.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[83.33, 100.0, 66.67, 66.67, 83.33, 83.33, 83.33, 50.0, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 100.0, 98.81, 100.0, 98.81, 98.81, 96.43, 97.62, 96.43, 98.81, 98.81, 98.81, 98.81, 100.0, 98.81]%	[100.0, 100.0, 80.0, 100.0, 83.33, 83.33, 62.5, 60.0, 66.67, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[98.82, 100.0, 97.65, 97.67, 98.81, 98.81, 98.78, 96.47, 100.0, 98.81, 98.81, 98.81, 98.81, 100.0, 98.81]%	||	82.2%	82.22%	98.73%	83.5%	98.74%	
  5  0  0  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  4  0  0  0  0  0  1  0  0  0  1  0  0  66.67%		3
  0  0  0  4  1  0  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  3  1  0  0  0  0  0  1  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 50.38%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 100.0, 100.0, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 92.31, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 85.71, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 100.0, 100.0]%	||	87.92%	87.78%	99.13%	89.48%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	87.78%	98.37%	86.9%	[98.89, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 98.89, 97.78, 96.67, 98.89, 100.0, 98.89, 97.78, 97.78]%	[90.91, 85.71, 100.0, 92.31, 83.33, 80.0, 83.33, 90.91, 83.33, 72.73, 90.91, 100.0, 92.31, 85.71, 83.33]%	[83.33, 100.0, 100.0, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 66.67, 83.33, 100.0, 100.0, 100.0, 83.33]%	[100.0, 97.62, 100.0, 98.81, 98.81, 100.0, 98.81, 100.0, 98.81, 98.81, 100.0, 100.0, 98.81, 97.62, 98.81]%	[100.0, 75.0, 100.0, 85.71, 83.33, 100.0, 83.33, 100.0, 83.33, 80.0, 100.0, 100.0, 85.71, 75.0, 83.33]%	[98.82, 100.0, 100.0, 100.0, 98.81, 97.67, 98.81, 98.82, 98.81, 97.65, 98.82, 100.0, 100.0, 100.0, 98.81]%	||	87.66%	87.78%	99.13%	88.98%	99.14%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  1  1  4  0  0  0  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  0  0  1  83.33%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  1  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  1  5  83.33%		15
Forest OOB Error: 48.5%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 100.0, 100.0, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 92.31, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 85.71, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 100.0, 100.0]%	||	87.92%	87.78%	99.13%	89.48%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	84.44%	97.93%	83.33%	[97.78, 96.67, 98.89, 98.89, 98.89, 96.67, 96.67, 96.67, 97.78, 98.89, 98.89, 98.89, 96.67, 97.78, 98.89]%	[80.0, 76.92, 90.91, 92.31, 92.31, 72.73, 72.73, 72.73, 85.71, 90.91, 92.31, 92.31, 76.92, 83.33, 90.91]%	[66.67, 83.33, 83.33, 100.0, 100.0, 66.67, 66.67, 66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 83.33, 83.33]%	[100.0, 97.62, 100.0, 98.81, 98.81, 98.81, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81, 97.62, 98.81, 100.0]%	[100.0, 71.43, 100.0, 85.71, 85.71, 80.0, 80.0, 80.0, 75.0, 100.0, 85.71, 85.71, 71.43, 83.33, 100.0]%	[97.67, 98.8, 98.82, 100.0, 100.0, 97.65, 97.65, 97.65, 100.0, 98.82, 100.0, 100.0, 98.8, 98.81, 98.82]%	||	84.2%	84.44%	98.89%	85.6%	98.9%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  0  0  0  0  1  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  1  4  0  0  0  0  1  0  0  0  66.67%		7
  0  0  0  1  0  0  0  4  0  0  0  0  1  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  1  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 52.19%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 100.0, 100.0, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 92.31, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 85.71, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 100.0, 100.0]%	||	87.92%	87.78%	99.13%	89.48%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[95.56, 97.78, 97.78, 97.78, 98.89, 97.78, 95.56, 96.67, 97.78, 98.89, 96.67, 96.67, 97.78, 97.78, 98.89]%	[60.0, 85.71, 83.33, 80.0, 92.31, 83.33, 60.0, 72.73, 85.71, 90.91, 76.92, 80.0, 83.33, 83.33, 90.91]%	[50.0, 100.0, 83.33, 66.67, 100.0, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 100.0, 83.33, 83.33, 83.33]%	[98.81, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 98.81, 97.62, 100.0, 97.62, 96.43, 98.81, 98.81, 100.0]%	[75.0, 75.0, 83.33, 100.0, 85.71, 83.33, 75.0, 80.0, 75.0, 100.0, 71.43, 66.67, 83.33, 83.33, 100.0]%	[96.51, 100.0, 98.81, 97.67, 100.0, 98.81, 96.51, 97.65, 100.0, 98.82, 98.8, 100.0, 98.81, 98.81, 98.82]%	||	80.57%	81.11%	98.65%	82.48%	98.67%	
  3  2  0  0  0  0  0  0  1  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  1  0  0  0  0  83.33%		3
  0  0  0  4  1  0  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  0  0  0  0  0  1  0  83.33%		6
  0  0  0  0  0  1  3  0  0  0  0  2  0  0  0  50.0%		7
  0  0  1  0  0  0  0  4  0  0  0  0  1  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  1  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  1  0  5  0  83.33%		14
  1  0  0  0  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 58.3%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 100.0, 100.0, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 92.31, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 85.71, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 100.0, 100.0]%	||	87.92%	87.78%	99.13%	89.48%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[98.89, 98.89, 96.67, 97.78, 97.78, 96.67, 97.78, 94.44, 96.67, 96.67, 97.78, 96.67, 97.78, 97.78, 97.78]%	[90.91, 92.31, 72.73, 83.33, 85.71, 66.67, 83.33, 54.55, 80.0, 76.92, 80.0, 76.92, 83.33, 83.33, 83.33]%	[83.33, 100.0, 66.67, 83.33, 100.0, 50.0, 83.33, 50.0, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 83.33]%	[100.0, 98.81, 98.81, 98.81, 97.62, 100.0, 98.81, 97.62, 96.43, 97.62, 100.0, 97.62, 98.81, 98.81, 98.81]%	[100.0, 85.71, 80.0, 83.33, 75.0, 100.0, 83.33, 60.0, 66.67, 71.43, 100.0, 71.43, 83.33, 83.33, 83.33]%	[98.82, 100.0, 97.65, 98.81, 100.0, 96.55, 98.81, 96.47, 100.0, 98.8, 97.67, 98.8, 98.81, 98.81, 98.81]%	||	79.56%	80.0%	98.57%	81.79%	98.59%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  4  1  0  0  0  0  0  0  0  1  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  1  3  0  0  1  0  0  0  0  1  0  50.0%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  3  1  0  0  0  0  0  1  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  1  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 57.31%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 100.0, 100.0, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 92.31, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 85.71, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 100.0, 100.0]%	||	87.92%	87.78%	99.13%	89.48%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[98.89, 98.89, 97.78, 98.89, 100.0, 96.67, 95.56, 93.33, 96.67, 97.78, 95.56, 96.67, 97.78, 98.89, 98.89]%	[90.91, 92.31, 83.33, 90.91, 100.0, 72.73, 66.67, 57.14, 80.0, 83.33, 60.0, 72.73, 83.33, 92.31, 90.91]%	[83.33, 100.0, 83.33, 83.33, 100.0, 66.67, 66.67, 66.67, 100.0, 83.33, 50.0, 66.67, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 100.0, 98.81, 97.62, 95.24, 96.43, 98.81, 98.81, 98.81, 98.81, 98.81, 100.0]%	[100.0, 85.71, 83.33, 100.0, 100.0, 80.0, 66.67, 50.0, 66.67, 83.33, 75.0, 80.0, 83.33, 85.71, 100.0]%	[98.82, 100.0, 98.81, 98.82, 100.0, 97.65, 97.62, 97.56, 100.0, 98.81, 96.51, 97.65, 98.81, 100.0, 98.82]%	||	81.11%	81.11%	98.65%	82.65%	98.66%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  1  0  0  0  0  0  0  0  83.33%		3
  0  0  1  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  1  4  0  0  0  0  1  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  1  0  1  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  2  0  0  3  0  1  0  0  50.0%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 56.33%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 100.0, 100.0, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 92.31, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 85.71, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 100.0, 100.0]%	||	87.92%	87.78%	99.13%	89.48%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[96.67, 96.67, 96.67, 97.78, 98.89, 97.78, 93.33, 97.78, 96.67, 97.78, 96.67, 98.89, 96.67, 100.0, 97.78]%	[66.67, 76.92, 76.92, 85.71, 92.31, 80.0, 50.0, 80.0, 76.92, 85.71, 76.92, 90.91, 72.73, 100.0, 83.33]%	[50.0, 83.33, 83.33, 100.0, 100.0, 66.67, 50.0, 66.67, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 83.33]%	[100.0, 97.62, 97.62, 97.62, 98.81, 100.0, 96.43, 100.0, 97.62, 97.62, 97.62, 100.0, 98.81, 100.0, 98.81]%	[100.0, 71.43, 71.43, 75.0, 85.71, 100.0, 50.0, 100.0, 71.43, 75.0, 71.43, 100.0, 80.0, 100.0, 83.33]%	[96.55, 98.8, 98.8, 100.0, 100.0, 97.67, 96.43, 97.67, 98.8, 100.0, 98.8, 98.82, 97.65, 100.0, 98.81]%	||	79.67%	80.0%	98.57%	82.32%	98.59%	
  3  1  0  0  1  0  1  0  0  0  0  0  0  0  0  50.0%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  1  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  3  0  0  2  1  0  0  0  0  50.0%		7
  0  0  1  1  0  0  0  4  0  0  0  0  0  0  0  66.67%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  1  0  0  0  0  0  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 52.59%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[96.67, 97.78, 100.0, 98.89, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 96.67, 100.0]%	[72.73, 85.71, 100.0, 92.31, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 72.73, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 66.67, 100.0]%	[98.81, 97.62, 100.0, 98.81, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 85.71, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 80.0, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 97.65, 100.0]%	||	85.61%	85.56%	98.97%	86.82%	98.97%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  1  0  0  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	86.67%	98.22%	85.71%	[98.89, 98.89, 96.67, 98.89, 100.0, 98.89, 96.67, 96.67, 96.67, 96.67, 97.78, 97.78, 98.89, 100.0, 100.0]%	[90.91, 92.31, 76.92, 92.31, 100.0, 90.91, 76.92, 72.73, 76.92, 76.92, 83.33, 80.0, 90.91, 100.0, 100.0]%	[83.33, 100.0, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 66.67, 83.33, 100.0, 100.0]%	[100.0, 98.81, 97.62, 98.81, 100.0, 100.0, 97.62, 98.81, 97.62, 97.62, 98.81, 100.0, 100.0, 100.0, 100.0]%	[100.0, 85.71, 71.43, 85.71, 100.0, 100.0, 71.43, 80.0, 71.43, 71.43, 83.33, 100.0, 100.0, 100.0, 100.0]%	[98.82, 100.0, 98.8, 100.0, 100.0, 98.82, 98.8, 97.65, 98.8, 98.8, 98.81, 97.67, 98.82, 100.0, 100.0]%	||	86.74%	86.67%	99.05%	88.03%	99.05%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  2  0  0  0  0  4  0  0  0  0  0  0  0  66.67%		8
  0  0  0  1  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 50.94%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[96.67, 97.78, 100.0, 98.89, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 96.67, 100.0]%	[72.73, 85.71, 100.0, 92.31, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 72.73, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 66.67, 100.0]%	[98.81, 97.62, 100.0, 98.81, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 85.71, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 80.0, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 97.65, 100.0]%	||	85.61%	85.56%	98.97%	86.82%	98.97%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  1  0  0  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[98.89, 98.89, 95.56, 96.67, 97.78, 97.78, 95.56, 97.78, 96.67, 95.56, 97.78, 96.67, 95.56, 100.0, 98.89]%	[90.91, 92.31, 66.67, 76.92, 80.0, 83.33, 66.67, 80.0, 72.73, 75.0, 80.0, 72.73, 75.0, 100.0, 90.91]%	[83.33, 100.0, 66.67, 83.33, 66.67, 83.33, 66.67, 66.67, 66.67, 100.0, 66.67, 66.67, 100.0, 100.0, 83.33]%	[100.0, 98.81, 97.62, 97.62, 100.0, 98.81, 97.62, 100.0, 98.81, 95.24, 100.0, 98.81, 95.24, 100.0, 100.0]%	[100.0, 85.71, 66.67, 71.43, 100.0, 83.33, 66.67, 100.0, 80.0, 60.0, 100.0, 80.0, 60.0, 100.0, 100.0]%	[98.82, 100.0, 97.62, 98.8, 97.67, 98.81, 97.62, 97.67, 97.65, 100.0, 97.67, 97.65, 100.0, 100.0, 98.82]%	||	80.21%	80.0%	98.57%	83.59%	98.59%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  4  0  0  0  0  0  0  1  0  0  1  0  0  66.67%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  4  0  0  0  0  1  0  0  1  0  0  66.67%		5
  0  0  0  1  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  4  0  0  1  0  1  0  0  0  66.67%		7
  0  0  1  0  0  0  0  4  1  0  0  0  0  0  0  66.67%		8
  0  0  1  0  0  0  1  0  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 45.68%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[96.67, 97.78, 100.0, 98.89, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 96.67, 100.0]%	[72.73, 85.71, 100.0, 92.31, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 72.73, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 66.67, 100.0]%	[98.81, 97.62, 100.0, 98.81, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 85.71, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 80.0, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 97.65, 100.0]%	||	85.61%	85.56%	98.97%	86.82%	98.97%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  1  0  0  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[97.78, 97.78, 98.89, 97.78, 98.89, 97.78, 97.78, 97.78, 97.78, 97.78, 98.89, 97.78, 97.78, 98.89, 97.78]%	[80.0, 85.71, 90.91, 83.33, 90.91, 83.33, 83.33, 80.0, 85.71, 85.71, 90.91, 80.0, 85.71, 92.31, 83.33]%	[66.67, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33]%	[100.0, 97.62, 100.0, 98.81, 100.0, 98.81, 98.81, 100.0, 97.62, 97.62, 100.0, 100.0, 97.62, 98.81, 98.81]%	[100.0, 75.0, 100.0, 83.33, 100.0, 83.33, 83.33, 100.0, 75.0, 75.0, 100.0, 100.0, 75.0, 85.71, 83.33]%	[97.67, 100.0, 98.82, 98.81, 98.82, 98.81, 98.81, 97.67, 100.0, 100.0, 98.82, 97.67, 100.0, 100.0, 98.81]%	||	85.42%	85.56%	98.97%	87.94%	98.98%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  1  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  1  0  0  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 51.71%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[96.67, 97.78, 100.0, 98.89, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 96.67, 100.0]%	[72.73, 85.71, 100.0, 92.31, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 72.73, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 66.67, 100.0]%	[98.81, 97.62, 100.0, 98.81, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 85.71, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 80.0, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 97.65, 100.0]%	||	85.61%	85.56%	98.97%	86.82%	98.97%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  1  0  0  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	74.44%	96.59%	72.62%	[96.67, 96.67, 94.44, 98.89, 97.78, 98.89, 91.11, 95.56, 97.78, 94.44, 95.56, 96.67, 96.67, 98.89, 98.89]%	[76.92, 80.0, 66.67, 90.91, 83.33, 90.91, 33.33, 60.0, 80.0, 61.54, 60.0, 72.73, 80.0, 90.91, 90.91]%	[83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 33.33, 50.0, 66.67, 66.67, 50.0, 66.67, 100.0, 83.33, 83.33]%	[97.62, 96.43, 95.24, 100.0, 98.81, 100.0, 95.24, 98.81, 100.0, 96.43, 98.81, 98.81, 96.43, 100.0, 100.0]%	[71.43, 66.67, 55.56, 100.0, 83.33, 100.0, 33.33, 75.0, 100.0, 57.14, 75.0, 80.0, 66.67, 100.0, 100.0]%	[98.8, 100.0, 98.77, 98.82, 98.81, 98.82, 95.24, 96.51, 97.67, 97.59, 96.51, 97.65, 100.0, 98.82, 98.82]%	||	74.54%	74.44%	98.17%	77.61%	98.19%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  0  0  1  0  0  83.33%		3
  1  0  0  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  1  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  2  0  0  2  0  1  0  0  0  33.33%		7
  0  0  2  0  0  0  0  3  0  0  1  0  0  0  0  50.0%		8
  0  1  1  0  0  0  0  0  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  2  0  0  4  0  0  0  0  0  66.67%		10
  0  0  1  0  0  0  0  1  0  0  3  0  1  0  0  50.0%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 52.21%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[96.67, 97.78, 100.0, 98.89, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 96.67, 100.0]%	[72.73, 85.71, 100.0, 92.31, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 72.73, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 66.67, 100.0]%	[98.81, 97.62, 100.0, 98.81, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 85.71, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 80.0, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 97.65, 100.0]%	||	85.61%	85.56%	98.97%	86.82%	98.97%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  1  0  0  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	86.67%	98.22%	85.71%	[98.89, 97.78, 98.89, 100.0, 98.89, 98.89, 96.67, 96.67, 97.78, 98.89, 100.0, 96.67, 96.67, 100.0, 96.67]%	[92.31, 80.0, 90.91, 100.0, 90.91, 90.91, 80.0, 76.92, 83.33, 92.31, 100.0, 72.73, 76.92, 100.0, 72.73]%	[100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 66.67]%	[98.81, 100.0, 100.0, 100.0, 100.0, 100.0, 96.43, 97.62, 98.81, 98.81, 100.0, 98.81, 97.62, 100.0, 98.81]%	[85.71, 100.0, 100.0, 100.0, 100.0, 100.0, 66.67, 71.43, 83.33, 85.71, 100.0, 80.0, 71.43, 100.0, 80.0]%	[100.0, 97.67, 98.82, 100.0, 98.82, 98.82, 100.0, 98.8, 98.81, 100.0, 100.0, 97.65, 98.8, 100.0, 97.65]%	||	86.67%	86.67%	99.05%	88.29%	99.06%	
  6  0  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		1
  1  4  0  0  0  0  1  0  0  0  0  0  0  0  0  66.67%		2
  0  0  5  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  1  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  0  0  1  83.33%		8
  0  0  0  0  0  0  0  1  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  2  0  0  0  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  2  0  4  66.67%		15
Forest OOB Error: 48.31%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[96.67, 97.78, 100.0, 98.89, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 96.67, 100.0]%	[72.73, 85.71, 100.0, 92.31, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 72.73, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 66.67, 100.0]%	[98.81, 97.62, 100.0, 98.81, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 85.71, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 80.0, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 97.65, 100.0]%	||	85.61%	85.56%	98.97%	86.82%	98.97%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  1  0  0  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[98.89, 98.89, 98.89, 98.89, 98.89, 100.0, 95.56, 96.67, 100.0, 96.67, 96.67, 95.56, 97.78, 98.89, 98.89]%	[90.91, 92.31, 90.91, 92.31, 92.31, 100.0, 60.0, 72.73, 100.0, 76.92, 76.92, 66.67, 83.33, 90.91, 92.31]%	[83.33, 100.0, 83.33, 100.0, 100.0, 100.0, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 83.33, 100.0]%	[100.0, 98.81, 100.0, 98.81, 98.81, 100.0, 98.81, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 100.0, 98.81]%	[100.0, 85.71, 100.0, 85.71, 85.71, 100.0, 75.0, 80.0, 100.0, 71.43, 71.43, 66.67, 83.33, 100.0, 85.71]%	[98.82, 100.0, 98.82, 100.0, 100.0, 100.0, 96.51, 97.65, 100.0, 98.8, 98.8, 97.62, 98.81, 98.82, 100.0]%	||	85.24%	85.56%	98.97%	86.05%	98.98%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  1  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  1  0  0  3  0  0  1  0  1  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  1  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  1  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 48.8%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[97.78, 97.78, 100.0, 98.89, 97.78, 96.67, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[80.0, 85.71, 100.0, 92.31, 83.33, 76.92, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 66.67, 100.0]%	[100.0, 97.62, 100.0, 98.81, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 85.71, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	85.65%	85.56%	98.97%	87.58%	98.98%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[98.89, 98.89, 95.56, 98.89, 97.78, 96.67, 95.56, 96.67, 97.78, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[90.91, 92.31, 71.43, 90.91, 83.33, 76.92, 66.67, 72.73, 85.71, 76.92, 80.0, 72.73, 92.31, 90.91, 90.91]%	[83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 66.67, 66.67, 100.0, 83.33, 66.67, 66.67, 100.0, 83.33, 83.33]%	[100.0, 98.81, 96.43, 100.0, 98.81, 97.62, 97.62, 98.81, 97.62, 97.62, 100.0, 98.81, 98.81, 100.0, 100.0]%	[100.0, 85.71, 62.5, 100.0, 83.33, 71.43, 66.67, 80.0, 75.0, 71.43, 100.0, 80.0, 85.71, 100.0, 100.0]%	[98.82, 100.0, 98.78, 98.82, 98.81, 98.8, 97.62, 97.65, 100.0, 98.8, 97.67, 97.65, 100.0, 98.82, 98.82]%	||	82.31%	82.22%	98.73%	84.12%	98.74%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  1  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  4  0  0  0  0  1  0  0  0  66.67%		7
  0  0  1  0  0  0  0  4  1  0  0  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  1  0  0  0  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  1  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 48.11%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[97.78, 97.78, 100.0, 98.89, 97.78, 96.67, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[80.0, 85.71, 100.0, 92.31, 83.33, 76.92, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 66.67, 100.0]%	[100.0, 97.62, 100.0, 98.81, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 85.71, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	85.65%	85.56%	98.97%	87.58%	98.98%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[98.89, 97.78, 98.89, 100.0, 96.67, 98.89, 96.67, 94.44, 100.0, 97.78, 95.56, 100.0, 96.67, 97.78, 94.44]%	[90.91, 83.33, 92.31, 100.0, 76.92, 90.91, 76.92, 44.44, 100.0, 83.33, 71.43, 100.0, 72.73, 83.33, 61.54]%	[83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 83.33, 33.33, 100.0, 83.33, 83.33, 100.0, 66.67, 83.33, 66.67]%	[100.0, 98.81, 98.81, 100.0, 97.62, 100.0, 97.62, 98.81, 100.0, 98.81, 96.43, 100.0, 98.81, 98.81, 96.43]%	[100.0, 83.33, 85.71, 100.0, 71.43, 100.0, 71.43, 66.67, 100.0, 83.33, 62.5, 100.0, 80.0, 83.33, 57.14]%	[98.82, 98.81, 100.0, 100.0, 98.8, 98.82, 98.8, 95.4, 100.0, 98.81, 98.78, 100.0, 97.65, 98.81, 97.59]%	||	81.87%	82.22%	98.73%	82.99%	98.74%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  0  0  0  0  0  1  0  83.33%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  1  0  1  0  0  2  0  0  1  0  0  0  1  33.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  0  0  1  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  5  1  83.33%		14
  0  0  0  0  0  0  0  1  0  0  0  0  1  0  4  66.67%		15
Forest OOB Error: 51.57%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[97.78, 97.78, 100.0, 98.89, 97.78, 96.67, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[80.0, 85.71, 100.0, 92.31, 83.33, 76.92, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 66.67, 100.0]%	[100.0, 97.62, 100.0, 98.81, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 85.71, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	85.65%	85.56%	98.97%	87.58%	98.98%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[98.89, 100.0, 97.78, 97.78, 98.89, 98.89, 94.44, 94.44, 98.89, 96.67, 95.56, 95.56, 97.78, 100.0, 98.89]%	[90.91, 100.0, 83.33, 83.33, 90.91, 92.31, 54.55, 54.55, 92.31, 76.92, 66.67, 66.67, 85.71, 100.0, 90.91]%	[83.33, 100.0, 83.33, 83.33, 83.33, 100.0, 50.0, 50.0, 100.0, 83.33, 66.67, 66.67, 100.0, 100.0, 83.33]%	[100.0, 100.0, 98.81, 98.81, 100.0, 98.81, 97.62, 97.62, 98.81, 97.62, 97.62, 97.62, 97.62, 100.0, 100.0]%	[100.0, 100.0, 83.33, 83.33, 100.0, 85.71, 60.0, 60.0, 85.71, 71.43, 66.67, 66.67, 75.0, 100.0, 100.0]%	[98.82, 100.0, 98.81, 98.81, 98.82, 100.0, 96.47, 96.47, 100.0, 98.8, 97.62, 97.62, 100.0, 100.0, 98.82]%	||	81.94%	82.22%	98.73%	82.52%	98.74%	
  5  0  0  0  0  0  0  0  0  0  0  0  1  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  1  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  1  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  3  1  0  1  0  1  0  0  0  50.0%		7
  0  0  1  0  0  0  1  3  0  0  1  0  0  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  1  0  0  0  5  83.33%		15
Forest OOB Error: 51.56%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[97.78, 97.78, 100.0, 98.89, 97.78, 96.67, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[80.0, 85.71, 100.0, 92.31, 83.33, 76.92, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 66.67, 100.0]%	[100.0, 97.62, 100.0, 98.81, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 85.71, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	85.65%	85.56%	98.97%	87.58%	98.98%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[96.67, 98.89, 97.78, 97.78, 100.0, 96.67, 95.56, 97.78, 100.0, 95.56, 96.67, 97.78, 98.89, 96.67, 97.78]%	[72.73, 92.31, 80.0, 83.33, 100.0, 80.0, 60.0, 83.33, 100.0, 71.43, 76.92, 83.33, 92.31, 72.73, 80.0]%	[66.67, 100.0, 66.67, 83.33, 100.0, 100.0, 50.0, 83.33, 100.0, 83.33, 83.33, 83.33, 100.0, 66.67, 66.67]%	[98.81, 98.81, 100.0, 98.81, 100.0, 96.43, 98.81, 98.81, 100.0, 96.43, 97.62, 98.81, 98.81, 98.81, 100.0]%	[80.0, 85.71, 100.0, 83.33, 100.0, 66.67, 75.0, 83.33, 100.0, 62.5, 71.43, 83.33, 85.71, 80.0, 100.0]%	[97.65, 100.0, 97.67, 98.81, 100.0, 100.0, 96.51, 98.81, 100.0, 98.78, 98.8, 98.81, 100.0, 97.65, 97.67]%	||	81.89%	82.22%	98.73%	83.8%	98.74%	
  4  1  0  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  0  1  0  0  0  0  66.67%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  1  3  0  0  2  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  1  4  66.67%		15
Forest OOB Error: 50.39%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[97.78, 97.78, 100.0, 98.89, 97.78, 96.67, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[80.0, 85.71, 100.0, 92.31, 83.33, 76.92, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 66.67, 100.0]%	[100.0, 97.62, 100.0, 98.81, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 85.71, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	85.65%	85.56%	98.97%	87.58%	98.98%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[97.78, 96.67, 96.67, 100.0, 98.89, 96.67, 93.33, 94.44, 97.78, 96.67, 97.78, 95.56, 97.78, 97.78, 97.78]%	[83.33, 76.92, 80.0, 100.0, 90.91, 76.92, 50.0, 61.54, 80.0, 76.92, 83.33, 60.0, 83.33, 83.33, 80.0]%	[83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 50.0, 66.67, 66.67, 83.33, 83.33, 50.0, 83.33, 83.33, 66.67]%	[98.81, 97.62, 96.43, 100.0, 100.0, 97.62, 96.43, 96.43, 100.0, 97.62, 98.81, 98.81, 98.81, 98.81, 100.0]%	[83.33, 71.43, 66.67, 100.0, 100.0, 71.43, 50.0, 57.14, 100.0, 71.43, 83.33, 75.0, 83.33, 83.33, 100.0]%	[98.81, 98.8, 100.0, 100.0, 98.82, 98.8, 96.43, 97.59, 97.67, 98.8, 98.81, 96.51, 98.81, 98.81, 97.67]%	||	77.77%	77.78%	98.41%	79.76%	98.42%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  1  5  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  1  0  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  3  0  0  1  0  1  0  0  0  50.0%		7
  0  0  2  0  0  0  0  4  0  0  0  0  0  0  0  66.67%		8
  0  0  1  0  0  0  1  0  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  1  0  3  1  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  2  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 51.56%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[97.78, 97.78, 100.0, 98.89, 97.78, 96.67, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[80.0, 85.71, 100.0, 92.31, 83.33, 76.92, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 66.67, 100.0]%	[100.0, 97.62, 100.0, 98.81, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 85.71, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	85.65%	85.56%	98.97%	87.58%	98.98%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	87.78%	98.37%	86.9%	[98.89, 97.78, 97.78, 98.89, 100.0, 98.89, 97.78, 95.56, 95.56, 100.0, 98.89, 98.89, 97.78, 100.0, 98.89]%	[90.91, 85.71, 83.33, 90.91, 100.0, 90.91, 83.33, 60.0, 75.0, 100.0, 92.31, 90.91, 83.33, 100.0, 90.91]%	[83.33, 100.0, 83.33, 83.33, 100.0, 83.33, 83.33, 50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 100.0, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 100.0, 98.81, 98.81, 95.24, 100.0, 98.81, 100.0, 98.81, 100.0, 100.0]%	[100.0, 75.0, 83.33, 100.0, 100.0, 100.0, 83.33, 75.0, 60.0, 100.0, 85.71, 100.0, 83.33, 100.0, 100.0]%	[98.82, 100.0, 98.81, 98.82, 100.0, 98.82, 98.81, 96.51, 100.0, 100.0, 100.0, 98.82, 98.81, 100.0, 98.82]%	||	87.84%	87.78%	99.13%	89.71%	99.14%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  1  0  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  1  0  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  3  1  0  1  0  0  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 52.49%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 100.0, 100.0, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 92.31, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 85.71, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 100.0, 100.0]%	||	87.92%	87.78%	99.13%	89.48%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[97.78, 97.78, 96.67, 98.89, 100.0, 97.78, 97.78, 96.67, 96.67, 96.67, 97.78, 97.78, 96.67, 98.89, 98.89]%	[80.0, 85.71, 76.92, 90.91, 100.0, 83.33, 83.33, 76.92, 76.92, 72.73, 83.33, 83.33, 76.92, 90.91, 90.91]%	[66.67, 100.0, 83.33, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 97.62, 100.0, 100.0, 98.81, 98.81, 97.62, 97.62, 98.81, 98.81, 98.81, 97.62, 100.0, 100.0]%	[100.0, 75.0, 71.43, 100.0, 100.0, 83.33, 83.33, 71.43, 71.43, 80.0, 83.33, 83.33, 71.43, 100.0, 100.0]%	[97.67, 100.0, 98.8, 98.82, 100.0, 98.81, 98.81, 98.8, 98.8, 97.65, 98.81, 98.81, 98.8, 98.82, 98.82]%	||	83.48%	83.33%	98.81%	84.94%	98.81%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  0  0  1  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  0  0  1  0  0  0  83.33%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  1  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  1  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  1  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 57.58%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 100.0, 100.0, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 92.31, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 85.71, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 100.0, 100.0]%	||	87.92%	87.78%	99.13%	89.48%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[97.78, 97.78, 97.78, 98.89, 100.0, 96.67, 93.33, 96.67, 98.89, 97.78, 96.67, 96.67, 94.44, 97.78, 98.89]%	[80.0, 85.71, 80.0, 90.91, 100.0, 76.92, 50.0, 76.92, 92.31, 83.33, 72.73, 76.92, 61.54, 83.33, 90.91]%	[66.67, 100.0, 66.67, 83.33, 100.0, 83.33, 50.0, 83.33, 100.0, 83.33, 66.67, 83.33, 66.67, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 97.62, 96.43, 97.62, 98.81, 98.81, 98.81, 97.62, 96.43, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 71.43, 50.0, 71.43, 85.71, 83.33, 80.0, 71.43, 57.14, 83.33, 100.0]%	[97.67, 100.0, 97.67, 98.82, 100.0, 98.8, 96.43, 98.8, 100.0, 98.81, 97.65, 98.8, 97.59, 98.81, 98.82]%	||	80.1%	80.0%	98.57%	81.92%	98.58%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  4  0  0  0  0  1  0  0  0  0  1  0  0  66.67%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  3  0  0  1  0  2  0  0  0  50.0%		7
  0  0  0  0  0  0  1  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  1  5  83.33%		15
Forest OOB Error: 53.78%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 100.0, 100.0, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 92.31, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 85.71, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 100.0, 100.0]%	||	87.92%	87.78%	99.13%	89.48%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[96.67, 98.89, 94.44, 97.78, 97.78, 96.67, 95.56, 95.56, 97.78, 95.56, 96.67, 100.0, 96.67, 98.89, 98.89]%	[76.92, 92.31, 61.54, 83.33, 80.0, 72.73, 66.67, 66.67, 83.33, 66.67, 66.67, 100.0, 80.0, 92.31, 90.91]%	[83.33, 100.0, 66.67, 83.33, 66.67, 66.67, 66.67, 66.67, 83.33, 66.67, 50.0, 100.0, 100.0, 100.0, 83.33]%	[97.62, 98.81, 96.43, 98.81, 100.0, 98.81, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0]%	[71.43, 85.71, 57.14, 83.33, 100.0, 80.0, 66.67, 66.67, 83.33, 66.67, 100.0, 100.0, 66.67, 85.71, 100.0]%	[98.8, 100.0, 97.59, 98.81, 97.67, 97.65, 97.62, 97.62, 98.81, 97.62, 96.55, 100.0, 100.0, 100.0, 98.82]%	||	78.67%	78.89%	98.49%	80.89%	98.5%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  0  0  0  1  0  0  66.67%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  1  4  0  0  0  0  0  0  0  1  0  0  66.67%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  4  0  0  2  0  0  0  0  0  66.67%		7
  0  0  2  0  0  0  0  4  0  0  0  0  0  0  0  66.67%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  2  0  0  3  0  1  0  0  50.0%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  1  0  0  0  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 53.54%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 100.0, 100.0, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 92.31, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 85.71, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 100.0, 100.0]%	||	87.92%	87.78%	99.13%	89.48%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[97.78, 97.78, 91.11, 96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 98.89, 98.89, 95.56, 98.89, 98.89]%	[80.0, 83.33, 50.0, 76.92, 80.0, 92.31, 80.0, 80.0, 80.0, 92.31, 90.91, 90.91, 66.67, 92.31, 90.91]%	[66.67, 83.33, 66.67, 83.33, 66.67, 100.0, 66.67, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 100.0, 83.33]%	[100.0, 98.81, 92.86, 97.62, 100.0, 98.81, 100.0, 100.0, 96.43, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0]%	[100.0, 83.33, 40.0, 71.43, 100.0, 85.71, 100.0, 100.0, 66.67, 85.71, 100.0, 100.0, 66.67, 85.71, 100.0]%	[97.67, 98.81, 97.5, 98.8, 97.67, 100.0, 97.67, 97.67, 100.0, 100.0, 98.82, 98.82, 97.62, 100.0, 98.82]%	||	81.77%	81.11%	98.65%	85.68%	98.66%	
  4  1  0  1  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  1  0  0  0  0  0  0  0  0  0  0  0  83.33%		2
  0  0  4  0  0  0  0  0  1  0  0  0  0  1  0  66.67%		3
  0  0  1  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  2  0  4  0  0  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  1  4  0  0  0  0  0  1  0  0  66.67%		7
  0  0  2  0  0  0  0  4  0  0  0  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  1  0  0  0  0  0  1  0  0  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 55.51%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 100.0, 100.0, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 92.31, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 85.71, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 100.0, 100.0]%	||	87.92%	87.78%	99.13%	89.48%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	84.44%	97.93%	83.33%	[98.89, 100.0, 94.44, 98.89, 97.78, 97.78, 98.89, 94.44, 96.67, 98.89, 97.78, 98.89, 98.89, 98.89, 97.78]%	[90.91, 100.0, 70.59, 92.31, 80.0, 83.33, 90.91, 44.44, 76.92, 92.31, 83.33, 90.91, 92.31, 90.91, 83.33]%	[83.33, 100.0, 100.0, 100.0, 66.67, 83.33, 83.33, 33.33, 83.33, 100.0, 83.33, 83.33, 100.0, 83.33, 83.33]%	[100.0, 100.0, 94.05, 98.81, 100.0, 98.81, 100.0, 98.81, 97.62, 98.81, 98.81, 100.0, 98.81, 100.0, 98.81]%	[100.0, 100.0, 54.55, 85.71, 100.0, 83.33, 100.0, 66.67, 71.43, 85.71, 83.33, 100.0, 85.71, 100.0, 83.33]%	[98.82, 100.0, 100.0, 100.0, 97.67, 98.81, 98.82, 95.4, 98.8, 100.0, 98.81, 98.82, 100.0, 98.82, 98.81]%	||	84.17%	84.44%	98.89%	86.65%	98.91%	
  5  0  0  1  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  2  0  4  0  0  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  2  0  0  0  0  2  0  0  1  0  0  0  1  33.33%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 56.64%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 100.0, 100.0, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 92.31, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 85.71, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 100.0, 100.0]%	||	87.92%	87.78%	99.13%	89.48%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	84.44%	97.93%	83.33%	[97.78, 96.67, 98.89, 97.78, 98.89, 97.78, 97.78, 95.56, 98.89, 100.0, 97.78, 98.89, 96.67, 97.78, 97.78]%	[80.0, 80.0, 90.91, 85.71, 90.91, 80.0, 83.33, 71.43, 90.91, 100.0, 80.0, 90.91, 80.0, 85.71, 80.0]%	[66.67, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 66.67, 83.33, 100.0, 100.0, 66.67]%	[100.0, 96.43, 100.0, 97.62, 100.0, 100.0, 98.81, 96.43, 100.0, 100.0, 100.0, 100.0, 96.43, 97.62, 100.0]%	[100.0, 66.67, 100.0, 75.0, 100.0, 100.0, 83.33, 62.5, 100.0, 100.0, 100.0, 100.0, 66.67, 75.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 98.82, 97.67, 98.81, 98.78, 98.82, 100.0, 97.67, 98.82, 100.0, 100.0, 97.67]%	||	84.66%	84.44%	98.89%	88.61%	98.91%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  1  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  2  0  4  0  0  0  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  5  0  0  0  0  0  0  1  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  1  0  4  66.67%		15
Forest OOB Error: 52.4%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	84.44%	97.93%	83.33%	[98.89, 97.78, 100.0, 97.78, 98.89, 96.67, 97.78, 97.78, 96.67, 95.56, 97.78, 96.67, 96.67, 100.0, 100.0]%	[90.91, 83.33, 100.0, 83.33, 92.31, 72.73, 83.33, 80.0, 76.92, 71.43, 83.33, 72.73, 76.92, 100.0, 100.0]%	[83.33, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 66.67, 83.33, 83.33, 83.33, 66.67, 83.33, 100.0, 100.0]%	[100.0, 98.81, 100.0, 98.81, 98.81, 98.81, 98.81, 100.0, 97.62, 96.43, 98.81, 98.81, 97.62, 100.0, 100.0]%	[100.0, 83.33, 100.0, 83.33, 85.71, 80.0, 83.33, 100.0, 71.43, 62.5, 83.33, 80.0, 71.43, 100.0, 100.0]%	[98.82, 98.81, 100.0, 98.81, 100.0, 97.65, 98.81, 97.67, 98.8, 98.78, 98.81, 97.65, 98.8, 100.0, 100.0]%	||	84.49%	84.44%	98.89%	85.63%	98.89%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  1  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  1  0  0  0  1  0  0  66.67%		8
  0  0  0  1  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 56.39%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	74.44%	96.59%	72.62%	[95.56, 97.78, 96.67, 96.67, 96.67, 97.78, 96.67, 95.56, 97.78, 95.56, 95.56, 95.56, 95.56, 97.78, 97.78]%	[66.67, 85.71, 72.73, 66.67, 72.73, 83.33, 72.73, 60.0, 85.71, 71.43, 66.67, 66.67, 71.43, 83.33, 83.33]%	[66.67, 100.0, 66.67, 50.0, 66.67, 83.33, 66.67, 50.0, 100.0, 83.33, 66.67, 66.67, 83.33, 83.33, 83.33]%	[97.62, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 98.81, 97.62, 96.43, 97.62, 97.62, 96.43, 98.81, 98.81]%	[66.67, 75.0, 80.0, 100.0, 80.0, 83.33, 80.0, 75.0, 75.0, 62.5, 66.67, 66.67, 62.5, 83.33, 83.33]%	[97.62, 100.0, 97.65, 96.55, 97.65, 98.81, 97.65, 96.51, 100.0, 98.78, 97.62, 97.62, 98.78, 98.81, 98.81]%	||	73.94%	74.44%	98.17%	76.0%	98.19%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  4  0  0  0  1  0  1  0  0  0  0  0  0  66.67%		3
  2  0  0  3  0  1  0  0  0  0  0  0  0  0  0  50.0%		4
  0  0  0  0  4  0  0  0  0  0  0  0  2  0  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  4  0  0  1  0  1  0  0  0  66.67%		7
  0  0  1  0  0  0  0  3  0  0  1  0  0  0  1  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  1  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  1  5  83.33%		15
Forest OOB Error: 55.38%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	86.67%	98.22%	85.71%	[98.89, 97.78, 97.78, 98.89, 98.89, 97.78, 96.67, 96.67, 98.89, 96.67, 98.89, 97.78, 98.89, 100.0, 98.89]%	[90.91, 85.71, 83.33, 90.91, 90.91, 83.33, 76.92, 66.67, 92.31, 76.92, 92.31, 83.33, 90.91, 100.0, 92.31]%	[83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 50.0, 100.0, 83.33, 100.0, 83.33, 83.33, 100.0, 100.0]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 97.62, 100.0, 98.81, 97.62, 98.81, 98.81, 100.0, 100.0, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 83.33, 71.43, 100.0, 85.71, 71.43, 85.71, 83.33, 100.0, 100.0, 85.71]%	[98.82, 100.0, 98.81, 98.82, 98.82, 98.81, 98.8, 96.55, 100.0, 98.8, 100.0, 98.81, 98.82, 100.0, 100.0]%	||	86.45%	86.67%	99.05%	88.33%	99.06%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  1  1  0  0  0  0  3  0  0  0  0  0  0  1  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 46.92%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[97.78, 97.78, 97.78, 97.78, 95.56, 100.0, 97.78, 96.67, 100.0, 98.89, 96.67, 97.78, 94.44, 97.78, 100.0]%	[80.0, 83.33, 83.33, 83.33, 71.43, 100.0, 83.33, 72.73, 100.0, 92.31, 72.73, 83.33, 66.67, 80.0, 100.0]%	[66.67, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33, 66.67, 100.0, 100.0, 66.67, 83.33, 83.33, 66.67, 100.0]%	[100.0, 98.81, 98.81, 98.81, 96.43, 100.0, 98.81, 98.81, 100.0, 98.81, 98.81, 98.81, 95.24, 100.0, 100.0]%	[100.0, 83.33, 83.33, 83.33, 62.5, 100.0, 83.33, 80.0, 100.0, 85.71, 80.0, 83.33, 55.56, 100.0, 100.0]%	[97.67, 98.81, 98.81, 98.81, 98.78, 100.0, 98.81, 97.65, 100.0, 100.0, 97.65, 98.81, 98.77, 97.67, 100.0]%	||	83.5%	83.33%	98.81%	85.36%	98.82%	
  4  1  0  1  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  0  0  0  0  1  0  0  83.33%		3
  0  0  0  5  1  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  0  0  0  0  1  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  1  0  1  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  2  0  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 54.84%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[98.89, 96.67, 97.78, 94.44, 98.89, 97.78, 94.44, 97.78, 97.78, 96.67, 97.78, 98.89, 97.78, 97.78, 98.89]%	[90.91, 72.73, 83.33, 70.59, 90.91, 80.0, 66.67, 85.71, 83.33, 72.73, 83.33, 90.91, 83.33, 80.0, 90.91]%	[83.33, 66.67, 83.33, 100.0, 83.33, 66.67, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 66.67, 83.33]%	[100.0, 98.81, 98.81, 94.05, 100.0, 100.0, 95.24, 97.62, 98.81, 98.81, 98.81, 100.0, 98.81, 100.0, 100.0]%	[100.0, 80.0, 83.33, 54.55, 100.0, 100.0, 55.56, 75.0, 83.33, 80.0, 83.33, 100.0, 83.33, 100.0, 100.0]%	[98.82, 97.65, 98.81, 100.0, 98.82, 97.67, 98.77, 100.0, 98.81, 97.65, 98.81, 98.82, 98.81, 97.67, 98.82]%	||	81.69%	81.11%	98.65%	85.23%	98.66%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  4  0  0  0  0  2  0  0  0  0  0  0  0  0  66.67%		2
  0  0  5  1  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  1  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  0  0  0  0  1  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 49.57%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[97.78, 97.78, 98.89, 98.89, 100.0, 97.78, 97.78, 92.22, 100.0, 100.0, 91.11, 97.78, 94.44, 98.89, 96.67]%	[80.0, 85.71, 90.91, 90.91, 100.0, 85.71, 80.0, 53.33, 100.0, 100.0, 33.33, 83.33, 61.54, 90.91, 72.73]%	[66.67, 100.0, 83.33, 83.33, 100.0, 100.0, 66.67, 66.67, 100.0, 100.0, 33.33, 83.33, 66.67, 83.33, 66.67]%	[100.0, 97.62, 100.0, 100.0, 100.0, 97.62, 100.0, 94.05, 100.0, 100.0, 95.24, 98.81, 96.43, 100.0, 98.81]%	[100.0, 75.0, 100.0, 100.0, 100.0, 75.0, 100.0, 44.44, 100.0, 100.0, 33.33, 83.33, 57.14, 100.0, 80.0]%	[97.67, 100.0, 98.82, 98.82, 100.0, 100.0, 97.67, 97.53, 100.0, 100.0, 95.24, 98.81, 97.59, 98.82, 97.65]%	||	80.56%	80.0%	98.57%	83.22%	98.58%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  0  1  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  4  0  0  0  2  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  2  0  0  2  0  2  0  0  33.33%		11
  0  0  0  0  0  0  0  1  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  0  0  1  0  4  66.67%		15
Forest OOB Error: 53.6%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[97.78, 97.78, 100.0, 98.89, 97.78, 96.67, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[80.0, 85.71, 100.0, 92.31, 83.33, 76.92, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 66.67, 100.0]%	[100.0, 97.62, 100.0, 98.81, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 85.71, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	85.65%	85.56%	98.97%	87.58%	98.98%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[98.89, 98.89, 97.78, 100.0, 100.0, 98.89, 95.56, 94.44, 97.78, 96.67, 95.56, 98.89, 95.56, 100.0, 97.78]%	[90.91, 92.31, 83.33, 100.0, 100.0, 90.91, 75.0, 54.55, 85.71, 66.67, 66.67, 90.91, 66.67, 100.0, 83.33]%	[83.33, 100.0, 83.33, 100.0, 100.0, 83.33, 100.0, 50.0, 100.0, 50.0, 66.67, 83.33, 66.67, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 100.0, 100.0, 95.24, 97.62, 97.62, 100.0, 97.62, 100.0, 97.62, 100.0, 98.81]%	[100.0, 85.71, 83.33, 100.0, 100.0, 100.0, 60.0, 60.0, 75.0, 100.0, 66.67, 100.0, 66.67, 100.0, 83.33]%	[98.82, 100.0, 98.81, 100.0, 100.0, 98.82, 100.0, 96.47, 100.0, 96.55, 97.62, 98.82, 97.62, 100.0, 98.81]%	||	83.13%	83.33%	98.81%	85.38%	98.82%	
  5  0  0  0  0  0  0  0  0  0  0  0  1  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  1  1  0  0  0  0  3  0  0  0  0  0  0  1  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  3  0  0  3  0  0  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 49.05%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[97.78, 97.78, 100.0, 98.89, 97.78, 96.67, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[80.0, 85.71, 100.0, 92.31, 83.33, 76.92, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 66.67, 100.0]%	[100.0, 97.62, 100.0, 98.81, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 85.71, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	85.65%	85.56%	98.97%	87.58%	98.98%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[97.78, 97.78, 97.78, 97.78, 100.0, 100.0, 97.78, 95.56, 98.89, 96.67, 93.33, 97.78, 93.33, 100.0, 97.78]%	[85.71, 83.33, 80.0, 83.33, 100.0, 100.0, 80.0, 66.67, 90.91, 80.0, 40.0, 80.0, 62.5, 100.0, 83.33]%	[100.0, 83.33, 66.67, 83.33, 100.0, 100.0, 66.67, 66.67, 83.33, 100.0, 33.33, 66.67, 83.33, 100.0, 83.33]%	[97.62, 98.81, 100.0, 98.81, 100.0, 100.0, 100.0, 97.62, 100.0, 96.43, 97.62, 100.0, 94.05, 100.0, 98.81]%	[75.0, 83.33, 100.0, 83.33, 100.0, 100.0, 100.0, 66.67, 100.0, 66.67, 50.0, 100.0, 50.0, 100.0, 83.33]%	[100.0, 98.81, 97.67, 98.81, 100.0, 100.0, 97.67, 97.62, 98.82, 100.0, 95.35, 97.67, 98.75, 100.0, 98.81]%	||	81.05%	81.11%	98.65%	83.89%	98.67%	
  6  0  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		1
  1  5  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		2
  0  0  4  1  0  0  0  0  0  0  1  0  0  0  0  66.67%		3
  1  0  0  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  4  0  0  2  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  2  0  0  2  0  2  0  0  33.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 46.77%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[97.78, 97.78, 100.0, 98.89, 97.78, 96.67, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[80.0, 85.71, 100.0, 92.31, 83.33, 76.92, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 66.67, 100.0]%	[100.0, 97.62, 100.0, 98.81, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 85.71, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	85.65%	85.56%	98.97%	87.58%	98.98%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[96.67, 98.89, 98.89, 100.0, 98.89, 98.89, 95.56, 95.56, 100.0, 96.67, 92.22, 97.78, 94.44, 100.0, 97.78]%	[76.92, 92.31, 90.91, 100.0, 90.91, 92.31, 60.0, 66.67, 100.0, 76.92, 36.36, 80.0, 66.67, 100.0, 83.33]%	[83.33, 100.0, 83.33, 100.0, 83.33, 100.0, 50.0, 66.67, 100.0, 83.33, 33.33, 66.67, 83.33, 100.0, 83.33]%	[97.62, 98.81, 100.0, 100.0, 100.0, 98.81, 98.81, 97.62, 100.0, 97.62, 96.43, 100.0, 95.24, 100.0, 98.81]%	[71.43, 85.71, 100.0, 100.0, 100.0, 85.71, 75.0, 66.67, 100.0, 71.43, 40.0, 100.0, 55.56, 100.0, 83.33]%	[98.8, 100.0, 98.82, 100.0, 98.82, 100.0, 96.51, 97.62, 100.0, 98.8, 95.29, 97.67, 98.77, 100.0, 98.81]%	||	80.89%	81.11%	98.65%	82.32%	98.66%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  0  0  1  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  2  0  0  0  0  1  3  0  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  2  0  0  2  0  2  0  0  33.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 55.38%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[97.78, 97.78, 100.0, 98.89, 97.78, 96.67, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[80.0, 85.71, 100.0, 92.31, 83.33, 76.92, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 66.67, 100.0]%	[100.0, 97.62, 100.0, 98.81, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 85.71, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	85.65%	85.56%	98.97%	87.58%	98.98%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[97.78, 98.89, 98.89, 96.67, 97.78, 100.0, 95.56, 98.89, 96.67, 96.67, 97.78, 97.78, 96.67, 97.78, 98.89]%	[83.33, 90.91, 92.31, 76.92, 80.0, 100.0, 60.0, 90.91, 76.92, 76.92, 83.33, 83.33, 76.92, 85.71, 90.91]%	[83.33, 83.33, 100.0, 83.33, 66.67, 100.0, 50.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[98.81, 100.0, 98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 97.62, 100.0]%	[83.33, 100.0, 85.71, 71.43, 100.0, 100.0, 75.0, 100.0, 71.43, 71.43, 83.33, 83.33, 71.43, 75.0, 100.0]%	[98.81, 98.82, 100.0, 98.8, 97.67, 100.0, 96.51, 98.82, 98.8, 98.8, 98.81, 98.81, 98.8, 100.0, 98.82]%	||	83.23%	83.33%	98.81%	84.76%	98.82%	
  5  0  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  0  0  0  0  0  0  0  1  0  83.33%		4
  0  0  0  1  4  0  0  0  0  1  0  0  0  0  0  66.67%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  3  0  0  1  0  0  0  1  0  50.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  1  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  1  0  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 52.4%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[97.78, 97.78, 100.0, 98.89, 97.78, 96.67, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[80.0, 85.71, 100.0, 92.31, 83.33, 76.92, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 66.67, 100.0]%	[100.0, 97.62, 100.0, 98.81, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 85.71, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	85.65%	85.56%	98.97%	87.58%	98.98%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 96.67, 96.67, 96.67, 94.44, 96.67, 97.78, 96.67, 97.78, 97.78]%	[80.0, 92.31, 60.0, 92.31, 90.91, 92.31, 72.73, 76.92, 76.92, 66.67, 72.73, 83.33, 76.92, 83.33, 80.0]%	[66.67, 100.0, 50.0, 100.0, 83.33, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 66.67]%	[100.0, 98.81, 98.81, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 95.24, 98.81, 98.81, 97.62, 98.81, 100.0]%	[100.0, 85.71, 75.0, 85.71, 100.0, 85.71, 80.0, 71.43, 71.43, 55.56, 80.0, 83.33, 71.43, 83.33, 100.0]%	[97.67, 100.0, 96.51, 100.0, 98.82, 100.0, 97.65, 98.8, 98.8, 98.77, 97.65, 98.81, 98.8, 98.81, 97.67]%	||	79.83%	80.0%	98.57%	81.91%	98.58%	
  4  1  1  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  3  1  0  0  1  0  1  0  0  0  0  0  0  50.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  4  0  0  2  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  1  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  5  1  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  0  0  1  0  4  66.67%		15
Forest OOB Error: 55.81%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[97.78, 97.78, 100.0, 98.89, 97.78, 96.67, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[80.0, 85.71, 100.0, 92.31, 83.33, 76.92, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 66.67, 100.0]%	[100.0, 97.62, 100.0, 98.81, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 85.71, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	85.65%	85.56%	98.97%	87.58%	98.98%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[96.67, 96.67, 97.78, 98.89, 98.89, 96.67, 96.67, 96.67, 97.78, 98.89, 97.78, 97.78, 97.78, 100.0, 97.78]%	[72.73, 72.73, 80.0, 92.31, 92.31, 66.67, 76.92, 72.73, 85.71, 90.91, 83.33, 85.71, 85.71, 100.0, 83.33]%	[66.67, 66.67, 66.67, 100.0, 100.0, 50.0, 83.33, 66.67, 100.0, 83.33, 83.33, 100.0, 100.0, 100.0, 83.33]%	[98.81, 98.81, 100.0, 98.81, 98.81, 100.0, 97.62, 98.81, 97.62, 100.0, 98.81, 97.62, 97.62, 100.0, 98.81]%	[80.0, 80.0, 100.0, 85.71, 85.71, 100.0, 71.43, 80.0, 75.0, 100.0, 83.33, 75.0, 75.0, 100.0, 83.33]%	[97.65, 97.65, 97.67, 100.0, 100.0, 96.55, 98.8, 97.65, 100.0, 98.82, 98.81, 100.0, 100.0, 100.0, 98.81]%	||	82.74%	83.33%	98.81%	84.97%	98.83%	
  4  1  0  0  0  0  1  0  0  0  0  0  0  0  0  66.67%		1
  0  4  0  0  0  0  1  0  1  0  0  0  0  0  0  66.67%		2
  1  0  4  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  1  1  3  0  0  1  0  0  0  0  0  0  50.0%		6
  0  0  0  0  0  0  5  0  0  0  0  0  1  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 47.51%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 100.0, 100.0, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 92.31, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 85.71, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 100.0, 100.0]%	||	87.92%	87.78%	99.13%	89.48%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	88.89%	98.52%	88.1%	[98.89, 98.89, 100.0, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 96.67, 100.0, 98.89]%	[90.91, 92.31, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 85.71, 80.0, 83.33, 83.33, 76.92, 100.0, 90.91]%	[83.33, 100.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 100.0, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 98.81, 100.0, 100.0, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81, 97.62, 100.0, 100.0]%	[100.0, 85.71, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 75.0, 100.0, 83.33, 83.33, 71.43, 100.0, 100.0]%	[98.82, 100.0, 100.0, 100.0, 100.0, 98.81, 98.81, 98.81, 100.0, 97.67, 98.81, 98.81, 98.8, 100.0, 98.82]%	||	88.9%	88.89%	99.21%	89.92%	99.21%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  1  4  0  1  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 50.38%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 100.0, 100.0, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 92.31, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 85.71, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 100.0, 100.0]%	||	87.92%	87.78%	99.13%	89.48%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[97.78, 96.67, 97.78, 98.89, 97.78, 95.56, 92.22, 95.56, 100.0, 96.67, 94.44, 97.78, 93.33, 98.89, 97.78]%	[80.0, 72.73, 85.71, 90.91, 80.0, 66.67, 53.33, 60.0, 100.0, 80.0, 61.54, 80.0, 57.14, 92.31, 80.0]%	[66.67, 66.67, 100.0, 83.33, 66.67, 66.67, 66.67, 50.0, 100.0, 100.0, 66.67, 66.67, 66.67, 100.0, 66.67]%	[100.0, 98.81, 97.62, 100.0, 100.0, 97.62, 94.05, 98.81, 100.0, 96.43, 96.43, 100.0, 95.24, 98.81, 100.0]%	[100.0, 80.0, 75.0, 100.0, 100.0, 66.67, 44.44, 75.0, 100.0, 66.67, 57.14, 100.0, 50.0, 85.71, 100.0]%	[97.67, 97.65, 100.0, 98.82, 97.67, 97.62, 97.53, 96.51, 100.0, 100.0, 97.59, 97.67, 97.56, 100.0, 97.67]%	||	76.02%	75.56%	98.25%	80.04%	98.27%	
  4  1  0  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		1
  0  4  0  0  0  0  2  0  0  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  1  0  0  0  0  0  66.67%		5
  0  0  0  0  0  4  1  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  4  0  0  1  0  0  1  0  0  66.67%		7
  0  0  1  0  0  0  1  3  0  0  1  0  0  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  2  0  4  66.67%		15
Forest OOB Error: 47.68%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 100.0, 100.0, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 92.31, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 85.71, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 100.0, 100.0]%	||	87.92%	87.78%	99.13%	89.48%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[97.78, 98.89, 98.89, 98.89, 100.0, 97.78, 96.67, 96.67, 97.78, 96.67, 94.44, 96.67, 95.56, 98.89, 98.89]%	[80.0, 92.31, 90.91, 90.91, 100.0, 83.33, 76.92, 76.92, 83.33, 76.92, 54.55, 72.73, 71.43, 92.31, 90.91]%	[66.67, 100.0, 83.33, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 50.0, 66.67, 83.33, 100.0, 83.33]%	[100.0, 98.81, 100.0, 100.0, 100.0, 98.81, 97.62, 97.62, 98.81, 97.62, 97.62, 98.81, 96.43, 98.81, 100.0]%	[100.0, 85.71, 100.0, 100.0, 100.0, 83.33, 71.43, 71.43, 83.33, 71.43, 60.0, 80.0, 62.5, 85.71, 100.0]%	[97.67, 100.0, 98.82, 98.82, 100.0, 98.81, 98.8, 98.8, 98.81, 98.8, 96.47, 97.65, 98.78, 100.0, 98.82]%	||	82.23%	82.22%	98.73%	83.66%	98.74%	
  4  1  0  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  0  0  0  0  0  1  0  83.33%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  1  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  3  0  2  0  0  50.0%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 52.36%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 100.0, 100.0, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 92.31, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 85.71, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 100.0, 100.0]%	||	87.92%	87.78%	99.13%	89.48%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[98.89, 97.78, 93.33, 98.89, 98.89, 95.56, 95.56, 95.56, 98.89, 95.56, 97.78, 97.78, 97.78, 97.78, 97.78]%	[90.91, 85.71, 57.14, 90.91, 90.91, 66.67, 71.43, 60.0, 92.31, 60.0, 83.33, 83.33, 80.0, 85.71, 83.33]%	[83.33, 100.0, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 100.0, 50.0, 83.33, 83.33, 66.67, 100.0, 83.33]%	[100.0, 97.62, 95.24, 100.0, 100.0, 97.62, 96.43, 98.81, 98.81, 98.81, 98.81, 98.81, 100.0, 97.62, 98.81]%	[100.0, 75.0, 50.0, 100.0, 100.0, 66.67, 62.5, 75.0, 85.71, 75.0, 83.33, 83.33, 100.0, 75.0, 83.33]%	[98.82, 100.0, 97.56, 98.82, 98.82, 97.62, 98.78, 96.51, 100.0, 96.51, 98.81, 98.81, 97.67, 100.0, 98.81]%	||	78.78%	78.89%	98.49%	80.99%	98.5%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  4  0  0  1  0  0  0  0  0  0  0  1  0  66.67%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  1  0  0  0  4  0  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  0  0  0  0  1  0  0  0  83.33%		7
  0  0  2  0  0  0  0  3  0  0  0  0  0  0  1  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  3  0  0  3  0  0  0  0  0  50.0%		10
  0  0  1  0  0  0  0  0  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 53.7%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 100.0, 100.0, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 92.31, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 85.71, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 100.0, 100.0]%	||	87.92%	87.78%	99.13%	89.48%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[98.89, 97.78, 94.44, 100.0, 96.67, 97.78, 96.67, 94.44, 97.78, 96.67, 96.67, 97.78, 94.44, 98.89, 96.67]%	[90.91, 83.33, 54.55, 100.0, 72.73, 80.0, 80.0, 54.55, 83.33, 80.0, 66.67, 80.0, 70.59, 92.31, 72.73]%	[83.33, 83.33, 50.0, 100.0, 66.67, 66.67, 100.0, 50.0, 83.33, 100.0, 50.0, 66.67, 100.0, 100.0, 66.67]%	[100.0, 98.81, 97.62, 100.0, 98.81, 100.0, 96.43, 97.62, 98.81, 96.43, 100.0, 100.0, 94.05, 98.81, 98.81]%	[100.0, 83.33, 60.0, 100.0, 80.0, 100.0, 66.67, 60.0, 83.33, 66.67, 100.0, 100.0, 54.55, 85.71, 80.0]%	[98.82, 98.81, 96.47, 100.0, 97.65, 97.67, 100.0, 96.47, 98.81, 100.0, 96.55, 97.67, 100.0, 100.0, 97.65]%	||	77.45%	77.78%	98.41%	81.35%	98.44%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		2
  0  0  3  0  1  0  0  0  0  0  0  0  2  0  0  50.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  4  0  0  0  0  1  0  0  0  0  0  66.67%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  1  0  0  0  0  3  0  0  0  0  1  0  1  50.0%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  3  0  2  0  0  50.0%		11
  0  0  0  0  0  0  2  0  0  0  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  1  0  0  0  0  4  66.67%		15
Forest OOB Error: 51.45%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 100.0, 100.0, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 92.31, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 85.71, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 100.0, 100.0]%	||	87.92%	87.78%	99.13%	89.48%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[97.78, 95.56, 96.67, 98.89, 98.89, 98.89, 93.33, 97.78, 98.89, 98.89, 98.89, 97.78, 96.67, 100.0, 97.78]%	[80.0, 71.43, 72.73, 90.91, 92.31, 90.91, 57.14, 83.33, 92.31, 90.91, 90.91, 83.33, 80.0, 100.0, 80.0]%	[66.67, 83.33, 66.67, 83.33, 100.0, 83.33, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 100.0, 100.0, 66.67]%	[100.0, 96.43, 98.81, 100.0, 98.81, 100.0, 95.24, 98.81, 98.81, 100.0, 100.0, 98.81, 96.43, 100.0, 100.0]%	[100.0, 62.5, 80.0, 100.0, 85.71, 100.0, 50.0, 83.33, 85.71, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0]%	[97.67, 98.78, 97.65, 98.82, 100.0, 98.82, 97.56, 98.81, 100.0, 98.82, 98.82, 98.81, 100.0, 100.0, 97.67]%	||	83.75%	83.33%	98.81%	86.48%	98.82%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  4  0  0  0  1  0  0  0  0  0  1  0  0  66.67%		3
  0  0  0  5  1  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  0  0  0  0  1  0  0  0  66.67%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  1  0  4  66.67%		15
Forest OOB Error: 54.66%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	88.89%	98.52%	88.1%	[97.78, 97.78, 100.0, 100.0, 100.0, 96.67, 97.78, 98.89, 98.89, 98.89, 97.78, 97.78, 97.78, 98.89, 98.89]%	[80.0, 85.71, 100.0, 100.0, 100.0, 76.92, 80.0, 90.91, 92.31, 92.31, 83.33, 83.33, 83.33, 90.91, 92.31]%	[66.67, 100.0, 100.0, 100.0, 100.0, 83.33, 66.67, 83.33, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 100.0, 97.62, 100.0, 100.0, 98.81, 98.81, 98.81, 98.81, 98.81, 100.0, 98.81]%	[100.0, 75.0, 100.0, 100.0, 100.0, 71.43, 100.0, 100.0, 85.71, 85.71, 83.33, 83.33, 83.33, 100.0, 85.71]%	[97.67, 100.0, 100.0, 100.0, 100.0, 98.8, 97.67, 98.82, 100.0, 100.0, 98.81, 98.81, 98.81, 98.82, 100.0]%	||	88.76%	88.89%	99.21%	90.24%	99.21%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  4  0  0  0  0  1  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  0  0  0  0  1  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 53.76%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[96.67, 98.89, 98.89, 98.89, 97.78, 97.78, 97.78, 97.78, 100.0, 97.78, 95.56, 97.78, 94.44, 97.78, 98.89]%	[72.73, 92.31, 92.31, 90.91, 80.0, 83.33, 80.0, 80.0, 100.0, 83.33, 66.67, 85.71, 66.67, 85.71, 90.91]%	[66.67, 100.0, 100.0, 83.33, 66.67, 83.33, 66.67, 66.67, 100.0, 83.33, 66.67, 100.0, 83.33, 100.0, 83.33]%	[98.81, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 100.0, 100.0, 98.81, 97.62, 97.62, 95.24, 97.62, 100.0]%	[80.0, 85.71, 85.71, 100.0, 100.0, 83.33, 100.0, 100.0, 100.0, 83.33, 66.67, 75.0, 55.56, 75.0, 100.0]%	[97.65, 100.0, 100.0, 98.82, 97.67, 98.81, 97.67, 97.67, 100.0, 98.81, 97.62, 100.0, 98.77, 100.0, 98.82]%	||	83.37%	83.33%	98.81%	86.02%	98.82%	
  4  1  0  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  1  0  0  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  4  0  0  0  0  0  0  1  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  0  0  0  0  0  1  0  83.33%		6
  0  0  1  0  0  1  4  0  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  0  0  1  0  1  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 54.62%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	86.67%	98.22%	85.71%	[97.78, 97.78, 97.78, 100.0, 100.0, 97.78, 94.44, 97.78, 98.89, 98.89, 96.67, 98.89, 96.67, 100.0, 100.0]%	[83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 61.54, 80.0, 92.31, 90.91, 72.73, 92.31, 76.92, 100.0, 100.0]%	[83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 66.67, 66.67, 100.0, 83.33, 66.67, 100.0, 83.33, 100.0, 100.0]%	[98.81, 98.81, 98.81, 100.0, 100.0, 98.81, 96.43, 100.0, 98.81, 100.0, 98.81, 98.81, 97.62, 100.0, 100.0]%	[83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 57.14, 100.0, 85.71, 100.0, 80.0, 85.71, 71.43, 100.0, 100.0]%	[98.81, 98.81, 98.81, 100.0, 100.0, 98.81, 97.59, 97.67, 100.0, 98.82, 97.65, 100.0, 98.8, 100.0, 100.0]%	||	86.67%	86.67%	99.05%	87.56%	99.05%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  1  0  5  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  1  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  4  0  0  0  0  1  0  0  0  66.67%		7
  0  0  1  0  0  0  0  4  1  0  0  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 51.14%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[95.56, 95.56, 98.89, 100.0, 97.78, 97.78, 94.44, 95.56, 96.67, 95.56, 94.44, 100.0, 95.56, 96.67, 96.67]%	[66.67, 60.0, 90.91, 100.0, 83.33, 80.0, 54.55, 71.43, 76.92, 66.67, 61.54, 100.0, 71.43, 80.0, 66.67]%	[66.67, 50.0, 83.33, 100.0, 83.33, 66.67, 50.0, 83.33, 83.33, 66.67, 66.67, 100.0, 83.33, 100.0, 50.0]%	[97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 96.43, 97.62, 97.62, 96.43, 100.0, 96.43, 96.43, 100.0]%	[66.67, 75.0, 100.0, 100.0, 83.33, 100.0, 60.0, 62.5, 71.43, 66.67, 57.14, 100.0, 62.5, 66.67, 100.0]%	[97.62, 96.51, 98.82, 100.0, 98.81, 97.67, 96.47, 98.78, 98.8, 97.62, 97.59, 100.0, 98.78, 100.0, 96.55]%	||	75.34%	75.56%	98.25%	78.13%	98.27%	
  4  1  0  0  0  0  0  0  1  0  0  0  0  0  0  66.67%		1
  0  3  0  0  0  0  2  0  1  0  0  0  0  0  0  50.0%		2
  0  0  5  0  0  0  0  0  0  0  0  0  0  1  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  1  4  0  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  1  0  2  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  1  5  0  0  0  0  0  0  83.33%		9
  2  0  0  0  0  0  0  0  0  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  1  0  1  0  3  50.0%		15
Forest OOB Error: 46.58%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[97.78, 97.78, 98.89, 100.0, 97.78, 96.67, 95.56, 93.33, 96.67, 96.67, 95.56, 97.78, 96.67, 97.78, 98.89]%	[83.33, 80.0, 92.31, 100.0, 83.33, 76.92, 71.43, 50.0, 76.92, 72.73, 66.67, 80.0, 76.92, 83.33, 90.91]%	[83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 50.0, 83.33, 66.67, 66.67, 66.67, 83.33, 83.33, 83.33]%	[98.81, 100.0, 98.81, 100.0, 98.81, 97.62, 96.43, 96.43, 97.62, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0]%	[83.33, 100.0, 85.71, 100.0, 83.33, 71.43, 62.5, 50.0, 71.43, 80.0, 66.67, 100.0, 71.43, 83.33, 100.0]%	[98.81, 97.67, 100.0, 100.0, 98.81, 98.8, 98.78, 96.43, 98.8, 97.65, 97.62, 97.67, 98.8, 98.81, 98.82]%	||	78.99%	78.89%	98.49%	80.61%	98.5%	
  5  0  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		1
  1  4  0  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  0  0  0  0  0  1  0  83.33%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  3  0  0  1  0  1  0  0  50.0%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  1  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  1  1  0  0  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 51.56%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	86.67%	98.22%	85.71%	[97.78, 96.67, 98.89, 100.0, 100.0, 98.89, 96.67, 97.78, 98.89, 97.78, 97.78, 98.89, 96.67, 98.89, 97.78]%	[80.0, 76.92, 90.91, 100.0, 100.0, 90.91, 76.92, 80.0, 92.31, 85.71, 83.33, 90.91, 76.92, 90.91, 85.71]%	[66.67, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 100.0, 100.0, 97.62, 100.0, 98.81, 97.62, 98.81, 100.0, 97.62, 100.0, 97.62]%	[100.0, 71.43, 100.0, 100.0, 100.0, 100.0, 71.43, 100.0, 85.71, 75.0, 83.33, 100.0, 71.43, 100.0, 75.0]%	[97.67, 98.8, 98.82, 100.0, 100.0, 98.82, 98.8, 97.67, 100.0, 100.0, 98.81, 98.82, 98.8, 98.82, 100.0]%	||	86.77%	86.67%	99.05%	88.89%	99.06%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  0  0  0  0  1  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  1  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  1  0  0  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  5  1  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 48.11%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	72.22%	96.3%	70.24%	[94.44, 94.44, 97.78, 98.89, 97.78, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 96.67, 95.56]%	[28.57, 61.54, 83.33, 90.91, 80.0, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 72.73, 71.43]%	[16.67, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 98.81, 96.43]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 80.0, 62.5]%	[94.38, 97.59, 98.81, 98.82, 97.67, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.65, 98.78]%	||	71.25%	72.22%	98.02%	76.59%	98.04%	
  1  1  0  0  0  1  0  0  0  1  0  1  0  0  1  16.67%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[96.67, 96.67, 96.67, 97.78, 98.89, 95.56, 98.89, 96.67, 96.67, 95.56, 97.78, 95.56, 96.67, 96.67, 96.67]%	[72.73, 80.0, 80.0, 80.0, 90.91, 71.43, 90.91, 76.92, 80.0, 66.67, 83.33, 66.67, 72.73, 66.67, 66.67]%	[66.67, 100.0, 100.0, 66.67, 83.33, 83.33, 83.33, 83.33, 100.0, 66.67, 83.33, 66.67, 66.67, 50.0, 50.0]%	[98.81, 96.43, 96.43, 100.0, 100.0, 96.43, 100.0, 97.62, 96.43, 97.62, 98.81, 97.62, 98.81, 100.0, 100.0]%	[80.0, 66.67, 66.67, 100.0, 100.0, 62.5, 100.0, 71.43, 66.67, 66.67, 83.33, 66.67, 80.0, 100.0, 100.0]%	[97.65, 100.0, 100.0, 97.67, 98.82, 98.78, 98.82, 98.8, 100.0, 97.62, 98.81, 97.62, 97.65, 96.55, 96.55]%	||	76.37%	76.67%	98.33%	80.71%	98.36%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  0  0  1  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  0  0  1  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  1  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  1  0  0  0  0  0  0  4  0  1  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  1  0  0  0  0  0  0  1  0  4  0  0  0  66.67%		12
  0  0  1  0  0  0  0  0  0  0  1  0  4  0  0  66.67%		13
  1  0  0  0  0  2  0  0  0  0  0  0  0  3  0  50.0%		14
  0  1  0  0  0  0  0  2  0  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 55.73%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	72.22%	96.3%	70.24%	[94.44, 94.44, 97.78, 98.89, 97.78, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 96.67, 95.56]%	[28.57, 61.54, 83.33, 90.91, 80.0, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 72.73, 71.43]%	[16.67, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 98.81, 96.43]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 80.0, 62.5]%	[94.38, 97.59, 98.81, 98.82, 97.67, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.65, 98.78]%	||	71.25%	72.22%	98.02%	76.59%	98.04%	
  1  1  0  0  0  1  0  0  0  1  0  1  0  0  1  16.67%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[98.89, 96.67, 97.78, 94.44, 98.89, 98.89, 92.22, 94.44, 100.0, 96.67, 96.67, 92.22, 95.56, 97.78, 95.56]%	[90.91, 76.92, 83.33, 61.54, 90.91, 92.31, 46.15, 61.54, 100.0, 72.73, 72.73, 53.33, 71.43, 80.0, 50.0]%	[83.33, 83.33, 83.33, 66.67, 83.33, 100.0, 50.0, 66.67, 100.0, 66.67, 66.67, 66.67, 83.33, 66.67, 33.33]%	[100.0, 97.62, 98.81, 96.43, 100.0, 98.81, 95.24, 96.43, 100.0, 98.81, 98.81, 94.05, 96.43, 100.0, 100.0]%	[100.0, 71.43, 83.33, 57.14, 100.0, 85.71, 42.86, 57.14, 100.0, 80.0, 80.0, 44.44, 62.5, 100.0, 100.0]%	[98.82, 98.8, 98.81, 97.59, 98.82, 100.0, 96.39, 97.59, 100.0, 97.65, 97.65, 97.53, 98.78, 97.67, 95.45]%	||	73.59%	73.33%	98.1%	77.64%	98.1%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  1  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  1  0  4  0  0  0  0  0  0  0  0  1  0  0  66.67%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  3  0  0  0  0  3  0  0  0  50.0%		7
  0  0  0  0  0  0  1  4  0  0  1  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  4  0  2  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  1  0  0  0  0  0  0  0  0  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  1  0  0  0  2  0  0  0  0  1  0  2  33.33%		15
Forest OOB Error: 52.14%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	72.22%	96.3%	70.24%	[94.44, 94.44, 97.78, 98.89, 97.78, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 96.67, 95.56]%	[28.57, 61.54, 83.33, 90.91, 80.0, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 72.73, 71.43]%	[16.67, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 98.81, 96.43]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 80.0, 62.5]%	[94.38, 97.59, 98.81, 98.82, 97.67, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.65, 98.78]%	||	71.25%	72.22%	98.02%	76.59%	98.04%	
  1  1  0  0  0  1  0  0  0  1  0  1  0  0  1  16.67%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	70.0%	96.0%	67.86%	[96.67, 97.78, 98.89, 97.78, 98.89, 93.33, 95.56, 95.56, 96.67, 94.44, 93.33, 92.22, 96.67, 94.44, 97.78]%	[72.73, 83.33, 92.31, 80.0, 90.91, 62.5, 60.0, 71.43, 80.0, 54.55, 57.14, 46.15, 72.73, 44.44, 80.0]%	[66.67, 83.33, 100.0, 66.67, 83.33, 83.33, 50.0, 83.33, 100.0, 50.0, 66.67, 50.0, 66.67, 33.33, 66.67]%	[98.81, 98.81, 98.81, 100.0, 100.0, 94.05, 98.81, 96.43, 96.43, 97.62, 95.24, 95.24, 98.81, 98.81, 100.0]%	[80.0, 83.33, 85.71, 100.0, 100.0, 50.0, 75.0, 62.5, 66.67, 60.0, 50.0, 42.86, 80.0, 66.67, 100.0]%	[97.65, 98.81, 100.0, 97.67, 98.82, 98.75, 96.51, 98.78, 100.0, 96.47, 97.56, 96.39, 97.65, 95.4, 97.67]%	||	69.88%	70.0%	97.86%	73.52%	97.88%	
  4  1  1  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  0  0  0  1  0  0  0  0  1  0  66.67%		4
  0  0  0  0  5  0  0  0  0  0  0  1  0  0  0  83.33%		5
  0  0  0  0  0  5  1  0  0  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  3  1  0  0  0  1  0  0  0  50.0%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  1  3  0  2  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  1  0  0  0  2  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  4  0  0  0  0  0  0  0  2  0  33.33%		14
  0  0  0  0  0  0  0  1  0  0  1  0  0  0  4  66.67%		15
Forest OOB Error: 53.67%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	72.22%	96.3%	70.24%	[94.44, 94.44, 97.78, 98.89, 97.78, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 96.67, 95.56]%	[28.57, 61.54, 83.33, 90.91, 80.0, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 72.73, 71.43]%	[16.67, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 98.81, 96.43]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 80.0, 62.5]%	[94.38, 97.59, 98.81, 98.82, 97.67, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.65, 98.78]%	||	71.25%	72.22%	98.02%	76.59%	98.04%	
  1  1  0  0  0  1  0  0  0  1  0  1  0  0  1  16.67%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[95.56, 96.67, 96.67, 94.44, 98.89, 95.56, 94.44, 97.78, 97.78, 97.78, 96.67, 96.67, 98.89, 95.56, 97.78]%	[50.0, 72.73, 80.0, 44.44, 90.91, 71.43, 70.59, 83.33, 85.71, 85.71, 76.92, 66.67, 90.91, 66.67, 80.0]%	[33.33, 66.67, 100.0, 33.33, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0, 83.33, 50.0, 83.33, 66.67, 66.67]%	[100.0, 98.81, 96.43, 98.81, 100.0, 96.43, 94.05, 98.81, 97.62, 97.62, 97.62, 100.0, 100.0, 97.62, 100.0]%	[100.0, 80.0, 66.67, 66.67, 100.0, 62.5, 54.55, 83.33, 75.0, 75.0, 71.43, 100.0, 100.0, 66.67, 100.0]%	[95.45, 97.65, 100.0, 95.4, 98.82, 98.78, 100.0, 98.81, 100.0, 100.0, 98.8, 96.55, 98.82, 97.62, 97.67]%	||	74.4%	75.56%	98.25%	80.12%	98.29%	
  2  1  1  1  0  0  0  0  0  1  0  0  0  0  0  33.33%		1
  0  4  0  0  0  0  1  0  1  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  1  2  0  2  1  0  0  0  0  0  0  0  0  33.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  1  0  0  0  1  0  0  1  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  1  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  1  0  0  0  0  0  0  1  4  66.67%		15
Forest OOB Error: 61.15%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	72.22%	96.3%	70.24%	[94.44, 94.44, 97.78, 98.89, 97.78, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 96.67, 95.56]%	[28.57, 61.54, 83.33, 90.91, 80.0, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 72.73, 71.43]%	[16.67, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 98.81, 96.43]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 80.0, 62.5]%	[94.38, 97.59, 98.81, 98.82, 97.67, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.65, 98.78]%	||	71.25%	72.22%	98.02%	76.59%	98.04%	
  1  1  0  0  0  1  0  0  0  1  0  1  0  0  1  16.67%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	74.44%	96.59%	72.62%	[98.89, 97.78, 98.89, 97.78, 98.89, 97.78, 93.33, 90.0, 98.89, 93.33, 95.56, 94.44, 97.78, 98.89, 96.67]%	[90.91, 83.33, 92.31, 83.33, 92.31, 83.33, 50.0, 47.06, 92.31, 57.14, 66.67, 44.44, 80.0, 90.91, 66.67]%	[83.33, 83.33, 100.0, 83.33, 100.0, 83.33, 50.0, 66.67, 100.0, 66.67, 66.67, 33.33, 66.67, 83.33, 50.0]%	[100.0, 98.81, 98.81, 98.81, 98.81, 98.81, 96.43, 91.67, 98.81, 95.24, 97.62, 98.81, 100.0, 100.0, 100.0]%	[100.0, 83.33, 85.71, 83.33, 85.71, 83.33, 50.0, 36.36, 85.71, 50.0, 66.67, 66.67, 100.0, 100.0, 100.0]%	[98.82, 98.81, 100.0, 98.81, 100.0, 98.81, 96.43, 97.47, 100.0, 97.56, 97.62, 95.4, 97.67, 98.82, 96.55]%	||	74.71%	74.44%	98.17%	78.46%	98.19%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  1  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  3  2  0  0  0  0  0  0  0  50.0%		7
  0  0  1  0  0  0  0  4  0  0  1  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  1  4  0  1  0  0  0  66.67%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  4  0  2  0  0  0  33.33%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  1  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  1  0  0  0  2  0  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 54.47%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	72.22%	96.3%	70.24%	[94.44, 94.44, 97.78, 98.89, 97.78, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 96.67, 95.56]%	[28.57, 61.54, 83.33, 90.91, 80.0, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 72.73, 71.43]%	[16.67, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 98.81, 96.43]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 80.0, 62.5]%	[94.38, 97.59, 98.81, 98.82, 97.67, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.65, 98.78]%	||	71.25%	72.22%	98.02%	76.59%	98.04%	
  1  1  0  0  0  1  0  0  0  1  0  1  0  0  1  16.67%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[97.78, 98.89, 98.89, 97.78, 98.89, 97.78, 95.56, 93.33, 98.89, 96.67, 95.56, 95.56, 94.44, 96.67, 96.67]%	[80.0, 92.31, 92.31, 83.33, 92.31, 80.0, 71.43, 57.14, 92.31, 72.73, 66.67, 66.67, 61.54, 72.73, 66.67]%	[66.67, 100.0, 100.0, 83.33, 100.0, 66.67, 83.33, 66.67, 100.0, 66.67, 66.67, 66.67, 66.67, 66.67, 50.0]%	[100.0, 98.81, 98.81, 98.81, 98.81, 100.0, 96.43, 95.24, 98.81, 98.81, 97.62, 97.62, 96.43, 98.81, 100.0]%	[100.0, 85.71, 85.71, 83.33, 85.71, 100.0, 62.5, 50.0, 85.71, 80.0, 66.67, 66.67, 57.14, 80.0, 100.0]%	[97.67, 100.0, 100.0, 98.81, 100.0, 97.67, 98.78, 97.56, 100.0, 97.65, 97.62, 97.62, 97.59, 97.65, 96.55]%	||	76.54%	76.67%	98.33%	79.28%	98.34%	
  4  1  0  1  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  4  0  2  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  1  0  1  0  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  1  2  0  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 55.25%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	74.44%	96.59%	72.62%	[95.56, 94.44, 97.78, 98.89, 98.89, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 97.78, 96.67]%	[50.0, 61.54, 83.33, 90.91, 90.91, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 80.0, 76.92]%	[33.33, 66.67, 83.33, 83.33, 83.33, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 100.0, 97.62]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 100.0, 71.43]%	[95.45, 97.59, 98.81, 98.82, 98.82, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.67, 98.8]%	||	74.26%	74.44%	98.17%	78.52%	98.19%	
  2  1  0  0  0  1  0  0  0  1  0  1  0  0  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	71.11%	96.15%	69.05%	[96.67, 95.56, 96.67, 96.67, 95.56, 92.22, 96.67, 96.67, 97.78, 94.44, 96.67, 94.44, 97.78, 96.67, 97.78]%	[66.67, 75.0, 76.92, 66.67, 60.0, 58.82, 76.92, 72.73, 85.71, 44.44, 76.92, 61.54, 80.0, 72.73, 83.33]%	[50.0, 100.0, 83.33, 50.0, 50.0, 83.33, 83.33, 66.67, 100.0, 33.33, 83.33, 66.67, 66.67, 66.67, 83.33]%	[100.0, 95.24, 97.62, 100.0, 98.81, 92.86, 97.62, 98.81, 97.62, 98.81, 97.62, 96.43, 100.0, 98.81, 98.81]%	[100.0, 60.0, 71.43, 100.0, 75.0, 45.45, 71.43, 80.0, 75.0, 66.67, 71.43, 57.14, 100.0, 80.0, 83.33]%	[96.55, 100.0, 98.8, 96.55, 96.51, 98.73, 98.8, 97.65, 100.0, 95.4, 98.8, 97.59, 97.67, 97.65, 98.81]%	||	70.56%	71.11%	97.94%	75.79%	97.97%	
  3  1  0  0  0  1  0  0  0  1  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  1  0  3  0  2  0  0  0  0  0  0  0  0  0  50.0%		4
  0  0  2  0  3  0  1  0  0  0  0  0  0  0  0  50.0%		5
  0  1  0  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  1  0  0  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  2  0  3  0  1  0  33.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  1  0  0  0  0  1  0  0  0  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  1  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 54.17%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	74.44%	96.59%	72.62%	[95.56, 94.44, 97.78, 98.89, 98.89, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 97.78, 96.67]%	[50.0, 61.54, 83.33, 90.91, 90.91, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 80.0, 76.92]%	[33.33, 66.67, 83.33, 83.33, 83.33, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 100.0, 97.62]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 100.0, 71.43]%	[95.45, 97.59, 98.81, 98.82, 98.82, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.67, 98.8]%	||	74.26%	74.44%	98.17%	78.52%	98.19%	
  2  1  0  0  0  1  0  0  0  1  0  1  0  0  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[95.56, 97.78, 98.89, 96.67, 97.78, 97.78, 96.67, 95.56, 98.89, 94.44, 98.89, 95.56, 98.89, 96.67, 97.78]%	[60.0, 85.71, 90.91, 76.92, 85.71, 85.71, 76.92, 60.0, 92.31, 54.55, 90.91, 66.67, 92.31, 66.67, 83.33]%	[50.0, 100.0, 83.33, 83.33, 100.0, 100.0, 83.33, 50.0, 100.0, 50.0, 83.33, 66.67, 100.0, 50.0, 83.33]%	[98.81, 97.62, 100.0, 97.62, 97.62, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 98.81]%	[75.0, 75.0, 100.0, 71.43, 75.0, 75.0, 71.43, 75.0, 85.71, 60.0, 100.0, 66.67, 85.71, 100.0, 83.33]%	[96.51, 100.0, 98.82, 98.8, 100.0, 100.0, 98.8, 96.51, 100.0, 96.47, 98.82, 97.62, 100.0, 96.55, 98.81]%	||	77.91%	78.89%	98.49%	79.95%	98.51%	
  3  1  0  0  0  1  0  0  0  1  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  0  0  0  1  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  1  0  0  0  0  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  1  0  0  3  0  0  0  0  1  0  1  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  1  0  0  0  0  0  3  0  2  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  2  0  0  0  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  1  0  0  1  0  1  0  0  0  0  0  0  0  3  0  50.0%		14
  0  0  0  0  1  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 52.94%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	74.44%	96.59%	72.62%	[95.56, 94.44, 97.78, 98.89, 98.89, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 97.78, 96.67]%	[50.0, 61.54, 83.33, 90.91, 90.91, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 80.0, 76.92]%	[33.33, 66.67, 83.33, 83.33, 83.33, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 100.0, 97.62]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 100.0, 71.43]%	[95.45, 97.59, 98.81, 98.82, 98.82, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.67, 98.8]%	||	74.26%	74.44%	98.17%	78.52%	98.19%	
  2  1  0  0  0  1  0  0  0  1  0  1  0  0  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[94.44, 96.67, 97.78, 95.56, 97.78, 95.56, 96.67, 95.56, 96.67, 97.78, 94.44, 98.89, 95.56, 95.56, 97.78]%	[44.44, 80.0, 83.33, 75.0, 80.0, 66.67, 66.67, 66.67, 76.92, 85.71, 54.55, 90.91, 66.67, 66.67, 83.33]%	[33.33, 100.0, 83.33, 100.0, 66.67, 66.67, 50.0, 66.67, 83.33, 100.0, 50.0, 83.33, 66.67, 66.67, 83.33]%	[98.81, 96.43, 98.81, 95.24, 100.0, 97.62, 100.0, 97.62, 97.62, 97.62, 97.62, 100.0, 97.62, 97.62, 98.81]%	[66.67, 66.67, 83.33, 60.0, 100.0, 66.67, 100.0, 66.67, 71.43, 75.0, 60.0, 100.0, 66.67, 66.67, 83.33]%	[95.4, 100.0, 98.81, 100.0, 97.67, 97.62, 96.55, 97.62, 98.8, 100.0, 96.47, 98.82, 97.62, 97.62, 98.81]%	||	72.5%	73.33%	98.1%	75.54%	98.12%	
  2  1  0  1  0  0  0  0  0  0  0  0  0  1  1  33.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  4  0  0  0  0  1  0  0  0  1  0  66.67%		5
  0  1  0  1  0  4  0  0  0  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  2  3  0  0  1  0  0  0  0  0  50.0%		7
  0  0  1  0  0  0  0  4  0  0  1  0  0  0  0  66.67%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  3  0  2  0  0  50.0%		11
  0  0  0  1  0  0  0  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  1  0  0  1  0  0  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 54.4%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	74.44%	96.59%	72.62%	[95.56, 94.44, 97.78, 98.89, 98.89, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 97.78, 96.67]%	[50.0, 61.54, 83.33, 90.91, 90.91, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 80.0, 76.92]%	[33.33, 66.67, 83.33, 83.33, 83.33, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 100.0, 97.62]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 100.0, 71.43]%	[95.45, 97.59, 98.81, 98.82, 98.82, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.67, 98.8]%	||	74.26%	74.44%	98.17%	78.52%	98.19%	
  2  1  0  0  0  1  0  0  0  1  0  1  0  0  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[98.89, 97.78, 100.0, 98.89, 94.44, 95.56, 92.22, 93.33, 96.67, 94.44, 94.44, 95.56, 96.67, 97.78, 97.78]%	[90.91, 85.71, 100.0, 90.91, 61.54, 50.0, 36.36, 57.14, 76.92, 66.67, 61.54, 60.0, 72.73, 85.71, 80.0]%	[83.33, 100.0, 100.0, 83.33, 66.67, 33.33, 33.33, 66.67, 83.33, 83.33, 66.67, 50.0, 66.67, 100.0, 66.67]%	[100.0, 97.62, 100.0, 100.0, 96.43, 100.0, 96.43, 95.24, 97.62, 95.24, 96.43, 98.81, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 57.14, 100.0, 40.0, 50.0, 71.43, 55.56, 57.14, 75.0, 80.0, 75.0, 100.0]%	[98.82, 100.0, 100.0, 98.82, 97.59, 95.45, 95.29, 97.56, 98.8, 98.77, 97.59, 96.51, 97.65, 100.0, 97.67]%	||	71.74%	72.22%	98.02%	75.75%	98.04%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  1  0  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  4  0  1  0  0  1  0  0  0  0  0  66.67%		5
  0  0  0  0  1  2  0  0  1  0  0  0  0  2  0  33.33%		6
  0  0  0  0  1  0  2  3  0  0  0  0  0  0  0  33.33%		7
  0  0  0  0  1  0  0  4  0  0  1  0  0  0  0  66.67%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  1  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  2  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  1  0  0  1  0  4  66.67%		15
Forest OOB Error: 47.76%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	74.44%	96.59%	72.62%	[95.56, 94.44, 97.78, 98.89, 98.89, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 97.78, 96.67]%	[50.0, 61.54, 83.33, 90.91, 90.91, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 80.0, 76.92]%	[33.33, 66.67, 83.33, 83.33, 83.33, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 100.0, 97.62]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 100.0, 71.43]%	[95.45, 97.59, 98.81, 98.82, 98.82, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.67, 98.8]%	||	74.26%	74.44%	98.17%	78.52%	98.19%	
  2  1  0  0  0  1  0  0  0  1  0  1  0  0  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	62.22%	94.96%	59.52%	[94.44, 94.44, 98.89, 97.78, 96.67, 97.78, 88.89, 90.0, 95.56, 96.67, 93.33, 95.56, 94.44, 94.44, 95.56]%	[54.55, 54.55, 90.91, 83.33, 76.92, 83.33, 37.5, 40.0, 71.43, 72.73, 40.0, 60.0, 54.55, 66.67, 50.0]%	[50.0, 50.0, 83.33, 83.33, 83.33, 83.33, 50.0, 50.0, 83.33, 66.67, 33.33, 50.0, 50.0, 83.33, 33.33]%	[97.62, 97.62, 100.0, 98.81, 97.62, 98.81, 91.67, 92.86, 96.43, 98.81, 97.62, 98.81, 97.62, 95.24, 100.0]%	[60.0, 60.0, 100.0, 83.33, 71.43, 83.33, 30.0, 33.33, 62.5, 80.0, 50.0, 75.0, 60.0, 55.56, 100.0]%	[96.47, 96.47, 98.82, 98.81, 98.8, 98.81, 96.25, 96.3, 98.78, 97.65, 95.35, 96.51, 96.47, 98.77, 95.45]%	||	62.43%	62.22%	97.3%	66.97%	97.31%	
  3  1  0  1  0  0  0  0  1  0  0  0  0  0  0  50.0%		1
  0  3  0  0  0  0  3  0  0  0  0  0  0  0  0  50.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  1  0  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  3  0  0  0  0  1  0  1  0  50.0%		7
  0  0  0  0  1  0  0  3  1  0  0  0  1  0  0  50.0%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  1  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  3  0  0  2  0  1  0  0  33.33%		11
  0  0  0  0  0  0  1  0  0  1  0  3  0  1  0  50.0%		12
  0  0  0  0  0  0  0  1  0  0  2  0  3  0  0  50.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  1  0  0  0  0  0  0  2  0  0  0  0  0  1  2  33.33%		15
Forest OOB Error: 57.33%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	74.44%	96.59%	72.62%	[95.56, 94.44, 97.78, 98.89, 98.89, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 97.78, 96.67]%	[50.0, 61.54, 83.33, 90.91, 90.91, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 80.0, 76.92]%	[33.33, 66.67, 83.33, 83.33, 83.33, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 100.0, 97.62]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 100.0, 71.43]%	[95.45, 97.59, 98.81, 98.82, 98.82, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.67, 98.8]%	||	74.26%	74.44%	98.17%	78.52%	98.19%	
  2  1  0  0  0  1  0  0  0  1  0  1  0  0  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[98.89, 97.78, 97.78, 97.78, 98.89, 97.78, 96.67, 95.56, 98.89, 94.44, 96.67, 96.67, 97.78, 98.89, 97.78]%	[90.91, 85.71, 85.71, 80.0, 90.91, 83.33, 72.73, 50.0, 92.31, 61.54, 76.92, 76.92, 83.33, 90.91, 85.71]%	[83.33, 100.0, 100.0, 66.67, 83.33, 83.33, 66.67, 33.33, 100.0, 66.67, 83.33, 83.33, 83.33, 83.33, 100.0]%	[100.0, 97.62, 97.62, 100.0, 100.0, 98.81, 98.81, 100.0, 98.81, 96.43, 97.62, 97.62, 98.81, 100.0, 97.62]%	[100.0, 75.0, 75.0, 100.0, 100.0, 83.33, 80.0, 100.0, 85.71, 57.14, 71.43, 71.43, 83.33, 100.0, 75.0]%	[98.82, 100.0, 100.0, 97.67, 98.82, 98.81, 97.65, 95.45, 100.0, 97.59, 98.8, 98.8, 98.81, 98.82, 100.0]%	||	80.46%	81.11%	98.65%	83.83%	98.67%	
  5  0  0  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  0  0  1  0  0  0  0  0  66.67%		7
  0  0  1  0  0  0  0  2  0  0  1  0  1  0  1  33.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  4  0  2  0  0  0  66.67%		10
  0  0  1  0  0  0  0  0  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  1  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 53.05%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	73.33%	96.44%	71.43%	[95.56, 94.44, 97.78, 98.89, 97.78, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 96.67, 96.67]%	[50.0, 61.54, 83.33, 90.91, 80.0, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 72.73, 76.92]%	[33.33, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 98.81, 97.62]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 80.0, 71.43]%	[95.45, 97.59, 98.81, 98.82, 97.67, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.65, 98.8]%	||	73.04%	73.33%	98.1%	77.19%	98.11%	
  2  1  0  0  0  1  0  0  0  1  0  1  0  0  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	86.67%	98.22%	85.71%	[98.89, 98.89, 100.0, 97.78, 98.89, 97.78, 98.89, 100.0, 98.89, 97.78, 97.78, 96.67, 97.78, 96.67, 96.67]%	[90.91, 92.31, 100.0, 83.33, 90.91, 83.33, 92.31, 100.0, 92.31, 85.71, 85.71, 66.67, 80.0, 76.92, 72.73]%	[83.33, 100.0, 100.0, 83.33, 83.33, 83.33, 100.0, 100.0, 100.0, 100.0, 100.0, 50.0, 66.67, 83.33, 66.67]%	[100.0, 98.81, 100.0, 98.81, 100.0, 98.81, 98.81, 100.0, 98.81, 97.62, 97.62, 100.0, 100.0, 97.62, 98.81]%	[100.0, 85.71, 100.0, 83.33, 100.0, 83.33, 85.71, 100.0, 85.71, 75.0, 75.0, 100.0, 100.0, 71.43, 80.0]%	[98.82, 100.0, 100.0, 98.81, 98.82, 98.81, 100.0, 100.0, 100.0, 100.0, 100.0, 96.55, 97.67, 98.8, 97.65]%	||	86.21%	86.67%	99.05%	88.35%	99.06%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  1  0  3  0  1  1  50.0%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  1  4  66.67%		15
Forest OOB Error: 53.03%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	73.33%	96.44%	71.43%	[95.56, 94.44, 97.78, 98.89, 97.78, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 96.67, 96.67]%	[50.0, 61.54, 83.33, 90.91, 80.0, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 72.73, 76.92]%	[33.33, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 98.81, 97.62]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 80.0, 71.43]%	[95.45, 97.59, 98.81, 98.82, 97.67, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.65, 98.8]%	||	73.04%	73.33%	98.1%	77.19%	98.11%	
  2  1  0  0  0  1  0  0  0  1  0  1  0  0  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	68.89%	95.85%	66.67%	[96.67, 93.33, 100.0, 97.78, 97.78, 96.67, 94.44, 91.11, 97.78, 96.67, 92.22, 95.56, 94.44, 96.67, 96.67]%	[72.73, 62.5, 100.0, 83.33, 83.33, 72.73, 44.44, 50.0, 83.33, 76.92, 22.22, 60.0, 66.67, 72.73, 72.73]%	[66.67, 83.33, 100.0, 83.33, 83.33, 66.67, 33.33, 66.67, 83.33, 83.33, 16.67, 50.0, 83.33, 66.67, 66.67]%	[98.81, 94.05, 100.0, 98.81, 98.81, 98.81, 98.81, 92.86, 98.81, 97.62, 97.62, 98.81, 95.24, 98.81, 98.81]%	[80.0, 50.0, 100.0, 83.33, 83.33, 80.0, 66.67, 40.0, 83.33, 71.43, 33.33, 75.0, 55.56, 80.0, 80.0]%	[97.65, 98.75, 100.0, 98.81, 98.81, 97.65, 95.4, 97.5, 98.81, 98.8, 94.25, 96.51, 98.77, 97.65, 97.65]%	||	68.24%	68.89%	97.78%	70.8%	97.8%	
  4  1  0  0  0  0  0  0  0  0  1  0  0  0  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  1  0  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  1  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  2  0  0  0  0  2  0  0  0  0  1  1  0  0  33.33%		7
  0  0  0  0  0  0  0  4  0  0  1  0  1  0  0  66.67%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  1  0  0  0  0  0  0  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  3  0  0  1  0  2  0  0  16.67%		11
  0  0  0  0  0  0  0  0  0  2  0  3  0  0  1  50.0%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  1  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  2  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 56.75%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	73.33%	96.44%	71.43%	[95.56, 94.44, 97.78, 98.89, 97.78, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 96.67, 96.67]%	[50.0, 61.54, 83.33, 90.91, 80.0, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 72.73, 76.92]%	[33.33, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 98.81, 97.62]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 80.0, 71.43]%	[95.45, 97.59, 98.81, 98.82, 97.67, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.65, 98.8]%	||	73.04%	73.33%	98.1%	77.19%	98.11%	
  2  1  0  0  0  1  0  0  0  1  0  1  0  0  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	58.89%	94.52%	55.95%	[90.0, 94.44, 95.56, 94.44, 98.89, 96.67, 92.22, 95.56, 96.67, 90.0, 96.67, 95.56, 93.33, 94.44, 93.33]%	[30.77, 44.44, 75.0, 61.54, 90.91, 66.67, 46.15, 60.0, 80.0, 40.0, 72.73, 50.0, 57.14, 61.54, 40.0]%	[33.33, 33.33, 100.0, 66.67, 83.33, 50.0, 50.0, 50.0, 100.0, 50.0, 66.67, 33.33, 66.67, 66.67, 33.33]%	[94.05, 98.81, 95.24, 96.43, 100.0, 100.0, 95.24, 98.81, 96.43, 92.86, 98.81, 100.0, 95.24, 96.43, 97.62]%	[28.57, 66.67, 60.0, 57.14, 100.0, 100.0, 42.86, 75.0, 66.67, 33.33, 80.0, 100.0, 50.0, 57.14, 50.0]%	[95.18, 95.4, 100.0, 97.59, 98.82, 96.55, 96.39, 96.51, 100.0, 96.3, 97.65, 95.45, 97.56, 97.59, 95.35]%	||	58.46%	58.89%	97.06%	64.49%	97.09%	
  2  0  1  2  0  0  1  0  0  0  0  0  0  0  0  33.33%		1
  0  2  0  0  0  0  2  0  0  1  0  0  1  0  0  33.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  1  0  4  0  0  0  0  0  1  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  1  1  0  3  0  0  0  0  0  0  0  1  0  50.0%		6
  2  0  0  0  0  0  3  0  1  0  0  0  0  0  0  50.0%		7
  0  0  1  0  0  0  0  3  1  0  0  0  1  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  2  0  0  0  0  0  0  0  1  3  0  0  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  3  0  2  0  0  0  33.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  4  0  2  66.67%		13
  1  0  1  0  0  0  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  1  0  0  1  0  0  2  2  33.33%		15
Forest OOB Error: 56.54%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	73.33%	96.44%	71.43%	[95.56, 94.44, 97.78, 98.89, 97.78, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 96.67, 96.67]%	[50.0, 61.54, 83.33, 90.91, 80.0, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 72.73, 76.92]%	[33.33, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 98.81, 97.62]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 80.0, 71.43]%	[95.45, 97.59, 98.81, 98.82, 97.67, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.65, 98.8]%	||	73.04%	73.33%	98.1%	77.19%	98.11%	
  2  1  0  0  0  1  0  0  0  1  0  1  0  0  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	68.89%	95.85%	66.67%	[96.67, 97.78, 95.56, 96.67, 96.67, 96.67, 94.44, 94.44, 92.22, 95.56, 97.78, 93.33, 97.78, 96.67, 95.56]%	[72.73, 85.71, 66.67, 72.73, 66.67, 72.73, 44.44, 54.55, 53.33, 60.0, 83.33, 62.5, 83.33, 80.0, 66.67]%	[66.67, 100.0, 66.67, 66.67, 50.0, 66.67, 33.33, 50.0, 66.67, 50.0, 83.33, 83.33, 83.33, 100.0, 66.67]%	[98.81, 97.62, 97.62, 98.81, 100.0, 98.81, 98.81, 97.62, 94.05, 98.81, 98.81, 94.05, 98.81, 96.43, 97.62]%	[80.0, 75.0, 66.67, 80.0, 100.0, 80.0, 66.67, 60.0, 44.44, 75.0, 83.33, 50.0, 83.33, 66.67, 66.67]%	[97.65, 100.0, 97.62, 97.65, 96.55, 97.65, 95.4, 96.47, 97.53, 96.51, 98.81, 98.75, 98.81, 100.0, 97.62]%	||	68.36%	68.89%	97.78%	71.85%	97.8%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  4  0  0  0  0  1  1  0  0  0  0  0  0  66.67%		3
  0  1  0  4  0  0  0  0  0  0  0  0  0  1  0  66.67%		4
  0  0  0  0  3  1  0  0  1  0  0  0  0  1  0  50.0%		5
  0  0  0  1  0  4  0  0  0  1  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  2  1  1  0  0  2  0  0  0  33.33%		7
  0  0  1  0  0  0  0  3  1  0  0  0  0  0  1  50.0%		8
  0  0  1  0  0  0  1  0  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  0  0  1  3  0  2  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  1  0  0  0  0  0  0  0  0  0  0  0  0  1  4  66.67%		15
Forest OOB Error: 58.2%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	73.33%	96.44%	71.43%	[95.56, 94.44, 97.78, 98.89, 97.78, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 96.67, 96.67]%	[50.0, 61.54, 83.33, 90.91, 80.0, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 72.73, 76.92]%	[33.33, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 98.81, 97.62]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 80.0, 71.43]%	[95.45, 97.59, 98.81, 98.82, 97.67, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.65, 98.8]%	||	73.04%	73.33%	98.1%	77.19%	98.11%	
  2  1  0  0  0  1  0  0  0  1  0  1  0  0  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	68.89%	95.85%	66.67%	[95.56, 96.67, 100.0, 96.67, 97.78, 95.56, 86.67, 94.44, 96.67, 95.56, 95.56, 93.33, 98.89, 97.78, 96.67]%	[50.0, 66.67, 100.0, 76.92, 83.33, 66.67, 25.0, 54.55, 76.92, 75.0, 75.0, 40.0, 90.91, 83.33, 66.67]%	[33.33, 50.0, 100.0, 83.33, 83.33, 66.67, 33.33, 50.0, 83.33, 100.0, 100.0, 33.33, 83.33, 83.33, 50.0]%	[100.0, 100.0, 100.0, 97.62, 98.81, 97.62, 90.48, 97.62, 97.62, 95.24, 95.24, 97.62, 100.0, 98.81, 100.0]%	[100.0, 100.0, 100.0, 71.43, 83.33, 66.67, 20.0, 60.0, 71.43, 60.0, 60.0, 50.0, 100.0, 83.33, 100.0]%	[95.45, 96.55, 100.0, 98.8, 98.81, 97.62, 95.0, 96.47, 98.8, 100.0, 100.0, 95.35, 98.82, 98.81, 96.55]%	||	68.73%	68.89%	97.78%	75.08%	97.8%	
  2  0  0  1  0  1  1  0  0  1  0  0  0  0  0  33.33%		1
  0  3  0  0  0  0  3  0  0  0  0  0  0  0  0  50.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  1  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  1  0  0  2  0  1  0  0  2  0  0  0  33.33%		7
  0  0  0  0  0  0  0  3  0  0  3  0  0  0  0  50.0%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  1  0  0  3  0  2  0  0  0  33.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  1  2  0  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 59.49%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	73.33%	96.44%	71.43%	[95.56, 94.44, 97.78, 98.89, 97.78, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 96.67, 96.67]%	[50.0, 61.54, 83.33, 90.91, 80.0, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 72.73, 76.92]%	[33.33, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 98.81, 97.62]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 80.0, 71.43]%	[95.45, 97.59, 98.81, 98.82, 97.67, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.65, 98.8]%	||	73.04%	73.33%	98.1%	77.19%	98.11%	
  2  1  0  0  0  1  0  0  0  1  0  1  0  0  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[96.67, 97.78, 100.0, 97.78, 95.56, 95.56, 92.22, 94.44, 97.78, 96.67, 93.33, 96.67, 95.56, 97.78, 96.67]%	[72.73, 83.33, 100.0, 80.0, 75.0, 66.67, 36.36, 66.67, 83.33, 72.73, 25.0, 72.73, 75.0, 85.71, 66.67]%	[66.67, 83.33, 100.0, 66.67, 100.0, 66.67, 33.33, 83.33, 83.33, 66.67, 16.67, 66.67, 100.0, 100.0, 50.0]%	[98.81, 98.81, 100.0, 100.0, 95.24, 97.62, 96.43, 95.24, 98.81, 98.81, 98.81, 98.81, 95.24, 97.62, 100.0]%	[80.0, 83.33, 100.0, 100.0, 60.0, 66.67, 40.0, 55.56, 83.33, 80.0, 50.0, 80.0, 60.0, 75.0, 100.0]%	[97.65, 98.81, 100.0, 97.67, 100.0, 97.62, 95.29, 98.77, 98.81, 97.65, 94.32, 97.65, 100.0, 100.0, 96.55]%	||	70.8%	72.22%	98.02%	74.26%	98.05%	
  4  1  0  0  0  0  0  0  0  0  0  0  0  1  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  4  0  0  0  1  0  0  0  1  0  66.67%		6
  0  0  0  0  2  1  2  0  1  0  0  0  0  0  0  33.33%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  1  0  0  0  0  4  0  1  0  0  0  66.67%		10
  0  0  0  0  0  0  0  2  0  0  1  0  3  0  0  16.67%		11
  1  0  0  0  1  0  0  0  0  0  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  2  0  0  0  0  1  0  3  50.0%		15
Forest OOB Error: 57.37%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	72.22%	96.3%	70.24%	[94.44, 94.44, 97.78, 98.89, 97.78, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 96.67, 95.56]%	[28.57, 61.54, 83.33, 90.91, 80.0, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 72.73, 71.43]%	[16.67, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 98.81, 96.43]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 80.0, 62.5]%	[94.38, 97.59, 98.81, 98.82, 97.67, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.65, 98.78]%	||	71.25%	72.22%	98.02%	76.59%	98.04%	
  1  1  0  0  0  1  0  0  0  1  0  1  0  0  1  16.67%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	74.44%	96.59%	72.62%	[96.67, 96.67, 100.0, 97.78, 97.78, 91.11, 96.67, 97.78, 96.67, 94.44, 97.78, 95.56, 98.89, 96.67, 94.44]%	[72.73, 76.92, 100.0, 80.0, 83.33, 55.56, 72.73, 80.0, 80.0, 54.55, 85.71, 66.67, 90.91, 66.67, 54.55]%	[66.67, 83.33, 100.0, 66.67, 83.33, 83.33, 66.67, 66.67, 100.0, 50.0, 100.0, 66.67, 83.33, 50.0, 50.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 91.67, 98.81, 100.0, 96.43, 97.62, 97.62, 97.62, 100.0, 100.0, 97.62]%	[80.0, 71.43, 100.0, 100.0, 83.33, 41.67, 80.0, 100.0, 66.67, 60.0, 75.0, 66.67, 100.0, 100.0, 60.0]%	[97.65, 98.8, 100.0, 97.67, 98.81, 98.72, 97.65, 97.67, 100.0, 96.47, 100.0, 97.62, 98.82, 96.55, 96.47]%	||	74.69%	74.44%	98.17%	78.98%	98.19%	
  4  1  0  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  1  0  4  0  1  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  1  4  0  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  1  3  0  2  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  3  0  0  0  0  0  0  0  3  0  50.0%		14
  0  0  0  0  1  1  0  0  1  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 54.58%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	72.22%	96.3%	70.24%	[94.44, 94.44, 97.78, 98.89, 97.78, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 96.67, 95.56]%	[28.57, 61.54, 83.33, 90.91, 80.0, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 72.73, 71.43]%	[16.67, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 98.81, 96.43]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 80.0, 62.5]%	[94.38, 97.59, 98.81, 98.82, 97.67, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.65, 98.78]%	||	71.25%	72.22%	98.02%	76.59%	98.04%	
  1  1  0  0  0  1  0  0  0  1  0  1  0  0  1  16.67%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[97.78, 96.67, 97.78, 95.56, 98.89, 96.67, 92.22, 94.44, 93.33, 95.56, 96.67, 96.67, 97.78, 97.78, 96.67]%	[80.0, 72.73, 85.71, 50.0, 90.91, 76.92, 58.82, 54.55, 66.67, 71.43, 76.92, 66.67, 80.0, 83.33, 66.67]%	[66.67, 66.67, 100.0, 33.33, 83.33, 83.33, 83.33, 50.0, 100.0, 83.33, 83.33, 50.0, 66.67, 83.33, 50.0]%	[100.0, 98.81, 97.62, 100.0, 100.0, 97.62, 92.86, 97.62, 92.86, 96.43, 97.62, 100.0, 100.0, 98.81, 100.0]%	[100.0, 80.0, 75.0, 100.0, 100.0, 71.43, 45.45, 60.0, 50.0, 62.5, 71.43, 100.0, 100.0, 83.33, 100.0]%	[97.67, 97.65, 100.0, 95.45, 98.82, 98.8, 98.73, 96.47, 100.0, 98.78, 98.8, 96.55, 97.67, 98.81, 96.55]%	||	72.09%	72.22%	98.02%	79.94%	98.05%	
  4  1  0  0  0  0  0  0  0  0  1  0  0  0  0  66.67%		1
  0  4  0  0  0  1  1  0  0  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  1  2  0  1  1  0  0  0  0  0  0  1  0  33.33%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  3  2  0  0  0  0  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  1  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  2  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  1  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  1  0  2  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 53.15%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	72.22%	96.3%	70.24%	[94.44, 94.44, 97.78, 98.89, 97.78, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 96.67, 95.56]%	[28.57, 61.54, 83.33, 90.91, 80.0, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 72.73, 71.43]%	[16.67, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 98.81, 96.43]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 80.0, 62.5]%	[94.38, 97.59, 98.81, 98.82, 97.67, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.65, 98.78]%	||	71.25%	72.22%	98.02%	76.59%	98.04%	
  1  1  0  0  0  1  0  0  0  1  0  1  0  0  1  16.67%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	66.67%	95.56%	64.29%	[95.56, 95.56, 98.89, 93.33, 97.78, 95.56, 95.56, 92.22, 95.56, 94.44, 95.56, 95.56, 97.78, 93.33, 96.67]%	[50.0, 71.43, 90.91, 50.0, 83.33, 66.67, 60.0, 36.36, 71.43, 66.67, 71.43, 60.0, 83.33, 57.14, 72.73]%	[33.33, 83.33, 83.33, 50.0, 83.33, 66.67, 50.0, 33.33, 83.33, 83.33, 83.33, 50.0, 83.33, 66.67, 66.67]%	[100.0, 96.43, 100.0, 96.43, 98.81, 97.62, 98.81, 96.43, 96.43, 95.24, 96.43, 98.81, 98.81, 95.24, 98.81]%	[100.0, 62.5, 100.0, 50.0, 83.33, 66.67, 75.0, 40.0, 62.5, 55.56, 62.5, 75.0, 83.33, 50.0, 80.0]%	[95.45, 98.78, 98.82, 96.43, 98.81, 97.62, 96.51, 95.29, 98.78, 98.77, 98.78, 96.51, 98.81, 97.56, 97.65]%	||	66.1%	66.67%	97.62%	69.76%	97.64%	
  2  1  0  1  0  0  0  0  0  1  0  0  0  1  0  33.33%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  1  0  3  0  1  0  0  0  0  0  0  0  1  0  50.0%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  1  0  0  0  4  0  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  1  1  0  0  1  0  0  0  50.0%		7
  0  0  0  0  0  0  0  2  0  0  2  0  1  0  1  33.33%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  0  0  1  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  1  0  0  0  1  0  1  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  1  0  0  0  0  1  0  0  0  0  4  66.67%		15
Forest OOB Error: 53.06%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	72.22%	96.3%	70.24%	[94.44, 94.44, 97.78, 98.89, 97.78, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 96.67, 95.56]%	[28.57, 61.54, 83.33, 90.91, 80.0, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 72.73, 71.43]%	[16.67, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 98.81, 96.43]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 80.0, 62.5]%	[94.38, 97.59, 98.81, 98.82, 97.67, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.65, 98.78]%	||	71.25%	72.22%	98.02%	76.59%	98.04%	
  1  1  0  0  0  1  0  0  0  1  0  1  0  0  1  16.67%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[98.89, 98.89, 98.89, 96.67, 97.78, 92.22, 93.33, 95.56, 98.89, 95.56, 97.78, 95.56, 97.78, 97.78, 100.0]%	[90.91, 92.31, 90.91, 72.73, 80.0, 58.82, 50.0, 60.0, 92.31, 66.67, 85.71, 60.0, 83.33, 83.33, 100.0]%	[83.33, 100.0, 83.33, 66.67, 66.67, 83.33, 50.0, 50.0, 100.0, 66.67, 100.0, 50.0, 83.33, 83.33, 100.0]%	[100.0, 98.81, 100.0, 98.81, 100.0, 92.86, 96.43, 98.81, 98.81, 97.62, 97.62, 98.81, 98.81, 98.81, 100.0]%	[100.0, 85.71, 100.0, 80.0, 100.0, 45.45, 50.0, 75.0, 85.71, 66.67, 75.0, 75.0, 83.33, 83.33, 100.0]%	[98.82, 100.0, 98.82, 97.65, 97.67, 98.73, 96.43, 96.51, 100.0, 97.62, 100.0, 96.51, 98.81, 98.81, 100.0]%	||	77.8%	77.78%	98.41%	80.35%	98.43%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  1  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  4  1  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  2  3  0  0  1  0  0  0  0  0  50.0%		7
  0  0  0  0  0  1  1  3  0  0  1  0  0  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  1  0  4  0  1  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  1  0  0  1  0  3  1  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 53.49%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	72.22%	96.3%	70.24%	[94.44, 94.44, 97.78, 98.89, 97.78, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 96.67, 95.56]%	[28.57, 61.54, 83.33, 90.91, 80.0, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 72.73, 71.43]%	[16.67, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 98.81, 96.43]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 80.0, 62.5]%	[94.38, 97.59, 98.81, 98.82, 97.67, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.65, 98.78]%	||	71.25%	72.22%	98.02%	76.59%	98.04%	
  1  1  0  0  0  1  0  0  0  1  0  1  0  0  1  16.67%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	68.89%	95.85%	66.67%	[97.78, 93.33, 94.44, 95.56, 98.89, 98.89, 95.56, 94.44, 95.56, 95.56, 93.33, 93.33, 96.67, 97.78, 96.67]%	[83.33, 40.0, 54.55, 71.43, 90.91, 90.91, 60.0, 61.54, 75.0, 66.67, 57.14, 50.0, 76.92, 83.33, 66.67]%	[83.33, 33.33, 50.0, 83.33, 83.33, 83.33, 50.0, 66.67, 100.0, 66.67, 66.67, 50.0, 83.33, 83.33, 50.0]%	[98.81, 97.62, 97.62, 96.43, 100.0, 100.0, 98.81, 96.43, 95.24, 97.62, 95.24, 96.43, 97.62, 98.81, 100.0]%	[83.33, 50.0, 60.0, 62.5, 100.0, 100.0, 75.0, 57.14, 60.0, 66.67, 50.0, 50.0, 71.43, 83.33, 100.0]%	[98.81, 95.35, 96.47, 98.78, 98.82, 98.82, 96.51, 97.59, 100.0, 97.62, 97.56, 96.43, 98.8, 98.81, 96.55]%	||	68.56%	68.89%	97.78%	71.29%	97.79%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  2  0  0  0  0  1  0  3  0  0  0  0  0  0  33.33%		2
  0  0  3  3  0  0  0  0  0  0  0  0  0  0  0  50.0%		3
  0  1  0  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  3  1  0  0  0  1  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  4  0  2  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  1  0  0  0  0  0  0  2  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  1  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  1  0  1  0  3  50.0%		15
Forest OOB Error: 52.85%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	72.22%	96.3%	70.24%	[94.44, 94.44, 97.78, 98.89, 97.78, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 96.67, 95.56]%	[28.57, 61.54, 83.33, 90.91, 80.0, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 72.73, 71.43]%	[16.67, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 98.81, 96.43]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 80.0, 62.5]%	[94.38, 97.59, 98.81, 98.82, 97.67, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.65, 98.78]%	||	71.25%	72.22%	98.02%	76.59%	98.04%	
  1  1  0  0  0  1  0  0  0  1  0  1  0  0  1  16.67%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[98.89, 98.89, 97.78, 95.56, 97.78, 94.44, 91.11, 94.44, 97.78, 94.44, 96.67, 94.44, 100.0, 97.78, 96.67]%	[90.91, 92.31, 80.0, 66.67, 83.33, 61.54, 33.33, 61.54, 85.71, 61.54, 72.73, 61.54, 100.0, 83.33, 66.67]%	[83.33, 100.0, 66.67, 66.67, 83.33, 66.67, 33.33, 66.67, 100.0, 66.67, 66.67, 66.67, 100.0, 83.33, 50.0]%	[100.0, 98.81, 100.0, 97.62, 98.81, 96.43, 95.24, 96.43, 97.62, 96.43, 98.81, 96.43, 100.0, 98.81, 100.0]%	[100.0, 85.71, 100.0, 66.67, 83.33, 57.14, 33.33, 57.14, 75.0, 57.14, 80.0, 57.14, 100.0, 83.33, 100.0]%	[98.82, 100.0, 97.67, 97.62, 98.81, 97.59, 95.24, 97.59, 100.0, 97.59, 97.65, 97.59, 100.0, 98.81, 96.55]%	||	73.41%	73.33%	98.1%	75.73%	98.1%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  4  1  1  0  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  1  0  4  0  0  0  1  0  0  0  0  0  66.67%		6
  0  0  0  0  0  1  2  0  1  0  0  2  0  0  0  33.33%		7
  0  0  0  0  0  0  0  4  1  0  1  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  1  0  0  4  0  1  0  0  0  66.67%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  1  1  0  0  0  0  0  1  3  50.0%		15
Forest OOB Error: 59.51%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	74.44%	96.59%	72.62%	[95.56, 94.44, 97.78, 98.89, 98.89, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 97.78, 96.67]%	[50.0, 61.54, 83.33, 90.91, 90.91, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 80.0, 76.92]%	[33.33, 66.67, 83.33, 83.33, 83.33, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 100.0, 97.62]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 100.0, 71.43]%	[95.45, 97.59, 98.81, 98.82, 98.82, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.67, 98.8]%	||	74.26%	74.44%	98.17%	78.52%	98.19%	
  2  1  0  0  0  1  0  0  0  1  0  1  0  0  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[95.56, 97.78, 98.89, 97.78, 98.89, 97.78, 100.0, 95.56, 98.89, 97.78, 92.22, 96.67, 96.67, 97.78, 97.78]%	[66.67, 85.71, 92.31, 80.0, 90.91, 83.33, 100.0, 66.67, 92.31, 80.0, 46.15, 76.92, 72.73, 83.33, 83.33]%	[66.67, 100.0, 100.0, 66.67, 83.33, 83.33, 100.0, 66.67, 100.0, 66.67, 50.0, 83.33, 66.67, 83.33, 83.33]%	[97.62, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 100.0, 95.24, 97.62, 98.81, 98.81, 98.81]%	[66.67, 75.0, 85.71, 100.0, 100.0, 83.33, 100.0, 66.67, 85.71, 100.0, 42.86, 71.43, 80.0, 83.33, 83.33]%	[97.62, 100.0, 100.0, 97.67, 98.82, 98.81, 100.0, 97.62, 100.0, 97.67, 96.39, 98.8, 97.65, 98.81, 98.81]%	||	80.03%	80.0%	98.57%	81.6%	98.58%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  1  0  4  0  1  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  1  0  0  0  0  0  0  4  0  1  0  0  0  66.67%		10
  0  0  0  0  0  0  0  2  0  0  3  0  1  0  0  50.0%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  1  0  0  0  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 47.91%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	74.44%	96.59%	72.62%	[95.56, 94.44, 97.78, 98.89, 98.89, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 97.78, 96.67]%	[50.0, 61.54, 83.33, 90.91, 90.91, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 80.0, 76.92]%	[33.33, 66.67, 83.33, 83.33, 83.33, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 100.0, 97.62]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 100.0, 71.43]%	[95.45, 97.59, 98.81, 98.82, 98.82, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.67, 98.8]%	||	74.26%	74.44%	98.17%	78.52%	98.19%	
  2  1  0  0  0  1  0  0  0  1  0  1  0  0  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	70.0%	96.0%	67.86%	[95.56, 96.67, 96.67, 95.56, 98.89, 94.44, 96.67, 94.44, 96.67, 95.56, 94.44, 95.56, 97.78, 93.33, 97.78]%	[60.0, 72.73, 76.92, 66.67, 90.91, 54.55, 76.92, 66.67, 76.92, 60.0, 54.55, 71.43, 83.33, 57.14, 80.0]%	[50.0, 66.67, 83.33, 66.67, 83.33, 50.0, 83.33, 83.33, 83.33, 50.0, 50.0, 83.33, 83.33, 66.67, 66.67]%	[98.81, 98.81, 97.62, 97.62, 100.0, 97.62, 97.62, 95.24, 97.62, 98.81, 97.62, 96.43, 98.81, 95.24, 100.0]%	[75.0, 80.0, 71.43, 66.67, 100.0, 60.0, 71.43, 55.56, 71.43, 75.0, 60.0, 62.5, 83.33, 50.0, 100.0]%	[96.51, 97.65, 98.8, 97.62, 98.82, 96.47, 98.8, 98.77, 98.8, 96.51, 96.47, 98.78, 98.81, 97.56, 97.67]%	||	69.92%	70.0%	97.86%	72.16%	97.87%	
  3  1  1  0  0  0  0  0  0  0  0  0  0  1  0  50.0%		1
  0  4  0  0  0  0  1  0  1  0  0  0  0  0  0  66.67%		2
  0  0  5  0  0  0  0  0  0  0  0  0  0  1  0  83.33%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  1  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  3  0  0  1  0  0  0  0  2  0  50.0%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  1  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  5  0  1  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  3  0  3  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  3  0  1  0  0  50.0%		11
  1  0  0  0  0  0  0  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  1  0  0  0  0  0  0  1  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  2  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 52.76%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	74.44%	96.59%	72.62%	[95.56, 94.44, 97.78, 98.89, 98.89, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 97.78, 96.67]%	[50.0, 61.54, 83.33, 90.91, 90.91, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 80.0, 76.92]%	[33.33, 66.67, 83.33, 83.33, 83.33, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 100.0, 97.62]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 100.0, 71.43]%	[95.45, 97.59, 98.81, 98.82, 98.82, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.67, 98.8]%	||	74.26%	74.44%	98.17%	78.52%	98.19%	
  2  1  0  0  0  1  0  0  0  1  0  1  0  0  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	70.0%	96.0%	67.86%	[97.78, 97.78, 98.89, 96.67, 96.67, 96.67, 95.56, 92.22, 98.89, 95.56, 93.33, 96.67, 93.33, 95.56, 94.44]%	[80.0, 83.33, 90.91, 66.67, 76.92, 76.92, 66.67, 53.33, 92.31, 50.0, 57.14, 76.92, 50.0, 75.0, 44.44]%	[66.67, 83.33, 83.33, 50.0, 83.33, 83.33, 66.67, 66.67, 100.0, 33.33, 66.67, 83.33, 50.0, 100.0, 33.33]%	[100.0, 98.81, 100.0, 100.0, 97.62, 97.62, 97.62, 94.05, 98.81, 100.0, 95.24, 97.62, 96.43, 95.24, 98.81]%	[100.0, 83.33, 100.0, 100.0, 71.43, 71.43, 66.67, 44.44, 85.71, 100.0, 50.0, 71.43, 50.0, 60.0, 66.67]%	[97.67, 98.81, 98.82, 96.55, 98.8, 98.8, 97.62, 97.53, 100.0, 95.45, 97.56, 98.8, 96.43, 100.0, 95.4]%	||	69.37%	70.0%	97.86%	74.74%	97.88%	
  4  1  0  0  0  0  0  0  0  0  0  0  0  1  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  3  0  0  0  0  0  0  1  1  0  1  0  50.0%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  4  2  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  1  0  0  4  0  0  1  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  2  0  1  0  2  0  1  0  0  0  33.33%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  0  0  0  2  0  3  1  0  50.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  2  0  0  0  0  1  1  2  33.33%		15
Forest OOB Error: 54.8%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	74.44%	96.59%	72.62%	[95.56, 94.44, 97.78, 98.89, 98.89, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 97.78, 96.67]%	[50.0, 61.54, 83.33, 90.91, 90.91, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 80.0, 76.92]%	[33.33, 66.67, 83.33, 83.33, 83.33, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 100.0, 97.62]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 100.0, 71.43]%	[95.45, 97.59, 98.81, 98.82, 98.82, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.67, 98.8]%	||	74.26%	74.44%	98.17%	78.52%	98.19%	
  2  1  0  0  0  1  0  0  0  1  0  1  0  0  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[96.67, 97.78, 100.0, 95.56, 98.89, 95.56, 95.56, 95.56, 97.78, 91.11, 96.67, 93.33, 98.89, 98.89, 94.44]%	[72.73, 85.71, 100.0, 66.67, 90.91, 60.0, 60.0, 75.0, 83.33, 50.0, 76.92, 40.0, 90.91, 92.31, 44.44]%	[66.67, 100.0, 100.0, 66.67, 83.33, 50.0, 50.0, 100.0, 83.33, 66.67, 83.33, 33.33, 83.33, 100.0, 33.33]%	[98.81, 97.62, 100.0, 97.62, 100.0, 98.81, 98.81, 95.24, 98.81, 92.86, 97.62, 97.62, 100.0, 98.81, 98.81]%	[80.0, 75.0, 100.0, 66.67, 100.0, 75.0, 75.0, 60.0, 83.33, 40.0, 71.43, 50.0, 100.0, 85.71, 66.67]%	[97.65, 100.0, 100.0, 97.62, 98.82, 96.51, 96.51, 100.0, 98.81, 97.5, 98.8, 95.35, 98.82, 100.0, 95.4]%	||	72.6%	73.33%	98.1%	75.25%	98.12%	
  4  1  0  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  1  0  3  0  0  1  0  0  0  0  1  0  50.0%		6
  1  0  0  1  0  0  3  0  0  1  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  4  0  2  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  3  0  2  0  0  1  33.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  3  0  0  1  0  0  0  2  33.33%		15
Forest OOB Error: 48.52%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	74.44%	96.59%	72.62%	[95.56, 94.44, 97.78, 98.89, 98.89, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 97.78, 96.67]%	[50.0, 61.54, 83.33, 90.91, 90.91, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 80.0, 76.92]%	[33.33, 66.67, 83.33, 83.33, 83.33, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 100.0, 97.62]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 100.0, 71.43]%	[95.45, 97.59, 98.81, 98.82, 98.82, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.67, 98.8]%	||	74.26%	74.44%	98.17%	78.52%	98.19%	
  2  1  0  0  0  1  0  0  0  1  0  1  0  0  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[94.44, 98.89, 98.89, 95.56, 97.78, 94.44, 95.56, 96.67, 97.78, 98.89, 96.67, 95.56, 97.78, 97.78, 96.67]%	[44.44, 92.31, 92.31, 66.67, 83.33, 66.67, 50.0, 72.73, 85.71, 92.31, 72.73, 71.43, 83.33, 83.33, 72.73]%	[33.33, 100.0, 100.0, 66.67, 83.33, 83.33, 33.33, 66.67, 100.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67]%	[98.81, 98.81, 98.81, 97.62, 98.81, 95.24, 100.0, 98.81, 97.62, 98.81, 98.81, 96.43, 98.81, 98.81, 98.81]%	[66.67, 85.71, 85.71, 66.67, 83.33, 55.56, 100.0, 80.0, 75.0, 85.71, 80.0, 62.5, 83.33, 83.33, 80.0]%	[95.4, 100.0, 100.0, 97.62, 98.81, 98.77, 95.45, 97.65, 100.0, 100.0, 97.65, 98.78, 98.81, 98.81, 97.65]%	||	75.34%	76.67%	98.33%	78.24%	98.36%	
  2  0  0  0  0  1  0  0  0  1  0  2  0  0  0  33.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  1  0  4  1  0  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  2  2  0  1  0  0  1  0  0  0  33.33%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  1  0  83.33%		12
  0  0  0  1  0  0  0  0  0  0  0  0  5  0  0  83.33%		13
  0  0  1  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  1  0  0  1  0  0  0  0  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 56.03%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	74.44%	96.59%	72.62%	[95.56, 94.44, 97.78, 98.89, 98.89, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 97.78, 96.67]%	[50.0, 61.54, 83.33, 90.91, 90.91, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 80.0, 76.92]%	[33.33, 66.67, 83.33, 83.33, 83.33, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 100.0, 97.62]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 100.0, 71.43]%	[95.45, 97.59, 98.81, 98.82, 98.82, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.67, 98.8]%	||	74.26%	74.44%	98.17%	78.52%	98.19%	
  2  1  0  0  0  1  0  0  0  1  0  1  0  0  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	68.89%	95.85%	66.67%	[98.89, 98.89, 94.44, 98.89, 97.78, 96.67, 92.22, 95.56, 92.22, 96.67, 96.67, 92.22, 97.78, 93.33, 95.56]%	[90.91, 92.31, 66.67, 90.91, 80.0, 72.73, 46.15, 60.0, 46.15, 72.73, 72.73, 46.15, 85.71, 57.14, 60.0]%	[83.33, 100.0, 83.33, 83.33, 66.67, 66.67, 50.0, 50.0, 50.0, 66.67, 66.67, 50.0, 100.0, 66.67, 50.0]%	[100.0, 98.81, 95.24, 100.0, 100.0, 98.81, 95.24, 98.81, 95.24, 98.81, 98.81, 95.24, 97.62, 95.24, 98.81]%	[100.0, 85.71, 55.56, 100.0, 100.0, 80.0, 42.86, 75.0, 42.86, 80.0, 80.0, 42.86, 75.0, 50.0, 75.0]%	[98.82, 100.0, 98.77, 98.82, 97.67, 97.65, 96.39, 96.51, 96.39, 97.65, 97.65, 96.39, 100.0, 97.56, 96.51]%	||	69.35%	68.89%	97.78%	72.32%	97.78%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  1  0  0  0  66.67%		5
  0  0  0  0  0  4  0  0  0  0  0  0  0  2  0  66.67%		6
  0  0  0  0  0  0  3  0  1  0  1  1  0  0  0  50.0%		7
  0  0  1  0  0  0  1  3  0  0  0  0  1  0  0  50.0%		8
  0  0  1  0  0  0  2  0  3  0  0  0  0  0  0  50.0%		9
  0  0  0  0  0  0  0  0  0  4  0  2  0  0  0  66.67%		10
  0  0  1  0  0  0  0  0  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  3  0  2  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  1  0  0  0  0  4  1  66.67%		14
  0  0  0  0  0  1  0  1  1  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 58.69%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	73.33%	96.44%	71.43%	[95.56, 94.44, 97.78, 98.89, 97.78, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 96.67, 96.67]%	[50.0, 61.54, 83.33, 90.91, 80.0, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 72.73, 76.92]%	[33.33, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 98.81, 97.62]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 80.0, 71.43]%	[95.45, 97.59, 98.81, 98.82, 97.67, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.65, 98.8]%	||	73.04%	73.33%	98.1%	77.19%	98.11%	
  2  1  0  0  0  1  0  0  0  1  0  1  0  0  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[96.67, 98.89, 97.78, 96.67, 98.89, 94.44, 95.56, 96.67, 95.56, 96.67, 96.67, 96.67, 98.89, 97.78, 100.0]%	[76.92, 92.31, 83.33, 66.67, 90.91, 66.67, 75.0, 72.73, 75.0, 66.67, 76.92, 66.67, 90.91, 80.0, 100.0]%	[83.33, 100.0, 83.33, 50.0, 83.33, 83.33, 100.0, 66.67, 100.0, 50.0, 83.33, 50.0, 83.33, 66.67, 100.0]%	[97.62, 98.81, 98.81, 100.0, 100.0, 95.24, 95.24, 98.81, 95.24, 100.0, 97.62, 100.0, 100.0, 100.0, 100.0]%	[71.43, 85.71, 83.33, 100.0, 100.0, 55.56, 60.0, 80.0, 60.0, 100.0, 71.43, 100.0, 100.0, 100.0, 100.0]%	[98.8, 100.0, 98.81, 96.55, 98.82, 98.77, 100.0, 97.65, 100.0, 96.55, 98.8, 96.55, 98.82, 97.67, 100.0]%	||	78.71%	78.89%	98.49%	84.5%	98.52%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  3  0  2  0  0  1  0  0  0  0  0  0  50.0%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  4  1  0  1  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  2  0  1  0  0  0  0  0  0  3  0  0  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  3  0  0  0  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 53.03%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	73.33%	96.44%	71.43%	[95.56, 94.44, 97.78, 98.89, 97.78, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 96.67, 96.67]%	[50.0, 61.54, 83.33, 90.91, 80.0, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 72.73, 76.92]%	[33.33, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 98.81, 97.62]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 80.0, 71.43]%	[95.45, 97.59, 98.81, 98.82, 97.67, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.65, 98.8]%	||	73.04%	73.33%	98.1%	77.19%	98.11%	
  2  1  0  0  0  1  0  0  0  1  0  1  0  0  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	67.78%	95.7%	65.48%	[98.89, 98.89, 97.78, 96.67, 94.44, 96.67, 92.22, 95.56, 97.78, 91.11, 93.33, 97.78, 95.56, 94.44, 94.44]%	[90.91, 92.31, 85.71, 66.67, 61.54, 76.92, 46.15, 66.67, 85.71, 55.56, 40.0, 80.0, 71.43, 28.57, 44.44]%	[83.33, 100.0, 100.0, 50.0, 66.67, 83.33, 50.0, 66.67, 100.0, 83.33, 33.33, 66.67, 83.33, 16.67, 33.33]%	[100.0, 98.81, 97.62, 100.0, 96.43, 97.62, 95.24, 97.62, 97.62, 91.67, 97.62, 100.0, 96.43, 100.0, 98.81]%	[100.0, 85.71, 75.0, 100.0, 57.14, 71.43, 42.86, 66.67, 75.0, 41.67, 50.0, 100.0, 62.5, 100.0, 66.67]%	[98.82, 100.0, 100.0, 96.55, 97.59, 98.8, 96.39, 97.62, 100.0, 98.72, 95.35, 97.67, 98.78, 94.38, 95.4]%	||	66.17%	67.78%	97.7%	72.98%	97.74%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  3  1  1  1  0  0  0  0  0  0  0  0  50.0%		4
  0  0  1  0  4  0  0  0  0  1  0  0  0  0  0  66.67%		5
  0  0  0  0  1  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  3  0  0  3  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  1  0  1  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  1  5  0  0  0  0  0  83.33%		10
  0  0  1  0  0  0  0  0  0  0  2  0  3  0  0  33.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  3  0  0  1  0  0  0  1  0  16.67%		14
  0  0  0  0  1  0  0  2  0  1  0  0  0  0  2  33.33%		15
Forest OOB Error: 55.34%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	73.33%	96.44%	71.43%	[95.56, 94.44, 97.78, 98.89, 97.78, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 96.67, 96.67]%	[50.0, 61.54, 83.33, 90.91, 80.0, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 72.73, 76.92]%	[33.33, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 98.81, 97.62]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 80.0, 71.43]%	[95.45, 97.59, 98.81, 98.82, 97.67, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.65, 98.8]%	||	73.04%	73.33%	98.1%	77.19%	98.11%	
  2  1  0  0  0  1  0  0  0  1  0  1  0  0  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	71.11%	96.15%	69.05%	[98.89, 98.89, 96.67, 97.78, 98.89, 97.78, 91.11, 96.67, 91.11, 91.11, 97.78, 94.44, 98.89, 95.56, 96.67]%	[90.91, 92.31, 72.73, 80.0, 90.91, 83.33, 33.33, 72.73, 60.0, 33.33, 80.0, 61.54, 90.91, 66.67, 72.73]%	[83.33, 100.0, 66.67, 66.67, 83.33, 83.33, 33.33, 66.67, 100.0, 33.33, 66.67, 66.67, 83.33, 66.67, 66.67]%	[100.0, 98.81, 98.81, 100.0, 100.0, 98.81, 95.24, 98.81, 90.48, 95.24, 100.0, 96.43, 100.0, 97.62, 98.81]%	[100.0, 85.71, 80.0, 100.0, 100.0, 83.33, 33.33, 80.0, 42.86, 33.33, 100.0, 57.14, 100.0, 66.67, 80.0]%	[98.82, 100.0, 97.65, 97.67, 98.82, 98.81, 95.24, 97.65, 100.0, 95.24, 97.67, 97.59, 98.82, 97.62, 97.65]%	||	72.09%	71.11%	97.94%	76.16%	97.95%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  4  0  0  0  0  0  2  0  0  0  0  0  0  66.67%		3
  0  0  0  4  0  0  1  0  0  0  0  0  0  1  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  2  0  1  1  0  2  0  0  0  33.33%		7
  0  0  0  0  0  0  0  4  1  1  0  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  1  0  0  0  2  0  0  2  0  1  0  0  0  33.33%		10
  0  0  0  0  0  0  0  0  1  0  4  0  0  1  0  66.67%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  1  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  4  1  66.67%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 55.13%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	73.33%	96.44%	71.43%	[95.56, 94.44, 97.78, 98.89, 97.78, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 96.67, 96.67]%	[50.0, 61.54, 83.33, 90.91, 80.0, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 72.73, 76.92]%	[33.33, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 98.81, 97.62]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 80.0, 71.43]%	[95.45, 97.59, 98.81, 98.82, 97.67, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.65, 98.8]%	||	73.04%	73.33%	98.1%	77.19%	98.11%	
  2  1  0  0  0  1  0  0  0  1  0  1  0  0  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[96.67, 96.67, 100.0, 97.78, 98.89, 98.89, 93.33, 94.44, 94.44, 93.33, 96.67, 96.67, 96.67, 94.44, 95.56]%	[76.92, 66.67, 100.0, 83.33, 90.91, 90.91, 66.67, 54.55, 66.67, 40.0, 72.73, 72.73, 72.73, 70.59, 50.0]%	[83.33, 50.0, 100.0, 83.33, 83.33, 83.33, 100.0, 50.0, 83.33, 33.33, 66.67, 66.67, 66.67, 100.0, 33.33]%	[97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 92.86, 97.62, 95.24, 97.62, 98.81, 98.81, 98.81, 94.05, 100.0]%	[71.43, 100.0, 100.0, 83.33, 100.0, 100.0, 50.0, 60.0, 55.56, 50.0, 80.0, 80.0, 80.0, 54.55, 100.0]%	[98.8, 96.55, 100.0, 98.81, 98.82, 98.82, 100.0, 96.47, 98.77, 95.35, 97.65, 97.65, 97.65, 100.0, 95.45]%	||	71.69%	72.22%	98.02%	77.66%	98.05%	
  5  0  0  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		1
  0  3  0  0  0  0  3  0  0  0  0  0  0  0  0  50.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  0  0  0  0  0  1  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  3  1  0  1  0  0  1  0  50.0%		8
  0  0  0  0  0  0  0  0  5  1  0  0  0  0  0  83.33%		9
  1  0  0  0  0  0  1  0  1  2  0  1  0  0  0  33.33%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  0  0  4  0  1  0  66.67%		12
  1  0  0  1  0  0  0  0  0  0  0  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  2  0  0  0  1  1  2  33.33%		15
Forest OOB Error: 58.78%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	73.33%	96.44%	71.43%	[95.56, 94.44, 97.78, 98.89, 97.78, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 96.67, 96.67]%	[50.0, 61.54, 83.33, 90.91, 80.0, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 72.73, 76.92]%	[33.33, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 98.81, 97.62]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 80.0, 71.43]%	[95.45, 97.59, 98.81, 98.82, 97.67, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.65, 98.8]%	||	73.04%	73.33%	98.1%	77.19%	98.11%	
  2  1  0  0  0  1  0  0  0  1  0  1  0  0  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	71.11%	96.15%	69.05%	[96.67, 96.67, 98.89, 97.78, 96.67, 94.44, 95.56, 94.44, 97.78, 97.78, 94.44, 95.56, 94.44, 96.67, 94.44]%	[66.67, 80.0, 90.91, 83.33, 76.92, 66.67, 60.0, 54.55, 85.71, 83.33, 66.67, 60.0, 54.55, 72.73, 54.55]%	[50.0, 100.0, 83.33, 83.33, 83.33, 83.33, 50.0, 50.0, 100.0, 83.33, 83.33, 50.0, 50.0, 66.67, 50.0]%	[100.0, 96.43, 100.0, 98.81, 97.62, 95.24, 98.81, 97.62, 97.62, 98.81, 95.24, 98.81, 97.62, 98.81, 97.62]%	[100.0, 66.67, 100.0, 83.33, 71.43, 55.56, 75.0, 60.0, 75.0, 83.33, 55.56, 75.0, 60.0, 80.0, 60.0]%	[96.55, 100.0, 98.82, 98.81, 98.8, 98.77, 96.51, 96.47, 100.0, 98.81, 98.77, 96.51, 96.47, 97.65, 96.47]%	||	70.44%	71.11%	97.94%	73.39%	97.96%	
  3  1  0  0  0  0  0  0  0  0  0  0  0  0  2  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  1  0  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  1  3  0  0  1  0  0  0  0  0  50.0%		7
  0  0  0  0  1  0  0  3  0  0  1  0  1  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  1  0  1  0  0  0  0  0  3  0  1  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  3  0  3  0  0  50.0%		13
  0  0  0  0  1  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  1  0  2  0  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 56.59%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	73.33%	96.44%	71.43%	[95.56, 94.44, 97.78, 98.89, 97.78, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 96.67, 96.67]%	[50.0, 61.54, 83.33, 90.91, 80.0, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 72.73, 76.92]%	[33.33, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 98.81, 97.62]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 80.0, 71.43]%	[95.45, 97.59, 98.81, 98.82, 97.67, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.65, 98.8]%	||	73.04%	73.33%	98.1%	77.19%	98.11%	
  2  1  0  0  0  1  0  0  0  1  0  1  0  0  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[97.78, 98.89, 100.0, 97.78, 98.89, 95.56, 95.56, 95.56, 98.89, 92.22, 95.56, 88.89, 95.56, 98.89, 96.67]%	[83.33, 92.31, 100.0, 80.0, 90.91, 66.67, 60.0, 66.67, 90.91, 46.15, 66.67, 37.5, 66.67, 92.31, 72.73]%	[83.33, 100.0, 100.0, 66.67, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 50.0, 66.67, 100.0, 66.67]%	[98.81, 98.81, 100.0, 100.0, 100.0, 97.62, 98.81, 97.62, 100.0, 95.24, 97.62, 91.67, 97.62, 98.81, 98.81]%	[83.33, 85.71, 100.0, 100.0, 100.0, 66.67, 75.0, 66.67, 100.0, 42.86, 66.67, 30.0, 66.67, 85.71, 80.0]%	[98.81, 100.0, 100.0, 97.67, 98.82, 97.62, 96.51, 97.62, 98.82, 96.39, 97.62, 96.25, 97.62, 100.0, 97.65]%	||	74.19%	73.33%	98.1%	76.62%	98.09%	
  5  0  0  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  1  0  4  0  0  0  0  0  0  1  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  0  0  1  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  0  1  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  0  0  0  0  3  0  0  0  50.0%		7
  0  0  0  0  0  1  0  4  0  0  0  0  0  0  1  66.67%		8
  0  0  0  0  0  1  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  3  0  3  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  2  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  1  0  0  0  0  0  0  0  0  0  0  0  1  0  4  66.67%		15
Forest OOB Error: 55.16%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	72.22%	96.3%	70.24%	[94.44, 94.44, 97.78, 98.89, 97.78, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 96.67, 95.56]%	[28.57, 61.54, 83.33, 90.91, 80.0, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 72.73, 71.43]%	[16.67, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 98.81, 96.43]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 80.0, 62.5]%	[94.38, 97.59, 98.81, 98.82, 97.67, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.65, 98.78]%	||	71.25%	72.22%	98.02%	76.59%	98.04%	
  1  1  0  0  0  1  0  0  0  1  0  1  0  0  1  16.67%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[96.67, 97.78, 96.67, 97.78, 97.78, 97.78, 93.33, 95.56, 97.78, 94.44, 96.67, 94.44, 97.78, 93.33, 96.67]%	[72.73, 83.33, 76.92, 80.0, 85.71, 80.0, 62.5, 66.67, 85.71, 44.44, 76.92, 61.54, 83.33, 50.0, 66.67]%	[66.67, 83.33, 83.33, 66.67, 100.0, 66.67, 83.33, 66.67, 100.0, 33.33, 83.33, 66.67, 83.33, 50.0, 50.0]%	[98.81, 98.81, 97.62, 100.0, 97.62, 100.0, 94.05, 97.62, 97.62, 98.81, 97.62, 96.43, 98.81, 96.43, 100.0]%	[80.0, 83.33, 71.43, 100.0, 75.0, 100.0, 50.0, 66.67, 75.0, 66.67, 71.43, 57.14, 83.33, 50.0, 100.0]%	[97.65, 98.81, 98.8, 97.67, 100.0, 97.67, 98.75, 97.62, 100.0, 95.4, 98.8, 97.59, 98.81, 96.43, 96.55]%	||	71.77%	72.22%	98.02%	75.33%	98.04%	
  4  1  1  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  1  0  0  4  0  0  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  1  0  1  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  2  0  3  0  1  0  33.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  2  0  0  0  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  1  0  2  0  0  0  0  0  0  0  0  3  0  50.0%		14
  0  0  0  0  0  0  1  1  0  0  0  0  0  1  3  50.0%		15
Forest OOB Error: 55.34%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	72.22%	96.3%	70.24%	[94.44, 94.44, 97.78, 98.89, 97.78, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 96.67, 95.56]%	[28.57, 61.54, 83.33, 90.91, 80.0, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 72.73, 71.43]%	[16.67, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 98.81, 96.43]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 80.0, 62.5]%	[94.38, 97.59, 98.81, 98.82, 97.67, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.65, 98.78]%	||	71.25%	72.22%	98.02%	76.59%	98.04%	
  1  1  0  0  0  1  0  0  0  1  0  1  0  0  1  16.67%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[96.67, 98.89, 98.89, 96.67, 98.89, 98.89, 92.22, 93.33, 97.78, 94.44, 95.56, 97.78, 96.67, 98.89, 95.56]%	[72.73, 92.31, 90.91, 76.92, 90.91, 90.91, 53.33, 57.14, 83.33, 70.59, 66.67, 80.0, 72.73, 90.91, 50.0]%	[66.67, 100.0, 83.33, 83.33, 83.33, 83.33, 66.67, 66.67, 83.33, 100.0, 66.67, 66.67, 66.67, 83.33, 33.33]%	[98.81, 98.81, 100.0, 97.62, 100.0, 100.0, 94.05, 95.24, 98.81, 94.05, 97.62, 100.0, 98.81, 100.0, 100.0]%	[80.0, 85.71, 100.0, 71.43, 100.0, 100.0, 44.44, 50.0, 83.33, 54.55, 66.67, 100.0, 80.0, 100.0, 100.0]%	[97.65, 100.0, 98.82, 98.8, 98.82, 98.82, 97.53, 97.56, 98.81, 100.0, 97.62, 97.67, 97.65, 98.82, 95.45]%	||	75.96%	75.56%	98.25%	81.08%	98.27%	
  4  1  0  0  0  0  1  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  1  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  0  1  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  4  0  0  2  0  0  0  0  0  66.67%		7
  0  0  0  1  0  0  0  4  1  0  0  0  0  0  0  66.67%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  1  0  0  0  0  0  0  5  0  83.33%		14
  1  0  0  1  0  0  0  2  0  0  0  0  0  0  2  33.33%		15
Forest OOB Error: 57.2%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	72.22%	96.3%	70.24%	[94.44, 94.44, 97.78, 98.89, 97.78, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 96.67, 95.56]%	[28.57, 61.54, 83.33, 90.91, 80.0, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 72.73, 71.43]%	[16.67, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 98.81, 96.43]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 80.0, 62.5]%	[94.38, 97.59, 98.81, 98.82, 97.67, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.65, 98.78]%	||	71.25%	72.22%	98.02%	76.59%	98.04%	
  1  1  0  0  0  1  0  0  0  1  0  1  0  0  1  16.67%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	64.44%	95.26%	61.9%	[96.67, 97.78, 96.67, 94.44, 97.78, 93.33, 92.22, 93.33, 91.11, 95.56, 93.33, 98.89, 92.22, 100.0, 95.56]%	[66.67, 83.33, 76.92, 44.44, 83.33, 62.5, 46.15, 40.0, 55.56, 71.43, 25.0, 90.91, 53.33, 100.0, 50.0]%	[50.0, 83.33, 83.33, 33.33, 83.33, 83.33, 50.0, 33.33, 83.33, 83.33, 16.67, 83.33, 66.67, 100.0, 33.33]%	[100.0, 98.81, 97.62, 98.81, 98.81, 94.05, 95.24, 97.62, 91.67, 96.43, 98.81, 100.0, 94.05, 100.0, 100.0]%	[100.0, 83.33, 71.43, 66.67, 83.33, 50.0, 42.86, 50.0, 41.67, 62.5, 50.0, 100.0, 44.44, 100.0, 100.0]%	[96.55, 98.81, 98.8, 95.4, 98.81, 98.75, 96.39, 95.35, 98.72, 98.78, 94.32, 98.82, 97.53, 100.0, 95.45]%	||	63.31%	64.44%	97.46%	69.75%	97.5%	
  3  1  1  0  0  1  0  0  0  0  0  0  0  0  0  50.0%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  2  0  3  1  0  0  0  0  0  0  0  0  33.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  0  1  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  3  0  1  1  0  0  0  0  0  50.0%		7
  0  0  1  0  0  0  0  2  2  0  0  0  1  0  0  33.33%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  1  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  2  0  0  1  0  3  0  0  16.67%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  1  0  0  0  0  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  1  0  0  0  2  0  0  0  1  0  2  33.33%		15
Forest OOB Error: 57.79%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	72.22%	96.3%	70.24%	[94.44, 94.44, 97.78, 98.89, 97.78, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 96.67, 95.56]%	[28.57, 61.54, 83.33, 90.91, 80.0, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 72.73, 71.43]%	[16.67, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 98.81, 96.43]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 80.0, 62.5]%	[94.38, 97.59, 98.81, 98.82, 97.67, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.65, 98.78]%	||	71.25%	72.22%	98.02%	76.59%	98.04%	
  1  1  0  0  0  1  0  0  0  1  0  1  0  0  1  16.67%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[97.78, 97.78, 95.56, 95.56, 97.78, 97.78, 95.56, 94.44, 96.67, 95.56, 96.67, 93.33, 98.89, 96.67, 96.67]%	[80.0, 80.0, 71.43, 71.43, 80.0, 80.0, 75.0, 44.44, 76.92, 71.43, 80.0, 50.0, 90.91, 76.92, 66.67]%	[66.67, 66.67, 83.33, 83.33, 66.67, 66.67, 100.0, 33.33, 83.33, 83.33, 100.0, 50.0, 83.33, 83.33, 50.0]%	[100.0, 100.0, 96.43, 96.43, 100.0, 100.0, 95.24, 98.81, 97.62, 96.43, 96.43, 96.43, 100.0, 97.62, 100.0]%	[100.0, 100.0, 62.5, 62.5, 100.0, 100.0, 60.0, 66.67, 71.43, 62.5, 66.67, 50.0, 100.0, 71.43, 100.0]%	[97.67, 97.67, 98.78, 98.78, 97.67, 97.67, 100.0, 95.4, 98.8, 98.78, 100.0, 96.43, 98.82, 98.8, 96.55]%	||	73.01%	73.33%	98.1%	78.25%	98.12%	
  4  0  0  1  0  0  0  0  0  1  0  0  0  0  0  66.67%		1
  0  4  0  0  0  0  1  0  0  1  0  0  0  0  0  66.67%		2
  0  0  5  0  0  0  0  0  0  0  0  0  0  1  0  83.33%		3
  0  0  0  5  0  0  0  0  0  0  0  1  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  1  0  0  0  66.67%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  1  0  0  0  2  0  0  3  0  0  0  0  33.33%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  2  0  0  1  0  3  0  0  0  50.0%		12
  0  0  0  1  0  0  0  0  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  1  0  0  0  0  0  0  5  0  83.33%		14
  0  0  1  0  0  0  0  1  1  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 55.6%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	72.22%	96.3%	70.24%	[94.44, 94.44, 97.78, 98.89, 97.78, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 96.67, 95.56]%	[28.57, 61.54, 83.33, 90.91, 80.0, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 72.73, 71.43]%	[16.67, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 98.81, 96.43]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 80.0, 62.5]%	[94.38, 97.59, 98.81, 98.82, 97.67, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.65, 98.78]%	||	71.25%	72.22%	98.02%	76.59%	98.04%	
  1  1  0  0  0  1  0  0  0  1  0  1  0  0  1  16.67%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[98.89, 98.89, 96.67, 96.67, 98.89, 92.22, 95.56, 95.56, 96.67, 98.89, 95.56, 98.89, 97.78, 92.22, 97.78]%	[90.91, 92.31, 80.0, 66.67, 90.91, 58.82, 60.0, 60.0, 76.92, 92.31, 75.0, 90.91, 80.0, 22.22, 83.33]%	[83.33, 100.0, 100.0, 50.0, 83.33, 83.33, 50.0, 50.0, 83.33, 100.0, 100.0, 83.33, 66.67, 16.67, 83.33]%	[100.0, 98.81, 96.43, 100.0, 100.0, 92.86, 98.81, 98.81, 97.62, 98.81, 95.24, 100.0, 100.0, 97.62, 98.81]%	[100.0, 85.71, 66.67, 100.0, 100.0, 45.45, 75.0, 75.0, 71.43, 85.71, 60.0, 100.0, 100.0, 33.33, 83.33]%	[98.82, 100.0, 100.0, 96.55, 98.82, 98.73, 96.51, 96.51, 98.8, 100.0, 100.0, 98.82, 97.67, 94.25, 98.81]%	||	74.69%	75.56%	98.25%	78.78%	98.29%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  3  0  2  1  0  0  0  0  0  0  0  0  50.0%		4
  0  0  0  0  5  0  0  0  1  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  2  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  3  0  0  2  0  0  1  0  50.0%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  2  0  0  2  0  0  0  0  0  0  0  1  1  16.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  1  5  83.33%		15
Forest OOB Error: 53.17%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	72.22%	96.3%	70.24%	[94.44, 94.44, 97.78, 98.89, 97.78, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 96.67, 95.56]%	[28.57, 61.54, 83.33, 90.91, 80.0, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 72.73, 71.43]%	[16.67, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 98.81, 96.43]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 80.0, 62.5]%	[94.38, 97.59, 98.81, 98.82, 97.67, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.65, 98.78]%	||	71.25%	72.22%	98.02%	76.59%	98.04%	
  1  1  0  0  0  1  0  0  0  1  0  1  0  0  1  16.67%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	55.56%	94.07%	52.38%	[94.44, 95.56, 98.89, 95.56, 94.44, 93.33, 91.11, 90.0, 98.89, 91.11, 91.11, 93.33, 94.44, 93.33, 95.56]%	[61.54, 60.0, 90.91, 50.0, 66.67, 62.5, 42.86, 47.06, 92.31, 33.33, 33.33, 50.0, 44.44, 40.0, 50.0]%	[66.67, 50.0, 83.33, 33.33, 83.33, 83.33, 50.0, 66.67, 100.0, 33.33, 33.33, 50.0, 33.33, 33.33, 33.33]%	[96.43, 98.81, 100.0, 100.0, 95.24, 94.05, 94.05, 91.67, 98.81, 95.24, 95.24, 96.43, 98.81, 97.62, 100.0]%	[57.14, 75.0, 100.0, 100.0, 55.56, 50.0, 37.5, 36.36, 85.71, 33.33, 33.33, 50.0, 66.67, 50.0, 100.0]%	[97.59, 96.51, 98.82, 95.45, 98.77, 98.75, 96.34, 97.47, 100.0, 95.24, 95.24, 96.43, 95.4, 95.35, 95.45]%	||	55.0%	55.56%	96.83%	62.04%	96.85%	
  4  1  0  0  0  0  0  0  0  0  1  0  0  0  0  66.67%		1
  0  3  0  0  0  1  2  0  0  0  0  0  0  0  0  50.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  2  1  1  1  0  0  0  0  0  0  1  0  33.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  1  0  0  0  0  0  0  0  0  83.33%		6
  2  0  0  0  0  0  3  0  0  0  0  1  0  0  0  50.0%		7
  0  0  0  0  1  0  0  4  0  0  0  0  1  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  1  0  1  2  0  2  0  0  0  33.33%		10
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  33.33%		11
  0  0  0  0  0  0  0  0  0  2  0  3  0  1  0  50.0%		12
  0  0  0  0  0  0  0  1  0  0  3  0  2  0  0  33.33%		13
  0  0  0  0  0  3  0  0  0  1  0  0  0  2  0  33.33%		14
  1  0  0  0  1  0  0  2  0  0  0  0  0  0  2  33.33%		15
Forest OOB Error: 58.03%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	74.44%	96.59%	72.62%	[95.56, 94.44, 97.78, 98.89, 98.89, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 97.78, 96.67]%	[50.0, 61.54, 83.33, 90.91, 90.91, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 80.0, 76.92]%	[33.33, 66.67, 83.33, 83.33, 83.33, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 100.0, 97.62]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 100.0, 71.43]%	[95.45, 97.59, 98.81, 98.82, 98.82, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.67, 98.8]%	||	74.26%	74.44%	98.17%	78.52%	98.19%	
  2  1  0  0  0  1  0  0  0  1  0  1  0  0  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	71.11%	96.15%	69.05%	[97.78, 98.89, 96.67, 97.78, 96.67, 95.56, 95.56, 92.22, 97.78, 96.67, 95.56, 92.22, 95.56, 96.67, 96.67]%	[80.0, 92.31, 80.0, 83.33, 66.67, 71.43, 71.43, 46.15, 85.71, 66.67, 71.43, 46.15, 66.67, 66.67, 66.67]%	[66.67, 100.0, 100.0, 83.33, 50.0, 83.33, 83.33, 50.0, 100.0, 50.0, 83.33, 50.0, 66.67, 50.0, 50.0]%	[100.0, 98.81, 96.43, 98.81, 100.0, 96.43, 96.43, 95.24, 97.62, 100.0, 96.43, 95.24, 97.62, 100.0, 100.0]%	[100.0, 85.71, 66.67, 83.33, 100.0, 62.5, 62.5, 42.86, 75.0, 100.0, 62.5, 42.86, 66.67, 100.0, 100.0]%	[97.67, 100.0, 100.0, 98.81, 96.55, 98.78, 98.78, 96.39, 100.0, 96.55, 98.78, 96.39, 97.62, 96.55, 96.55]%	||	70.75%	71.11%	97.94%	76.71%	97.96%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  2  0  3  0  0  0  0  0  0  1  0  0  0  50.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  3  1  0  1  0  1  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  1  0  0  0  0  0  0  3  0  2  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  2  1  0  0  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  3  0  0  0  0  0  0  0  3  0  50.0%		14
  0  0  0  1  0  0  0  2  0  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 55.68%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	74.44%	96.59%	72.62%	[95.56, 94.44, 97.78, 98.89, 98.89, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 97.78, 96.67]%	[50.0, 61.54, 83.33, 90.91, 90.91, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 80.0, 76.92]%	[33.33, 66.67, 83.33, 83.33, 83.33, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 100.0, 97.62]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 100.0, 71.43]%	[95.45, 97.59, 98.81, 98.82, 98.82, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.67, 98.8]%	||	74.26%	74.44%	98.17%	78.52%	98.19%	
  2  1  0  0  0  1  0  0  0  1  0  1  0  0  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	70.0%	96.0%	67.86%	[98.89, 97.78, 94.44, 97.78, 95.56, 98.89, 94.44, 93.33, 95.56, 95.56, 94.44, 96.67, 95.56, 94.44, 96.67]%	[90.91, 85.71, 54.55, 80.0, 66.67, 90.91, 61.54, 50.0, 75.0, 71.43, 54.55, 66.67, 66.67, 66.67, 66.67]%	[83.33, 100.0, 50.0, 66.67, 66.67, 83.33, 66.67, 50.0, 100.0, 83.33, 50.0, 50.0, 66.67, 83.33, 50.0]%	[100.0, 97.62, 97.62, 100.0, 97.62, 100.0, 96.43, 96.43, 95.24, 96.43, 97.62, 100.0, 97.62, 95.24, 100.0]%	[100.0, 75.0, 60.0, 100.0, 66.67, 100.0, 57.14, 50.0, 60.0, 62.5, 60.0, 100.0, 66.67, 55.56, 100.0]%	[98.82, 100.0, 96.47, 97.67, 97.62, 98.82, 97.59, 96.43, 100.0, 98.78, 96.47, 96.55, 97.62, 98.77, 96.55]%	||	69.86%	70.0%	97.86%	74.24%	97.88%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  3  0  0  0  0  0  1  0  0  0  0  2  0  50.0%		3
  0  1  0  4  0  0  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  1  0  4  0  0  0  0  1  0  0  0  0  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  4  0  0  1  0  0  0  1  0  66.67%		7
  0  0  1  0  0  0  0  3  2  0  0  0  0  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  0  0  1  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  3  0  2  0  0  50.0%		11
  0  0  0  0  0  0  2  0  0  1  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  1  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  1  0  0  2  0  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 54.02%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	74.44%	96.59%	72.62%	[95.56, 94.44, 97.78, 98.89, 98.89, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 97.78, 96.67]%	[50.0, 61.54, 83.33, 90.91, 90.91, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 80.0, 76.92]%	[33.33, 66.67, 83.33, 83.33, 83.33, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 100.0, 97.62]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 100.0, 71.43]%	[95.45, 97.59, 98.81, 98.82, 98.82, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.67, 98.8]%	||	74.26%	74.44%	98.17%	78.52%	98.19%	
  2  1  0  0  0  1  0  0  0  1  0  1  0  0  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[96.67, 98.89, 98.89, 96.67, 97.78, 97.78, 94.44, 94.44, 96.67, 94.44, 96.67, 96.67, 93.33, 96.67, 94.44]%	[72.73, 92.31, 92.31, 66.67, 85.71, 85.71, 54.55, 61.54, 80.0, 66.67, 66.67, 66.67, 57.14, 66.67, 54.55]%	[66.67, 100.0, 100.0, 50.0, 100.0, 100.0, 50.0, 66.67, 100.0, 83.33, 50.0, 50.0, 66.67, 50.0, 50.0]%	[98.81, 98.81, 98.81, 100.0, 97.62, 97.62, 97.62, 96.43, 96.43, 95.24, 100.0, 100.0, 95.24, 100.0, 97.62]%	[80.0, 85.71, 85.71, 100.0, 75.0, 75.0, 60.0, 57.14, 66.67, 55.56, 100.0, 100.0, 50.0, 100.0, 60.0]%	[97.65, 100.0, 100.0, 96.55, 100.0, 100.0, 96.47, 97.59, 100.0, 98.77, 96.55, 96.55, 97.56, 96.55, 96.47]%	||	71.33%	72.22%	98.02%	76.72%	98.05%	
  4  1  0  0  0  0  0  0  0  0  0  0  1  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  3  0  2  0  0  1  0  0  0  0  0  0  50.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  1  0  3  0  0  2  0  0  0  0  0  50.0%		7
  0  0  1  0  0  0  0  4  1  0  0  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  1  0  0  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  3  0  2  0  0  50.0%		11
  0  0  0  0  0  0  2  0  0  1  0  3  0  0  0  50.0%		12
  1  0  0  0  0  0  0  1  0  0  0  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  3  2  50.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  1  0  3  50.0%		15
Forest OOB Error: 55.81%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	74.44%	96.59%	72.62%	[95.56, 94.44, 97.78, 98.89, 98.89, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 97.78, 96.67]%	[50.0, 61.54, 83.33, 90.91, 90.91, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 80.0, 76.92]%	[33.33, 66.67, 83.33, 83.33, 83.33, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 100.0, 97.62]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 100.0, 71.43]%	[95.45, 97.59, 98.81, 98.82, 98.82, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.67, 98.8]%	||	74.26%	74.44%	98.17%	78.52%	98.19%	
  2  1  0  0  0  1  0  0  0  1  0  1  0  0  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[95.56, 95.56, 97.78, 97.78, 97.78, 97.78, 92.22, 95.56, 97.78, 95.56, 94.44, 96.67, 95.56, 96.67, 97.78]%	[71.43, 66.67, 83.33, 83.33, 83.33, 80.0, 53.33, 60.0, 85.71, 60.0, 54.55, 72.73, 60.0, 80.0, 83.33]%	[83.33, 66.67, 83.33, 83.33, 83.33, 66.67, 66.67, 50.0, 100.0, 50.0, 50.0, 66.67, 50.0, 100.0, 83.33]%	[96.43, 97.62, 98.81, 98.81, 98.81, 100.0, 94.05, 98.81, 97.62, 98.81, 97.62, 98.81, 98.81, 96.43, 98.81]%	[62.5, 66.67, 83.33, 83.33, 83.33, 100.0, 44.44, 75.0, 75.0, 75.0, 60.0, 80.0, 75.0, 66.67, 83.33]%	[98.78, 97.62, 98.81, 98.81, 98.81, 97.67, 97.53, 96.51, 100.0, 96.51, 96.47, 97.65, 96.51, 100.0, 98.81]%	||	71.85%	72.22%	98.02%	74.24%	98.03%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  1  4  0  0  0  0  1  0  0  0  0  0  0  0  0  66.67%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  1  0  4  0  0  0  0  0  0  0  1  0  66.67%		6
  0  1  0  0  0  0  4  0  0  0  0  1  0  0  0  66.67%		7
  0  0  1  0  0  0  1  3  0  0  0  0  0  0  1  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  2  0  0  0  0  0  0  0  0  3  0  0  0  1  0  50.0%		10
  0  0  0  0  0  0  0  1  1  0  3  0  1  0  0  50.0%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  3  1  0  50.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  1  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 57.54%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	74.44%	96.59%	72.62%	[95.56, 94.44, 97.78, 98.89, 98.89, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 97.78, 96.67]%	[50.0, 61.54, 83.33, 90.91, 90.91, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 80.0, 76.92]%	[33.33, 66.67, 83.33, 83.33, 83.33, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 100.0, 97.62]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 100.0, 71.43]%	[95.45, 97.59, 98.81, 98.82, 98.82, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.67, 98.8]%	||	74.26%	74.44%	98.17%	78.52%	98.19%	
  2  1  0  0  0  1  0  0  0  1  0  1  0  0  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[95.56, 96.67, 98.89, 96.67, 97.78, 96.67, 92.22, 95.56, 97.78, 96.67, 100.0, 94.44, 98.89, 98.89, 94.44]%	[66.67, 72.73, 92.31, 76.92, 83.33, 72.73, 36.36, 71.43, 85.71, 80.0, 100.0, 54.55, 90.91, 90.91, 44.44]%	[66.67, 66.67, 100.0, 83.33, 83.33, 66.67, 33.33, 83.33, 100.0, 100.0, 100.0, 50.0, 83.33, 83.33, 33.33]%	[97.62, 98.81, 98.81, 97.62, 98.81, 98.81, 96.43, 96.43, 97.62, 96.43, 100.0, 97.62, 100.0, 100.0, 98.81]%	[66.67, 80.0, 85.71, 71.43, 83.33, 80.0, 40.0, 62.5, 75.0, 66.67, 100.0, 60.0, 100.0, 100.0, 66.67]%	[97.62, 97.65, 100.0, 98.8, 98.81, 97.65, 95.29, 98.78, 100.0, 100.0, 100.0, 96.47, 98.82, 98.82, 95.4]%	||	74.6%	75.56%	98.25%	75.87%	98.27%	
  4  0  0  0  0  0  0  0  0  1  0  1  0  0  0  66.67%		1
  0  4  0  0  0  0  2  0  0  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  1  0  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  2  0  4  0  0  0  0  0  0  0  0  0  66.67%		6
  1  0  0  0  0  0  2  1  1  0  0  1  0  0  0  33.33%		7
  0  0  0  0  1  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  2  0  3  0  0  1  50.0%		12
  0  0  0  0  0  0  0  0  1  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  1  0  0  0  1  2  0  0  0  0  0  0  2  33.33%		15
Forest OOB Error: 56.5%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	74.44%	96.59%	72.62%	[95.56, 94.44, 97.78, 98.89, 98.89, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 97.78, 96.67]%	[50.0, 61.54, 83.33, 90.91, 90.91, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 80.0, 76.92]%	[33.33, 66.67, 83.33, 83.33, 83.33, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 100.0, 97.62]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 100.0, 71.43]%	[95.45, 97.59, 98.81, 98.82, 98.82, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.67, 98.8]%	||	74.26%	74.44%	98.17%	78.52%	98.19%	
  2  1  0  0  0  1  0  0  0  1  0  1  0  0  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	66.67%	95.56%	64.29%	[97.78, 98.89, 98.89, 93.33, 95.56, 92.22, 94.44, 96.67, 97.78, 93.33, 95.56, 95.56, 94.44, 92.22, 96.67]%	[83.33, 90.91, 92.31, 40.0, 71.43, 53.33, 66.67, 66.67, 83.33, 57.14, 60.0, 60.0, 66.67, 0.0, 76.92]%	[83.33, 83.33, 100.0, 33.33, 83.33, 66.67, 83.33, 50.0, 83.33, 66.67, 50.0, 50.0, 83.33, 0.0, 83.33]%	[98.81, 100.0, 98.81, 97.62, 96.43, 94.05, 95.24, 100.0, 98.81, 95.24, 98.81, 98.81, 95.24, 98.81, 97.62]%	[83.33, 100.0, 85.71, 50.0, 62.5, 44.44, 55.56, 100.0, 83.33, 50.0, 75.0, 75.0, 55.56, 0.0, 71.43]%	[98.81, 98.82, 100.0, 95.35, 98.78, 97.53, 98.77, 96.55, 98.81, 97.56, 96.51, 96.51, 98.77, 93.26, 98.8]%	||	64.58%	66.67%	97.62%	66.12%	97.65%	
  5  0  0  0  0  0  0  0  0  0  0  0  1  0  0  83.33%		1
  1  5  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  2  0  2  1  0  0  1  0  0  0  0  0  33.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  1  0  1  3  0  0  0  0  0  0  1  50.0%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  1  0  0  0  0  0  4  0  1  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  3  0  3  0  0  50.0%		11
  0  0  0  0  0  0  1  0  0  2  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  1  2  1  0  0  0  0  0  0  0  1  0.0%		14
  0  0  0  0  1  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 55.6%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	73.33%	96.44%	71.43%	[95.56, 94.44, 97.78, 98.89, 97.78, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 96.67, 96.67]%	[50.0, 61.54, 83.33, 90.91, 80.0, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 72.73, 76.92]%	[33.33, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 98.81, 97.62]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 80.0, 71.43]%	[95.45, 97.59, 98.81, 98.82, 97.67, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.65, 98.8]%	||	73.04%	73.33%	98.1%	77.19%	98.11%	
  2  1  0  0  0  1  0  0  0  1  0  1  0  0  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[97.78, 97.78, 97.78, 97.78, 100.0, 97.78, 94.44, 96.67, 97.78, 96.67, 100.0, 93.33, 98.89, 98.89, 94.44]%	[80.0, 83.33, 83.33, 83.33, 100.0, 83.33, 66.67, 76.92, 85.71, 66.67, 100.0, 50.0, 92.31, 90.91, 54.55]%	[66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 83.33, 100.0, 50.0, 100.0, 50.0, 100.0, 83.33, 50.0]%	[100.0, 98.81, 98.81, 98.81, 100.0, 98.81, 95.24, 97.62, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 97.62]%	[100.0, 83.33, 83.33, 83.33, 100.0, 83.33, 55.56, 71.43, 75.0, 100.0, 100.0, 50.0, 85.71, 100.0, 60.0]%	[97.67, 98.81, 98.81, 98.81, 100.0, 98.81, 98.77, 98.8, 100.0, 96.55, 100.0, 96.43, 100.0, 98.82, 96.47]%	||	79.8%	80.0%	98.57%	82.07%	98.58%	
  4  1  0  0  0  0  0  0  0  0  0  0  0  0  1  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  0  0  0  0  0  1  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  1  0  0  0  0  0  0  3  0  2  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  3  0  0  0  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  5  1  83.33%		14
  0  0  0  1  0  0  0  2  0  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 59.09%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	73.33%	96.44%	71.43%	[95.56, 94.44, 97.78, 98.89, 97.78, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 96.67, 96.67]%	[50.0, 61.54, 83.33, 90.91, 80.0, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 72.73, 76.92]%	[33.33, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 98.81, 97.62]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 80.0, 71.43]%	[95.45, 97.59, 98.81, 98.82, 97.67, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.65, 98.8]%	||	73.04%	73.33%	98.1%	77.19%	98.11%	
  2  1  0  0  0  1  0  0  0  1  0  1  0  0  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	71.11%	96.15%	69.05%	[97.78, 92.22, 96.67, 93.33, 97.78, 96.67, 94.44, 96.67, 97.78, 96.67, 95.56, 95.56, 98.89, 95.56, 96.67]%	[80.0, 63.16, 80.0, 40.0, 83.33, 76.92, 54.55, 72.73, 85.71, 76.92, 60.0, 66.67, 90.91, 50.0, 72.73]%	[66.67, 100.0, 100.0, 33.33, 83.33, 83.33, 50.0, 66.67, 100.0, 83.33, 50.0, 66.67, 83.33, 33.33, 66.67]%	[100.0, 91.67, 96.43, 97.62, 98.81, 97.62, 97.62, 98.81, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 98.81]%	[100.0, 46.15, 66.67, 50.0, 83.33, 71.43, 60.0, 80.0, 75.0, 71.43, 75.0, 66.67, 100.0, 100.0, 80.0]%	[97.67, 100.0, 100.0, 95.35, 98.81, 98.8, 96.47, 97.65, 100.0, 98.8, 96.51, 97.62, 98.82, 95.45, 97.65]%	||	70.24%	71.11%	97.94%	75.05%	97.97%	
  4  1  0  0  0  0  0  0  0  0  0  0  0  0  1  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  1  0  2  0  1  1  0  0  0  1  0  0  0  0  33.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  1  0  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  3  0  0  0  0  2  0  0  0  50.0%		7
  0  0  1  1  0  0  0  4  0  0  0  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  1  5  0  0  0  0  0  83.33%		10
  0  1  1  0  0  0  0  1  0  0  3  0  0  0  0  50.0%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  1  0  0  0  0  0  0  0  0  0  5  0  0  83.33%		13
  0  2  0  0  1  1  0  0  0  0  0  0  0  2  0  33.33%		14
  0  0  0  1  0  0  0  0  1  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 55.56%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	73.33%	96.44%	71.43%	[95.56, 94.44, 97.78, 98.89, 97.78, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 96.67, 96.67]%	[50.0, 61.54, 83.33, 90.91, 80.0, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 72.73, 76.92]%	[33.33, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 98.81, 97.62]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 80.0, 71.43]%	[95.45, 97.59, 98.81, 98.82, 97.67, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.65, 98.8]%	||	73.04%	73.33%	98.1%	77.19%	98.11%	
  2  1  0  0  0  1  0  0  0  1  0  1  0  0  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	71.11%	96.15%	69.05%	[96.67, 98.89, 98.89, 96.67, 98.89, 94.44, 93.33, 92.22, 96.67, 95.56, 94.44, 94.44, 96.67, 97.78, 96.67]%	[66.67, 92.31, 90.91, 72.73, 92.31, 66.67, 50.0, 46.15, 76.92, 50.0, 66.67, 61.54, 76.92, 83.33, 66.67]%	[50.0, 100.0, 83.33, 66.67, 100.0, 83.33, 50.0, 50.0, 83.33, 33.33, 83.33, 66.67, 83.33, 83.33, 50.0]%	[100.0, 98.81, 100.0, 98.81, 98.81, 95.24, 96.43, 95.24, 97.62, 100.0, 95.24, 96.43, 97.62, 98.81, 100.0]%	[100.0, 85.71, 100.0, 80.0, 85.71, 55.56, 50.0, 42.86, 71.43, 100.0, 55.56, 57.14, 71.43, 83.33, 100.0]%	[96.55, 100.0, 98.82, 97.65, 100.0, 98.77, 96.43, 96.39, 98.8, 95.45, 98.77, 97.59, 98.8, 98.81, 96.55]%	||	70.65%	71.11%	97.94%	75.92%	97.96%	
  3  1  0  1  0  1  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  3  1  1  0  0  0  1  0  0  50.0%		7
  0  0  0  0  0  0  0  3  0  0  2  0  1  0  0  50.0%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  2  0  3  0  1  0  33.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  1  1  0  0  0  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  2  0  0  1  0  0  0  3  50.0%		15
Forest OOB Error: 56.47%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	73.33%	96.44%	71.43%	[95.56, 94.44, 97.78, 98.89, 97.78, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 96.67, 96.67]%	[50.0, 61.54, 83.33, 90.91, 80.0, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 72.73, 76.92]%	[33.33, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 98.81, 97.62]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 80.0, 71.43]%	[95.45, 97.59, 98.81, 98.82, 97.67, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.65, 98.8]%	||	73.04%	73.33%	98.1%	77.19%	98.11%	
  2  1  0  0  0  1  0  0  0  1  0  1  0  0  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[98.89, 96.67, 98.89, 96.67, 97.78, 96.67, 93.33, 95.56, 98.89, 98.89, 94.44, 94.44, 98.89, 98.89, 96.67]%	[90.91, 80.0, 90.91, 72.73, 83.33, 76.92, 50.0, 71.43, 92.31, 90.91, 54.55, 54.55, 92.31, 92.31, 66.67]%	[83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 50.0, 83.33, 100.0, 83.33, 50.0, 50.0, 100.0, 100.0, 50.0]%	[100.0, 96.43, 100.0, 98.81, 98.81, 97.62, 96.43, 96.43, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 100.0]%	[100.0, 66.67, 100.0, 80.0, 83.33, 71.43, 50.0, 62.5, 85.71, 100.0, 60.0, 60.0, 85.71, 85.71, 100.0]%	[98.82, 100.0, 98.82, 97.65, 98.81, 98.8, 96.43, 98.78, 100.0, 98.82, 96.47, 96.47, 100.0, 100.0, 96.55]%	||	77.32%	77.78%	98.41%	79.4%	98.43%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  1  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  3  0  0  0  0  2  0  0  0  50.0%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  1  0  0  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  2  0  0  3  0  1  0  0  50.0%		11
  0  2  0  0  0  0  1  0  0  0  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  1  0  0  1  3  50.0%		15
Forest OOB Error: 51.74%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	73.33%	96.44%	71.43%	[95.56, 94.44, 97.78, 98.89, 97.78, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 96.67, 96.67]%	[50.0, 61.54, 83.33, 90.91, 80.0, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 72.73, 76.92]%	[33.33, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 98.81, 97.62]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 80.0, 71.43]%	[95.45, 97.59, 98.81, 98.82, 97.67, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.65, 98.8]%	||	73.04%	73.33%	98.1%	77.19%	98.11%	
  2  1  0  0  0  1  0  0  0  1  0  1  0  0  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[97.78, 97.78, 96.67, 96.67, 98.89, 92.22, 95.56, 95.56, 96.67, 97.78, 94.44, 96.67, 98.89, 94.44, 96.67]%	[83.33, 85.71, 76.92, 66.67, 90.91, 58.82, 60.0, 60.0, 80.0, 83.33, 66.67, 72.73, 90.91, 54.55, 66.67]%	[83.33, 100.0, 83.33, 50.0, 83.33, 83.33, 50.0, 50.0, 100.0, 83.33, 83.33, 66.67, 83.33, 50.0, 50.0]%	[98.81, 97.62, 97.62, 100.0, 100.0, 92.86, 98.81, 98.81, 96.43, 98.81, 95.24, 98.81, 100.0, 97.62, 100.0]%	[83.33, 75.0, 71.43, 100.0, 100.0, 45.45, 75.0, 75.0, 66.67, 83.33, 55.56, 80.0, 100.0, 60.0, 100.0]%	[98.81, 100.0, 98.8, 96.55, 98.82, 98.73, 96.51, 96.51, 100.0, 98.81, 98.77, 97.65, 98.82, 96.47, 96.55]%	||	73.15%	73.33%	98.1%	78.05%	98.12%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  3  0  1  1  0  0  0  0  0  0  1  0  50.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  3  0  0  0  0  1  0  1  0  50.0%		7
  0  0  1  0  0  0  0  3  0  0  2  0  0  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  1  5  0  0  0  0  0  83.33%		10
  0  0  1  0  0  0  0  0  0  0  5  0  0  0  0  83.33%		11
  1  0  0  0  0  0  0  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  3  0  0  0  0  0  0  0  3  0  50.0%		14
  0  0  0  0  0  0  0  1  1  0  1  0  0  0  3  50.0%		15
Forest OOB Error: 63.08%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	73.33%	96.44%	71.43%	[95.56, 94.44, 97.78, 98.89, 97.78, 94.44, 95.56, 95.56, 97.78, 94.44, 96.67, 95.56, 98.89, 96.67, 96.67]%	[50.0, 61.54, 83.33, 90.91, 80.0, 66.67, 60.0, 66.67, 85.71, 66.67, 76.92, 66.67, 90.91, 72.73, 76.92]%	[33.33, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33]%	[100.0, 96.43, 98.81, 100.0, 100.0, 95.24, 98.81, 97.62, 97.62, 95.24, 97.62, 97.62, 100.0, 98.81, 97.62]%	[100.0, 57.14, 83.33, 100.0, 100.0, 55.56, 75.0, 66.67, 75.0, 55.56, 71.43, 66.67, 100.0, 80.0, 71.43]%	[95.45, 97.59, 98.81, 98.82, 97.67, 98.77, 96.51, 97.62, 100.0, 98.77, 98.8, 97.62, 98.82, 97.65, 98.8]%	||	73.04%	73.33%	98.1%	77.19%	98.11%	
  2  1  0  0  0  1  0  0  0  1  0  1  0  0  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 5, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[95.56, 95.56, 100.0, 98.89, 98.89, 94.44, 96.67, 93.33, 96.67, 97.78, 97.78, 98.89, 98.89, 98.89, 95.56]%	[60.0, 66.67, 100.0, 90.91, 92.31, 66.67, 72.73, 62.5, 80.0, 83.33, 80.0, 90.91, 92.31, 90.91, 50.0]%	[50.0, 66.67, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 100.0, 83.33, 66.67, 83.33, 100.0, 83.33, 33.33]%	[98.81, 97.62, 100.0, 100.0, 98.81, 95.24, 98.81, 94.05, 96.43, 98.81, 100.0, 100.0, 98.81, 100.0, 100.0]%	[75.0, 66.67, 100.0, 100.0, 85.71, 55.56, 80.0, 50.0, 66.67, 83.33, 100.0, 100.0, 85.71, 100.0, 100.0]%	[96.51, 97.62, 100.0, 98.82, 100.0, 98.77, 97.65, 98.75, 100.0, 98.81, 97.67, 98.82, 100.0, 98.82, 95.45]%	||	78.62%	78.89%	98.49%	83.24%	98.51%	
  3  1  0  0  0  2  0  0  0  0  0  0  0  0  0  50.0%		1
  0  4  0  0  0  0  1  0  1  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  1  0  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  2  4  0  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  1  0  0  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  1  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  1  0  0  0  0  0  0  2  1  0  0  0  0  0  2  33.33%		15
Forest OOB Error: 57.69%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	76.67%	96.89%	75.0%	[93.33, 94.44, 97.78, 98.89, 98.89, 97.78, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 98.89, 96.67]%	[40.0, 61.54, 80.0, 90.91, 90.91, 83.33, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 92.31, 72.73]%	[33.33, 66.67, 66.67, 83.33, 83.33, 83.33, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 98.81, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 83.33, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 85.71, 80.0]%	[95.35, 97.59, 97.67, 98.82, 98.82, 98.81, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	76.33%	76.67%	98.33%	78.56%	98.35%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[96.67, 98.89, 97.78, 95.56, 97.78, 97.78, 91.11, 95.56, 97.78, 95.56, 95.56, 96.67, 97.78, 98.89, 97.78]%	[72.73, 90.91, 83.33, 66.67, 80.0, 83.33, 50.0, 66.67, 85.71, 71.43, 71.43, 66.67, 80.0, 92.31, 80.0]%	[66.67, 83.33, 83.33, 66.67, 66.67, 83.33, 66.67, 66.67, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 66.67]%	[98.81, 100.0, 98.81, 97.62, 100.0, 98.81, 92.86, 97.62, 97.62, 96.43, 96.43, 100.0, 100.0, 98.81, 100.0]%	[80.0, 100.0, 83.33, 66.67, 100.0, 83.33, 40.0, 66.67, 75.0, 62.5, 62.5, 100.0, 100.0, 85.71, 100.0]%	[97.65, 98.82, 98.81, 97.62, 97.67, 98.81, 97.5, 97.62, 100.0, 98.78, 98.78, 96.55, 97.67, 100.0, 97.67]%	||	76.08%	75.56%	98.25%	80.38%	98.26%	
  4  0  0  1  0  0  0  0  0  1  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  1  0  4  0  1  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  0  0  5  1  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  4  0  0  2  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  1  0  1  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  0  0  1  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  1  0  0  0  0  0  2  0  0  0  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  1  0  0  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 54.55%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	76.67%	96.89%	75.0%	[93.33, 94.44, 97.78, 98.89, 98.89, 97.78, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 98.89, 96.67]%	[40.0, 61.54, 80.0, 90.91, 90.91, 83.33, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 92.31, 72.73]%	[33.33, 66.67, 66.67, 83.33, 83.33, 83.33, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 98.81, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 83.33, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 85.71, 80.0]%	[95.35, 97.59, 97.67, 98.82, 98.82, 98.81, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	76.33%	76.67%	98.33%	78.56%	98.35%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[95.56, 98.89, 98.89, 96.67, 98.89, 96.67, 98.89, 96.67, 98.89, 91.11, 96.67, 94.44, 97.78, 96.67, 96.67]%	[60.0, 92.31, 90.91, 76.92, 90.91, 72.73, 92.31, 72.73, 92.31, 42.86, 76.92, 54.55, 83.33, 76.92, 72.73]%	[50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 66.67, 100.0, 50.0, 83.33, 50.0, 83.33, 83.33, 66.67]%	[98.81, 98.81, 100.0, 97.62, 100.0, 98.81, 98.81, 98.81, 98.81, 94.05, 97.62, 97.62, 98.81, 97.62, 98.81]%	[75.0, 85.71, 100.0, 71.43, 100.0, 80.0, 85.71, 80.0, 85.71, 37.5, 71.43, 60.0, 83.33, 71.43, 80.0]%	[96.51, 100.0, 98.82, 98.8, 98.82, 97.65, 100.0, 97.65, 100.0, 96.34, 98.8, 96.47, 98.81, 98.8, 97.65]%	||	76.56%	76.67%	98.33%	77.82%	98.34%	
  3  1  0  0  0  0  0  0  0  2  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  1  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  1  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  1  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  3  0  2  0  1  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  2  0  3  0  0  1  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  1  0  0  0  0  0  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 46.72%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	76.67%	96.89%	75.0%	[93.33, 94.44, 97.78, 98.89, 98.89, 97.78, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 98.89, 96.67]%	[40.0, 61.54, 80.0, 90.91, 90.91, 83.33, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 92.31, 72.73]%	[33.33, 66.67, 66.67, 83.33, 83.33, 83.33, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 98.81, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 83.33, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 85.71, 80.0]%	[95.35, 97.59, 97.67, 98.82, 98.82, 98.81, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	76.33%	76.67%	98.33%	78.56%	98.35%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	68.89%	95.85%	66.67%	[97.78, 94.44, 95.56, 94.44, 95.56, 96.67, 96.67, 96.67, 97.78, 92.22, 97.78, 94.44, 95.56, 95.56, 96.67]%	[83.33, 70.59, 71.43, 54.55, 66.67, 76.92, 66.67, 76.92, 80.0, 46.15, 83.33, 54.55, 66.67, 60.0, 72.73]%	[83.33, 100.0, 83.33, 50.0, 66.67, 83.33, 50.0, 83.33, 66.67, 50.0, 83.33, 50.0, 66.67, 50.0, 66.67]%	[98.81, 94.05, 96.43, 97.62, 97.62, 97.62, 100.0, 97.62, 100.0, 95.24, 98.81, 97.62, 97.62, 98.81, 98.81]%	[83.33, 54.55, 62.5, 60.0, 66.67, 71.43, 100.0, 71.43, 100.0, 42.86, 83.33, 60.0, 66.67, 75.0, 80.0]%	[98.81, 100.0, 98.78, 96.47, 97.62, 98.8, 96.55, 98.8, 97.67, 96.39, 98.81, 96.47, 97.62, 96.51, 97.65]%	||	68.7%	68.89%	97.78%	71.85%	97.8%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  1  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  1  0  3  2  0  0  0  0  0  0  0  0  0  0  50.0%		4
  0  0  1  0  4  0  0  0  0  1  0  0  0  0  0  66.67%		5
  0  1  0  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  1  3  0  0  1  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  1  1  0  0  0  0  0  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  0  0  0  3  0  2  0  1  0  50.0%		10
  0  0  1  0  0  0  0  0  0  0  5  0  0  0  0  83.33%		11
  1  0  0  0  0  0  0  0  0  2  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  3  1  50.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  1  0  4  66.67%		15
Forest OOB Error: 54.41%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	76.67%	96.89%	75.0%	[93.33, 94.44, 97.78, 98.89, 98.89, 97.78, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 98.89, 96.67]%	[40.0, 61.54, 80.0, 90.91, 90.91, 83.33, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 92.31, 72.73]%	[33.33, 66.67, 66.67, 83.33, 83.33, 83.33, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 98.81, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 83.33, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 85.71, 80.0]%	[95.35, 97.59, 97.67, 98.82, 98.82, 98.81, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	76.33%	76.67%	98.33%	78.56%	98.35%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[96.67, 97.78, 100.0, 98.89, 98.89, 94.44, 95.56, 96.67, 95.56, 97.78, 97.78, 95.56, 97.78, 96.67, 97.78]%	[72.73, 85.71, 100.0, 90.91, 90.91, 61.54, 60.0, 76.92, 75.0, 83.33, 80.0, 66.67, 85.71, 72.73, 80.0]%	[66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 50.0, 83.33, 100.0, 83.33, 66.67, 66.67, 100.0, 66.67, 66.67]%	[98.81, 97.62, 100.0, 100.0, 100.0, 96.43, 98.81, 97.62, 95.24, 98.81, 100.0, 97.62, 97.62, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 100.0, 57.14, 75.0, 71.43, 60.0, 83.33, 100.0, 66.67, 75.0, 80.0, 100.0]%	[97.65, 100.0, 100.0, 98.82, 98.82, 97.59, 96.51, 98.8, 100.0, 98.81, 97.67, 97.62, 100.0, 97.65, 97.67]%	||	78.81%	78.89%	98.49%	81.57%	98.51%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  1  0  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  1  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  1  0  0  0  0  1  3  0  0  0  0  1  0  0  0  50.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  1  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 55.34%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	76.67%	96.89%	75.0%	[93.33, 94.44, 97.78, 98.89, 98.89, 97.78, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 98.89, 96.67]%	[40.0, 61.54, 80.0, 90.91, 90.91, 83.33, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 92.31, 72.73]%	[33.33, 66.67, 66.67, 83.33, 83.33, 83.33, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 98.81, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 83.33, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 85.71, 80.0]%	[95.35, 97.59, 97.67, 98.82, 98.82, 98.81, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	76.33%	76.67%	98.33%	78.56%	98.35%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	71.11%	96.15%	69.05%	[98.89, 96.67, 97.78, 97.78, 97.78, 94.44, 95.56, 96.67, 94.44, 94.44, 94.44, 94.44, 95.56, 95.56, 97.78]%	[90.91, 72.73, 85.71, 80.0, 83.33, 66.67, 50.0, 72.73, 66.67, 61.54, 61.54, 61.54, 60.0, 66.67, 83.33]%	[83.33, 66.67, 100.0, 66.67, 83.33, 83.33, 33.33, 66.67, 83.33, 66.67, 66.67, 66.67, 50.0, 66.67, 83.33]%	[100.0, 98.81, 97.62, 100.0, 98.81, 95.24, 100.0, 98.81, 95.24, 96.43, 96.43, 96.43, 98.81, 97.62, 98.81]%	[100.0, 80.0, 75.0, 100.0, 83.33, 55.56, 100.0, 80.0, 55.56, 57.14, 57.14, 57.14, 75.0, 66.67, 83.33]%	[98.82, 97.65, 100.0, 97.67, 98.81, 98.77, 95.45, 97.65, 98.77, 97.59, 97.59, 97.59, 96.51, 97.62, 98.81]%	||	70.89%	71.11%	97.94%	75.06%	97.95%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  4  0  0  0  2  0  0  0  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  0  0  1  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  0  0  0  0  0  1  0  83.33%		6
  0  0  0  0  0  0  2  0  3  1  0  0  0  0  0  33.33%		7
  0  0  1  0  0  0  0  4  0  0  0  0  0  0  1  66.67%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  4  0  2  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  1  0  0  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  3  0  3  0  0  50.0%		13
  0  0  0  0  0  1  0  0  0  0  0  1  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  1  5  83.33%		15
Forest OOB Error: 54.83%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	76.67%	96.89%	75.0%	[93.33, 94.44, 97.78, 98.89, 98.89, 97.78, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 98.89, 96.67]%	[40.0, 61.54, 80.0, 90.91, 90.91, 83.33, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 92.31, 72.73]%	[33.33, 66.67, 66.67, 83.33, 83.33, 83.33, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 98.81, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 83.33, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 85.71, 80.0]%	[95.35, 97.59, 97.67, 98.82, 98.82, 98.81, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	76.33%	76.67%	98.33%	78.56%	98.35%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	62.22%	94.96%	59.52%	[97.78, 95.56, 98.89, 96.67, 95.56, 96.67, 93.33, 92.22, 95.56, 93.33, 91.11, 93.33, 96.67, 92.22, 95.56]%	[80.0, 50.0, 92.31, 72.73, 66.67, 76.92, 40.0, 46.15, 75.0, 40.0, 55.56, 50.0, 66.67, 53.33, 60.0]%	[66.67, 33.33, 100.0, 66.67, 66.67, 83.33, 33.33, 50.0, 100.0, 33.33, 83.33, 50.0, 50.0, 66.67, 50.0]%	[100.0, 100.0, 98.81, 98.81, 97.62, 97.62, 97.62, 95.24, 95.24, 97.62, 91.67, 96.43, 100.0, 94.05, 98.81]%	[100.0, 100.0, 85.71, 80.0, 66.67, 71.43, 50.0, 42.86, 60.0, 50.0, 41.67, 50.0, 100.0, 44.44, 75.0]%	[97.67, 95.45, 100.0, 97.65, 97.62, 98.8, 95.35, 96.39, 100.0, 95.35, 98.72, 96.43, 96.55, 97.53, 96.51]%	||	61.69%	62.22%	97.3%	67.85%	97.33%	
  4  0  0  1  0  0  0  0  0  1  0  0  0  0  0  66.67%		1
  0  2  0  0  1  0  1  0  2  0  0  0  0  0  0  33.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  2  0  1  1  0  2  0  0  0  33.33%		7
  0  0  0  0  0  0  0  3  0  0  3  0  0  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  1  0  2  0  1  0  2  0  33.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  3  0  2  1  50.0%		12
  0  0  0  0  0  0  0  0  0  0  3  0  3  0  0  50.0%		13
  0  0  0  0  1  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  2  0  0  1  0  0  0  3  50.0%		15
Forest OOB Error: 46.7%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	74.44%	96.59%	72.62%	[93.33, 94.44, 97.78, 98.89, 98.89, 95.56, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 96.67, 96.67]%	[40.0, 61.54, 80.0, 90.91, 90.91, 60.0, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 80.0, 72.73]%	[33.33, 66.67, 66.67, 83.33, 83.33, 50.0, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 96.43, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 75.0, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 66.67, 80.0]%	[95.35, 97.59, 97.67, 98.82, 98.82, 96.51, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	73.96%	74.44%	98.17%	76.74%	98.2%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  3  0  0  1  0  0  0  0  2  0  50.0%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[97.78, 95.56, 96.67, 98.89, 100.0, 100.0, 92.22, 97.78, 96.67, 95.56, 97.78, 95.56, 98.89, 100.0, 96.67]%	[80.0, 71.43, 76.92, 90.91, 100.0, 100.0, 36.36, 83.33, 76.92, 66.67, 85.71, 71.43, 90.91, 100.0, 66.67]%	[66.67, 83.33, 83.33, 83.33, 100.0, 100.0, 33.33, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 100.0, 50.0]%	[100.0, 96.43, 97.62, 100.0, 100.0, 100.0, 96.43, 98.81, 97.62, 97.62, 97.62, 96.43, 100.0, 100.0, 100.0]%	[100.0, 62.5, 71.43, 100.0, 100.0, 100.0, 40.0, 83.33, 71.43, 66.67, 75.0, 62.5, 100.0, 100.0, 100.0]%	[97.67, 98.78, 98.8, 98.82, 100.0, 100.0, 95.29, 98.81, 98.8, 97.62, 100.0, 98.78, 98.82, 100.0, 96.55]%	||	79.82%	80.0%	98.57%	82.19%	98.58%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  1  0  0  0  0  2  0  0  2  0  1  0  0  0  33.33%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  1  0  0  0  0  0  0  4  0  1  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  1  0  0  0  3  50.0%		15
Forest OOB Error: 58.78%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	74.44%	96.59%	72.62%	[93.33, 94.44, 97.78, 98.89, 98.89, 95.56, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 96.67, 96.67]%	[40.0, 61.54, 80.0, 90.91, 90.91, 60.0, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 80.0, 72.73]%	[33.33, 66.67, 66.67, 83.33, 83.33, 50.0, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 96.43, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 75.0, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 66.67, 80.0]%	[95.35, 97.59, 97.67, 98.82, 98.82, 96.51, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	73.96%	74.44%	98.17%	76.74%	98.2%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  3  0  0  1  0  0  0  0  2  0  50.0%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	70.0%	96.0%	67.86%	[95.56, 95.56, 95.56, 97.78, 97.78, 97.78, 93.33, 95.56, 97.78, 96.67, 94.44, 94.44, 93.33, 98.89, 95.56]%	[50.0, 66.67, 71.43, 83.33, 80.0, 85.71, 50.0, 66.67, 83.33, 80.0, 44.44, 61.54, 62.5, 90.91, 60.0]%	[33.33, 66.67, 83.33, 83.33, 66.67, 100.0, 50.0, 66.67, 83.33, 100.0, 33.33, 66.67, 83.33, 83.33, 50.0]%	[100.0, 97.62, 96.43, 98.81, 100.0, 97.62, 96.43, 97.62, 98.81, 96.43, 98.81, 96.43, 94.05, 100.0, 98.81]%	[100.0, 66.67, 62.5, 83.33, 100.0, 75.0, 50.0, 66.67, 83.33, 66.67, 66.67, 57.14, 50.0, 100.0, 75.0]%	[95.45, 97.62, 98.78, 98.81, 97.67, 100.0, 96.43, 97.62, 98.81, 100.0, 95.4, 97.59, 98.75, 98.82, 96.51]%	||	69.1%	70.0%	97.86%	73.53%	97.88%	
  2  1  0  0  0  1  0  0  0  1  0  0  0  0  1  33.33%		1
  0  4  0  0  0  0  1  0  1  0  0  0  0  0  0  66.67%		2
  0  0  5  1  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  1  0  0  0  0  0  66.67%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  1  0  0  0  0  3  0  0  0  0  2  0  0  0  50.0%		7
  0  0  1  0  0  0  0  4  0  0  0  0  1  0  0  66.67%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  33.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  1  0  5  0  83.33%		14
  0  0  0  0  0  1  0  2  0  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 56.03%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	74.44%	96.59%	72.62%	[93.33, 94.44, 97.78, 98.89, 98.89, 95.56, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 96.67, 96.67]%	[40.0, 61.54, 80.0, 90.91, 90.91, 60.0, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 80.0, 72.73]%	[33.33, 66.67, 66.67, 83.33, 83.33, 50.0, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 96.43, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 75.0, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 66.67, 80.0]%	[95.35, 97.59, 97.67, 98.82, 98.82, 96.51, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	73.96%	74.44%	98.17%	76.74%	98.2%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  3  0  0  1  0  0  0  0  2  0  50.0%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	74.44%	96.59%	72.62%	[98.89, 98.89, 95.56, 95.56, 93.33, 94.44, 96.67, 94.44, 98.89, 97.78, 94.44, 98.89, 97.78, 95.56, 97.78]%	[90.91, 92.31, 75.0, 60.0, 40.0, 54.55, 76.92, 54.55, 92.31, 83.33, 61.54, 90.91, 80.0, 66.67, 85.71]%	[83.33, 100.0, 100.0, 50.0, 33.33, 50.0, 83.33, 50.0, 100.0, 83.33, 66.67, 83.33, 66.67, 66.67, 100.0]%	[100.0, 98.81, 95.24, 98.81, 97.62, 97.62, 97.62, 97.62, 98.81, 98.81, 96.43, 100.0, 100.0, 97.62, 97.62]%	[100.0, 85.71, 60.0, 75.0, 50.0, 60.0, 71.43, 60.0, 85.71, 83.33, 57.14, 100.0, 100.0, 66.67, 75.0]%	[98.82, 100.0, 100.0, 96.51, 95.35, 96.47, 98.8, 96.47, 100.0, 98.81, 97.59, 98.82, 97.67, 97.62, 100.0]%	||	73.65%	74.44%	98.17%	75.33%	98.2%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  1  3  0  1  1  0  0  0  0  0  0  0  0  50.0%		4
  0  0  2  0  2  0  1  0  0  0  0  0  0  1  0  33.33%		5
  0  0  0  0  1  3  0  0  1  0  0  0  0  1  0  50.0%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  3  0  0  2  0  0  0  1  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  1  0  0  0  0  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  1  0  0  0  0  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  1  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 53.82%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	74.44%	96.59%	72.62%	[93.33, 94.44, 97.78, 98.89, 98.89, 95.56, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 96.67, 96.67]%	[40.0, 61.54, 80.0, 90.91, 90.91, 60.0, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 80.0, 72.73]%	[33.33, 66.67, 66.67, 83.33, 83.33, 50.0, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 96.43, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 75.0, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 66.67, 80.0]%	[95.35, 97.59, 97.67, 98.82, 98.82, 96.51, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	73.96%	74.44%	98.17%	76.74%	98.2%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  3  0  0  1  0  0  0  0  2  0  50.0%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[96.67, 94.44, 100.0, 96.67, 97.78, 95.56, 96.67, 93.33, 97.78, 95.56, 95.56, 94.44, 97.78, 97.78, 94.44]%	[66.67, 61.54, 100.0, 72.73, 83.33, 60.0, 80.0, 50.0, 83.33, 71.43, 71.43, 54.55, 83.33, 85.71, 44.44]%	[50.0, 66.67, 100.0, 66.67, 83.33, 50.0, 100.0, 50.0, 83.33, 83.33, 83.33, 50.0, 83.33, 100.0, 33.33]%	[100.0, 96.43, 100.0, 98.81, 98.81, 98.81, 96.43, 96.43, 98.81, 96.43, 96.43, 97.62, 98.81, 97.62, 98.81]%	[100.0, 57.14, 100.0, 80.0, 83.33, 75.0, 66.67, 50.0, 83.33, 62.5, 62.5, 60.0, 83.33, 75.0, 66.67]%	[96.55, 97.59, 100.0, 97.65, 98.81, 96.51, 100.0, 96.43, 98.81, 98.78, 98.78, 96.47, 98.81, 100.0, 95.4]%	||	71.23%	72.22%	98.02%	73.7%	98.04%	
  3  2  0  0  0  0  0  0  0  0  0  0  0  1  0  50.0%		1
  0  4  0  0  0  0  2  0  0  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  0  0  0  0  0  1  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  1  3  0  0  1  0  0  0  0  1  0  50.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  3  0  0  3  0  0  0  0  50.0%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  2  0  3  0  0  1  50.0%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  1  0  1  0  0  0  2  0  0  0  0  0  0  2  33.33%		15
Forest OOB Error: 53.81%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	74.44%	96.59%	72.62%	[93.33, 94.44, 97.78, 98.89, 98.89, 95.56, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 96.67, 96.67]%	[40.0, 61.54, 80.0, 90.91, 90.91, 60.0, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 80.0, 72.73]%	[33.33, 66.67, 66.67, 83.33, 83.33, 50.0, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 96.43, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 75.0, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 66.67, 80.0]%	[95.35, 97.59, 97.67, 98.82, 98.82, 96.51, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	73.96%	74.44%	98.17%	76.74%	98.2%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  3  0  0  1  0  0  0  0  2  0  50.0%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	67.78%	95.7%	65.48%	[95.56, 97.78, 96.67, 95.56, 98.89, 96.67, 95.56, 95.56, 95.56, 92.22, 95.56, 94.44, 95.56, 94.44, 95.56]%	[66.67, 85.71, 66.67, 66.67, 90.91, 76.92, 50.0, 71.43, 71.43, 53.33, 71.43, 54.55, 60.0, 54.55, 66.67]%	[66.67, 100.0, 50.0, 66.67, 83.33, 83.33, 33.33, 83.33, 83.33, 66.67, 83.33, 50.0, 50.0, 50.0, 66.67]%	[97.62, 97.62, 100.0, 97.62, 100.0, 97.62, 100.0, 96.43, 96.43, 94.05, 96.43, 97.62, 98.81, 97.62, 97.62]%	[66.67, 75.0, 100.0, 66.67, 100.0, 71.43, 100.0, 62.5, 62.5, 44.44, 62.5, 60.0, 75.0, 60.0, 66.67]%	[97.62, 100.0, 96.55, 97.62, 98.82, 98.8, 95.45, 98.78, 98.78, 97.53, 98.78, 96.47, 96.51, 96.47, 97.62]%	||	67.13%	67.78%	97.7%	71.56%	97.72%	
  4  1  0  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  3  1  0  0  0  0  0  0  0  0  0  2  0  50.0%		3
  0  0  0  4  0  1  0  0  1  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  2  0  0  0  0  0  2  0  1  1  0  0  0  0  0  33.33%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  4  0  2  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  2  0  3  0  0  1  50.0%		12
  0  0  0  0  0  0  0  1  0  0  2  0  3  0  0  50.0%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  3  1  50.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  1  0  4  66.67%		15
Forest OOB Error: 54.51%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	74.44%	96.59%	72.62%	[93.33, 94.44, 97.78, 98.89, 98.89, 95.56, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 96.67, 96.67]%	[40.0, 61.54, 80.0, 90.91, 90.91, 60.0, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 80.0, 72.73]%	[33.33, 66.67, 66.67, 83.33, 83.33, 50.0, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 96.43, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 75.0, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 66.67, 80.0]%	[95.35, 97.59, 97.67, 98.82, 98.82, 96.51, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	73.96%	74.44%	98.17%	76.74%	98.2%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  3  0  0  1  0  0  0  0  2  0  50.0%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[97.78, 100.0, 97.78, 96.67, 96.67, 97.78, 94.44, 98.89, 96.67, 91.11, 97.78, 94.44, 97.78, 98.89, 96.67]%	[83.33, 100.0, 83.33, 76.92, 66.67, 80.0, 61.54, 90.91, 80.0, 55.56, 85.71, 54.55, 80.0, 90.91, 66.67]%	[83.33, 100.0, 83.33, 83.33, 50.0, 66.67, 66.67, 83.33, 100.0, 83.33, 100.0, 50.0, 66.67, 83.33, 50.0]%	[98.81, 100.0, 98.81, 97.62, 100.0, 100.0, 96.43, 100.0, 96.43, 91.67, 97.62, 97.62, 100.0, 100.0, 100.0]%	[83.33, 100.0, 83.33, 71.43, 100.0, 100.0, 57.14, 100.0, 66.67, 41.67, 75.0, 60.0, 100.0, 100.0, 100.0]%	[98.81, 100.0, 98.81, 98.8, 96.55, 97.67, 97.59, 98.82, 100.0, 98.72, 100.0, 96.47, 97.67, 98.82, 96.55]%	||	77.07%	76.67%	98.33%	82.57%	98.35%	
  5  0  0  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  3  0  0  0  0  3  0  0  0  0  0  50.0%		5
  0  0  0  1  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  4  0  0  0  0  2  0  0  0  66.67%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  1  0  0  2  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  1  0  0  0  0  0  0  0  1  1  0  0  0  0  3  50.0%		15
Forest OOB Error: 50.2%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	75.56%	96.74%	73.81%	[93.33, 94.44, 97.78, 98.89, 97.78, 97.78, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 97.78, 96.67]%	[40.0, 61.54, 80.0, 90.91, 80.0, 83.33, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 85.71, 72.73]%	[33.33, 66.67, 66.67, 83.33, 66.67, 83.33, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 97.62, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 83.33, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 75.0, 80.0]%	[95.35, 97.59, 97.67, 98.82, 97.67, 98.81, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	75.17%	75.56%	98.25%	77.85%	98.27%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[97.78, 96.67, 97.78, 97.78, 97.78, 97.78, 92.22, 94.44, 96.67, 93.33, 97.78, 93.33, 100.0, 97.78, 95.56]%	[80.0, 72.73, 83.33, 83.33, 80.0, 80.0, 58.82, 44.44, 80.0, 50.0, 85.71, 50.0, 100.0, 83.33, 66.67]%	[66.67, 66.67, 83.33, 83.33, 66.67, 66.67, 83.33, 33.33, 100.0, 50.0, 100.0, 50.0, 100.0, 83.33, 66.67]%	[100.0, 98.81, 98.81, 98.81, 100.0, 100.0, 92.86, 98.81, 96.43, 96.43, 97.62, 96.43, 100.0, 98.81, 97.62]%	[100.0, 80.0, 83.33, 83.33, 100.0, 100.0, 45.45, 66.67, 66.67, 50.0, 75.0, 50.0, 100.0, 83.33, 66.67]%	[97.67, 97.65, 98.81, 98.81, 97.67, 97.67, 98.73, 95.4, 100.0, 96.43, 100.0, 96.43, 100.0, 98.81, 97.62]%	||	73.23%	73.33%	98.1%	76.7%	98.11%	
  4  1  1  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  4  0  0  0  0  2  0  0  0  0  0  0  0  0  66.67%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  1  4  0  0  0  0  0  0  1  0  0  0  66.67%		5
  0  0  0  0  0  4  1  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  1  2  0  0  2  0  0  0  1  33.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  1  3  0  2  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  2  0  3  0  0  1  50.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  1  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 55.51%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	75.56%	96.74%	73.81%	[93.33, 94.44, 97.78, 98.89, 97.78, 97.78, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 97.78, 96.67]%	[40.0, 61.54, 80.0, 90.91, 80.0, 83.33, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 85.71, 72.73]%	[33.33, 66.67, 66.67, 83.33, 66.67, 83.33, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 97.62, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 83.33, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 75.0, 80.0]%	[95.35, 97.59, 97.67, 98.82, 97.67, 98.81, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	75.17%	75.56%	98.25%	77.85%	98.27%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[96.67, 96.67, 98.89, 97.78, 98.89, 100.0, 91.11, 95.56, 100.0, 95.56, 94.44, 95.56, 96.67, 98.89, 96.67]%	[72.73, 76.92, 90.91, 83.33, 90.91, 100.0, 42.86, 60.0, 100.0, 71.43, 70.59, 60.0, 72.73, 90.91, 72.73]%	[66.67, 83.33, 83.33, 83.33, 83.33, 100.0, 50.0, 50.0, 100.0, 83.33, 100.0, 50.0, 66.67, 83.33, 66.67]%	[98.81, 97.62, 100.0, 98.81, 100.0, 100.0, 94.05, 98.81, 100.0, 96.43, 94.05, 98.81, 98.81, 100.0, 98.81]%	[80.0, 71.43, 100.0, 83.33, 100.0, 100.0, 37.5, 75.0, 100.0, 62.5, 54.55, 75.0, 80.0, 100.0, 80.0]%	[97.65, 98.8, 98.82, 98.81, 98.82, 100.0, 96.34, 96.51, 100.0, 98.78, 100.0, 96.51, 97.65, 98.82, 97.65]%	||	77.07%	76.67%	98.33%	79.95%	98.34%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  1  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  3  0  0  2  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  3  0  0  2  0  0  0  1  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  2  0  0  1  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  1  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  1  0  0  0  4  66.67%		15
Forest OOB Error: 55.34%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	75.56%	96.74%	73.81%	[93.33, 94.44, 97.78, 98.89, 97.78, 97.78, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 97.78, 96.67]%	[40.0, 61.54, 80.0, 90.91, 80.0, 83.33, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 85.71, 72.73]%	[33.33, 66.67, 66.67, 83.33, 66.67, 83.33, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 97.62, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 83.33, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 75.0, 80.0]%	[95.35, 97.59, 97.67, 98.82, 97.67, 98.81, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	75.17%	75.56%	98.25%	77.85%	98.27%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[96.67, 97.78, 98.89, 94.44, 97.78, 96.67, 94.44, 96.67, 98.89, 98.89, 98.89, 96.67, 96.67, 96.67, 97.78]%	[72.73, 83.33, 92.31, 61.54, 80.0, 76.92, 54.55, 72.73, 92.31, 92.31, 90.91, 76.92, 80.0, 72.73, 80.0]%	[66.67, 83.33, 100.0, 66.67, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 83.33, 83.33, 100.0, 66.67, 66.67]%	[98.81, 98.81, 98.81, 96.43, 100.0, 97.62, 97.62, 98.81, 98.81, 98.81, 100.0, 97.62, 96.43, 98.81, 100.0]%	[80.0, 83.33, 85.71, 57.14, 100.0, 71.43, 60.0, 80.0, 85.71, 85.71, 100.0, 71.43, 66.67, 80.0, 100.0]%	[97.65, 98.81, 100.0, 97.59, 97.67, 98.8, 96.47, 97.65, 100.0, 100.0, 98.82, 98.8, 100.0, 97.65, 97.67]%	||	78.62%	78.89%	98.49%	80.48%	98.5%	
  4  0  0  0  0  0  0  0  0  1  0  1  0  0  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  1  0  4  0  1  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  1  4  0  0  0  0  0  0  1  0  0  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  1  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  1  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  1  0  0  0  0  0  0  4  0  66.67%		14
  0  0  1  1  0  0  0  0  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 52.05%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	75.56%	96.74%	73.81%	[93.33, 94.44, 97.78, 98.89, 97.78, 97.78, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 97.78, 96.67]%	[40.0, 61.54, 80.0, 90.91, 80.0, 83.33, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 85.71, 72.73]%	[33.33, 66.67, 66.67, 83.33, 66.67, 83.33, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 97.62, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 83.33, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 75.0, 80.0]%	[95.35, 97.59, 97.67, 98.82, 97.67, 98.81, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	75.17%	75.56%	98.25%	77.85%	98.27%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	65.56%	95.41%	63.1%	[97.78, 94.44, 94.44, 96.67, 93.33, 93.33, 90.0, 95.56, 95.56, 96.67, 97.78, 96.67, 98.89, 94.44, 95.56]%	[80.0, 61.54, 61.54, 66.67, 50.0, 62.5, 47.06, 71.43, 75.0, 76.92, 80.0, 66.67, 90.91, 28.57, 60.0]%	[66.67, 66.67, 66.67, 50.0, 50.0, 83.33, 66.67, 83.33, 100.0, 83.33, 66.67, 50.0, 83.33, 16.67, 50.0]%	[100.0, 96.43, 96.43, 100.0, 96.43, 94.05, 91.67, 96.43, 95.24, 97.62, 100.0, 100.0, 100.0, 100.0, 98.81]%	[100.0, 57.14, 57.14, 100.0, 50.0, 50.0, 36.36, 62.5, 60.0, 71.43, 100.0, 100.0, 100.0, 100.0, 75.0]%	[97.67, 97.59, 97.59, 96.55, 96.43, 98.75, 97.47, 98.78, 100.0, 98.8, 97.67, 96.55, 98.82, 94.38, 96.51]%	||	65.25%	65.56%	97.54%	74.64%	97.57%	
  4  1  0  0  0  0  0  0  0  0  0  0  0  0  1  66.67%		1
  0  4  0  0  0  1  1  0  0  0  0  0  0  0  0  66.67%		2
  0  0  4  0  0  0  0  0  1  1  0  0  0  0  0  66.67%		3
  0  0  0  3  1  1  1  0  0  0  0  0  0  0  0  50.0%		4
  0  0  1  0  3  0  2  0  0  0  0  0  0  0  0  50.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  2  0  4  0  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  1  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  1  0  0  0  0  0  0  5  0  0  0  0  0  83.33%		10
  0  0  1  0  0  0  0  1  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  2  0  0  1  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  2  0  0  0  3  0  0  0  0  0  0  0  1  0  16.67%		14
  0  0  0  0  0  0  0  1  2  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 56.76%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	75.56%	96.74%	73.81%	[93.33, 94.44, 97.78, 98.89, 97.78, 97.78, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 97.78, 96.67]%	[40.0, 61.54, 80.0, 90.91, 80.0, 83.33, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 85.71, 72.73]%	[33.33, 66.67, 66.67, 83.33, 66.67, 83.33, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 97.62, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 83.33, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 75.0, 80.0]%	[95.35, 97.59, 97.67, 98.82, 97.67, 98.81, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	75.17%	75.56%	98.25%	77.85%	98.27%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[93.33, 97.78, 96.67, 96.67, 96.67, 93.33, 94.44, 96.67, 98.89, 95.56, 96.67, 96.67, 98.89, 96.67, 95.56]%	[50.0, 83.33, 80.0, 72.73, 76.92, 50.0, 61.54, 76.92, 90.91, 50.0, 72.73, 76.92, 92.31, 80.0, 50.0]%	[50.0, 83.33, 100.0, 66.67, 83.33, 50.0, 66.67, 83.33, 83.33, 33.33, 66.67, 83.33, 100.0, 100.0, 33.33]%	[96.43, 98.81, 96.43, 98.81, 97.62, 96.43, 96.43, 97.62, 100.0, 100.0, 98.81, 97.62, 98.81, 96.43, 100.0]%	[50.0, 83.33, 66.67, 80.0, 71.43, 50.0, 57.14, 71.43, 100.0, 100.0, 80.0, 71.43, 85.71, 66.67, 100.0]%	[96.43, 98.81, 100.0, 97.65, 98.8, 96.43, 97.59, 98.8, 98.82, 95.45, 97.65, 98.8, 100.0, 100.0, 95.45]%	||	70.95%	72.22%	98.02%	75.59%	98.04%	
  3  1  0  0  0  1  0  0  0  0  0  0  0  1  0  50.0%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  1  1  3  0  0  0  0  0  0  0  1  0  50.0%		6
  0  0  0  0  0  1  4  0  0  0  1  0  0  0  0  66.67%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  2  0  0  0  0  0  0  0  0  2  0  2  0  0  0  33.33%		10
  0  0  1  0  0  0  0  0  0  0  4  0  1  0  0  66.67%		11
  1  0  0  0  0  0  0  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  1  0  0  2  0  0  0  0  0  1  2  33.33%		15
Forest OOB Error: 49.02%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	75.56%	96.74%	73.81%	[93.33, 94.44, 97.78, 98.89, 97.78, 97.78, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 97.78, 96.67]%	[40.0, 61.54, 80.0, 90.91, 80.0, 83.33, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 85.71, 72.73]%	[33.33, 66.67, 66.67, 83.33, 66.67, 83.33, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 97.62, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 83.33, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 75.0, 80.0]%	[95.35, 97.59, 97.67, 98.82, 97.67, 98.81, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	75.17%	75.56%	98.25%	77.85%	98.27%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[96.67, 97.78, 98.89, 97.78, 98.89, 100.0, 97.78, 93.33, 96.67, 93.33, 96.67, 97.78, 98.89, 98.89, 94.44]%	[76.92, 83.33, 90.91, 83.33, 90.91, 100.0, 83.33, 50.0, 80.0, 57.14, 72.73, 80.0, 90.91, 92.31, 54.55]%	[83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33, 50.0, 100.0, 66.67, 66.67, 66.67, 83.33, 100.0, 50.0]%	[97.62, 98.81, 100.0, 98.81, 100.0, 100.0, 98.81, 96.43, 96.43, 95.24, 98.81, 100.0, 100.0, 98.81, 97.62]%	[71.43, 83.33, 100.0, 83.33, 100.0, 100.0, 83.33, 50.0, 66.67, 50.0, 80.0, 100.0, 100.0, 85.71, 60.0]%	[98.8, 98.81, 98.82, 98.81, 98.82, 100.0, 98.81, 96.43, 100.0, 97.56, 97.65, 97.67, 98.82, 100.0, 96.47]%	||	79.09%	78.89%	98.49%	80.92%	98.5%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  0  0  0  0  0  0  0  1  0  83.33%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  3  2  0  0  0  0  0  1  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  2  0  0  0  0  0  0  0  0  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  1  0  0  0  1  0  1  0  0  0  0  3  50.0%		15
Forest OOB Error: 52.9%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	76.67%	96.89%	75.0%	[93.33, 94.44, 97.78, 98.89, 98.89, 97.78, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 98.89, 96.67]%	[40.0, 61.54, 80.0, 90.91, 90.91, 83.33, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 92.31, 72.73]%	[33.33, 66.67, 66.67, 83.33, 83.33, 83.33, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 98.81, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 83.33, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 85.71, 80.0]%	[95.35, 97.59, 97.67, 98.82, 98.82, 98.81, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	76.33%	76.67%	98.33%	78.56%	98.35%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[97.78, 100.0, 100.0, 97.78, 98.89, 95.56, 95.56, 95.56, 98.89, 95.56, 93.33, 97.78, 97.78, 97.78, 97.78]%	[80.0, 100.0, 100.0, 80.0, 90.91, 71.43, 66.67, 60.0, 92.31, 75.0, 66.67, 80.0, 80.0, 83.33, 80.0]%	[66.67, 100.0, 100.0, 66.67, 83.33, 83.33, 66.67, 50.0, 100.0, 100.0, 100.0, 66.67, 66.67, 83.33, 66.67]%	[100.0, 100.0, 100.0, 100.0, 100.0, 96.43, 97.62, 98.81, 98.81, 95.24, 92.86, 100.0, 100.0, 98.81, 100.0]%	[100.0, 100.0, 100.0, 100.0, 100.0, 62.5, 66.67, 75.0, 85.71, 60.0, 50.0, 100.0, 100.0, 83.33, 100.0]%	[97.67, 100.0, 100.0, 97.67, 98.82, 98.78, 97.62, 96.51, 100.0, 100.0, 100.0, 97.67, 97.67, 98.81, 97.67]%	||	80.42%	80.0%	98.57%	85.55%	98.59%	
  4  0  0  0  0  1  0  0  0  1  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  4  0  0  1  0  0  0  1  0  66.67%		7
  0  0  0  0  0  0  0  3  0  0  3  0  0  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  1  0  0  0  4  66.67%		15
Forest OOB Error: 52.47%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	76.67%	96.89%	75.0%	[93.33, 94.44, 97.78, 98.89, 98.89, 97.78, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 98.89, 96.67]%	[40.0, 61.54, 80.0, 90.91, 90.91, 83.33, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 92.31, 72.73]%	[33.33, 66.67, 66.67, 83.33, 83.33, 83.33, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 98.81, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 83.33, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 85.71, 80.0]%	[95.35, 97.59, 97.67, 98.82, 98.82, 98.81, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	76.33%	76.67%	98.33%	78.56%	98.35%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	66.67%	95.56%	64.29%	[95.56, 95.56, 96.67, 96.67, 97.78, 94.44, 94.44, 94.44, 95.56, 93.33, 93.33, 95.56, 97.78, 96.67, 95.56]%	[60.0, 66.67, 72.73, 72.73, 80.0, 66.67, 54.55, 44.44, 75.0, 62.5, 66.67, 60.0, 80.0, 76.92, 50.0]%	[50.0, 66.67, 66.67, 66.67, 66.67, 83.33, 50.0, 33.33, 100.0, 83.33, 100.0, 50.0, 66.67, 83.33, 33.33]%	[98.81, 97.62, 98.81, 98.81, 100.0, 95.24, 97.62, 98.81, 95.24, 94.05, 92.86, 98.81, 100.0, 97.62, 100.0]%	[75.0, 66.67, 80.0, 80.0, 100.0, 55.56, 60.0, 66.67, 60.0, 50.0, 50.0, 75.0, 100.0, 71.43, 100.0]%	[96.51, 97.62, 97.65, 97.65, 97.67, 98.77, 96.47, 95.4, 100.0, 98.75, 100.0, 96.51, 97.67, 98.8, 95.45]%	||	65.92%	66.67%	97.62%	72.69%	97.66%	
  3  1  0  0  0  1  0  0  0  1  0  0  0  0  0  50.0%		1
  0  4  0  0  0  0  1  0  1  0  0  0  0  0  0  66.67%		2
  0  0  4  0  0  0  0  0  0  0  0  0  0  2  0  66.67%		3
  0  1  0  4  0  1  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  1  0  4  0  0  0  0  1  0  0  0  0  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  3  0  1  1  0  0  0  0  0  50.0%		7
  0  0  0  1  0  0  0  2  0  0  3  0  0  0  0  33.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  1  0  0  0  0  0  1  0  0  1  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  1  1  1  0  0  0  2  33.33%		15
Forest OOB Error: 53.36%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	76.67%	96.89%	75.0%	[93.33, 94.44, 97.78, 98.89, 98.89, 97.78, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 98.89, 96.67]%	[40.0, 61.54, 80.0, 90.91, 90.91, 83.33, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 92.31, 72.73]%	[33.33, 66.67, 66.67, 83.33, 83.33, 83.33, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 98.81, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 83.33, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 85.71, 80.0]%	[95.35, 97.59, 97.67, 98.82, 98.82, 98.81, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	76.33%	76.67%	98.33%	78.56%	98.35%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[95.56, 96.67, 98.89, 94.44, 100.0, 97.78, 96.67, 92.22, 98.89, 95.56, 93.33, 96.67, 97.78, 97.78, 98.89]%	[50.0, 80.0, 92.31, 61.54, 100.0, 83.33, 66.67, 46.15, 92.31, 60.0, 40.0, 76.92, 85.71, 85.71, 90.91]%	[33.33, 100.0, 100.0, 66.67, 100.0, 83.33, 50.0, 50.0, 100.0, 50.0, 33.33, 83.33, 100.0, 100.0, 83.33]%	[100.0, 96.43, 98.81, 96.43, 100.0, 98.81, 100.0, 95.24, 98.81, 98.81, 97.62, 97.62, 97.62, 97.62, 100.0]%	[100.0, 66.67, 85.71, 57.14, 100.0, 83.33, 100.0, 42.86, 85.71, 75.0, 50.0, 71.43, 75.0, 75.0, 100.0]%	[95.45, 100.0, 100.0, 97.59, 100.0, 98.81, 96.55, 96.39, 100.0, 96.51, 95.35, 98.8, 100.0, 100.0, 98.82]%	||	74.1%	75.56%	98.25%	77.86%	98.28%	
  2  1  1  1  0  0  0  0  0  1  0  0  0  0  0  33.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  0  0  1  0  0  0  0  0  0  66.67%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  1  0  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  3  2  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  3  0  0  2  0  1  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  3  0  2  0  1  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  2  0  1  1  0  33.33%		11
  0  0  0  1  0  0  0  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 50.39%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	76.67%	96.89%	75.0%	[93.33, 94.44, 97.78, 98.89, 98.89, 97.78, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 98.89, 96.67]%	[40.0, 61.54, 80.0, 90.91, 90.91, 83.33, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 92.31, 72.73]%	[33.33, 66.67, 66.67, 83.33, 83.33, 83.33, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 98.81, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 83.33, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 85.71, 80.0]%	[95.35, 97.59, 97.67, 98.82, 98.82, 98.81, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	76.33%	76.67%	98.33%	78.56%	98.35%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	70.0%	96.0%	67.86%	[96.67, 95.56, 97.78, 96.67, 98.89, 95.56, 95.56, 96.67, 95.56, 91.11, 97.78, 92.22, 97.78, 96.67, 95.56]%	[66.67, 66.67, 85.71, 72.73, 90.91, 66.67, 60.0, 80.0, 71.43, 42.86, 83.33, 46.15, 83.33, 72.73, 60.0]%	[50.0, 66.67, 100.0, 66.67, 83.33, 66.67, 50.0, 100.0, 83.33, 50.0, 83.33, 50.0, 83.33, 66.67, 50.0]%	[100.0, 97.62, 97.62, 98.81, 100.0, 97.62, 98.81, 96.43, 96.43, 94.05, 98.81, 95.24, 98.81, 98.81, 98.81]%	[100.0, 66.67, 75.0, 80.0, 100.0, 66.67, 75.0, 66.67, 62.5, 37.5, 83.33, 42.86, 83.33, 80.0, 75.0]%	[96.55, 97.62, 100.0, 97.65, 98.82, 97.62, 96.51, 100.0, 98.78, 96.34, 98.81, 96.39, 98.81, 97.65, 96.51]%	||	69.95%	70.0%	97.86%	72.97%	97.87%	
  3  1  1  0  0  0  0  0  0  0  0  0  0  0  1  50.0%		1
  0  4  0  0  0  0  0  0  2  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  0  0  1  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  0  1  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  1  0  1  0  1  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  3  0  3  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  2  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  1  0  0  0  0  2  0  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 55.46%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	76.67%	96.89%	75.0%	[93.33, 94.44, 97.78, 98.89, 98.89, 97.78, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 98.89, 96.67]%	[40.0, 61.54, 80.0, 90.91, 90.91, 83.33, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 92.31, 72.73]%	[33.33, 66.67, 66.67, 83.33, 83.33, 83.33, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 98.81, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 83.33, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 85.71, 80.0]%	[95.35, 97.59, 97.67, 98.82, 98.82, 98.81, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	76.33%	76.67%	98.33%	78.56%	98.35%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[98.89, 97.78, 98.89, 96.67, 97.78, 97.78, 94.44, 93.33, 96.67, 94.44, 94.44, 98.89, 98.89, 97.78, 94.44]%	[90.91, 85.71, 90.91, 66.67, 80.0, 83.33, 66.67, 40.0, 80.0, 61.54, 61.54, 90.91, 90.91, 83.33, 61.54]%	[83.33, 100.0, 83.33, 50.0, 66.67, 83.33, 83.33, 33.33, 100.0, 66.67, 66.67, 83.33, 83.33, 83.33, 66.67]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 95.24, 97.62, 96.43, 96.43, 96.43, 100.0, 100.0, 98.81, 96.43]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 55.56, 50.0, 66.67, 57.14, 57.14, 100.0, 100.0, 83.33, 57.14]%	[98.82, 100.0, 98.82, 96.55, 97.67, 98.81, 98.77, 95.35, 100.0, 97.59, 97.59, 98.82, 98.82, 98.81, 97.59]%	||	75.6%	75.56%	98.25%	79.02%	98.27%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  3  0  1  1  0  0  0  0  0  0  1  0  50.0%		4
  0  0  0  0  4  0  1  0  0  0  1  0  0  0  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  1  0  0  0  0  0  2  0  0  1  0  0  0  2  33.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  2  0  0  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  5  1  83.33%		14
  0  0  0  0  0  0  0  0  1  1  0  0  0  0  4  66.67%		15
Forest OOB Error: 54.65%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	76.67%	96.89%	75.0%	[93.33, 94.44, 97.78, 98.89, 98.89, 97.78, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 98.89, 96.67]%	[40.0, 61.54, 80.0, 90.91, 90.91, 83.33, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 92.31, 72.73]%	[33.33, 66.67, 66.67, 83.33, 83.33, 83.33, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 98.81, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 83.33, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 85.71, 80.0]%	[95.35, 97.59, 97.67, 98.82, 98.82, 98.81, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	76.33%	76.67%	98.33%	78.56%	98.35%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[96.67, 97.78, 100.0, 93.33, 98.89, 94.44, 95.56, 95.56, 97.78, 95.56, 95.56, 96.67, 97.78, 95.56, 95.56]%	[66.67, 85.71, 100.0, 57.14, 90.91, 61.54, 66.67, 66.67, 83.33, 71.43, 71.43, 72.73, 83.33, 60.0, 60.0]%	[50.0, 100.0, 100.0, 66.67, 83.33, 66.67, 66.67, 66.67, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 50.0]%	[100.0, 97.62, 100.0, 95.24, 100.0, 96.43, 97.62, 97.62, 98.81, 96.43, 96.43, 98.81, 98.81, 98.81, 98.81]%	[100.0, 75.0, 100.0, 50.0, 100.0, 57.14, 66.67, 66.67, 83.33, 62.5, 62.5, 80.0, 83.33, 75.0, 75.0]%	[96.55, 100.0, 100.0, 97.56, 98.82, 97.59, 97.62, 97.62, 98.81, 98.78, 98.78, 97.65, 98.81, 96.51, 96.51]%	||	73.17%	73.33%	98.1%	75.81%	98.11%	
  3  1  0  1  0  0  0  0  0  0  0  0  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  1  0  4  0  0  0  1  0  0  0  0  0  66.67%		6
  0  0  0  0  0  1  4  0  1  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  3  1  50.0%		14
  0  0  0  1  0  0  0  2  0  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 61.48%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	74.44%	96.59%	72.62%	[93.33, 94.44, 97.78, 98.89, 98.89, 95.56, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 96.67, 96.67]%	[40.0, 61.54, 80.0, 90.91, 90.91, 60.0, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 80.0, 72.73]%	[33.33, 66.67, 66.67, 83.33, 83.33, 50.0, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 96.43, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 75.0, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 66.67, 80.0]%	[95.35, 97.59, 97.67, 98.82, 98.82, 96.51, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	73.96%	74.44%	98.17%	76.74%	98.2%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  3  0  0  1  0  0  0  0  2  0  50.0%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	74.44%	96.59%	72.62%	[97.78, 98.89, 94.44, 98.89, 98.89, 96.67, 94.44, 92.22, 97.78, 94.44, 95.56, 94.44, 96.67, 100.0, 97.78]%	[80.0, 90.91, 61.54, 90.91, 90.91, 72.73, 66.67, 46.15, 85.71, 61.54, 75.0, 44.44, 72.73, 100.0, 80.0]%	[66.67, 83.33, 66.67, 83.33, 83.33, 66.67, 83.33, 50.0, 100.0, 66.67, 100.0, 33.33, 66.67, 100.0, 66.67]%	[100.0, 100.0, 96.43, 100.0, 100.0, 98.81, 95.24, 95.24, 97.62, 96.43, 95.24, 98.81, 98.81, 100.0, 100.0]%	[100.0, 100.0, 57.14, 100.0, 100.0, 80.0, 55.56, 42.86, 75.0, 57.14, 60.0, 66.67, 80.0, 100.0, 100.0]%	[97.67, 98.82, 97.59, 98.82, 98.82, 97.65, 98.77, 96.39, 100.0, 97.59, 100.0, 95.4, 97.65, 100.0, 97.67]%	||	74.62%	74.44%	98.17%	78.29%	98.19%	
  4  0  0  0  0  0  1  0  0  1  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  4  0  0  0  0  1  1  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  1  0  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  3  0  0  2  0  1  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  1  0  0  0  0  0  0  4  0  1  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  2  0  0  2  0  2  0  0  0  33.33%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  2  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 58.78%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	74.44%	96.59%	72.62%	[93.33, 94.44, 97.78, 98.89, 98.89, 95.56, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 96.67, 96.67]%	[40.0, 61.54, 80.0, 90.91, 90.91, 60.0, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 80.0, 72.73]%	[33.33, 66.67, 66.67, 83.33, 83.33, 50.0, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 96.43, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 75.0, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 66.67, 80.0]%	[95.35, 97.59, 97.67, 98.82, 98.82, 96.51, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	73.96%	74.44%	98.17%	76.74%	98.2%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  3  0  0  1  0  0  0  0  2  0  50.0%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	68.89%	95.85%	66.67%	[93.33, 96.67, 97.78, 95.56, 96.67, 95.56, 94.44, 96.67, 97.78, 93.33, 96.67, 95.56, 95.56, 95.56, 96.67]%	[40.0, 72.73, 83.33, 66.67, 76.92, 66.67, 61.54, 72.73, 85.71, 40.0, 72.73, 71.43, 75.0, 66.67, 66.67]%	[33.33, 66.67, 83.33, 66.67, 83.33, 66.67, 66.67, 66.67, 100.0, 33.33, 66.67, 83.33, 100.0, 66.67, 50.0]%	[97.62, 98.81, 98.81, 97.62, 97.62, 97.62, 96.43, 98.81, 97.62, 97.62, 98.81, 96.43, 95.24, 97.62, 100.0]%	[50.0, 80.0, 83.33, 66.67, 71.43, 66.67, 57.14, 80.0, 75.0, 50.0, 80.0, 62.5, 60.0, 66.67, 100.0]%	[95.35, 97.65, 98.81, 97.62, 98.8, 97.62, 97.59, 97.65, 100.0, 95.35, 97.65, 98.78, 100.0, 97.62, 96.55]%	||	67.92%	68.89%	97.78%	69.96%	97.8%	
  2  1  1  0  0  0  1  0  0  0  0  0  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  1  4  0  0  0  0  0  1  0  0  0  66.67%		6
  1  0  0  0  0  0  4  0  0  0  0  1  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  0  0  1  0  1  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  2  0  0  0  0  1  2  0  1  0  0  0  33.33%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  1  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  1  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  1  1  0  0  0  0  1  0  3  50.0%		15
Forest OOB Error: 56.75%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	74.44%	96.59%	72.62%	[93.33, 94.44, 97.78, 98.89, 98.89, 95.56, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 96.67, 96.67]%	[40.0, 61.54, 80.0, 90.91, 90.91, 60.0, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 80.0, 72.73]%	[33.33, 66.67, 66.67, 83.33, 83.33, 50.0, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 96.43, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 75.0, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 66.67, 80.0]%	[95.35, 97.59, 97.67, 98.82, 98.82, 96.51, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	73.96%	74.44%	98.17%	76.74%	98.2%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  3  0  0  1  0  0  0  0  2  0  50.0%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	56.67%	94.22%	53.57%	[96.67, 94.44, 100.0, 94.44, 96.67, 95.56, 94.44, 88.89, 97.78, 93.33, 88.89, 90.0, 95.56, 93.33, 93.33]%	[72.73, 66.67, 100.0, 44.44, 76.92, 66.67, 54.55, 44.44, 83.33, 40.0, 28.57, 40.0, 50.0, 40.0, 40.0]%	[66.67, 83.33, 100.0, 33.33, 83.33, 66.67, 50.0, 66.67, 83.33, 33.33, 33.33, 50.0, 33.33, 33.33, 33.33]%	[98.81, 95.24, 100.0, 98.81, 97.62, 97.62, 97.62, 90.48, 98.81, 97.62, 92.86, 92.86, 100.0, 97.62, 97.62]%	[80.0, 55.56, 100.0, 66.67, 71.43, 66.67, 60.0, 33.33, 83.33, 50.0, 25.0, 33.33, 100.0, 50.0, 50.0]%	[97.65, 98.77, 100.0, 95.4, 98.8, 97.62, 96.47, 97.44, 98.81, 95.35, 95.12, 96.3, 95.45, 95.35, 95.35]%	||	56.55%	56.67%	96.9%	61.69%	96.92%	
  4  1  0  0  0  0  0  0  0  0  0  0  0  0  1  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  2  2  1  0  0  0  0  0  1  0  0  0  33.33%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  1  0  0  0  4  0  0  0  0  0  0  0  1  0  66.67%		6
  1  0  0  0  0  0  3  0  0  0  0  2  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  5  0  1  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  1  2  0  3  0  0  0  33.33%		10
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  33.33%		11
  0  0  0  0  0  0  0  0  0  2  0  3  0  0  1  50.0%		12
  0  0  0  0  0  0  0  2  0  0  2  0  2  0  0  33.33%		13
  0  2  0  1  0  1  0  0  0  0  0  0  0  2  0  33.33%		14
  0  0  0  0  0  0  0  2  0  0  1  0  0  1  2  33.33%		15
Forest OOB Error: 52.47%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	74.44%	96.59%	72.62%	[93.33, 94.44, 97.78, 98.89, 98.89, 95.56, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 96.67, 96.67]%	[40.0, 61.54, 80.0, 90.91, 90.91, 60.0, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 80.0, 72.73]%	[33.33, 66.67, 66.67, 83.33, 83.33, 50.0, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 96.43, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 75.0, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 66.67, 80.0]%	[95.35, 97.59, 97.67, 98.82, 98.82, 96.51, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	73.96%	74.44%	98.17%	76.74%	98.2%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  3  0  0  1  0  0  0  0  2  0  50.0%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[98.89, 96.67, 100.0, 96.67, 98.89, 96.67, 94.44, 94.44, 94.44, 93.33, 98.89, 96.67, 98.89, 97.78, 96.67]%	[90.91, 72.73, 100.0, 72.73, 90.91, 76.92, 66.67, 54.55, 70.59, 62.5, 90.91, 66.67, 92.31, 80.0, 66.67]%	[83.33, 66.67, 100.0, 66.67, 83.33, 83.33, 83.33, 50.0, 100.0, 83.33, 83.33, 50.0, 100.0, 66.67, 50.0]%	[100.0, 98.81, 100.0, 98.81, 100.0, 97.62, 95.24, 97.62, 94.05, 94.05, 100.0, 100.0, 98.81, 100.0, 100.0]%	[100.0, 80.0, 100.0, 80.0, 100.0, 71.43, 55.56, 60.0, 54.55, 50.0, 100.0, 100.0, 85.71, 100.0, 100.0]%	[98.82, 97.65, 100.0, 97.65, 98.82, 98.8, 98.77, 96.47, 100.0, 98.75, 98.82, 96.55, 100.0, 97.67, 96.55]%	||	77.0%	76.67%	98.33%	82.48%	98.35%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  4  0  0  0  0  2  0  0  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  1  0  0  0  3  1  0  0  0  1  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  1  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  2  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  1  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  1  2  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 52.33%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	74.44%	96.59%	72.62%	[93.33, 94.44, 97.78, 98.89, 98.89, 95.56, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 96.67, 96.67]%	[40.0, 61.54, 80.0, 90.91, 90.91, 60.0, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 80.0, 72.73]%	[33.33, 66.67, 66.67, 83.33, 83.33, 50.0, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 96.43, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 75.0, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 66.67, 80.0]%	[95.35, 97.59, 97.67, 98.82, 98.82, 96.51, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	73.96%	74.44%	98.17%	76.74%	98.2%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  3  0  0  1  0  0  0  0  2  0  50.0%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	74.44%	96.59%	72.62%	[97.78, 98.89, 100.0, 97.78, 96.67, 96.67, 91.11, 94.44, 97.78, 96.67, 94.44, 96.67, 96.67, 96.67, 96.67]%	[83.33, 90.91, 100.0, 80.0, 66.67, 72.73, 55.56, 54.55, 80.0, 76.92, 66.67, 72.73, 76.92, 80.0, 66.67]%	[83.33, 83.33, 100.0, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 83.33, 83.33, 66.67, 83.33, 100.0, 50.0]%	[98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 91.67, 97.62, 100.0, 97.62, 95.24, 98.81, 97.62, 96.43, 100.0]%	[83.33, 100.0, 100.0, 100.0, 100.0, 80.0, 41.67, 60.0, 100.0, 71.43, 55.56, 80.0, 71.43, 66.67, 100.0]%	[98.81, 98.82, 100.0, 97.67, 96.55, 97.65, 98.72, 96.47, 97.67, 98.8, 98.77, 97.65, 98.8, 100.0, 96.55]%	||	74.91%	74.44%	98.17%	80.67%	98.19%	
  5  0  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  3  0  0  0  0  1  0  0  0  2  0  50.0%		5
  0  0  0  0  0  4  2  0  0  0  0  0  0  0  0  66.67%		6
  1  0  0  0  0  0  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  3  0  0  3  0  0  0  0  50.0%		8
  0  0  0  0  0  0  2  0  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  1  0  66.67%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  1  0  1  0  3  50.0%		15
Forest OOB Error: 48.5%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	74.44%	96.59%	72.62%	[93.33, 94.44, 97.78, 98.89, 98.89, 95.56, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 96.67, 96.67]%	[40.0, 61.54, 80.0, 90.91, 90.91, 60.0, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 80.0, 72.73]%	[33.33, 66.67, 66.67, 83.33, 83.33, 50.0, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 96.43, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 75.0, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 66.67, 80.0]%	[95.35, 97.59, 97.67, 98.82, 98.82, 96.51, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	73.96%	74.44%	98.17%	76.74%	98.2%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  3  0  0  1  0  0  0  0  2  0  50.0%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[98.89, 97.78, 97.78, 92.22, 95.56, 94.44, 96.67, 94.44, 96.67, 94.44, 100.0, 96.67, 100.0, 98.89, 96.67]%	[90.91, 85.71, 83.33, 46.15, 50.0, 61.54, 76.92, 54.55, 80.0, 66.67, 100.0, 66.67, 100.0, 90.91, 72.73]%	[83.33, 100.0, 83.33, 50.0, 33.33, 66.67, 83.33, 50.0, 100.0, 83.33, 100.0, 50.0, 100.0, 83.33, 66.67]%	[100.0, 97.62, 98.81, 95.24, 100.0, 96.43, 97.62, 97.62, 96.43, 95.24, 100.0, 100.0, 100.0, 100.0, 98.81]%	[100.0, 75.0, 83.33, 42.86, 100.0, 57.14, 71.43, 60.0, 66.67, 55.56, 100.0, 100.0, 100.0, 100.0, 80.0]%	[98.82, 100.0, 98.81, 96.39, 95.45, 97.59, 98.8, 96.47, 100.0, 98.77, 100.0, 96.55, 100.0, 98.82, 97.65]%	||	75.07%	75.56%	98.25%	79.47%	98.27%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  3  0  2  0  0  1  0  0  0  0  0  0  50.0%		4
  0  0  1  0  2  1  1  0  0  1  0  0  0  0  0  33.33%		5
  0  1  0  1  0  4  0  0  0  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  1  0  0  0  3  1  0  0  0  0  0  1  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  1  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  1  0  0  2  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  1  0  0  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 50.38%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	75.56%	96.74%	73.81%	[93.33, 94.44, 97.78, 98.89, 97.78, 97.78, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 97.78, 96.67]%	[40.0, 61.54, 80.0, 90.91, 80.0, 83.33, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 85.71, 72.73]%	[33.33, 66.67, 66.67, 83.33, 66.67, 83.33, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 97.62, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 83.33, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 75.0, 80.0]%	[95.35, 97.59, 97.67, 98.82, 97.67, 98.81, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	75.17%	75.56%	98.25%	77.85%	98.27%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[96.67, 98.89, 100.0, 98.89, 98.89, 98.89, 95.56, 94.44, 97.78, 97.78, 100.0, 94.44, 97.78, 100.0, 96.67]%	[72.73, 90.91, 100.0, 92.31, 90.91, 90.91, 66.67, 61.54, 85.71, 83.33, 100.0, 61.54, 83.33, 100.0, 72.73]%	[66.67, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 66.67, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 66.67]%	[98.81, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 96.43, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81]%	[80.0, 100.0, 100.0, 85.71, 100.0, 100.0, 66.67, 57.14, 75.0, 83.33, 100.0, 57.14, 83.33, 100.0, 80.0]%	[97.65, 98.82, 100.0, 100.0, 98.82, 98.82, 97.62, 97.59, 100.0, 98.81, 100.0, 97.59, 98.81, 100.0, 97.65]%	||	83.51%	83.33%	98.81%	84.56%	98.81%	
  4  0  0  1  0  0  1  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  1  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  0  0  0  0  1  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  1  0  0  0  1  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  2  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 48.67%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	75.56%	96.74%	73.81%	[93.33, 94.44, 97.78, 98.89, 97.78, 97.78, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 97.78, 96.67]%	[40.0, 61.54, 80.0, 90.91, 80.0, 83.33, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 85.71, 72.73]%	[33.33, 66.67, 66.67, 83.33, 66.67, 83.33, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 97.62, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 83.33, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 75.0, 80.0]%	[95.35, 97.59, 97.67, 98.82, 97.67, 98.81, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	75.17%	75.56%	98.25%	77.85%	98.27%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	64.44%	95.26%	61.9%	[98.89, 97.78, 96.67, 97.78, 93.33, 93.33, 92.22, 95.56, 95.56, 94.44, 94.44, 95.56, 95.56, 93.33, 94.44]%	[90.91, 80.0, 72.73, 80.0, 50.0, 57.14, 58.82, 75.0, 71.43, 54.55, 54.55, 66.67, 66.67, 40.0, 44.44]%	[83.33, 66.67, 66.67, 66.67, 50.0, 66.67, 83.33, 100.0, 83.33, 50.0, 50.0, 66.67, 66.67, 33.33, 33.33]%	[100.0, 100.0, 98.81, 100.0, 96.43, 95.24, 92.86, 95.24, 96.43, 97.62, 97.62, 97.62, 97.62, 97.62, 98.81]%	[100.0, 100.0, 80.0, 100.0, 50.0, 50.0, 45.45, 60.0, 62.5, 60.0, 60.0, 66.67, 66.67, 50.0, 66.67]%	[98.82, 97.67, 97.65, 97.67, 96.43, 97.56, 98.73, 100.0, 98.78, 96.47, 96.47, 97.62, 97.62, 95.35, 95.4]%	||	64.19%	64.44%	97.46%	67.86%	97.48%	
  5  0  0  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		1
  0  4  0  0  0  0  2  0  0  0  0  0  0  0  0  66.67%		2
  0  0  4  0  0  0  0  0  2  0  0  0  0  0  0  66.67%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  1  0  3  0  1  0  0  0  0  0  0  1  0  50.0%		5
  0  0  0  0  1  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  1  0  3  0  2  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  3  0  2  0  0  50.0%		11
  0  0  0  0  0  0  1  0  0  0  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  2  2  0  0  0  0  0  0  0  2  0  33.33%		14
  0  0  0  0  0  1  0  2  0  0  0  0  0  1  2  33.33%		15
Forest OOB Error: 57.32%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	75.56%	96.74%	73.81%	[93.33, 94.44, 97.78, 98.89, 97.78, 97.78, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 97.78, 96.67]%	[40.0, 61.54, 80.0, 90.91, 80.0, 83.33, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 85.71, 72.73]%	[33.33, 66.67, 66.67, 83.33, 66.67, 83.33, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 97.62, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 83.33, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 75.0, 80.0]%	[95.35, 97.59, 97.67, 98.82, 97.67, 98.81, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	75.17%	75.56%	98.25%	77.85%	98.27%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[98.89, 97.78, 98.89, 98.89, 97.78, 98.89, 93.33, 96.67, 98.89, 94.44, 97.78, 96.67, 98.89, 98.89, 97.78]%	[90.91, 80.0, 92.31, 90.91, 83.33, 90.91, 57.14, 76.92, 92.31, 61.54, 80.0, 72.73, 92.31, 92.31, 83.33]%	[83.33, 66.67, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67, 66.67, 66.67, 100.0, 100.0, 83.33]%	[100.0, 100.0, 98.81, 100.0, 98.81, 100.0, 95.24, 97.62, 98.81, 96.43, 100.0, 98.81, 98.81, 98.81, 98.81]%	[100.0, 100.0, 85.71, 100.0, 83.33, 100.0, 50.0, 71.43, 85.71, 57.14, 100.0, 80.0, 85.71, 85.71, 83.33]%	[98.82, 97.67, 100.0, 98.82, 98.81, 98.82, 97.56, 98.8, 100.0, 97.59, 97.67, 97.65, 100.0, 100.0, 98.81]%	||	82.46%	82.22%	98.73%	84.54%	98.74%	
  5  0  0  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		1
  0  4  0  0  0  0  2  0  0  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  4  1  0  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  1  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  1  0  0  0  0  0  0  4  0  1  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  1  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 44.87%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	75.56%	96.74%	73.81%	[93.33, 94.44, 97.78, 98.89, 97.78, 97.78, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 97.78, 96.67]%	[40.0, 61.54, 80.0, 90.91, 80.0, 83.33, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 85.71, 72.73]%	[33.33, 66.67, 66.67, 83.33, 66.67, 83.33, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 97.62, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 83.33, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 75.0, 80.0]%	[95.35, 97.59, 97.67, 98.82, 97.67, 98.81, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	75.17%	75.56%	98.25%	77.85%	98.27%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[98.89, 96.67, 100.0, 97.78, 98.89, 97.78, 93.33, 93.33, 97.78, 98.89, 96.67, 96.67, 98.89, 97.78, 94.44]%	[90.91, 76.92, 100.0, 80.0, 90.91, 83.33, 62.5, 40.0, 85.71, 90.91, 80.0, 72.73, 90.91, 85.71, 44.44]%	[83.33, 83.33, 100.0, 66.67, 83.33, 83.33, 83.33, 33.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 33.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 94.05, 97.62, 97.62, 100.0, 96.43, 98.81, 100.0, 97.62, 98.81]%	[100.0, 71.43, 100.0, 100.0, 100.0, 83.33, 50.0, 50.0, 75.0, 100.0, 66.67, 80.0, 100.0, 75.0, 66.67]%	[98.82, 98.8, 100.0, 97.67, 98.82, 98.81, 98.75, 95.35, 100.0, 98.82, 100.0, 97.65, 98.82, 100.0, 95.4]%	||	78.33%	78.89%	98.49%	81.21%	98.51%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  1  2  0  0  2  0  0  0  1  33.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  1  0  0  0  0  4  0  1  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  2  1  0  0  0  0  1  2  33.33%		15
Forest OOB Error: 53.44%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	75.56%	96.74%	73.81%	[93.33, 94.44, 97.78, 98.89, 97.78, 97.78, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 97.78, 96.67]%	[40.0, 61.54, 80.0, 90.91, 80.0, 83.33, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 85.71, 72.73]%	[33.33, 66.67, 66.67, 83.33, 66.67, 83.33, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 97.62, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 83.33, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 75.0, 80.0]%	[95.35, 97.59, 97.67, 98.82, 97.67, 98.81, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	75.17%	75.56%	98.25%	77.85%	98.27%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	68.89%	95.85%	66.67%	[96.67, 95.56, 98.89, 96.67, 97.78, 93.33, 90.0, 93.33, 98.89, 94.44, 96.67, 96.67, 97.78, 97.78, 93.33]%	[72.73, 60.0, 92.31, 72.73, 83.33, 25.0, 47.06, 50.0, 92.31, 66.67, 76.92, 66.67, 85.71, 83.33, 40.0]%	[66.67, 50.0, 100.0, 66.67, 83.33, 16.67, 66.67, 50.0, 100.0, 83.33, 83.33, 50.0, 100.0, 83.33, 33.33]%	[98.81, 98.81, 98.81, 98.81, 98.81, 98.81, 91.67, 96.43, 98.81, 95.24, 97.62, 100.0, 97.62, 98.81, 97.62]%	[80.0, 75.0, 85.71, 80.0, 83.33, 50.0, 36.36, 50.0, 85.71, 55.56, 71.43, 100.0, 75.0, 83.33, 50.0]%	[97.65, 96.51, 100.0, 97.65, 98.81, 94.32, 97.47, 96.43, 100.0, 98.77, 98.8, 96.55, 100.0, 98.81, 95.35]%	||	67.65%	68.89%	97.78%	70.76%	97.81%	
  4  1  0  0  0  0  0  0  0  0  0  0  1  0  0  66.67%		1
  0  3  0  0  0  0  3  0  0  0  0  0  0  0  0  50.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  1  0  1  1  0  0  1  0  0  0  0  1  1  16.67%		6
  1  0  0  0  0  0  4  0  0  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  3  0  0  2  0  1  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  2  0  3  0  0  1  50.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  1  2  0  1  0  0  0  0  2  33.33%		15
Forest OOB Error: 57.83%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	75.56%	96.74%	73.81%	[93.33, 94.44, 97.78, 98.89, 97.78, 97.78, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 97.78, 96.67]%	[40.0, 61.54, 80.0, 90.91, 80.0, 83.33, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 85.71, 72.73]%	[33.33, 66.67, 66.67, 83.33, 66.67, 83.33, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 97.62, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 83.33, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 75.0, 80.0]%	[95.35, 97.59, 97.67, 98.82, 97.67, 98.81, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	75.17%	75.56%	98.25%	77.85%	98.27%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[98.89, 97.78, 98.89, 96.67, 98.89, 97.78, 97.78, 94.44, 100.0, 93.33, 96.67, 94.44, 96.67, 96.67, 94.44]%	[90.91, 85.71, 92.31, 72.73, 90.91, 83.33, 83.33, 61.54, 100.0, 50.0, 76.92, 54.55, 72.73, 76.92, 54.55]%	[83.33, 100.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 100.0, 50.0, 83.33, 50.0, 66.67, 83.33, 50.0]%	[100.0, 97.62, 98.81, 98.81, 100.0, 98.81, 98.81, 96.43, 100.0, 96.43, 97.62, 97.62, 98.81, 97.62, 97.62]%	[100.0, 75.0, 85.71, 80.0, 100.0, 83.33, 83.33, 57.14, 100.0, 50.0, 71.43, 60.0, 80.0, 71.43, 60.0]%	[98.82, 100.0, 100.0, 97.65, 98.82, 98.81, 98.81, 97.59, 100.0, 96.43, 98.8, 96.47, 97.65, 98.8, 96.47]%	||	76.43%	76.67%	98.33%	77.16%	98.34%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  1  0  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  1  0  0  0  0  0  0  3  0  2  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  3  0  2  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  4  0  1  66.67%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  2  0  0  0  0  1  0  3  50.0%		15
Forest OOB Error: 57.2%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	76.67%	96.89%	75.0%	[93.33, 94.44, 97.78, 98.89, 98.89, 97.78, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 98.89, 96.67]%	[40.0, 61.54, 80.0, 90.91, 90.91, 83.33, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 92.31, 72.73]%	[33.33, 66.67, 66.67, 83.33, 83.33, 83.33, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 98.81, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 83.33, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 85.71, 80.0]%	[95.35, 97.59, 97.67, 98.82, 98.82, 98.81, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	76.33%	76.67%	98.33%	78.56%	98.35%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[97.78, 96.67, 100.0, 97.78, 98.89, 94.44, 95.56, 95.56, 100.0, 95.56, 95.56, 96.67, 94.44, 96.67, 95.56]%	[80.0, 80.0, 100.0, 80.0, 90.91, 66.67, 60.0, 60.0, 100.0, 75.0, 66.67, 66.67, 66.67, 72.73, 66.67]%	[66.67, 100.0, 100.0, 66.67, 83.33, 83.33, 50.0, 50.0, 100.0, 100.0, 66.67, 50.0, 83.33, 66.67, 66.67]%	[100.0, 96.43, 100.0, 100.0, 100.0, 95.24, 98.81, 98.81, 100.0, 95.24, 97.62, 100.0, 95.24, 98.81, 97.62]%	[100.0, 66.67, 100.0, 100.0, 100.0, 55.56, 75.0, 75.0, 100.0, 60.0, 66.67, 100.0, 55.56, 80.0, 66.67]%	[97.67, 100.0, 100.0, 97.67, 98.82, 98.77, 96.51, 96.51, 100.0, 100.0, 97.62, 96.55, 98.77, 97.65, 97.62]%	||	75.46%	75.56%	98.25%	80.07%	98.28%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  1  0  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  3  1  0  1  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  3  0  0  0  0  2  0  1  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  2  0  3  0  0  1  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  1  0  0  1  4  66.67%		15
Forest OOB Error: 53.03%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	76.67%	96.89%	75.0%	[93.33, 94.44, 97.78, 98.89, 98.89, 97.78, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 98.89, 96.67]%	[40.0, 61.54, 80.0, 90.91, 90.91, 83.33, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 92.31, 72.73]%	[33.33, 66.67, 66.67, 83.33, 83.33, 83.33, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 98.81, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 83.33, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 85.71, 80.0]%	[95.35, 97.59, 97.67, 98.82, 98.82, 98.81, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	76.33%	76.67%	98.33%	78.56%	98.35%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[97.78, 98.89, 98.89, 97.78, 97.78, 96.67, 96.67, 95.56, 98.89, 96.67, 94.44, 96.67, 98.89, 98.89, 95.56]%	[80.0, 92.31, 92.31, 80.0, 80.0, 76.92, 76.92, 66.67, 92.31, 66.67, 61.54, 76.92, 90.91, 92.31, 71.43]%	[66.67, 100.0, 100.0, 66.67, 66.67, 83.33, 83.33, 66.67, 100.0, 50.0, 66.67, 83.33, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 100.0, 97.62, 97.62, 97.62, 98.81, 100.0, 96.43, 97.62, 100.0, 98.81, 96.43]%	[100.0, 85.71, 85.71, 100.0, 100.0, 71.43, 71.43, 66.67, 85.71, 100.0, 57.14, 71.43, 100.0, 85.71, 62.5]%	[97.67, 100.0, 100.0, 97.67, 97.67, 98.8, 98.8, 97.62, 100.0, 96.55, 97.59, 98.8, 98.82, 100.0, 98.78]%	||	79.81%	80.0%	98.57%	82.9%	98.58%	
  4  1  0  0  0  0  0  0  0  0  0  0  0  1  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  1  0  4  1  0  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  0  0  0  0  0  1  83.33%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  1  0  0  3  0  2  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  1  0  0  0  5  83.33%		15
Forest OOB Error: 51.32%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	76.67%	96.89%	75.0%	[93.33, 94.44, 97.78, 98.89, 98.89, 97.78, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 98.89, 96.67]%	[40.0, 61.54, 80.0, 90.91, 90.91, 83.33, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 92.31, 72.73]%	[33.33, 66.67, 66.67, 83.33, 83.33, 83.33, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 98.81, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 83.33, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 85.71, 80.0]%	[95.35, 97.59, 97.67, 98.82, 98.82, 98.81, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	76.33%	76.67%	98.33%	78.56%	98.35%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[98.89, 96.67, 97.78, 97.78, 97.78, 97.78, 95.56, 94.44, 95.56, 96.67, 95.56, 96.67, 97.78, 97.78, 96.67]%	[90.91, 76.92, 83.33, 80.0, 80.0, 83.33, 71.43, 61.54, 75.0, 80.0, 66.67, 66.67, 80.0, 85.71, 66.67]%	[83.33, 83.33, 83.33, 66.67, 66.67, 83.33, 83.33, 66.67, 100.0, 100.0, 66.67, 50.0, 66.67, 100.0, 50.0]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 96.43, 96.43, 95.24, 96.43, 97.62, 100.0, 100.0, 97.62, 100.0]%	[100.0, 71.43, 83.33, 100.0, 100.0, 83.33, 62.5, 57.14, 60.0, 66.67, 66.67, 100.0, 100.0, 75.0, 100.0]%	[98.82, 98.8, 98.81, 97.67, 97.67, 98.81, 98.78, 97.59, 100.0, 100.0, 97.62, 96.55, 97.67, 100.0, 96.55]%	||	76.55%	76.67%	98.33%	81.74%	98.36%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  1  0  0  1  0  0  0  0  0  0  66.67%		4
  0  0  1  0  4  0  0  0  0  1  0  0  0  0  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  1  0  1  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  1  0  0  0  0  0  1  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  2  0  0  0  0  3  0  1  0  50.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  1  0  0  0  1  3  50.0%		15
Forest OOB Error: 55.43%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	76.67%	96.89%	75.0%	[93.33, 94.44, 97.78, 98.89, 98.89, 97.78, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 98.89, 96.67]%	[40.0, 61.54, 80.0, 90.91, 90.91, 83.33, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 92.31, 72.73]%	[33.33, 66.67, 66.67, 83.33, 83.33, 83.33, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 98.81, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 83.33, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 85.71, 80.0]%	[95.35, 97.59, 97.67, 98.82, 98.82, 98.81, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	76.33%	76.67%	98.33%	78.56%	98.35%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[96.67, 97.78, 98.89, 95.56, 97.78, 94.44, 92.22, 95.56, 98.89, 97.78, 94.44, 96.67, 95.56, 96.67, 95.56]%	[76.92, 83.33, 92.31, 66.67, 83.33, 61.54, 46.15, 71.43, 92.31, 80.0, 54.55, 72.73, 66.67, 76.92, 50.0]%	[83.33, 83.33, 100.0, 66.67, 83.33, 66.67, 50.0, 83.33, 100.0, 66.67, 50.0, 66.67, 66.67, 83.33, 33.33]%	[97.62, 98.81, 98.81, 97.62, 98.81, 96.43, 95.24, 96.43, 98.81, 100.0, 97.62, 98.81, 97.62, 97.62, 100.0]%	[71.43, 83.33, 85.71, 66.67, 83.33, 57.14, 42.86, 62.5, 85.71, 100.0, 60.0, 80.0, 66.67, 71.43, 100.0]%	[98.8, 98.81, 100.0, 97.62, 98.81, 97.59, 96.39, 98.78, 100.0, 97.67, 96.47, 97.65, 97.62, 98.8, 95.45]%	||	71.66%	72.22%	98.02%	74.45%	98.03%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  2  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  1  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  1  4  0  0  1  0  0  0  0  0  0  66.67%		6
  2  0  0  0  0  1  3  0  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  4  0  1  0  1  0  66.67%		10
  0  0  1  0  0  0  0  1  0  0  3  0  1  0  0  50.0%		11
  0  0  0  0  0  0  2  0  0  0  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  1  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  1  0  0  0  2  0  0  0  0  0  1  2  33.33%		15
Forest OOB Error: 52.42%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	76.67%	96.89%	75.0%	[93.33, 94.44, 97.78, 98.89, 98.89, 97.78, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 98.89, 96.67]%	[40.0, 61.54, 80.0, 90.91, 90.91, 83.33, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 92.31, 72.73]%	[33.33, 66.67, 66.67, 83.33, 83.33, 83.33, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 98.81, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 83.33, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 85.71, 80.0]%	[95.35, 97.59, 97.67, 98.82, 98.82, 98.81, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	76.33%	76.67%	98.33%	78.56%	98.35%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[98.89, 98.89, 100.0, 96.67, 98.89, 96.67, 96.67, 95.56, 98.89, 96.67, 96.67, 94.44, 98.89, 97.78, 96.67]%	[90.91, 92.31, 100.0, 72.73, 90.91, 72.73, 76.92, 71.43, 92.31, 76.92, 76.92, 54.55, 90.91, 85.71, 66.67]%	[83.33, 100.0, 100.0, 66.67, 83.33, 66.67, 83.33, 83.33, 100.0, 83.33, 83.33, 50.0, 83.33, 100.0, 50.0]%	[100.0, 98.81, 100.0, 98.81, 100.0, 98.81, 97.62, 96.43, 98.81, 97.62, 97.62, 97.62, 100.0, 97.62, 100.0]%	[100.0, 85.71, 100.0, 80.0, 100.0, 80.0, 71.43, 62.5, 85.71, 71.43, 71.43, 60.0, 100.0, 75.0, 100.0]%	[98.82, 100.0, 100.0, 97.65, 98.82, 97.65, 98.8, 98.78, 100.0, 98.8, 98.8, 96.47, 98.82, 100.0, 96.55]%	||	80.79%	81.11%	98.65%	82.88%	98.66%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  0  0  0  0  1  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  2  0  3  0  1  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  1  0  0  0  2  0  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 50.77%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	76.67%	96.89%	75.0%	[93.33, 94.44, 97.78, 98.89, 98.89, 97.78, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 98.89, 96.67]%	[40.0, 61.54, 80.0, 90.91, 90.91, 83.33, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 92.31, 72.73]%	[33.33, 66.67, 66.67, 83.33, 83.33, 83.33, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 98.81, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 83.33, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 85.71, 80.0]%	[95.35, 97.59, 97.67, 98.82, 98.82, 98.81, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	76.33%	76.67%	98.33%	78.56%	98.35%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[94.44, 96.67, 98.89, 95.56, 98.89, 97.78, 95.56, 94.44, 95.56, 98.89, 96.67, 97.78, 97.78, 97.78, 96.67]%	[54.55, 72.73, 92.31, 66.67, 90.91, 83.33, 60.0, 70.59, 75.0, 92.31, 72.73, 80.0, 80.0, 85.71, 66.67]%	[50.0, 66.67, 100.0, 66.67, 83.33, 83.33, 50.0, 100.0, 100.0, 100.0, 66.67, 66.67, 66.67, 100.0, 50.0]%	[97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81, 94.05, 95.24, 98.81, 98.81, 100.0, 100.0, 97.62, 100.0]%	[60.0, 80.0, 85.71, 66.67, 100.0, 83.33, 75.0, 54.55, 60.0, 85.71, 80.0, 100.0, 100.0, 75.0, 100.0]%	[96.47, 97.65, 100.0, 97.62, 98.82, 98.81, 96.51, 100.0, 100.0, 100.0, 97.65, 97.67, 97.67, 100.0, 96.55]%	||	76.23%	76.67%	98.33%	80.4%	98.36%	
  3  1  0  1  0  0  0  0  0  0  0  0  0  1  0  50.0%		1
  0  4  0  0  0  0  1  0  1  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  0  0  1  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  1  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  2  0  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  1  0  66.67%		12
  0  0  0  1  0  0  0  0  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  1  0  0  0  0  2  0  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 52.1%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	74.44%	96.59%	72.62%	[93.33, 94.44, 97.78, 98.89, 98.89, 95.56, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 96.67, 96.67]%	[40.0, 61.54, 80.0, 90.91, 90.91, 60.0, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 80.0, 72.73]%	[33.33, 66.67, 66.67, 83.33, 83.33, 50.0, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 96.43, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 75.0, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 66.67, 80.0]%	[95.35, 97.59, 97.67, 98.82, 98.82, 96.51, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	73.96%	74.44%	98.17%	76.74%	98.2%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  3  0  0  1  0  0  0  0  2  0  50.0%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[90.0, 96.67, 98.89, 96.67, 97.78, 96.67, 91.11, 96.67, 98.89, 95.56, 97.78, 97.78, 94.44, 97.78, 97.78]%	[47.06, 72.73, 92.31, 72.73, 80.0, 72.73, 42.86, 76.92, 92.31, 60.0, 80.0, 80.0, 61.54, 85.71, 80.0]%	[66.67, 66.67, 100.0, 66.67, 66.67, 66.67, 50.0, 83.33, 100.0, 50.0, 66.67, 66.67, 66.67, 100.0, 66.67]%	[91.67, 98.81, 98.81, 98.81, 100.0, 98.81, 94.05, 97.62, 98.81, 98.81, 100.0, 100.0, 96.43, 97.62, 100.0]%	[36.36, 80.0, 85.71, 80.0, 100.0, 80.0, 37.5, 71.43, 85.71, 75.0, 100.0, 100.0, 57.14, 75.0, 100.0]%	[97.47, 97.65, 100.0, 97.65, 97.67, 97.65, 96.34, 98.8, 100.0, 96.51, 97.67, 97.67, 97.59, 100.0, 97.67]%	||	73.13%	72.22%	98.02%	77.59%	98.02%	
  4  1  0  0  0  0  1  0  0  0  0  0  0  0  0  66.67%		1
  0  4  0  0  0  1  1  0  0  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  0  1  0  0  0  0  0  0  1  0  66.67%		4
  1  0  0  0  4  0  1  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  2  0  0  1  0  0  3  0  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  2  0  1  0  0  0  0  0  0  3  0  0  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  2  0  0  0  0  0  0  0  0  0  0  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  1  0  4  66.67%		15
Forest OOB Error: 56.65%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	74.44%	96.59%	72.62%	[93.33, 94.44, 97.78, 98.89, 98.89, 95.56, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 96.67, 96.67]%	[40.0, 61.54, 80.0, 90.91, 90.91, 60.0, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 80.0, 72.73]%	[33.33, 66.67, 66.67, 83.33, 83.33, 50.0, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 96.43, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 75.0, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 66.67, 80.0]%	[95.35, 97.59, 97.67, 98.82, 98.82, 96.51, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	73.96%	74.44%	98.17%	76.74%	98.2%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  3  0  0  1  0  0  0  0  2  0  50.0%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[97.78, 97.78, 100.0, 94.44, 98.89, 95.56, 94.44, 95.56, 100.0, 98.89, 95.56, 98.89, 96.67, 96.67, 96.67]%	[80.0, 85.71, 100.0, 61.54, 90.91, 66.67, 66.67, 60.0, 100.0, 90.91, 75.0, 90.91, 66.67, 76.92, 72.73]%	[66.67, 100.0, 100.0, 66.67, 83.33, 66.67, 83.33, 50.0, 100.0, 83.33, 100.0, 83.33, 50.0, 83.33, 66.67]%	[100.0, 97.62, 100.0, 96.43, 100.0, 97.62, 95.24, 98.81, 100.0, 100.0, 95.24, 100.0, 100.0, 97.62, 98.81]%	[100.0, 75.0, 100.0, 57.14, 100.0, 66.67, 55.56, 75.0, 100.0, 100.0, 60.0, 100.0, 100.0, 71.43, 80.0]%	[97.67, 100.0, 100.0, 97.59, 98.82, 97.62, 98.77, 96.51, 100.0, 98.82, 100.0, 98.82, 96.55, 98.8, 97.65]%	||	78.98%	78.89%	98.49%	82.72%	98.51%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  0  0  0  0  0  2  0  66.67%		6
  0  0  0  0  0  0  5  0  0  0  0  0  0  0  1  83.33%		7
  0  0  0  1  0  0  0  3  0  0  2  0  0  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  1  0  0  0  0  0  0  2  0  3  0  0  50.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  1  0  0  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 58.49%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	74.44%	96.59%	72.62%	[93.33, 94.44, 97.78, 98.89, 98.89, 95.56, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 96.67, 96.67]%	[40.0, 61.54, 80.0, 90.91, 90.91, 60.0, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 80.0, 72.73]%	[33.33, 66.67, 66.67, 83.33, 83.33, 50.0, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 96.43, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 75.0, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 66.67, 80.0]%	[95.35, 97.59, 97.67, 98.82, 98.82, 96.51, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	73.96%	74.44%	98.17%	76.74%	98.2%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  3  0  0  1  0  0  0  0  2  0  50.0%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	67.78%	95.7%	65.48%	[96.67, 98.89, 96.67, 94.44, 97.78, 96.67, 96.67, 94.44, 97.78, 91.11, 94.44, 93.33, 96.67, 95.56, 94.44]%	[66.67, 92.31, 80.0, 61.54, 80.0, 72.73, 66.67, 61.54, 85.71, 42.86, 54.55, 50.0, 72.73, 75.0, 44.44]%	[50.0, 100.0, 100.0, 66.67, 66.67, 66.67, 50.0, 66.67, 100.0, 50.0, 50.0, 50.0, 66.67, 100.0, 33.33]%	[100.0, 98.81, 96.43, 96.43, 100.0, 98.81, 100.0, 96.43, 97.62, 94.05, 97.62, 96.43, 98.81, 95.24, 98.81]%	[100.0, 85.71, 66.67, 57.14, 100.0, 80.0, 100.0, 57.14, 75.0, 37.5, 60.0, 50.0, 80.0, 60.0, 66.67]%	[96.55, 100.0, 100.0, 97.59, 97.67, 97.65, 96.55, 97.59, 100.0, 96.34, 96.47, 96.43, 97.65, 100.0, 95.4]%	||	67.12%	67.78%	97.7%	71.72%	97.73%	
  3  1  0  0  0  0  0  0  0  1  0  0  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  0  0  0  1  0  0  0  0  0  66.67%		4
  0  0  2  0  4  0  0  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  1  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  3  0  0  1  0  1  0  1  0  50.0%		7
  0  0  1  1  0  0  0  4  0  0  0  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  3  0  2  0  1  0  50.0%		10
  0  0  0  1  0  0  0  1  0  0  3  0  1  0  0  50.0%		11
  0  0  0  0  0  0  0  0  0  2  0  3  0  0  1  50.0%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  2  1  0  0  0  0  1  2  33.33%		15
Forest OOB Error: 59.13%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	74.44%	96.59%	72.62%	[93.33, 94.44, 97.78, 98.89, 98.89, 95.56, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 96.67, 96.67]%	[40.0, 61.54, 80.0, 90.91, 90.91, 60.0, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 80.0, 72.73]%	[33.33, 66.67, 66.67, 83.33, 83.33, 50.0, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 96.43, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 75.0, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 66.67, 80.0]%	[95.35, 97.59, 97.67, 98.82, 98.82, 96.51, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	73.96%	74.44%	98.17%	76.74%	98.2%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  3  0  0  1  0  0  0  0  2  0  50.0%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[98.89, 95.56, 96.67, 96.67, 96.67, 96.67, 97.78, 94.44, 98.89, 96.67, 95.56, 96.67, 96.67, 100.0, 97.78]%	[90.91, 75.0, 80.0, 66.67, 66.67, 76.92, 83.33, 54.55, 90.91, 76.92, 75.0, 72.73, 72.73, 100.0, 80.0]%	[83.33, 100.0, 100.0, 50.0, 50.0, 83.33, 83.33, 50.0, 83.33, 83.33, 100.0, 66.67, 66.67, 100.0, 66.67]%	[100.0, 95.24, 96.43, 100.0, 100.0, 97.62, 98.81, 97.62, 100.0, 97.62, 95.24, 98.81, 98.81, 100.0, 100.0]%	[100.0, 60.0, 66.67, 100.0, 100.0, 71.43, 83.33, 60.0, 100.0, 71.43, 60.0, 80.0, 80.0, 100.0, 100.0]%	[98.82, 100.0, 100.0, 96.55, 96.55, 98.8, 98.81, 96.47, 98.82, 98.8, 100.0, 97.65, 97.65, 100.0, 97.67]%	||	77.49%	77.78%	98.41%	82.19%	98.44%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  1  0  3  0  2  0  0  0  0  0  0  0  0  0  50.0%		4
  0  0  2  0  3  0  1  0  0  0  0  0  0  0  0  50.0%		5
  0  1  0  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  3  0  0  2  0  1  0  0  50.0%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  1  0  0  0  0  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 55.89%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	74.44%	96.59%	72.62%	[93.33, 94.44, 97.78, 98.89, 98.89, 95.56, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 96.67, 96.67]%	[40.0, 61.54, 80.0, 90.91, 90.91, 60.0, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 80.0, 72.73]%	[33.33, 66.67, 66.67, 83.33, 83.33, 50.0, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 96.43, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 75.0, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 66.67, 80.0]%	[95.35, 97.59, 97.67, 98.82, 98.82, 96.51, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	73.96%	74.44%	98.17%	76.74%	98.2%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  3  0  0  1  0  0  0  0  2  0  50.0%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[95.56, 96.67, 98.89, 95.56, 96.67, 96.67, 93.33, 94.44, 97.78, 95.56, 94.44, 97.78, 94.44, 97.78, 98.89]%	[60.0, 80.0, 92.31, 66.67, 66.67, 76.92, 40.0, 54.55, 83.33, 71.43, 54.55, 80.0, 66.67, 85.71, 90.91]%	[50.0, 100.0, 100.0, 66.67, 50.0, 83.33, 33.33, 50.0, 83.33, 83.33, 50.0, 66.67, 83.33, 100.0, 83.33]%	[98.81, 96.43, 98.81, 97.62, 100.0, 97.62, 97.62, 97.62, 98.81, 96.43, 97.62, 100.0, 95.24, 97.62, 100.0]%	[75.0, 66.67, 85.71, 66.67, 100.0, 71.43, 50.0, 60.0, 83.33, 62.5, 60.0, 100.0, 55.56, 75.0, 100.0]%	[96.51, 100.0, 100.0, 97.62, 96.55, 98.8, 95.35, 96.47, 98.81, 98.78, 96.47, 97.67, 98.77, 100.0, 98.82]%	||	71.31%	72.22%	98.02%	74.12%	98.04%	
  3  2  0  0  0  0  0  0  0  0  0  0  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  2  3  0  0  0  0  1  0  0  0  0  0  50.0%		5
  1  0  0  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  1  2  0  0  2  0  0  0  0  0  33.33%		7
  0  0  0  0  0  0  0  3  0  0  1  0  2  0  0  50.0%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  0  0  1  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  3  0  2  0  0  50.0%		11
  0  0  0  0  0  0  1  1  0  0  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 53.85%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	74.44%	96.59%	72.62%	[93.33, 94.44, 97.78, 98.89, 98.89, 95.56, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 96.67, 96.67]%	[40.0, 61.54, 80.0, 90.91, 90.91, 60.0, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 80.0, 72.73]%	[33.33, 66.67, 66.67, 83.33, 83.33, 50.0, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 96.43, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 75.0, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 66.67, 80.0]%	[95.35, 97.59, 97.67, 98.82, 98.82, 96.51, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	73.96%	74.44%	98.17%	76.74%	98.2%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  3  0  0  1  0  0  0  0  2  0  50.0%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[97.78, 95.56, 96.67, 97.78, 97.78, 98.89, 97.78, 96.67, 100.0, 95.56, 97.78, 95.56, 98.89, 100.0, 95.56]%	[83.33, 75.0, 72.73, 83.33, 80.0, 90.91, 80.0, 76.92, 100.0, 75.0, 83.33, 60.0, 92.31, 100.0, 60.0]%	[83.33, 100.0, 66.67, 83.33, 66.67, 83.33, 66.67, 83.33, 100.0, 100.0, 83.33, 50.0, 100.0, 100.0, 50.0]%	[98.81, 95.24, 98.81, 98.81, 100.0, 100.0, 100.0, 97.62, 100.0, 95.24, 98.81, 98.81, 98.81, 100.0, 98.81]%	[83.33, 60.0, 80.0, 83.33, 100.0, 100.0, 100.0, 71.43, 100.0, 60.0, 83.33, 75.0, 85.71, 100.0, 75.0]%	[98.81, 100.0, 97.65, 98.81, 97.67, 98.82, 97.67, 98.8, 100.0, 100.0, 98.81, 96.51, 100.0, 100.0, 96.51]%	||	80.86%	81.11%	98.65%	83.81%	98.67%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  1  0  0  0  0  0  0  0  0  0  0  0  66.67%		3
  0  1  0  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  1  0  0  0  0  0  66.67%		5
  0  1  0  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  4  0  0  1  0  1  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  2  0  3  0  0  1  50.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  1  0  0  0  0  0  2  0  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 50.4%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	75.56%	96.74%	73.81%	[93.33, 94.44, 97.78, 98.89, 97.78, 97.78, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 97.78, 96.67]%	[40.0, 61.54, 80.0, 90.91, 80.0, 83.33, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 85.71, 72.73]%	[33.33, 66.67, 66.67, 83.33, 66.67, 83.33, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 97.62, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 83.33, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 75.0, 80.0]%	[95.35, 97.59, 97.67, 98.82, 97.67, 98.81, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	75.17%	75.56%	98.25%	77.85%	98.27%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[98.89, 98.89, 98.89, 95.56, 97.78, 97.78, 93.33, 97.78, 96.67, 97.78, 98.89, 96.67, 100.0, 98.89, 98.89]%	[90.91, 90.91, 90.91, 66.67, 83.33, 83.33, 62.5, 80.0, 80.0, 85.71, 92.31, 66.67, 100.0, 90.91, 90.91]%	[83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 66.67, 100.0, 100.0, 100.0, 50.0, 100.0, 83.33, 83.33]%	[100.0, 100.0, 100.0, 97.62, 98.81, 98.81, 94.05, 100.0, 96.43, 97.62, 98.81, 100.0, 100.0, 100.0, 100.0]%	[100.0, 100.0, 100.0, 66.67, 83.33, 83.33, 50.0, 100.0, 66.67, 75.0, 85.71, 100.0, 100.0, 100.0, 100.0]%	[98.82, 98.82, 98.82, 97.62, 98.81, 98.81, 98.75, 97.67, 100.0, 100.0, 100.0, 96.55, 100.0, 98.82, 98.82]%	||	83.67%	83.33%	98.81%	87.38%	98.82%	
  5  0  0  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  1  0  0  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  1  0  1  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  3  0  0  0  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  1  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 51.72%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	75.56%	96.74%	73.81%	[93.33, 94.44, 97.78, 98.89, 97.78, 97.78, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 97.78, 96.67]%	[40.0, 61.54, 80.0, 90.91, 80.0, 83.33, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 85.71, 72.73]%	[33.33, 66.67, 66.67, 83.33, 66.67, 83.33, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 97.62, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 83.33, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 75.0, 80.0]%	[95.35, 97.59, 97.67, 98.82, 97.67, 98.81, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	75.17%	75.56%	98.25%	77.85%	98.27%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	64.44%	95.26%	61.9%	[96.67, 94.44, 97.78, 94.44, 96.67, 96.67, 94.44, 93.33, 96.67, 94.44, 92.22, 95.56, 93.33, 96.67, 95.56]%	[72.73, 28.57, 85.71, 61.54, 76.92, 76.92, 66.67, 57.14, 80.0, 54.55, 53.33, 71.43, 25.0, 66.67, 50.0]%	[66.67, 16.67, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 100.0, 50.0, 66.67, 83.33, 16.67, 50.0, 33.33]%	[98.81, 100.0, 97.62, 96.43, 97.62, 97.62, 95.24, 95.24, 96.43, 97.62, 94.05, 96.43, 98.81, 100.0, 100.0]%	[80.0, 100.0, 75.0, 57.14, 71.43, 71.43, 55.56, 50.0, 66.67, 60.0, 44.44, 62.5, 50.0, 100.0, 100.0]%	[97.65, 94.38, 100.0, 97.59, 98.8, 98.8, 98.77, 97.56, 100.0, 96.47, 97.53, 98.78, 94.32, 96.55, 95.45]%	||	61.81%	64.44%	97.46%	69.61%	97.51%	
  4  0  0  1  0  0  1  0  0  0  0  0  0  0  0  66.67%		1
  0  1  0  0  0  0  2  0  2  1  0  0  0  0  0  16.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  1  0  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  1  0  1  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  3  0  3  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  1  0  0  0  0  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  1  0  0  0  0  0  0  4  0  1  0  0  16.67%		13
  0  0  1  0  0  2  0  0  0  0  0  0  0  3  0  50.0%		14
  0  0  0  1  1  0  0  2  0  0  0  0  0  0  2  33.33%		15
Forest OOB Error: 51.52%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	75.56%	96.74%	73.81%	[93.33, 94.44, 97.78, 98.89, 97.78, 97.78, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 97.78, 96.67]%	[40.0, 61.54, 80.0, 90.91, 80.0, 83.33, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 85.71, 72.73]%	[33.33, 66.67, 66.67, 83.33, 66.67, 83.33, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 97.62, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 83.33, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 75.0, 80.0]%	[95.35, 97.59, 97.67, 98.82, 97.67, 98.81, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	75.17%	75.56%	98.25%	77.85%	98.27%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	74.44%	96.59%	72.62%	[97.78, 97.78, 97.78, 95.56, 96.67, 97.78, 95.56, 92.22, 95.56, 95.56, 95.56, 96.67, 97.78, 98.89, 97.78]%	[80.0, 83.33, 85.71, 66.67, 66.67, 83.33, 60.0, 53.33, 75.0, 75.0, 60.0, 66.67, 83.33, 92.31, 80.0]%	[66.67, 83.33, 100.0, 66.67, 50.0, 83.33, 50.0, 66.67, 100.0, 100.0, 50.0, 50.0, 83.33, 100.0, 66.67]%	[100.0, 98.81, 97.62, 97.62, 100.0, 98.81, 98.81, 94.05, 95.24, 95.24, 98.81, 100.0, 98.81, 98.81, 100.0]%	[100.0, 83.33, 75.0, 66.67, 100.0, 83.33, 75.0, 44.44, 60.0, 60.0, 75.0, 100.0, 83.33, 85.71, 100.0]%	[97.67, 98.81, 100.0, 97.62, 96.55, 98.81, 96.51, 97.53, 100.0, 100.0, 96.51, 96.55, 98.81, 100.0, 97.67]%	||	74.09%	74.44%	98.17%	79.46%	98.2%	
  4  1  0  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  2  1  3  0  0  0  0  0  0  0  0  0  0  50.0%		5
  0  0  0  1  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  3  2  1  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  2  0  0  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  2  0  0  3  0  1  0  0  50.0%		11
  0  0  0  0  0  0  0  0  0  3  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  1  4  66.67%		15
Forest OOB Error: 54.94%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	75.56%	96.74%	73.81%	[93.33, 94.44, 97.78, 98.89, 97.78, 97.78, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 97.78, 96.67]%	[40.0, 61.54, 80.0, 90.91, 80.0, 83.33, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 85.71, 72.73]%	[33.33, 66.67, 66.67, 83.33, 66.67, 83.33, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 97.62, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 83.33, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 75.0, 80.0]%	[95.35, 97.59, 97.67, 98.82, 97.67, 98.81, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	75.17%	75.56%	98.25%	77.85%	98.27%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[97.78, 92.22, 97.78, 97.78, 97.78, 97.78, 94.44, 96.67, 96.67, 95.56, 96.67, 95.56, 97.78, 98.89, 97.78]%	[80.0, 36.36, 85.71, 83.33, 80.0, 80.0, 61.54, 76.92, 76.92, 75.0, 72.73, 60.0, 83.33, 92.31, 83.33]%	[66.67, 33.33, 100.0, 83.33, 66.67, 66.67, 66.67, 83.33, 83.33, 100.0, 66.67, 50.0, 83.33, 100.0, 83.33]%	[100.0, 96.43, 97.62, 98.81, 100.0, 100.0, 96.43, 97.62, 97.62, 95.24, 98.81, 98.81, 98.81, 98.81, 98.81]%	[100.0, 40.0, 75.0, 83.33, 100.0, 100.0, 57.14, 71.43, 71.43, 60.0, 80.0, 75.0, 83.33, 85.71, 83.33]%	[97.67, 95.29, 100.0, 98.81, 97.67, 97.67, 97.59, 98.8, 98.8, 100.0, 97.65, 96.51, 98.81, 100.0, 98.81]%	||	75.17%	75.56%	98.25%	77.71%	98.27%	
  4  1  0  1  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  2  0  0  0  0  3  0  1  0  0  0  0  0  0  33.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  1  0  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  1  0  0  0  66.67%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  4  0  0  2  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  2  0  3  0  0  1  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  1  0  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 52.08%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	75.56%	96.74%	73.81%	[93.33, 94.44, 97.78, 98.89, 97.78, 97.78, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 97.78, 96.67]%	[40.0, 61.54, 80.0, 90.91, 80.0, 83.33, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 85.71, 72.73]%	[33.33, 66.67, 66.67, 83.33, 66.67, 83.33, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 97.62, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 83.33, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 75.0, 80.0]%	[95.35, 97.59, 97.67, 98.82, 97.67, 98.81, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	75.17%	75.56%	98.25%	77.85%	98.27%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[95.56, 97.78, 96.67, 95.56, 100.0, 96.67, 94.44, 96.67, 97.78, 97.78, 95.56, 95.56, 95.56, 97.78, 97.78]%	[60.0, 83.33, 80.0, 66.67, 100.0, 76.92, 54.55, 66.67, 85.71, 83.33, 66.67, 66.67, 66.67, 83.33, 83.33]%	[50.0, 83.33, 100.0, 66.67, 100.0, 83.33, 50.0, 50.0, 100.0, 83.33, 66.67, 66.67, 66.67, 83.33, 83.33]%	[98.81, 98.81, 96.43, 97.62, 100.0, 97.62, 97.62, 100.0, 97.62, 98.81, 97.62, 97.62, 97.62, 98.81, 98.81]%	[75.0, 83.33, 66.67, 66.67, 100.0, 71.43, 60.0, 100.0, 75.0, 83.33, 66.67, 66.67, 66.67, 83.33, 83.33]%	[96.51, 98.81, 100.0, 97.62, 100.0, 98.8, 96.47, 96.55, 100.0, 98.81, 97.62, 97.62, 97.62, 98.81, 98.81]%	||	74.92%	75.56%	98.25%	76.54%	98.27%	
  3  1  0  0  0  1  0  0  0  0  1  0  0  0  0  50.0%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  3  0  1  0  0  2  0  0  0  50.0%		7
  0  0  1  0  0  0  0  3  0  0  0  0  1  0  1  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  0  0  1  0  83.33%		10
  0  0  2  0  0  0  0  0  0  0  4  0  0  0  0  66.67%		11
  1  0  0  0  0  0  0  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  1  0  0  0  0  0  0  1  0  4  0  0  66.67%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 52.73%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	75.56%	96.74%	73.81%	[93.33, 94.44, 97.78, 98.89, 97.78, 97.78, 95.56, 96.67, 97.78, 94.44, 97.78, 95.56, 98.89, 97.78, 96.67]%	[40.0, 61.54, 80.0, 90.91, 80.0, 83.33, 60.0, 80.0, 85.71, 66.67, 83.33, 66.67, 90.91, 85.71, 72.73]%	[33.33, 66.67, 66.67, 83.33, 66.67, 83.33, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 97.62, 95.24, 98.81, 97.62, 100.0, 97.62, 98.81]%	[50.0, 57.14, 100.0, 100.0, 100.0, 83.33, 75.0, 66.67, 75.0, 55.56, 83.33, 66.67, 100.0, 75.0, 80.0]%	[95.35, 97.59, 97.67, 98.82, 97.67, 98.81, 96.51, 100.0, 100.0, 98.77, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	75.17%	75.56%	98.25%	77.85%	98.27%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  4  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		2
  1  0  4  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  2  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	57.78%	94.37%	54.76%	[96.67, 95.56, 92.22, 96.67, 94.44, 96.67, 94.44, 94.44, 92.22, 94.44, 90.0, 93.33, 94.44, 94.44, 95.56]%	[72.73, 71.43, 63.16, 66.67, 66.67, 66.67, 54.55, 54.55, 46.15, 61.54, 40.0, 50.0, 28.57, 54.55, 60.0]%	[66.67, 83.33, 100.0, 50.0, 83.33, 50.0, 50.0, 50.0, 50.0, 66.67, 50.0, 50.0, 16.67, 50.0, 50.0]%	[98.81, 96.43, 91.67, 100.0, 95.24, 100.0, 97.62, 97.62, 95.24, 96.43, 92.86, 96.43, 100.0, 97.62, 98.81]%	[80.0, 62.5, 46.15, 100.0, 55.56, 100.0, 60.0, 60.0, 42.86, 57.14, 33.33, 50.0, 100.0, 60.0, 75.0]%	[97.65, 98.78, 100.0, 96.55, 98.77, 96.55, 96.47, 96.47, 96.39, 97.59, 96.3, 96.43, 94.38, 96.47, 96.51]%	||	57.15%	57.78%	96.98%	65.5%	97.02%	
  4  1  1  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  3  2  0  0  0  0  1  0  0  0  0  0  50.0%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  1  3  0  0  0  0  1  0  0  0  1  50.0%		6
  0  0  0  0  0  0  3  0  1  0  0  2  0  0  0  50.0%		7
  0  0  0  0  0  0  0  3  1  0  1  0  0  1  0  50.0%		8
  0  2  1  0  0  0  0  0  3  0  0  0  0  0  0  50.0%		9
  0  0  0  0  0  0  0  0  1  4  0  1  0  0  0  66.67%		10
  0  0  3  0  0  0  0  0  0  0  3  0  0  0  0  50.0%		11
  0  0  1  0  0  0  1  0  0  1  0  3  0  0  0  50.0%		12
  0  0  1  0  0  0  0  0  0  0  4  0  1  0  0  16.67%		13
  1  0  0  0  1  0  0  0  0  1  0  0  0  3  0  50.0%		14
  0  0  0  0  0  0  0  2  0  0  0  0  0  1  3  50.0%		15
Forest OOB Error: 63.38%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[93.33, 98.89, 97.78, 98.89, 98.89, 98.89, 96.67, 96.67, 97.78, 96.67, 97.78, 95.56, 98.89, 98.89, 96.67]%	[50.0, 92.31, 80.0, 90.91, 90.91, 90.91, 72.73, 80.0, 85.71, 76.92, 83.33, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[96.43, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[50.0, 85.71, 100.0, 100.0, 100.0, 100.0, 80.0, 66.67, 75.0, 71.43, 83.33, 66.67, 100.0, 85.71, 80.0]%	[96.43, 100.0, 97.67, 98.82, 98.82, 98.82, 97.65, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	81.09%	81.11%	98.65%	82.97%	98.66%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[98.89, 96.67, 98.89, 96.67, 98.89, 96.67, 95.56, 96.67, 100.0, 88.89, 97.78, 93.33, 97.78, 97.78, 96.67]%	[90.91, 80.0, 92.31, 66.67, 90.91, 76.92, 66.67, 66.67, 100.0, 28.57, 85.71, 50.0, 83.33, 83.33, 72.73]%	[83.33, 100.0, 100.0, 50.0, 83.33, 83.33, 66.67, 50.0, 100.0, 33.33, 100.0, 50.0, 83.33, 83.33, 66.67]%	[100.0, 96.43, 98.81, 100.0, 100.0, 97.62, 97.62, 100.0, 100.0, 92.86, 97.62, 96.43, 98.81, 98.81, 98.81]%	[100.0, 66.67, 85.71, 100.0, 100.0, 71.43, 66.67, 100.0, 100.0, 25.0, 75.0, 50.0, 83.33, 83.33, 80.0]%	[98.82, 100.0, 100.0, 96.55, 98.82, 98.8, 97.62, 96.55, 100.0, 95.12, 100.0, 96.43, 98.81, 98.81, 97.65]%	||	75.65%	75.56%	98.25%	79.14%	98.27%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  3  0  1  1  0  0  0  0  0  0  1  0  50.0%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  1  0  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  4  0  0  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  3  0  0  1  0  1  0  1  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  1  0  0  0  0  0  0  2  0  3  0  0  0  33.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  1  0  0  2  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  1  0  0  0  0  0  0  0  1  0  0  0  0  4  66.67%		15
Forest OOB Error: 51.33%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[93.33, 98.89, 97.78, 98.89, 98.89, 98.89, 96.67, 96.67, 97.78, 96.67, 97.78, 95.56, 98.89, 98.89, 96.67]%	[50.0, 92.31, 80.0, 90.91, 90.91, 90.91, 72.73, 80.0, 85.71, 76.92, 83.33, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[96.43, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[50.0, 85.71, 100.0, 100.0, 100.0, 100.0, 80.0, 66.67, 75.0, 71.43, 83.33, 66.67, 100.0, 85.71, 80.0]%	[96.43, 100.0, 97.67, 98.82, 98.82, 98.82, 97.65, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	81.09%	81.11%	98.65%	82.97%	98.66%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[98.89, 97.78, 98.89, 94.44, 98.89, 96.67, 96.67, 96.67, 98.89, 95.56, 97.78, 95.56, 97.78, 98.89, 96.67]%	[90.91, 85.71, 90.91, 61.54, 90.91, 72.73, 76.92, 76.92, 92.31, 71.43, 83.33, 60.0, 83.33, 92.31, 66.67]%	[83.33, 100.0, 83.33, 66.67, 83.33, 66.67, 83.33, 83.33, 100.0, 83.33, 83.33, 50.0, 83.33, 100.0, 50.0]%	[100.0, 97.62, 100.0, 96.43, 100.0, 98.81, 97.62, 97.62, 98.81, 96.43, 98.81, 98.81, 98.81, 98.81, 100.0]%	[100.0, 75.0, 100.0, 57.14, 100.0, 80.0, 71.43, 71.43, 85.71, 62.5, 83.33, 75.0, 83.33, 85.71, 100.0]%	[98.82, 100.0, 98.82, 97.59, 98.82, 97.65, 98.8, 98.8, 100.0, 98.78, 98.81, 96.51, 98.81, 100.0, 96.55]%	||	79.73%	80.0%	98.57%	82.04%	98.58%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  1  0  4  0  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  1  0  0  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  2  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  1  0  1  0  0  0  1  0  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 55.84%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[93.33, 98.89, 97.78, 98.89, 98.89, 98.89, 96.67, 96.67, 97.78, 96.67, 97.78, 95.56, 98.89, 98.89, 96.67]%	[50.0, 92.31, 80.0, 90.91, 90.91, 90.91, 72.73, 80.0, 85.71, 76.92, 83.33, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[96.43, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[50.0, 85.71, 100.0, 100.0, 100.0, 100.0, 80.0, 66.67, 75.0, 71.43, 83.33, 66.67, 100.0, 85.71, 80.0]%	[96.43, 100.0, 97.67, 98.82, 98.82, 98.82, 97.65, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	81.09%	81.11%	98.65%	82.97%	98.66%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[96.67, 97.78, 100.0, 96.67, 98.89, 97.78, 94.44, 95.56, 97.78, 100.0, 96.67, 98.89, 96.67, 98.89, 95.56]%	[76.92, 83.33, 100.0, 76.92, 90.91, 83.33, 54.55, 71.43, 83.33, 100.0, 66.67, 90.91, 76.92, 92.31, 66.67]%	[83.33, 83.33, 100.0, 83.33, 83.33, 83.33, 50.0, 83.33, 83.33, 100.0, 50.0, 83.33, 83.33, 100.0, 66.67]%	[97.62, 98.81, 100.0, 97.62, 100.0, 98.81, 97.62, 96.43, 98.81, 100.0, 100.0, 100.0, 97.62, 98.81, 97.62]%	[71.43, 83.33, 100.0, 71.43, 100.0, 83.33, 60.0, 62.5, 83.33, 100.0, 100.0, 100.0, 71.43, 85.71, 66.67]%	[98.8, 98.81, 100.0, 98.8, 98.82, 98.81, 96.47, 98.78, 98.81, 100.0, 96.55, 98.82, 98.8, 100.0, 97.62]%	||	80.95%	81.11%	98.65%	82.61%	98.66%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  1  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  1  3  0  0  0  0  0  0  0  1  50.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  0  0  1  83.33%		8
  0  0  0  1  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  3  0  2  0  0  50.0%		11
  1  0  0  0  0  0  0  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  1  4  66.67%		15
Forest OOB Error: 46.99%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[93.33, 98.89, 97.78, 98.89, 98.89, 98.89, 96.67, 96.67, 97.78, 96.67, 97.78, 95.56, 98.89, 98.89, 96.67]%	[50.0, 92.31, 80.0, 90.91, 90.91, 90.91, 72.73, 80.0, 85.71, 76.92, 83.33, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[96.43, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[50.0, 85.71, 100.0, 100.0, 100.0, 100.0, 80.0, 66.67, 75.0, 71.43, 83.33, 66.67, 100.0, 85.71, 80.0]%	[96.43, 100.0, 97.67, 98.82, 98.82, 98.82, 97.65, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	81.09%	81.11%	98.65%	82.97%	98.66%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[98.89, 97.78, 98.89, 96.67, 97.78, 97.78, 95.56, 92.22, 94.44, 94.44, 96.67, 96.67, 97.78, 98.89, 96.67]%	[90.91, 85.71, 92.31, 76.92, 80.0, 83.33, 71.43, 22.22, 70.59, 61.54, 72.73, 72.73, 83.33, 90.91, 66.67]%	[83.33, 100.0, 100.0, 83.33, 66.67, 83.33, 83.33, 16.67, 100.0, 66.67, 66.67, 66.67, 83.33, 83.33, 50.0]%	[100.0, 97.62, 98.81, 97.62, 100.0, 98.81, 96.43, 97.62, 94.05, 96.43, 98.81, 98.81, 98.81, 100.0, 100.0]%	[100.0, 75.0, 85.71, 71.43, 100.0, 83.33, 62.5, 33.33, 54.55, 57.14, 80.0, 80.0, 83.33, 100.0, 100.0]%	[98.82, 100.0, 100.0, 98.8, 97.67, 98.81, 98.78, 94.25, 100.0, 97.59, 97.65, 97.65, 98.81, 98.82, 96.55]%	||	74.76%	75.56%	98.25%	77.76%	98.28%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  1  0  0  0  0  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  1  0  0  0  0  0  1  2  1  1  0  0  0  0  16.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  1  0  0  0  0  0  4  0  1  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  2  0  0  0  0  4  0  0  0  66.67%		12
  0  0  0  1  0  0  0  0  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  2  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 52.11%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[93.33, 98.89, 97.78, 98.89, 98.89, 98.89, 96.67, 96.67, 97.78, 96.67, 97.78, 95.56, 98.89, 98.89, 96.67]%	[50.0, 92.31, 80.0, 90.91, 90.91, 90.91, 72.73, 80.0, 85.71, 76.92, 83.33, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[96.43, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[50.0, 85.71, 100.0, 100.0, 100.0, 100.0, 80.0, 66.67, 75.0, 71.43, 83.33, 66.67, 100.0, 85.71, 80.0]%	[96.43, 100.0, 97.67, 98.82, 98.82, 98.82, 97.65, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	81.09%	81.11%	98.65%	82.97%	98.66%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[96.67, 97.78, 100.0, 94.44, 98.89, 96.67, 96.67, 95.56, 97.78, 96.67, 95.56, 95.56, 98.89, 96.67, 95.56]%	[72.73, 83.33, 100.0, 66.67, 90.91, 72.73, 72.73, 60.0, 85.71, 66.67, 75.0, 71.43, 90.91, 76.92, 60.0]%	[66.67, 83.33, 100.0, 83.33, 83.33, 66.67, 66.67, 50.0, 100.0, 50.0, 100.0, 83.33, 83.33, 83.33, 50.0]%	[98.81, 98.81, 100.0, 95.24, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0, 95.24, 96.43, 100.0, 97.62, 98.81]%	[80.0, 83.33, 100.0, 55.56, 100.0, 80.0, 80.0, 75.0, 75.0, 100.0, 60.0, 62.5, 100.0, 71.43, 75.0]%	[97.65, 98.81, 100.0, 98.77, 98.82, 97.65, 97.65, 96.51, 100.0, 96.55, 100.0, 98.78, 98.82, 98.8, 96.51]%	||	76.38%	76.67%	98.33%	79.85%	98.35%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  0  0  0  0  0  0  0  1  0  83.33%		4
  0  0  0  0  5  0  0  0  1  0  0  0  0  0  0  83.33%		5
  0  0  0  2  0  4  0  0  0  0  0  0  0  0  0  66.67%		6
  1  0  0  1  0  0  4  0  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  3  0  0  3  0  0  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  1  0  0  3  0  2  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  1  0  0  0  1  0  0  0  0  0  1  3  50.0%		15
Forest OOB Error: 57.83%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[93.33, 98.89, 97.78, 98.89, 98.89, 98.89, 96.67, 96.67, 97.78, 96.67, 97.78, 95.56, 98.89, 98.89, 96.67]%	[50.0, 92.31, 80.0, 90.91, 90.91, 90.91, 72.73, 80.0, 85.71, 76.92, 83.33, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[96.43, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[50.0, 85.71, 100.0, 100.0, 100.0, 100.0, 80.0, 66.67, 75.0, 71.43, 83.33, 66.67, 100.0, 85.71, 80.0]%	[96.43, 100.0, 97.67, 98.82, 98.82, 98.82, 97.65, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	81.09%	81.11%	98.65%	82.97%	98.66%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[95.56, 94.44, 98.89, 93.33, 97.78, 95.56, 95.56, 95.56, 94.44, 96.67, 95.56, 97.78, 98.89, 96.67, 97.78]%	[60.0, 44.44, 92.31, 40.0, 83.33, 66.67, 60.0, 66.67, 70.59, 80.0, 71.43, 83.33, 90.91, 76.92, 80.0]%	[50.0, 33.33, 100.0, 33.33, 83.33, 66.67, 50.0, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 66.67]%	[98.81, 98.81, 98.81, 97.62, 98.81, 97.62, 98.81, 97.62, 94.05, 96.43, 96.43, 98.81, 100.0, 97.62, 100.0]%	[75.0, 66.67, 85.71, 50.0, 83.33, 66.67, 75.0, 66.67, 54.55, 66.67, 62.5, 83.33, 100.0, 71.43, 100.0]%	[96.51, 95.4, 100.0, 95.35, 98.81, 97.62, 96.51, 97.62, 100.0, 100.0, 98.78, 98.81, 98.82, 98.8, 97.67]%	||	71.11%	72.22%	98.02%	73.83%	98.05%	
  3  1  1  0  0  0  0  0  0  0  0  0  0  1  0  50.0%		1
  0  2  0  0  0  0  0  0  4  0  0  0  0  0  0  33.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  2  1  2  1  0  0  0  0  0  0  0  0  33.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  1  0  0  3  0  0  1  0  1  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  1  1  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  1  0  0  0  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  1  0  0  0  4  66.67%		15
Forest OOB Error: 56.87%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	80.0%	97.33%	78.57%	[93.33, 98.89, 97.78, 98.89, 98.89, 98.89, 96.67, 95.56, 97.78, 96.67, 96.67, 95.56, 98.89, 98.89, 96.67]%	[50.0, 92.31, 80.0, 90.91, 90.91, 90.91, 72.73, 71.43, 85.71, 76.92, 76.92, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[96.43, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 97.62, 97.62, 100.0, 98.81, 98.81]%	[50.0, 85.71, 100.0, 100.0, 100.0, 100.0, 80.0, 62.5, 75.0, 71.43, 71.43, 66.67, 100.0, 85.71, 80.0]%	[96.43, 100.0, 97.67, 98.82, 98.82, 98.82, 97.65, 98.78, 100.0, 98.8, 98.8, 97.62, 98.82, 100.0, 97.65]%	||	80.09%	80.0%	98.57%	81.9%	98.58%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[98.89, 95.56, 97.78, 97.78, 97.78, 96.67, 96.67, 95.56, 96.67, 96.67, 96.67, 96.67, 96.67, 96.67, 98.89]%	[90.91, 71.43, 83.33, 85.71, 83.33, 66.67, 72.73, 66.67, 76.92, 76.92, 72.73, 72.73, 80.0, 72.73, 90.91]%	[83.33, 83.33, 83.33, 100.0, 83.33, 50.0, 66.67, 66.67, 83.33, 83.33, 66.67, 66.67, 100.0, 66.67, 83.33]%	[100.0, 96.43, 98.81, 97.62, 98.81, 100.0, 98.81, 97.62, 97.62, 97.62, 98.81, 98.81, 96.43, 98.81, 100.0]%	[100.0, 62.5, 83.33, 75.0, 83.33, 100.0, 80.0, 66.67, 71.43, 71.43, 80.0, 80.0, 66.67, 80.0, 100.0]%	[98.82, 98.78, 98.81, 100.0, 98.81, 96.55, 97.65, 97.62, 98.8, 98.8, 97.65, 97.65, 100.0, 97.65, 98.82]%	||	77.58%	77.78%	98.41%	80.02%	98.43%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  1  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  1  0  0  0  3  0  0  1  0  0  0  0  1  0  50.0%		6
  0  0  0  0  0  0  4  2  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  0  0  1  0  1  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  1  0  0  0  0  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  1  0  0  0  0  0  0  0  1  0  0  0  4  0  66.67%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 50.19%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	80.0%	97.33%	78.57%	[93.33, 98.89, 97.78, 98.89, 98.89, 98.89, 96.67, 95.56, 97.78, 96.67, 96.67, 95.56, 98.89, 98.89, 96.67]%	[50.0, 92.31, 80.0, 90.91, 90.91, 90.91, 72.73, 71.43, 85.71, 76.92, 76.92, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[96.43, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 97.62, 97.62, 100.0, 98.81, 98.81]%	[50.0, 85.71, 100.0, 100.0, 100.0, 100.0, 80.0, 62.5, 75.0, 71.43, 71.43, 66.67, 100.0, 85.71, 80.0]%	[96.43, 100.0, 97.67, 98.82, 98.82, 98.82, 97.65, 98.78, 100.0, 98.8, 98.8, 97.62, 98.82, 100.0, 97.65]%	||	80.09%	80.0%	98.57%	81.9%	98.58%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	70.0%	96.0%	67.86%	[97.78, 95.56, 98.89, 96.67, 96.67, 95.56, 92.22, 95.56, 97.78, 92.22, 96.67, 96.67, 93.33, 98.89, 95.56]%	[80.0, 60.0, 92.31, 72.73, 72.73, 66.67, 53.33, 71.43, 83.33, 58.82, 72.73, 72.73, 50.0, 90.91, 60.0]%	[66.67, 50.0, 100.0, 66.67, 66.67, 66.67, 66.67, 83.33, 83.33, 83.33, 66.67, 66.67, 50.0, 83.33, 50.0]%	[100.0, 98.81, 98.81, 98.81, 98.81, 97.62, 94.05, 96.43, 98.81, 92.86, 98.81, 98.81, 96.43, 100.0, 98.81]%	[100.0, 75.0, 85.71, 80.0, 80.0, 66.67, 44.44, 62.5, 83.33, 45.45, 80.0, 80.0, 50.0, 100.0, 75.0]%	[97.67, 96.51, 100.0, 97.65, 97.65, 97.62, 97.53, 98.78, 98.81, 98.73, 97.65, 97.65, 96.43, 98.82, 96.51]%	||	70.51%	70.0%	97.86%	73.87%	97.87%	
  4  1  0  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		1
  0  3  0  0  0  0  2  0  0  1  0  0  0  0  0  50.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  1  0  4  0  0  0  0  1  0  0  0  0  0  66.67%		5
  0  0  0  0  1  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  4  0  0  2  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  2  0  0  1  0  3  0  0  50.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  1  0  0  1  1  0  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 59.27%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	80.0%	97.33%	78.57%	[93.33, 98.89, 97.78, 98.89, 98.89, 98.89, 96.67, 95.56, 97.78, 96.67, 96.67, 95.56, 98.89, 98.89, 96.67]%	[50.0, 92.31, 80.0, 90.91, 90.91, 90.91, 72.73, 71.43, 85.71, 76.92, 76.92, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[96.43, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 97.62, 97.62, 100.0, 98.81, 98.81]%	[50.0, 85.71, 100.0, 100.0, 100.0, 100.0, 80.0, 62.5, 75.0, 71.43, 71.43, 66.67, 100.0, 85.71, 80.0]%	[96.43, 100.0, 97.67, 98.82, 98.82, 98.82, 97.65, 98.78, 100.0, 98.8, 98.8, 97.62, 98.82, 100.0, 97.65]%	||	80.09%	80.0%	98.57%	81.9%	98.58%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[95.56, 98.89, 96.67, 96.67, 94.44, 97.78, 95.56, 95.56, 97.78, 95.56, 95.56, 95.56, 96.67, 97.78, 96.67]%	[60.0, 92.31, 80.0, 72.73, 54.55, 83.33, 71.43, 60.0, 83.33, 60.0, 75.0, 66.67, 72.73, 85.71, 66.67]%	[50.0, 100.0, 100.0, 66.67, 50.0, 83.33, 83.33, 50.0, 83.33, 50.0, 100.0, 66.67, 66.67, 100.0, 50.0]%	[98.81, 98.81, 96.43, 98.81, 97.62, 98.81, 96.43, 98.81, 98.81, 98.81, 95.24, 97.62, 98.81, 97.62, 100.0]%	[75.0, 85.71, 66.67, 80.0, 60.0, 83.33, 62.5, 75.0, 83.33, 75.0, 60.0, 66.67, 80.0, 75.0, 100.0]%	[96.51, 100.0, 100.0, 97.65, 96.47, 98.81, 98.78, 96.51, 98.81, 96.51, 100.0, 97.62, 97.65, 100.0, 96.55]%	||	72.3%	73.33%	98.1%	75.21%	98.12%	
  3  1  0  1  0  0  0  0  0  0  0  0  1  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  1  0  3  0  2  0  0  0  0  0  0  0  0  50.0%		5
  0  0  0  0  1  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  3  0  0  2  0  0  0  0  50.0%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  3  0  2  0  1  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  1  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  1  0  0  0  1  0  0  0  1  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 52.76%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	80.0%	97.33%	78.57%	[93.33, 98.89, 97.78, 98.89, 98.89, 98.89, 96.67, 95.56, 97.78, 96.67, 96.67, 95.56, 98.89, 98.89, 96.67]%	[50.0, 92.31, 80.0, 90.91, 90.91, 90.91, 72.73, 71.43, 85.71, 76.92, 76.92, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[96.43, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 97.62, 97.62, 100.0, 98.81, 98.81]%	[50.0, 85.71, 100.0, 100.0, 100.0, 100.0, 80.0, 62.5, 75.0, 71.43, 71.43, 66.67, 100.0, 85.71, 80.0]%	[96.43, 100.0, 97.67, 98.82, 98.82, 98.82, 97.65, 98.78, 100.0, 98.8, 98.8, 97.62, 98.82, 100.0, 97.65]%	||	80.09%	80.0%	98.57%	81.9%	98.58%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	70.0%	96.0%	67.86%	[97.78, 94.44, 100.0, 94.44, 97.78, 95.56, 94.44, 95.56, 96.67, 90.0, 98.89, 95.56, 95.56, 96.67, 96.67]%	[83.33, 44.44, 100.0, 54.55, 80.0, 71.43, 66.67, 66.67, 76.92, 47.06, 90.91, 60.0, 71.43, 72.73, 66.67]%	[83.33, 33.33, 100.0, 50.0, 66.67, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33, 50.0, 83.33, 66.67, 50.0]%	[98.81, 98.81, 100.0, 97.62, 100.0, 96.43, 95.24, 97.62, 97.62, 91.67, 100.0, 98.81, 96.43, 98.81, 100.0]%	[83.33, 66.67, 100.0, 60.0, 100.0, 62.5, 55.56, 66.67, 71.43, 36.36, 100.0, 75.0, 62.5, 80.0, 100.0]%	[98.81, 95.4, 100.0, 96.47, 97.67, 98.78, 98.77, 97.62, 98.8, 97.47, 98.82, 96.51, 98.78, 97.65, 96.55]%	||	70.19%	70.0%	97.86%	74.67%	97.87%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  2  0  0  0  0  2  0  1  1  0  0  0  0  0  33.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  3  0  2  0  0  0  1  0  0  0  0  0  50.0%		4
  0  0  0  0  4  0  1  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  0  1  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  1  0  0  0  4  0  0  0  0  1  0  0  66.67%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  1  4  0  1  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  3  0  3  0  0  0  50.0%		12
  1  0  0  0  0  0  0  0  0  0  0  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  2  0  0  0  0  1  0  3  50.0%		15
Forest OOB Error: 51.11%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	80.0%	97.33%	78.57%	[93.33, 98.89, 97.78, 98.89, 98.89, 98.89, 96.67, 95.56, 97.78, 96.67, 96.67, 95.56, 98.89, 98.89, 96.67]%	[50.0, 92.31, 80.0, 90.91, 90.91, 90.91, 72.73, 71.43, 85.71, 76.92, 76.92, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[96.43, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 97.62, 97.62, 100.0, 98.81, 98.81]%	[50.0, 85.71, 100.0, 100.0, 100.0, 100.0, 80.0, 62.5, 75.0, 71.43, 71.43, 66.67, 100.0, 85.71, 80.0]%	[96.43, 100.0, 97.67, 98.82, 98.82, 98.82, 97.65, 98.78, 100.0, 98.8, 98.8, 97.62, 98.82, 100.0, 97.65]%	||	80.09%	80.0%	98.57%	81.9%	98.58%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[97.78, 96.67, 100.0, 96.67, 98.89, 95.56, 96.67, 96.67, 98.89, 94.44, 95.56, 95.56, 95.56, 100.0, 96.67]%	[80.0, 80.0, 100.0, 66.67, 90.91, 75.0, 76.92, 72.73, 90.91, 54.55, 66.67, 66.67, 71.43, 100.0, 72.73]%	[66.67, 100.0, 100.0, 50.0, 83.33, 100.0, 83.33, 66.67, 83.33, 50.0, 66.67, 66.67, 83.33, 100.0, 66.67]%	[100.0, 96.43, 100.0, 100.0, 100.0, 95.24, 97.62, 98.81, 100.0, 97.62, 97.62, 97.62, 96.43, 100.0, 98.81]%	[100.0, 66.67, 100.0, 100.0, 100.0, 60.0, 71.43, 80.0, 100.0, 60.0, 66.67, 66.67, 62.5, 100.0, 80.0]%	[97.67, 100.0, 100.0, 96.55, 98.82, 100.0, 98.8, 97.65, 98.82, 96.47, 97.62, 97.62, 98.78, 100.0, 97.65]%	||	77.68%	77.78%	98.41%	80.93%	98.43%	
  4  1  0  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  1  0  3  0  2  0  0  0  0  0  0  0  0  0  50.0%		4
  0  0  0  0  5  0  0  0  0  0  0  1  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  1  0  4  0  0  1  0  0  0  0  66.67%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  1  0  4  66.67%		15
Forest OOB Error: 51.53%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	80.0%	97.33%	78.57%	[93.33, 98.89, 97.78, 98.89, 98.89, 98.89, 96.67, 95.56, 97.78, 96.67, 96.67, 95.56, 98.89, 98.89, 96.67]%	[50.0, 92.31, 80.0, 90.91, 90.91, 90.91, 72.73, 71.43, 85.71, 76.92, 76.92, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[96.43, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 97.62, 97.62, 100.0, 98.81, 98.81]%	[50.0, 85.71, 100.0, 100.0, 100.0, 100.0, 80.0, 62.5, 75.0, 71.43, 71.43, 66.67, 100.0, 85.71, 80.0]%	[96.43, 100.0, 97.67, 98.82, 98.82, 98.82, 97.65, 98.78, 100.0, 98.8, 98.8, 97.62, 98.82, 100.0, 97.65]%	||	80.09%	80.0%	98.57%	81.9%	98.58%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	67.78%	95.7%	65.48%	[98.89, 94.44, 96.67, 96.67, 95.56, 97.78, 92.22, 92.22, 96.67, 96.67, 93.33, 95.56, 96.67, 96.67, 95.56]%	[90.91, 44.44, 76.92, 66.67, 71.43, 80.0, 63.16, 53.33, 76.92, 72.73, 50.0, 60.0, 66.67, 80.0, 60.0]%	[83.33, 33.33, 83.33, 50.0, 83.33, 66.67, 100.0, 66.67, 83.33, 66.67, 50.0, 50.0, 50.0, 100.0, 50.0]%	[100.0, 98.81, 97.62, 100.0, 96.43, 100.0, 91.67, 94.05, 97.62, 98.81, 96.43, 98.81, 100.0, 96.43, 98.81]%	[100.0, 66.67, 71.43, 100.0, 62.5, 100.0, 46.15, 44.44, 71.43, 80.0, 50.0, 75.0, 100.0, 66.67, 75.0]%	[98.82, 95.4, 98.8, 96.55, 98.78, 97.67, 100.0, 97.53, 98.8, 97.65, 96.43, 96.51, 96.55, 100.0, 96.51]%	||	67.55%	67.78%	97.7%	73.95%	97.73%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  2  0  0  0  0  3  0  0  0  0  0  0  1  0  33.33%		2
  0  0  5  0  0  0  0  0  0  0  0  0  0  1  0  83.33%		3
  0  0  0  3  2  0  1  0  0  0  0  0  0  0  0  50.0%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  1  4  0  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  1  0  0  0  0  4  0  0  1  0  0  0  0  66.67%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  1  4  0  1  0  0  0  66.67%		10
  0  0  0  0  0  0  0  3  0  0  3  0  0  0  0  50.0%		11
  0  0  0  0  0  0  2  0  0  0  0  3  0  0  1  50.0%		12
  0  0  0  0  0  0  0  1  0  0  2  0  3  0  0  50.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  1  0  0  0  0  3  50.0%		15
Forest OOB Error: 51.36%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[94.44, 98.89, 97.78, 98.89, 98.89, 98.89, 97.78, 96.67, 97.78, 96.67, 97.78, 95.56, 98.89, 98.89, 96.67]%	[54.55, 92.31, 80.0, 90.91, 90.91, 90.91, 83.33, 80.0, 85.71, 76.92, 83.33, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[60.0, 85.71, 100.0, 100.0, 100.0, 100.0, 83.33, 66.67, 75.0, 71.43, 83.33, 66.67, 100.0, 85.71, 80.0]%	[96.47, 100.0, 97.67, 98.82, 98.82, 98.82, 98.81, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	82.1%	82.22%	98.73%	83.86%	98.74%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[95.56, 98.89, 100.0, 97.78, 98.89, 98.89, 94.44, 93.33, 98.89, 97.78, 96.67, 96.67, 97.78, 98.89, 95.56]%	[60.0, 92.31, 100.0, 83.33, 90.91, 90.91, 66.67, 40.0, 90.91, 83.33, 80.0, 72.73, 83.33, 92.31, 66.67]%	[50.0, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 33.33, 83.33, 83.33, 100.0, 66.67, 83.33, 100.0, 66.67]%	[98.81, 98.81, 100.0, 98.81, 100.0, 100.0, 95.24, 97.62, 100.0, 98.81, 96.43, 98.81, 98.81, 98.81, 97.62]%	[75.0, 85.71, 100.0, 83.33, 100.0, 100.0, 55.56, 50.0, 100.0, 83.33, 66.67, 80.0, 83.33, 85.71, 66.67]%	[96.51, 100.0, 100.0, 98.81, 98.82, 98.82, 98.77, 95.35, 98.82, 98.81, 100.0, 97.65, 98.81, 100.0, 97.62]%	||	79.56%	80.0%	98.57%	81.02%	98.59%	
  3  1  0  0  0  0  0  0  0  1  0  0  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  1  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  1  0  0  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  2  0  0  2  0  1  0  1  33.33%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  1  0  0  0  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  1  0  0  0  4  66.67%		15
Forest OOB Error: 50.95%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[94.44, 98.89, 97.78, 98.89, 98.89, 98.89, 97.78, 96.67, 97.78, 96.67, 97.78, 95.56, 98.89, 98.89, 96.67]%	[54.55, 92.31, 80.0, 90.91, 90.91, 90.91, 83.33, 80.0, 85.71, 76.92, 83.33, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[60.0, 85.71, 100.0, 100.0, 100.0, 100.0, 83.33, 66.67, 75.0, 71.43, 83.33, 66.67, 100.0, 85.71, 80.0]%	[96.47, 100.0, 97.67, 98.82, 98.82, 98.82, 98.81, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	82.1%	82.22%	98.73%	83.86%	98.74%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	84.44%	97.93%	83.33%	[98.89, 97.78, 96.67, 95.56, 100.0, 97.78, 96.67, 96.67, 97.78, 98.89, 97.78, 98.89, 98.89, 97.78, 98.89]%	[90.91, 83.33, 76.92, 50.0, 100.0, 85.71, 76.92, 72.73, 85.71, 90.91, 83.33, 92.31, 90.91, 85.71, 90.91]%	[83.33, 83.33, 83.33, 33.33, 100.0, 100.0, 83.33, 66.67, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 83.33]%	[100.0, 98.81, 97.62, 100.0, 100.0, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81, 100.0, 97.62, 100.0]%	[100.0, 83.33, 71.43, 100.0, 100.0, 75.0, 71.43, 80.0, 75.0, 100.0, 83.33, 85.71, 100.0, 75.0, 100.0]%	[98.82, 98.81, 98.8, 95.45, 100.0, 100.0, 98.8, 97.65, 100.0, 98.82, 98.81, 100.0, 98.82, 100.0, 98.82]%	||	83.76%	84.44%	98.89%	86.68%	98.91%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  2  0  1  1  0  0  0  1  0  0  1  0  33.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  4  1  0  0  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  1  0  0  0  0  0  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  1  5  83.33%		15
Forest OOB Error: 53.94%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[94.44, 98.89, 97.78, 98.89, 98.89, 98.89, 97.78, 96.67, 97.78, 96.67, 97.78, 95.56, 98.89, 98.89, 96.67]%	[54.55, 92.31, 80.0, 90.91, 90.91, 90.91, 83.33, 80.0, 85.71, 76.92, 83.33, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[60.0, 85.71, 100.0, 100.0, 100.0, 100.0, 83.33, 66.67, 75.0, 71.43, 83.33, 66.67, 100.0, 85.71, 80.0]%	[96.47, 100.0, 97.67, 98.82, 98.82, 98.82, 98.81, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	82.1%	82.22%	98.73%	83.86%	98.74%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[96.67, 96.67, 98.89, 95.56, 97.78, 94.44, 95.56, 93.33, 97.78, 95.56, 95.56, 97.78, 95.56, 98.89, 94.44]%	[72.73, 76.92, 90.91, 60.0, 80.0, 61.54, 60.0, 50.0, 85.71, 71.43, 71.43, 83.33, 66.67, 92.31, 54.55]%	[66.67, 83.33, 83.33, 50.0, 66.67, 66.67, 50.0, 50.0, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 50.0]%	[98.81, 97.62, 100.0, 98.81, 100.0, 96.43, 98.81, 96.43, 97.62, 96.43, 96.43, 98.81, 97.62, 98.81, 97.62]%	[80.0, 71.43, 100.0, 75.0, 100.0, 57.14, 75.0, 50.0, 75.0, 62.5, 62.5, 83.33, 66.67, 85.71, 60.0]%	[97.65, 98.8, 98.82, 96.51, 97.67, 97.59, 96.51, 96.43, 100.0, 98.78, 98.78, 98.81, 97.62, 100.0, 96.47]%	||	71.83%	72.22%	98.02%	73.62%	98.03%	
  4  0  0  0  0  0  1  0  0  1  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  1  1  0  3  0  1  0  0  0  0  0  0  0  0  0  50.0%		4
  0  0  0  0  4  1  0  0  0  1  0  0  0  0  0  66.67%		5
  0  1  0  0  0  4  0  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  1  0  0  3  2  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  3  1  0  0  0  1  0  1  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  1  0  1  0  0  1  0  0  0  3  50.0%		15
Forest OOB Error: 50.42%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[94.44, 98.89, 97.78, 98.89, 98.89, 98.89, 97.78, 96.67, 97.78, 96.67, 97.78, 95.56, 98.89, 98.89, 96.67]%	[54.55, 92.31, 80.0, 90.91, 90.91, 90.91, 83.33, 80.0, 85.71, 76.92, 83.33, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[60.0, 85.71, 100.0, 100.0, 100.0, 100.0, 83.33, 66.67, 75.0, 71.43, 83.33, 66.67, 100.0, 85.71, 80.0]%	[96.47, 100.0, 97.67, 98.82, 98.82, 98.82, 98.81, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	82.1%	82.22%	98.73%	83.86%	98.74%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[94.44, 97.78, 98.89, 94.44, 98.89, 96.67, 93.33, 95.56, 98.89, 96.67, 96.67, 98.89, 93.33, 98.89, 97.78]%	[54.55, 83.33, 90.91, 61.54, 90.91, 76.92, 50.0, 66.67, 90.91, 80.0, 76.92, 90.91, 50.0, 90.91, 83.33]%	[50.0, 83.33, 83.33, 66.67, 83.33, 83.33, 50.0, 66.67, 83.33, 100.0, 83.33, 83.33, 50.0, 83.33, 83.33]%	[97.62, 98.81, 100.0, 96.43, 100.0, 97.62, 96.43, 97.62, 100.0, 96.43, 97.62, 100.0, 96.43, 100.0, 98.81]%	[60.0, 83.33, 100.0, 57.14, 100.0, 71.43, 50.0, 66.67, 100.0, 66.67, 71.43, 100.0, 50.0, 100.0, 83.33]%	[96.47, 98.81, 98.82, 97.59, 98.82, 98.8, 96.43, 97.62, 98.82, 100.0, 98.8, 98.82, 96.43, 98.82, 98.81]%	||	75.85%	75.56%	98.25%	77.33%	98.26%	
  3  1  0  0  0  0  0  0  0  1  0  0  1  0  0  50.0%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  1  0  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  0  1  0  0  0  0  0  83.33%		6
  2  0  0  1  0  0  3  0  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  1  0  0  0  0  0  0  2  0  3  0  0  50.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 51.42%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[94.44, 98.89, 97.78, 98.89, 98.89, 98.89, 97.78, 96.67, 97.78, 96.67, 97.78, 95.56, 98.89, 98.89, 96.67]%	[54.55, 92.31, 80.0, 90.91, 90.91, 90.91, 83.33, 80.0, 85.71, 76.92, 83.33, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[60.0, 85.71, 100.0, 100.0, 100.0, 100.0, 83.33, 66.67, 75.0, 71.43, 83.33, 66.67, 100.0, 85.71, 80.0]%	[96.47, 100.0, 97.67, 98.82, 98.82, 98.82, 98.81, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	82.1%	82.22%	98.73%	83.86%	98.74%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[97.78, 97.78, 100.0, 97.78, 98.89, 97.78, 100.0, 96.67, 97.78, 96.67, 98.89, 97.78, 96.67, 100.0, 96.67]%	[80.0, 85.71, 100.0, 80.0, 92.31, 83.33, 100.0, 72.73, 85.71, 76.92, 90.91, 83.33, 76.92, 100.0, 72.73]%	[66.67, 100.0, 100.0, 66.67, 100.0, 83.33, 100.0, 66.67, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 66.67]%	[100.0, 97.62, 100.0, 100.0, 98.81, 98.81, 100.0, 98.81, 97.62, 97.62, 100.0, 98.81, 97.62, 100.0, 98.81]%	[100.0, 75.0, 100.0, 100.0, 85.71, 83.33, 100.0, 80.0, 75.0, 71.43, 100.0, 83.33, 71.43, 100.0, 80.0]%	[97.67, 100.0, 100.0, 97.67, 100.0, 98.81, 100.0, 97.65, 100.0, 98.8, 98.82, 98.81, 98.8, 100.0, 97.65]%	||	85.37%	85.56%	98.97%	87.02%	98.98%	
  4  1  0  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  1  0  4  0  1  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  1  0  0  4  0  0  0  0  1  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  5  0  1  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 50.98%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[94.44, 98.89, 97.78, 98.89, 98.89, 98.89, 97.78, 96.67, 97.78, 96.67, 97.78, 95.56, 98.89, 98.89, 96.67]%	[54.55, 92.31, 80.0, 90.91, 90.91, 90.91, 83.33, 80.0, 85.71, 76.92, 83.33, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[60.0, 85.71, 100.0, 100.0, 100.0, 100.0, 83.33, 66.67, 75.0, 71.43, 83.33, 66.67, 100.0, 85.71, 80.0]%	[96.47, 100.0, 97.67, 98.82, 98.82, 98.82, 98.81, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	82.1%	82.22%	98.73%	83.86%	98.74%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[96.67, 95.56, 97.78, 97.78, 96.67, 95.56, 92.22, 97.78, 95.56, 97.78, 95.56, 95.56, 95.56, 98.89, 97.78]%	[76.92, 71.43, 85.71, 80.0, 66.67, 71.43, 36.36, 80.0, 66.67, 83.33, 66.67, 66.67, 71.43, 90.91, 83.33]%	[83.33, 83.33, 100.0, 66.67, 50.0, 83.33, 33.33, 66.67, 66.67, 83.33, 66.67, 66.67, 83.33, 83.33, 83.33]%	[97.62, 96.43, 97.62, 100.0, 100.0, 96.43, 96.43, 100.0, 97.62, 98.81, 97.62, 97.62, 96.43, 100.0, 98.81]%	[71.43, 62.5, 75.0, 100.0, 100.0, 62.5, 40.0, 100.0, 66.67, 83.33, 66.67, 66.67, 62.5, 100.0, 83.33]%	[98.8, 98.78, 100.0, 97.67, 96.55, 98.78, 95.29, 97.67, 97.62, 98.81, 97.62, 97.62, 98.78, 98.82, 98.81]%	||	73.17%	73.33%	98.1%	76.04%	98.11%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  2  0  3  0  0  0  0  1  0  0  0  0  0  50.0%		5
  0  1  0  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  1  2  0  1  0  0  1  0  0  0  33.33%		7
  0  0  0  0  0  0  0  4  0  0  1  0  1  0  0  66.67%		8
  0  1  0  0  0  0  1  0  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  0  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  1  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 58.3%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[93.33, 98.89, 97.78, 98.89, 98.89, 98.89, 96.67, 96.67, 97.78, 96.67, 97.78, 95.56, 98.89, 98.89, 96.67]%	[50.0, 92.31, 80.0, 90.91, 90.91, 90.91, 72.73, 80.0, 85.71, 76.92, 83.33, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[96.43, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[50.0, 85.71, 100.0, 100.0, 100.0, 100.0, 80.0, 66.67, 75.0, 71.43, 83.33, 66.67, 100.0, 85.71, 80.0]%	[96.43, 100.0, 97.67, 98.82, 98.82, 98.82, 97.65, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	81.09%	81.11%	98.65%	82.97%	98.66%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	71.11%	96.15%	69.05%	[97.78, 96.67, 97.78, 97.78, 96.67, 96.67, 96.67, 93.33, 98.89, 90.0, 95.56, 92.22, 98.89, 97.78, 95.56]%	[80.0, 80.0, 83.33, 80.0, 66.67, 76.92, 72.73, 40.0, 92.31, 30.77, 75.0, 46.15, 90.91, 85.71, 60.0]%	[66.67, 100.0, 83.33, 66.67, 50.0, 83.33, 66.67, 33.33, 100.0, 33.33, 100.0, 50.0, 83.33, 100.0, 50.0]%	[100.0, 96.43, 98.81, 100.0, 100.0, 97.62, 98.81, 97.62, 98.81, 94.05, 95.24, 95.24, 100.0, 97.62, 98.81]%	[100.0, 66.67, 83.33, 100.0, 100.0, 71.43, 80.0, 50.0, 85.71, 28.57, 60.0, 42.86, 100.0, 75.0, 75.0]%	[97.67, 100.0, 98.81, 97.67, 96.55, 98.8, 97.65, 95.35, 100.0, 95.18, 100.0, 96.39, 98.82, 100.0, 96.51]%	||	70.7%	71.11%	97.94%	74.57%	97.96%	
  4  1  0  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  0  0  0  1  0  83.33%		3
  0  1  0  4  0  1  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  1  0  3  0  1  0  0  1  0  0  0  0  0  50.0%		5
  0  1  0  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  4  0  0  1  0  1  0  0  0  66.67%		7
  0  0  0  0  0  0  0  2  0  1  3  0  0  0  0  33.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  1  0  2  0  3  0  0  0  33.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  2  0  3  0  0  1  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  1  3  50.0%		15
Forest OOB Error: 56.44%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[93.33, 98.89, 97.78, 98.89, 98.89, 98.89, 96.67, 96.67, 97.78, 96.67, 97.78, 95.56, 98.89, 98.89, 96.67]%	[50.0, 92.31, 80.0, 90.91, 90.91, 90.91, 72.73, 80.0, 85.71, 76.92, 83.33, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[96.43, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[50.0, 85.71, 100.0, 100.0, 100.0, 100.0, 80.0, 66.67, 75.0, 71.43, 83.33, 66.67, 100.0, 85.71, 80.0]%	[96.43, 100.0, 97.67, 98.82, 98.82, 98.82, 97.65, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	81.09%	81.11%	98.65%	82.97%	98.66%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[97.78, 98.89, 100.0, 96.67, 97.78, 97.78, 93.33, 96.67, 98.89, 95.56, 95.56, 97.78, 97.78, 95.56, 97.78]%	[83.33, 90.91, 100.0, 72.73, 85.71, 83.33, 57.14, 66.67, 92.31, 66.67, 71.43, 80.0, 80.0, 71.43, 83.33]%	[83.33, 83.33, 100.0, 66.67, 100.0, 83.33, 66.67, 50.0, 100.0, 66.67, 83.33, 66.67, 66.67, 83.33, 83.33]%	[98.81, 100.0, 100.0, 98.81, 97.62, 98.81, 95.24, 100.0, 98.81, 97.62, 96.43, 100.0, 100.0, 96.43, 98.81]%	[83.33, 100.0, 100.0, 80.0, 75.0, 83.33, 50.0, 100.0, 85.71, 66.67, 62.5, 100.0, 100.0, 62.5, 83.33]%	[98.81, 98.82, 100.0, 97.65, 100.0, 98.81, 97.56, 96.55, 100.0, 97.62, 98.78, 97.67, 97.67, 98.78, 98.81]%	||	79.0%	78.89%	98.49%	82.16%	98.5%	
  5  0  0  0  0  0  0  0  0  0  0  0  0  1  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  1  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  2  0  4  0  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  3  0  0  1  0  0  1  1  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  1  0  0  0  0  0  0  0  1  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  5  0  0  1  0  83.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  1  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  1  0  0  0  0  5  83.33%		15
Forest OOB Error: 51.94%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[93.33, 98.89, 97.78, 98.89, 98.89, 98.89, 96.67, 96.67, 97.78, 96.67, 97.78, 95.56, 98.89, 98.89, 96.67]%	[50.0, 92.31, 80.0, 90.91, 90.91, 90.91, 72.73, 80.0, 85.71, 76.92, 83.33, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[96.43, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[50.0, 85.71, 100.0, 100.0, 100.0, 100.0, 80.0, 66.67, 75.0, 71.43, 83.33, 66.67, 100.0, 85.71, 80.0]%	[96.43, 100.0, 97.67, 98.82, 98.82, 98.82, 97.65, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	81.09%	81.11%	98.65%	82.97%	98.66%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[95.56, 98.89, 98.89, 96.67, 97.78, 96.67, 98.89, 95.56, 98.89, 95.56, 96.67, 94.44, 96.67, 94.44, 97.78]%	[50.0, 92.31, 90.91, 76.92, 80.0, 72.73, 92.31, 71.43, 92.31, 60.0, 72.73, 66.67, 72.73, 66.67, 83.33]%	[33.33, 100.0, 83.33, 83.33, 66.67, 66.67, 100.0, 83.33, 100.0, 50.0, 66.67, 83.33, 66.67, 83.33, 83.33]%	[100.0, 98.81, 100.0, 97.62, 100.0, 98.81, 98.81, 96.43, 98.81, 98.81, 98.81, 95.24, 98.81, 95.24, 98.81]%	[100.0, 85.71, 100.0, 71.43, 100.0, 80.0, 85.71, 62.5, 85.71, 75.0, 80.0, 55.56, 80.0, 55.56, 83.33]%	[95.45, 100.0, 98.82, 98.8, 97.67, 97.65, 100.0, 98.78, 100.0, 96.51, 97.65, 98.77, 97.65, 98.77, 98.81]%	||	76.07%	76.67%	98.33%	80.03%	98.35%	
  2  1  0  0  0  0  0  0  0  0  0  1  0  1  1  33.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  0  0  0  1  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  1  4  0  0  0  0  1  0  0  0  0  0  66.67%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  3  0  3  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  1  0  83.33%		12
  0  0  0  1  0  0  0  0  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  1  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 47.33%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[93.33, 98.89, 97.78, 98.89, 98.89, 98.89, 96.67, 96.67, 97.78, 96.67, 97.78, 95.56, 98.89, 98.89, 96.67]%	[50.0, 92.31, 80.0, 90.91, 90.91, 90.91, 72.73, 80.0, 85.71, 76.92, 83.33, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[96.43, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[50.0, 85.71, 100.0, 100.0, 100.0, 100.0, 80.0, 66.67, 75.0, 71.43, 83.33, 66.67, 100.0, 85.71, 80.0]%	[96.43, 100.0, 97.67, 98.82, 98.82, 98.82, 97.65, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	81.09%	81.11%	98.65%	82.97%	98.66%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	56.67%	94.22%	53.57%	[96.67, 93.33, 100.0, 92.22, 96.67, 93.33, 92.22, 93.33, 97.78, 92.22, 95.56, 93.33, 96.67, 85.56, 94.44]%	[76.92, 40.0, 100.0, 0.0, 76.92, 40.0, 46.15, 62.5, 83.33, 36.36, 66.67, 57.14, 66.67, 31.58, 44.44]%	[83.33, 33.33, 100.0, 0.0, 83.33, 33.33, 50.0, 83.33, 83.33, 33.33, 66.67, 66.67, 50.0, 50.0, 33.33]%	[97.62, 97.62, 100.0, 98.81, 97.62, 97.62, 95.24, 94.05, 98.81, 96.43, 97.62, 95.24, 100.0, 88.1, 98.81]%	[71.43, 50.0, 100.0, 0.0, 71.43, 50.0, 42.86, 50.0, 83.33, 40.0, 66.67, 50.0, 100.0, 23.08, 66.67]%	[98.8, 95.35, 100.0, 93.26, 98.8, 95.35, 96.39, 98.75, 98.81, 95.29, 97.62, 97.56, 96.55, 96.1, 95.4]%	||	55.25%	56.67%	96.9%	57.7%	96.93%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  2  0  0  0  0  4  0  0  0  0  0  0  0  0  33.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  1  0  0  0  2  0  0  0  0  0  0  0  3  0  0.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  1  2  0  0  1  2  0  0  0  0  0  33.33%		6
  0  0  0  0  0  0  3  0  0  0  0  1  0  2  0  50.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  0  1  0  83.33%		8
  0  0  0  1  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  2  0  3  0  1  0  33.33%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  4  0  1  1  66.67%		12
  0  0  0  0  0  0  0  1  0  0  1  0  3  1  0  50.0%		13
  1  0  0  0  1  0  0  0  0  1  0  0  0  3  0  50.0%		14
  1  0  0  0  0  0  0  2  0  0  1  0  0  0  2  33.33%		15
Forest OOB Error: 49.78%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[93.33, 98.89, 97.78, 98.89, 98.89, 98.89, 96.67, 96.67, 97.78, 96.67, 97.78, 95.56, 98.89, 98.89, 96.67]%	[50.0, 92.31, 80.0, 90.91, 90.91, 90.91, 72.73, 80.0, 85.71, 76.92, 83.33, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[96.43, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[50.0, 85.71, 100.0, 100.0, 100.0, 100.0, 80.0, 66.67, 75.0, 71.43, 83.33, 66.67, 100.0, 85.71, 80.0]%	[96.43, 100.0, 97.67, 98.82, 98.82, 98.82, 97.65, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	81.09%	81.11%	98.65%	82.97%	98.66%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[98.89, 98.89, 100.0, 96.67, 98.89, 97.78, 96.67, 97.78, 98.89, 93.33, 95.56, 92.22, 96.67, 100.0, 95.56]%	[90.91, 92.31, 100.0, 72.73, 90.91, 83.33, 76.92, 80.0, 92.31, 50.0, 71.43, 46.15, 72.73, 100.0, 66.67]%	[83.33, 100.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 100.0, 50.0, 83.33, 50.0, 66.67, 100.0, 66.67]%	[100.0, 98.81, 100.0, 98.81, 100.0, 98.81, 97.62, 100.0, 98.81, 96.43, 96.43, 95.24, 98.81, 100.0, 97.62]%	[100.0, 85.71, 100.0, 80.0, 100.0, 83.33, 71.43, 100.0, 85.71, 50.0, 62.5, 42.86, 80.0, 100.0, 66.67]%	[98.82, 100.0, 100.0, 97.65, 98.82, 98.81, 98.8, 97.67, 100.0, 96.43, 98.78, 96.39, 97.65, 100.0, 97.62]%	||	79.09%	78.89%	98.49%	80.55%	98.5%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  1  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  0  0  1  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  3  0  3  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  1  0  3  0  0  1  50.0%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  1  0  0  0  0  4  66.67%		15
Forest OOB Error: 53.23%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[93.33, 98.89, 97.78, 98.89, 98.89, 98.89, 96.67, 96.67, 97.78, 96.67, 97.78, 95.56, 98.89, 98.89, 96.67]%	[50.0, 92.31, 80.0, 90.91, 90.91, 90.91, 72.73, 80.0, 85.71, 76.92, 83.33, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[96.43, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[50.0, 85.71, 100.0, 100.0, 100.0, 100.0, 80.0, 66.67, 75.0, 71.43, 83.33, 66.67, 100.0, 85.71, 80.0]%	[96.43, 100.0, 97.67, 98.82, 98.82, 98.82, 97.65, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	81.09%	81.11%	98.65%	82.97%	98.66%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[98.89, 97.78, 100.0, 93.33, 100.0, 94.44, 94.44, 94.44, 97.78, 97.78, 94.44, 100.0, 98.89, 100.0, 97.78]%	[90.91, 83.33, 100.0, 40.0, 100.0, 61.54, 70.59, 61.54, 83.33, 80.0, 61.54, 100.0, 90.91, 100.0, 80.0]%	[83.33, 83.33, 100.0, 33.33, 100.0, 66.67, 100.0, 66.67, 83.33, 66.67, 66.67, 100.0, 83.33, 100.0, 66.67]%	[100.0, 98.81, 100.0, 97.62, 100.0, 96.43, 94.05, 96.43, 98.81, 100.0, 96.43, 100.0, 100.0, 100.0, 100.0]%	[100.0, 83.33, 100.0, 50.0, 100.0, 57.14, 54.55, 57.14, 83.33, 100.0, 57.14, 100.0, 100.0, 100.0, 100.0]%	[98.82, 98.81, 100.0, 95.35, 100.0, 97.59, 100.0, 97.59, 98.81, 97.67, 97.59, 100.0, 98.82, 100.0, 97.67]%	||	80.25%	80.0%	98.57%	82.84%	98.58%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  2  0  3  1  0  0  0  0  0  0  0  0  33.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  2  0  4  0  0  0  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  1  4  0  0  1  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  5  0  1  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  1  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  1  0  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  1  0  0  0  4  66.67%		15
Forest OOB Error: 57.25%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	80.0%	97.33%	78.57%	[93.33, 98.89, 97.78, 98.89, 98.89, 98.89, 96.67, 95.56, 97.78, 96.67, 96.67, 95.56, 98.89, 98.89, 96.67]%	[50.0, 92.31, 80.0, 90.91, 90.91, 90.91, 72.73, 71.43, 85.71, 76.92, 76.92, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[96.43, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 97.62, 97.62, 100.0, 98.81, 98.81]%	[50.0, 85.71, 100.0, 100.0, 100.0, 100.0, 80.0, 62.5, 75.0, 71.43, 71.43, 66.67, 100.0, 85.71, 80.0]%	[96.43, 100.0, 97.67, 98.82, 98.82, 98.82, 97.65, 98.78, 100.0, 98.8, 98.8, 97.62, 98.82, 100.0, 97.65]%	||	80.09%	80.0%	98.57%	81.9%	98.58%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[94.44, 96.67, 98.89, 96.67, 98.89, 96.67, 94.44, 95.56, 97.78, 95.56, 95.56, 96.67, 96.67, 98.89, 97.78]%	[54.55, 72.73, 92.31, 66.67, 90.91, 72.73, 66.67, 66.67, 83.33, 71.43, 71.43, 72.73, 76.92, 92.31, 80.0]%	[50.0, 66.67, 100.0, 50.0, 83.33, 66.67, 83.33, 66.67, 83.33, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 95.24, 97.62, 98.81, 96.43, 96.43, 98.81, 97.62, 98.81, 100.0]%	[60.0, 80.0, 85.71, 100.0, 100.0, 80.0, 55.56, 66.67, 83.33, 62.5, 62.5, 80.0, 71.43, 85.71, 100.0]%	[96.47, 97.65, 100.0, 96.55, 98.82, 97.65, 98.77, 97.62, 98.81, 98.78, 98.78, 97.65, 98.8, 100.0, 97.67]%	||	75.42%	75.56%	98.25%	78.23%	98.27%	
  3  1  0  0  0  0  0  1  0  1  0  0  0  0  0  50.0%		1
  0  4  0  0  0  0  2  0  0  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  3  0  1  1  0  0  0  0  0  0  1  0  50.0%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  1  0  0  0  0  0  66.67%		6
  1  0  0  0  0  0  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  1  0  0  0  0  0  1  0  0  0  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  1  0  4  66.67%		15
Forest OOB Error: 56.27%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	80.0%	97.33%	78.57%	[93.33, 98.89, 97.78, 98.89, 98.89, 98.89, 96.67, 95.56, 97.78, 96.67, 96.67, 95.56, 98.89, 98.89, 96.67]%	[50.0, 92.31, 80.0, 90.91, 90.91, 90.91, 72.73, 71.43, 85.71, 76.92, 76.92, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[96.43, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 97.62, 97.62, 100.0, 98.81, 98.81]%	[50.0, 85.71, 100.0, 100.0, 100.0, 100.0, 80.0, 62.5, 75.0, 71.43, 71.43, 66.67, 100.0, 85.71, 80.0]%	[96.43, 100.0, 97.67, 98.82, 98.82, 98.82, 97.65, 98.78, 100.0, 98.8, 98.8, 97.62, 98.82, 100.0, 97.65]%	||	80.09%	80.0%	98.57%	81.9%	98.58%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	67.78%	95.7%	65.48%	[97.78, 95.56, 97.78, 97.78, 97.78, 95.56, 91.11, 94.44, 98.89, 92.22, 94.44, 96.67, 97.78, 94.44, 93.33]%	[80.0, 60.0, 85.71, 80.0, 80.0, 66.67, 60.0, 61.54, 90.91, 46.15, 61.54, 66.67, 83.33, 61.54, 40.0]%	[66.67, 50.0, 100.0, 66.67, 66.67, 66.67, 100.0, 66.67, 83.33, 50.0, 66.67, 50.0, 83.33, 66.67, 33.33]%	[100.0, 98.81, 97.62, 100.0, 100.0, 97.62, 90.48, 96.43, 100.0, 95.24, 96.43, 100.0, 98.81, 96.43, 97.62]%	[100.0, 75.0, 75.0, 100.0, 100.0, 66.67, 42.86, 57.14, 100.0, 42.86, 57.14, 100.0, 83.33, 57.14, 50.0]%	[97.67, 96.51, 100.0, 97.67, 97.67, 97.62, 100.0, 97.59, 98.82, 96.39, 97.59, 96.55, 98.81, 97.59, 95.35]%	||	68.27%	67.78%	97.7%	73.81%	97.72%	
  4  1  0  0  0  0  0  0  0  0  0  0  0  0  1  66.67%		1
  0  3  0  0  0  0  3  0  0  0  0  0  0  0  0  50.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  4  0  1  0  0  1  0  0  0  0  0  66.67%		5
  0  0  1  0  0  4  0  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  0  0  1  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  4  0  0  1  0  66.67%		11
  0  0  0  0  0  0  1  0  0  1  0  3  0  0  1  50.0%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  1  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  1  0  1  1  0  1  0  2  33.33%		15
Forest OOB Error: 57.46%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	80.0%	97.33%	78.57%	[93.33, 98.89, 97.78, 98.89, 98.89, 98.89, 96.67, 95.56, 97.78, 96.67, 96.67, 95.56, 98.89, 98.89, 96.67]%	[50.0, 92.31, 80.0, 90.91, 90.91, 90.91, 72.73, 71.43, 85.71, 76.92, 76.92, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[96.43, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 97.62, 97.62, 100.0, 98.81, 98.81]%	[50.0, 85.71, 100.0, 100.0, 100.0, 100.0, 80.0, 62.5, 75.0, 71.43, 71.43, 66.67, 100.0, 85.71, 80.0]%	[96.43, 100.0, 97.67, 98.82, 98.82, 98.82, 97.65, 98.78, 100.0, 98.8, 98.8, 97.62, 98.82, 100.0, 97.65]%	||	80.09%	80.0%	98.57%	81.9%	98.58%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[98.89, 96.67, 100.0, 95.56, 98.89, 95.56, 95.56, 93.33, 94.44, 98.89, 94.44, 97.78, 95.56, 97.78, 97.78]%	[90.91, 76.92, 100.0, 50.0, 90.91, 66.67, 71.43, 50.0, 66.67, 90.91, 54.55, 83.33, 66.67, 85.71, 83.33]%	[83.33, 83.33, 100.0, 33.33, 83.33, 66.67, 83.33, 50.0, 83.33, 83.33, 50.0, 83.33, 66.67, 100.0, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 97.62, 96.43, 96.43, 95.24, 100.0, 97.62, 98.81, 97.62, 97.62, 98.81]%	[100.0, 71.43, 100.0, 100.0, 100.0, 66.67, 62.5, 50.0, 55.56, 100.0, 60.0, 83.33, 66.67, 75.0, 83.33]%	[98.82, 98.8, 100.0, 95.45, 98.82, 97.62, 98.78, 96.43, 98.77, 98.82, 96.47, 98.81, 97.62, 100.0, 98.81]%	||	75.2%	75.56%	98.25%	78.3%	98.27%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  2  0  2  1  0  0  0  0  0  1  0  0  33.33%		4
  0  0  0  0  5  0  0  0  1  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  0  1  0  0  0  0  0  0  83.33%		7
  0  1  0  0  0  0  0  3  1  0  0  0  0  0  1  50.0%		8
  0  0  0  0  0  0  0  1  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  3  0  1  1  0  50.0%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  1  0  0  0  5  83.33%		15
Forest OOB Error: 54.15%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	80.0%	97.33%	78.57%	[93.33, 98.89, 97.78, 98.89, 98.89, 98.89, 96.67, 95.56, 97.78, 96.67, 96.67, 95.56, 98.89, 98.89, 96.67]%	[50.0, 92.31, 80.0, 90.91, 90.91, 90.91, 72.73, 71.43, 85.71, 76.92, 76.92, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[96.43, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 97.62, 97.62, 100.0, 98.81, 98.81]%	[50.0, 85.71, 100.0, 100.0, 100.0, 100.0, 80.0, 62.5, 75.0, 71.43, 71.43, 66.67, 100.0, 85.71, 80.0]%	[96.43, 100.0, 97.67, 98.82, 98.82, 98.82, 97.65, 98.78, 100.0, 98.8, 98.8, 97.62, 98.82, 100.0, 97.65]%	||	80.09%	80.0%	98.57%	81.9%	98.58%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	74.44%	96.59%	72.62%	[96.67, 96.67, 96.67, 94.44, 96.67, 96.67, 97.78, 94.44, 100.0, 95.56, 95.56, 98.89, 94.44, 95.56, 98.89]%	[66.67, 76.92, 80.0, 61.54, 66.67, 72.73, 85.71, 61.54, 100.0, 66.67, 60.0, 90.91, 54.55, 75.0, 90.91]%	[50.0, 83.33, 100.0, 66.67, 50.0, 66.67, 100.0, 66.67, 100.0, 66.67, 50.0, 83.33, 50.0, 100.0, 83.33]%	[100.0, 97.62, 96.43, 96.43, 100.0, 98.81, 97.62, 96.43, 100.0, 97.62, 98.81, 100.0, 97.62, 95.24, 100.0]%	[100.0, 71.43, 66.67, 57.14, 100.0, 80.0, 75.0, 57.14, 100.0, 66.67, 75.0, 100.0, 60.0, 60.0, 100.0]%	[96.55, 98.8, 100.0, 97.59, 96.55, 97.65, 100.0, 97.59, 100.0, 97.62, 96.51, 98.82, 96.47, 100.0, 98.82]%	||	73.99%	74.44%	98.17%	77.94%	98.2%	
  3  1  0  0  0  0  0  0  0  0  0  0  1  1  0  50.0%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  1  1  3  0  0  0  0  1  0  0  0  0  0  50.0%		5
  0  1  0  0  0  4  0  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  1  1  0  0  0  4  0  0  0  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  4  0  0  0  2  0  66.67%		10
  0  0  1  0  0  0  0  2  0  0  3  0  0  0  0  50.0%		11
  0  0  0  1  0  0  0  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  1  0  1  1  0  3  0  0  50.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 54.32%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	80.0%	97.33%	78.57%	[93.33, 98.89, 97.78, 98.89, 98.89, 98.89, 96.67, 95.56, 97.78, 96.67, 96.67, 95.56, 98.89, 98.89, 96.67]%	[50.0, 92.31, 80.0, 90.91, 90.91, 90.91, 72.73, 71.43, 85.71, 76.92, 76.92, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[96.43, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 97.62, 97.62, 100.0, 98.81, 98.81]%	[50.0, 85.71, 100.0, 100.0, 100.0, 100.0, 80.0, 62.5, 75.0, 71.43, 71.43, 66.67, 100.0, 85.71, 80.0]%	[96.43, 100.0, 97.67, 98.82, 98.82, 98.82, 97.65, 98.78, 100.0, 98.8, 98.8, 97.62, 98.82, 100.0, 97.65]%	||	80.09%	80.0%	98.57%	81.9%	98.58%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[97.78, 98.89, 93.33, 93.33, 96.67, 96.67, 96.67, 98.89, 96.67, 98.89, 96.67, 97.78, 97.78, 98.89, 98.89]%	[80.0, 92.31, 62.5, 57.14, 66.67, 72.73, 76.92, 90.91, 76.92, 92.31, 72.73, 83.33, 83.33, 90.91, 90.91]%	[66.67, 100.0, 83.33, 66.67, 50.0, 66.67, 83.33, 83.33, 83.33, 100.0, 66.67, 83.33, 83.33, 83.33, 83.33]%	[100.0, 98.81, 94.05, 95.24, 100.0, 98.81, 97.62, 100.0, 97.62, 98.81, 98.81, 98.81, 98.81, 100.0, 100.0]%	[100.0, 85.71, 50.0, 50.0, 100.0, 80.0, 71.43, 100.0, 71.43, 85.71, 80.0, 83.33, 83.33, 100.0, 100.0]%	[97.67, 100.0, 98.75, 97.56, 96.55, 97.65, 98.8, 98.82, 98.8, 100.0, 97.65, 98.81, 98.81, 98.82, 98.82]%	||	79.31%	78.89%	98.49%	82.73%	98.5%	
  4  1  0  1  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  1  1  3  0  0  0  0  0  0  1  0  0  0  50.0%		5
  0  0  0  1  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  5  0  1  0  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  1  0  0  0  0  0  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  1  0  0  0  0  0  0  0  0  0  5  0  0  83.33%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  1  0  0  0  5  83.33%		15
Forest OOB Error: 53.61%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	80.0%	97.33%	78.57%	[93.33, 98.89, 97.78, 98.89, 98.89, 98.89, 96.67, 95.56, 97.78, 96.67, 96.67, 95.56, 98.89, 98.89, 96.67]%	[50.0, 92.31, 80.0, 90.91, 90.91, 90.91, 72.73, 71.43, 85.71, 76.92, 76.92, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[96.43, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 97.62, 97.62, 100.0, 98.81, 98.81]%	[50.0, 85.71, 100.0, 100.0, 100.0, 100.0, 80.0, 62.5, 75.0, 71.43, 71.43, 66.67, 100.0, 85.71, 80.0]%	[96.43, 100.0, 97.67, 98.82, 98.82, 98.82, 97.65, 98.78, 100.0, 98.8, 98.8, 97.62, 98.82, 100.0, 97.65]%	||	80.09%	80.0%	98.57%	81.9%	98.58%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[98.89, 97.78, 100.0, 96.67, 97.78, 96.67, 94.44, 94.44, 98.89, 95.56, 92.22, 98.89, 97.78, 97.78, 97.78]%	[90.91, 83.33, 100.0, 72.73, 83.33, 76.92, 61.54, 61.54, 92.31, 66.67, 53.33, 90.91, 80.0, 83.33, 80.0]%	[83.33, 83.33, 100.0, 66.67, 83.33, 83.33, 66.67, 66.67, 100.0, 66.67, 66.67, 83.33, 66.67, 83.33, 66.67]%	[100.0, 98.81, 100.0, 98.81, 98.81, 97.62, 96.43, 96.43, 98.81, 97.62, 94.05, 100.0, 100.0, 98.81, 100.0]%	[100.0, 83.33, 100.0, 80.0, 83.33, 71.43, 57.14, 57.14, 85.71, 66.67, 44.44, 100.0, 100.0, 83.33, 100.0]%	[98.82, 98.81, 100.0, 97.65, 98.81, 98.8, 97.59, 97.59, 100.0, 97.62, 97.53, 98.82, 97.67, 98.81, 97.67]%	||	78.46%	77.78%	98.41%	80.84%	98.41%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  1  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  4  0  1  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  1  0  0  1  0  0  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  1  0  0  0  4  66.67%		15
Forest OOB Error: 52.11%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[94.44, 98.89, 97.78, 98.89, 98.89, 98.89, 97.78, 96.67, 97.78, 96.67, 97.78, 95.56, 98.89, 98.89, 96.67]%	[54.55, 92.31, 80.0, 90.91, 90.91, 90.91, 83.33, 80.0, 85.71, 76.92, 83.33, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[60.0, 85.71, 100.0, 100.0, 100.0, 100.0, 83.33, 66.67, 75.0, 71.43, 83.33, 66.67, 100.0, 85.71, 80.0]%	[96.47, 100.0, 97.67, 98.82, 98.82, 98.82, 98.81, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	82.1%	82.22%	98.73%	83.86%	98.74%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[97.78, 98.89, 100.0, 98.89, 98.89, 95.56, 94.44, 97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 98.89, 96.67]%	[80.0, 92.31, 100.0, 90.91, 92.31, 60.0, 61.54, 83.33, 90.91, 92.31, 76.92, 83.33, 76.92, 92.31, 72.73]%	[66.67, 100.0, 100.0, 83.33, 100.0, 50.0, 66.67, 83.33, 83.33, 100.0, 83.33, 83.33, 83.33, 100.0, 66.67]%	[100.0, 98.81, 100.0, 100.0, 98.81, 98.81, 96.43, 98.81, 100.0, 98.81, 97.62, 98.81, 97.62, 98.81, 98.81]%	[100.0, 85.71, 100.0, 100.0, 85.71, 75.0, 57.14, 83.33, 100.0, 85.71, 71.43, 83.33, 71.43, 85.71, 80.0]%	[97.67, 100.0, 100.0, 98.82, 100.0, 96.51, 97.59, 98.81, 98.82, 100.0, 98.8, 98.81, 98.8, 100.0, 97.65]%	||	83.06%	83.33%	98.81%	84.3%	98.82%	
  4  1  0  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  1  3  1  0  0  0  0  0  0  1  0  50.0%		6
  0  0  0  0  0  1  4  0  0  0  0  1  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  1  0  4  66.67%		15
Forest OOB Error: 49.05%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[94.44, 98.89, 97.78, 98.89, 98.89, 98.89, 97.78, 96.67, 97.78, 96.67, 97.78, 95.56, 98.89, 98.89, 96.67]%	[54.55, 92.31, 80.0, 90.91, 90.91, 90.91, 83.33, 80.0, 85.71, 76.92, 83.33, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[60.0, 85.71, 100.0, 100.0, 100.0, 100.0, 83.33, 66.67, 75.0, 71.43, 83.33, 66.67, 100.0, 85.71, 80.0]%	[96.47, 100.0, 97.67, 98.82, 98.82, 98.82, 98.81, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	82.1%	82.22%	98.73%	83.86%	98.74%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[96.67, 98.89, 96.67, 97.78, 96.67, 96.67, 95.56, 97.78, 97.78, 98.89, 95.56, 97.78, 96.67, 98.89, 95.56]%	[72.73, 92.31, 76.92, 80.0, 66.67, 76.92, 71.43, 80.0, 85.71, 92.31, 71.43, 83.33, 72.73, 92.31, 60.0]%	[66.67, 100.0, 83.33, 66.67, 50.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 100.0, 50.0]%	[98.81, 98.81, 97.62, 100.0, 100.0, 97.62, 96.43, 100.0, 97.62, 98.81, 96.43, 98.81, 98.81, 98.81, 98.81]%	[80.0, 85.71, 71.43, 100.0, 100.0, 71.43, 62.5, 100.0, 75.0, 85.71, 62.5, 83.33, 80.0, 85.71, 75.0]%	[97.65, 100.0, 98.8, 97.67, 96.55, 98.8, 98.78, 97.67, 100.0, 100.0, 98.78, 98.81, 97.65, 100.0, 96.51]%	||	78.32%	78.89%	98.49%	81.22%	98.51%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  2  0  3  0  0  0  0  1  0  0  0  0  0  50.0%		5
  1  0  0  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  1  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  1  1  0  0  0  0  0  0  1  3  50.0%		15
Forest OOB Error: 49.61%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[94.44, 98.89, 97.78, 98.89, 98.89, 98.89, 97.78, 96.67, 97.78, 96.67, 97.78, 95.56, 98.89, 98.89, 96.67]%	[54.55, 92.31, 80.0, 90.91, 90.91, 90.91, 83.33, 80.0, 85.71, 76.92, 83.33, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[60.0, 85.71, 100.0, 100.0, 100.0, 100.0, 83.33, 66.67, 75.0, 71.43, 83.33, 66.67, 100.0, 85.71, 80.0]%	[96.47, 100.0, 97.67, 98.82, 98.82, 98.82, 98.81, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	82.1%	82.22%	98.73%	83.86%	98.74%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[96.67, 97.78, 95.56, 96.67, 96.67, 96.67, 96.67, 95.56, 97.78, 98.89, 96.67, 97.78, 97.78, 98.89, 95.56]%	[66.67, 85.71, 75.0, 72.73, 66.67, 76.92, 76.92, 60.0, 85.71, 92.31, 72.73, 80.0, 83.33, 92.31, 66.67]%	[50.0, 100.0, 100.0, 66.67, 50.0, 83.33, 83.33, 50.0, 100.0, 100.0, 66.67, 66.67, 83.33, 100.0, 66.67]%	[100.0, 97.62, 95.24, 98.81, 100.0, 97.62, 97.62, 98.81, 97.62, 98.81, 98.81, 100.0, 98.81, 98.81, 97.62]%	[100.0, 75.0, 60.0, 80.0, 100.0, 71.43, 71.43, 75.0, 75.0, 85.71, 80.0, 100.0, 83.33, 85.71, 66.67]%	[96.55, 100.0, 100.0, 97.65, 96.55, 98.8, 98.8, 96.51, 100.0, 100.0, 97.65, 97.67, 98.81, 100.0, 97.62]%	||	76.91%	77.78%	98.41%	80.62%	98.44%	
  3  2  0  0  0  1  0  0  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  2  0  3  0  0  0  0  1  0  0  0  0  0  50.0%		5
  0  0  0  1  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  1  0  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  3  1  0  0  0  0  0  1  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  1  0  0  0  0  0  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  0  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  1  4  66.67%		15
Forest OOB Error: 45.2%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[94.44, 98.89, 97.78, 98.89, 98.89, 98.89, 97.78, 96.67, 97.78, 96.67, 97.78, 95.56, 98.89, 98.89, 96.67]%	[54.55, 92.31, 80.0, 90.91, 90.91, 90.91, 83.33, 80.0, 85.71, 76.92, 83.33, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[60.0, 85.71, 100.0, 100.0, 100.0, 100.0, 83.33, 66.67, 75.0, 71.43, 83.33, 66.67, 100.0, 85.71, 80.0]%	[96.47, 100.0, 97.67, 98.82, 98.82, 98.82, 98.81, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	82.1%	82.22%	98.73%	83.86%	98.74%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[97.78, 98.89, 97.78, 98.89, 97.78, 95.56, 96.67, 95.56, 97.78, 98.89, 97.78, 98.89, 95.56, 96.67, 95.56]%	[80.0, 92.31, 80.0, 90.91, 83.33, 66.67, 72.73, 60.0, 85.71, 92.31, 83.33, 90.91, 71.43, 80.0, 66.67]%	[66.67, 100.0, 66.67, 83.33, 83.33, 66.67, 66.67, 50.0, 100.0, 100.0, 83.33, 83.33, 83.33, 100.0, 66.67]%	[100.0, 98.81, 100.0, 100.0, 98.81, 97.62, 98.81, 98.81, 97.62, 98.81, 98.81, 100.0, 96.43, 96.43, 97.62]%	[100.0, 85.71, 100.0, 100.0, 83.33, 66.67, 80.0, 75.0, 75.0, 85.71, 83.33, 100.0, 62.5, 66.67, 66.67]%	[97.67, 100.0, 97.67, 98.82, 98.81, 97.62, 97.65, 96.51, 100.0, 100.0, 98.81, 98.82, 98.78, 100.0, 97.62]%	||	79.75%	80.0%	98.57%	82.04%	98.59%	
  4  1  0  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  4  0  0  0  0  0  1  0  0  0  0  1  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  1  4  0  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  1  4  0  0  0  0  0  0  1  0  66.67%		7
  0  0  0  0  0  0  0  3  0  0  0  0  2  0  1  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 49.41%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[94.44, 98.89, 97.78, 98.89, 98.89, 98.89, 97.78, 96.67, 97.78, 96.67, 97.78, 95.56, 98.89, 98.89, 96.67]%	[54.55, 92.31, 80.0, 90.91, 90.91, 90.91, 83.33, 80.0, 85.71, 76.92, 83.33, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[60.0, 85.71, 100.0, 100.0, 100.0, 100.0, 83.33, 66.67, 75.0, 71.43, 83.33, 66.67, 100.0, 85.71, 80.0]%	[96.47, 100.0, 97.67, 98.82, 98.82, 98.82, 98.81, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	82.1%	82.22%	98.73%	83.86%	98.74%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[97.78, 97.78, 100.0, 97.78, 98.89, 97.78, 95.56, 97.78, 97.78, 97.78, 97.78, 93.33, 98.89, 97.78, 95.56]%	[80.0, 83.33, 100.0, 83.33, 90.91, 83.33, 71.43, 80.0, 83.33, 80.0, 85.71, 62.5, 90.91, 83.33, 66.67]%	[66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 66.67, 83.33, 66.67, 100.0, 83.33, 83.33, 83.33, 66.67]%	[100.0, 98.81, 100.0, 98.81, 100.0, 98.81, 96.43, 100.0, 98.81, 100.0, 97.62, 94.05, 100.0, 98.81, 97.62]%	[100.0, 83.33, 100.0, 83.33, 100.0, 83.33, 62.5, 100.0, 83.33, 100.0, 75.0, 50.0, 100.0, 83.33, 66.67]%	[97.67, 98.81, 100.0, 98.81, 98.82, 98.81, 98.78, 97.67, 98.81, 97.67, 100.0, 98.75, 98.82, 98.81, 97.62]%	||	81.65%	81.11%	98.65%	84.72%	98.66%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  1  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  0  0  1  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  4  0  2  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  1  4  66.67%		15
Forest OOB Error: 54.58%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[94.44, 98.89, 97.78, 98.89, 98.89, 98.89, 97.78, 96.67, 97.78, 96.67, 97.78, 95.56, 98.89, 98.89, 96.67]%	[54.55, 92.31, 80.0, 90.91, 90.91, 90.91, 83.33, 80.0, 85.71, 76.92, 83.33, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[60.0, 85.71, 100.0, 100.0, 100.0, 100.0, 83.33, 66.67, 75.0, 71.43, 83.33, 66.67, 100.0, 85.71, 80.0]%	[96.47, 100.0, 97.67, 98.82, 98.82, 98.82, 98.81, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	82.1%	82.22%	98.73%	83.86%	98.74%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[96.67, 98.89, 100.0, 97.78, 98.89, 96.67, 93.33, 96.67, 97.78, 97.78, 95.56, 96.67, 96.67, 96.67, 97.78]%	[66.67, 92.31, 100.0, 83.33, 92.31, 76.92, 40.0, 76.92, 83.33, 85.71, 66.67, 72.73, 76.92, 72.73, 83.33]%	[50.0, 100.0, 100.0, 83.33, 100.0, 83.33, 33.33, 83.33, 83.33, 100.0, 66.67, 66.67, 83.33, 66.67, 83.33]%	[100.0, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 97.62, 98.81, 97.62, 97.62, 98.81, 97.62, 98.81, 98.81]%	[100.0, 85.71, 100.0, 83.33, 85.71, 71.43, 50.0, 71.43, 83.33, 75.0, 66.67, 80.0, 71.43, 80.0, 83.33]%	[96.55, 100.0, 100.0, 98.81, 100.0, 98.8, 95.35, 98.8, 98.81, 100.0, 97.62, 97.65, 98.8, 97.65, 98.81]%	||	77.99%	78.89%	98.49%	79.16%	98.51%	
  3  1  0  1  0  0  0  0  0  0  0  0  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  1  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  2  0  1  1  0  1  0  0  0  33.33%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  5  0  0  0  1  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  1  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 52.76%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[93.33, 98.89, 97.78, 98.89, 98.89, 98.89, 96.67, 96.67, 97.78, 96.67, 97.78, 95.56, 98.89, 98.89, 96.67]%	[50.0, 92.31, 80.0, 90.91, 90.91, 90.91, 72.73, 80.0, 85.71, 76.92, 83.33, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[96.43, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[50.0, 85.71, 100.0, 100.0, 100.0, 100.0, 80.0, 66.67, 75.0, 71.43, 83.33, 66.67, 100.0, 85.71, 80.0]%	[96.43, 100.0, 97.67, 98.82, 98.82, 98.82, 97.65, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	81.09%	81.11%	98.65%	82.97%	98.66%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[97.78, 96.67, 100.0, 97.78, 98.89, 97.78, 97.78, 95.56, 97.78, 95.56, 98.89, 95.56, 98.89, 100.0, 95.56]%	[80.0, 80.0, 100.0, 80.0, 90.91, 83.33, 83.33, 60.0, 85.71, 71.43, 92.31, 66.67, 90.91, 100.0, 66.67]%	[66.67, 100.0, 100.0, 66.67, 83.33, 83.33, 83.33, 50.0, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 66.67]%	[100.0, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 98.81, 97.62, 96.43, 98.81, 97.62, 100.0, 100.0, 97.62]%	[100.0, 66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 75.0, 75.0, 62.5, 85.71, 66.67, 100.0, 100.0, 66.67]%	[97.67, 100.0, 100.0, 97.67, 98.82, 98.81, 98.81, 96.51, 100.0, 98.78, 100.0, 97.62, 98.82, 100.0, 97.62]%	||	82.08%	82.22%	98.73%	84.33%	98.74%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  0  0  0  1  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  1  0  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  1  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  3  1  0  0  0  0  0  2  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  1  0  0  0  0  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 50.38%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[93.33, 98.89, 97.78, 98.89, 98.89, 98.89, 96.67, 96.67, 97.78, 96.67, 97.78, 95.56, 98.89, 98.89, 96.67]%	[50.0, 92.31, 80.0, 90.91, 90.91, 90.91, 72.73, 80.0, 85.71, 76.92, 83.33, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[96.43, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[50.0, 85.71, 100.0, 100.0, 100.0, 100.0, 80.0, 66.67, 75.0, 71.43, 83.33, 66.67, 100.0, 85.71, 80.0]%	[96.43, 100.0, 97.67, 98.82, 98.82, 98.82, 97.65, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	81.09%	81.11%	98.65%	82.97%	98.66%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[98.89, 95.56, 98.89, 98.89, 98.89, 96.67, 94.44, 96.67, 97.78, 95.56, 94.44, 95.56, 96.67, 96.67, 97.78]%	[90.91, 66.67, 92.31, 90.91, 90.91, 72.73, 66.67, 76.92, 83.33, 71.43, 61.54, 66.67, 72.73, 72.73, 80.0]%	[83.33, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 83.33, 66.67, 66.67, 66.67, 66.67, 66.67]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 95.24, 97.62, 98.81, 96.43, 96.43, 97.62, 98.81, 98.81, 100.0]%	[100.0, 66.67, 85.71, 100.0, 100.0, 80.0, 55.56, 71.43, 83.33, 62.5, 57.14, 66.67, 80.0, 80.0, 100.0]%	[98.82, 97.62, 100.0, 98.82, 98.82, 97.65, 98.77, 98.8, 98.81, 98.78, 97.59, 97.62, 97.65, 97.65, 97.67]%	||	77.1%	76.67%	98.33%	79.27%	98.34%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  4  0  0  0  0  2  0  0  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  1  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  1  0  4  0  66.67%		14
  0  0  0  0  0  0  0  1  0  0  1  0  0  0  4  66.67%		15
Forest OOB Error: 59.7%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[93.33, 98.89, 97.78, 98.89, 98.89, 98.89, 96.67, 96.67, 97.78, 96.67, 97.78, 95.56, 98.89, 98.89, 96.67]%	[50.0, 92.31, 80.0, 90.91, 90.91, 90.91, 72.73, 80.0, 85.71, 76.92, 83.33, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[96.43, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[50.0, 85.71, 100.0, 100.0, 100.0, 100.0, 80.0, 66.67, 75.0, 71.43, 83.33, 66.67, 100.0, 85.71, 80.0]%	[96.43, 100.0, 97.67, 98.82, 98.82, 98.82, 97.65, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	81.09%	81.11%	98.65%	82.97%	98.66%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[97.78, 98.89, 100.0, 96.67, 98.89, 96.67, 97.78, 94.44, 98.89, 96.67, 95.56, 97.78, 97.78, 98.89, 95.56]%	[80.0, 92.31, 100.0, 76.92, 90.91, 76.92, 83.33, 61.54, 92.31, 76.92, 66.67, 83.33, 83.33, 90.91, 60.0]%	[66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 50.0]%	[100.0, 98.81, 100.0, 97.62, 100.0, 97.62, 98.81, 96.43, 98.81, 97.62, 97.62, 98.81, 98.81, 100.0, 98.81]%	[100.0, 85.71, 100.0, 71.43, 100.0, 71.43, 83.33, 57.14, 85.71, 71.43, 66.67, 83.33, 83.33, 100.0, 75.0]%	[97.67, 100.0, 100.0, 98.8, 98.82, 98.8, 98.81, 97.59, 100.0, 98.8, 97.62, 98.81, 98.81, 98.82, 96.51]%	||	81.03%	81.11%	98.65%	82.3%	98.66%	
  4  1  0  1  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  1  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  1  0  1  0  1  0  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 49.22%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[93.33, 98.89, 97.78, 98.89, 98.89, 98.89, 96.67, 96.67, 97.78, 96.67, 97.78, 95.56, 98.89, 98.89, 96.67]%	[50.0, 92.31, 80.0, 90.91, 90.91, 90.91, 72.73, 80.0, 85.71, 76.92, 83.33, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[96.43, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[50.0, 85.71, 100.0, 100.0, 100.0, 100.0, 80.0, 66.67, 75.0, 71.43, 83.33, 66.67, 100.0, 85.71, 80.0]%	[96.43, 100.0, 97.67, 98.82, 98.82, 98.82, 97.65, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	81.09%	81.11%	98.65%	82.97%	98.66%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[97.78, 98.89, 98.89, 97.78, 97.78, 96.67, 93.33, 94.44, 97.78, 94.44, 95.56, 94.44, 98.89, 97.78, 96.67]%	[83.33, 92.31, 90.91, 83.33, 83.33, 72.73, 57.14, 54.55, 83.33, 54.55, 71.43, 61.54, 92.31, 83.33, 66.67]%	[83.33, 100.0, 83.33, 83.33, 83.33, 66.67, 66.67, 50.0, 83.33, 50.0, 83.33, 66.67, 100.0, 83.33, 50.0]%	[98.81, 98.81, 100.0, 98.81, 98.81, 98.81, 95.24, 97.62, 98.81, 97.62, 96.43, 96.43, 98.81, 98.81, 100.0]%	[83.33, 85.71, 100.0, 83.33, 83.33, 80.0, 50.0, 60.0, 83.33, 60.0, 62.5, 57.14, 85.71, 83.33, 100.0]%	[98.81, 100.0, 98.82, 98.81, 98.81, 97.65, 97.56, 96.47, 98.81, 96.47, 98.78, 97.59, 100.0, 98.81, 96.55]%	||	75.39%	75.56%	98.25%	77.18%	98.26%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  1  0  0  0  83.33%		5
  0  0  0  1  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  1  0  0  0  0  0  4  0  0  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  3  0  0  3  0  0  0  0  50.0%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  3  0  2  0  1  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  2  0  0  0  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  1  0  0  1  0  3  50.0%		15
Forest OOB Error: 51.68%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[93.33, 98.89, 97.78, 98.89, 98.89, 98.89, 96.67, 96.67, 97.78, 96.67, 97.78, 95.56, 98.89, 98.89, 96.67]%	[50.0, 92.31, 80.0, 90.91, 90.91, 90.91, 72.73, 80.0, 85.71, 76.92, 83.33, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[96.43, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[50.0, 85.71, 100.0, 100.0, 100.0, 100.0, 80.0, 66.67, 75.0, 71.43, 83.33, 66.67, 100.0, 85.71, 80.0]%	[96.43, 100.0, 97.67, 98.82, 98.82, 98.82, 97.65, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	81.09%	81.11%	98.65%	82.97%	98.66%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[98.89, 97.78, 98.89, 98.89, 97.78, 96.67, 100.0, 93.33, 100.0, 95.56, 98.89, 95.56, 95.56, 98.89, 95.56]%	[90.91, 85.71, 92.31, 90.91, 80.0, 76.92, 100.0, 50.0, 100.0, 71.43, 90.91, 60.0, 71.43, 90.91, 66.67]%	[83.33, 100.0, 100.0, 83.33, 66.67, 83.33, 100.0, 50.0, 100.0, 83.33, 83.33, 50.0, 83.33, 83.33, 66.67]%	[100.0, 97.62, 98.81, 100.0, 100.0, 97.62, 100.0, 96.43, 100.0, 96.43, 100.0, 98.81, 96.43, 100.0, 97.62]%	[100.0, 75.0, 85.71, 100.0, 100.0, 71.43, 100.0, 50.0, 100.0, 62.5, 100.0, 75.0, 62.5, 100.0, 66.67]%	[98.82, 100.0, 100.0, 98.82, 97.67, 98.8, 100.0, 96.43, 100.0, 98.78, 98.82, 96.51, 98.78, 98.82, 97.62]%	||	81.21%	81.11%	98.65%	83.25%	98.66%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  1  0  0  0  0  0  66.67%		5
  0  1  0  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  3  0  0  0  0  2  0  1  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  2  0  3  0  0  1  50.0%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  0  0  1  0  4  66.67%		15
Forest OOB Error: 50.39%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	81.11%	97.48%	79.76%	[93.33, 98.89, 97.78, 98.89, 98.89, 98.89, 96.67, 96.67, 97.78, 96.67, 97.78, 95.56, 98.89, 98.89, 96.67]%	[50.0, 92.31, 80.0, 90.91, 90.91, 90.91, 72.73, 80.0, 85.71, 76.92, 83.33, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[96.43, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[50.0, 85.71, 100.0, 100.0, 100.0, 100.0, 80.0, 66.67, 75.0, 71.43, 83.33, 66.67, 100.0, 85.71, 80.0]%	[96.43, 100.0, 97.67, 98.82, 98.82, 98.82, 97.65, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	81.09%	81.11%	98.65%	82.97%	98.66%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	65.56%	95.41%	63.1%	[96.67, 95.56, 100.0, 94.44, 98.89, 95.56, 91.11, 94.44, 97.78, 93.33, 91.11, 93.33, 95.56, 96.67, 96.67]%	[80.0, 60.0, 100.0, 44.44, 90.91, 71.43, 55.56, 66.67, 83.33, 25.0, 42.86, 50.0, 50.0, 72.73, 72.73]%	[100.0, 50.0, 100.0, 33.33, 83.33, 83.33, 83.33, 83.33, 83.33, 16.67, 50.0, 50.0, 33.33, 66.67, 66.67]%	[96.43, 98.81, 100.0, 98.81, 100.0, 96.43, 91.67, 95.24, 98.81, 98.81, 94.05, 96.43, 100.0, 98.81, 98.81]%	[66.67, 75.0, 100.0, 66.67, 100.0, 62.5, 41.67, 55.56, 83.33, 50.0, 37.5, 50.0, 100.0, 80.0, 80.0]%	[100.0, 96.51, 100.0, 95.4, 98.82, 98.78, 98.72, 98.77, 98.81, 94.32, 96.34, 96.43, 95.45, 97.65, 97.65]%	||	64.38%	65.56%	97.54%	69.93%	97.58%	
  6  0  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		1
  1  3  0  0  0  0  2  0  0  0  0  0  0  0  0  50.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  2  0  2  1  0  0  1  0  0  0  0  0  33.33%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  1  0  0  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  5  0  0  0  0  1  0  83.33%		9
  1  0  0  0  0  0  0  0  1  1  0  3  0  0  0  16.67%		10
  0  0  0  0  0  0  0  3  0  0  3  0  0  0  0  50.0%		11
  0  0  0  0  0  0  2  0  0  0  0  3  0  0  1  50.0%		12
  0  0  0  1  0  0  0  0  0  0  3  0  2  0  0  33.33%		13
  0  1  0  0  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  1  0  0  1  0  0  0  4  66.67%		15
Forest OOB Error: 51.52%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	80.0%	97.33%	78.57%	[93.33, 98.89, 97.78, 98.89, 98.89, 98.89, 96.67, 95.56, 97.78, 96.67, 96.67, 95.56, 98.89, 98.89, 96.67]%	[50.0, 92.31, 80.0, 90.91, 90.91, 90.91, 72.73, 71.43, 85.71, 76.92, 76.92, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[96.43, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 97.62, 97.62, 100.0, 98.81, 98.81]%	[50.0, 85.71, 100.0, 100.0, 100.0, 100.0, 80.0, 62.5, 75.0, 71.43, 71.43, 66.67, 100.0, 85.71, 80.0]%	[96.43, 100.0, 97.67, 98.82, 98.82, 98.82, 97.65, 98.78, 100.0, 98.8, 98.8, 97.62, 98.82, 100.0, 97.65]%	||	80.09%	80.0%	98.57%	81.9%	98.58%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[98.89, 98.89, 100.0, 98.89, 96.67, 95.56, 98.89, 96.67, 97.78, 95.56, 96.67, 97.78, 96.67, 96.67, 96.67]%	[90.91, 92.31, 100.0, 90.91, 76.92, 60.0, 90.91, 72.73, 85.71, 71.43, 76.92, 83.33, 76.92, 72.73, 72.73]%	[83.33, 100.0, 100.0, 83.33, 83.33, 50.0, 83.33, 66.67, 100.0, 83.33, 83.33, 83.33, 83.33, 66.67, 66.67]%	[100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 98.81, 97.62, 96.43, 97.62, 98.81, 97.62, 98.81, 98.81]%	[100.0, 85.71, 100.0, 100.0, 71.43, 75.0, 100.0, 80.0, 75.0, 62.5, 71.43, 83.33, 71.43, 80.0, 80.0]%	[98.82, 100.0, 100.0, 98.82, 98.8, 96.51, 98.82, 97.65, 100.0, 98.78, 98.8, 98.81, 98.8, 97.65, 97.65]%	||	80.96%	81.11%	98.65%	82.39%	98.66%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  0  0  0  1  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  1  3  0  0  1  0  0  0  0  1  0  50.0%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  1  0  0  0  1  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  1  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  1  0  0  1  0  0  0  4  66.67%		15
Forest OOB Error: 46.01%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	80.0%	97.33%	78.57%	[93.33, 98.89, 97.78, 98.89, 98.89, 98.89, 96.67, 95.56, 97.78, 96.67, 96.67, 95.56, 98.89, 98.89, 96.67]%	[50.0, 92.31, 80.0, 90.91, 90.91, 90.91, 72.73, 71.43, 85.71, 76.92, 76.92, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[96.43, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 97.62, 97.62, 100.0, 98.81, 98.81]%	[50.0, 85.71, 100.0, 100.0, 100.0, 100.0, 80.0, 62.5, 75.0, 71.43, 71.43, 66.67, 100.0, 85.71, 80.0]%	[96.43, 100.0, 97.67, 98.82, 98.82, 98.82, 97.65, 98.78, 100.0, 98.8, 98.8, 97.62, 98.82, 100.0, 97.65]%	||	80.09%	80.0%	98.57%	81.9%	98.58%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[97.78, 96.67, 100.0, 97.78, 98.89, 96.67, 93.33, 93.33, 97.78, 94.44, 96.67, 96.67, 92.22, 97.78, 96.67]%	[80.0, 72.73, 100.0, 85.71, 90.91, 66.67, 66.67, 50.0, 83.33, 54.55, 72.73, 66.67, 58.82, 85.71, 66.67]%	[66.67, 66.67, 100.0, 100.0, 83.33, 50.0, 100.0, 50.0, 83.33, 50.0, 66.67, 50.0, 83.33, 100.0, 50.0]%	[100.0, 98.81, 100.0, 97.62, 100.0, 100.0, 92.86, 96.43, 98.81, 97.62, 98.81, 100.0, 92.86, 97.62, 100.0]%	[100.0, 80.0, 100.0, 75.0, 100.0, 100.0, 50.0, 50.0, 83.33, 60.0, 80.0, 100.0, 45.45, 75.0, 100.0]%	[97.67, 97.65, 100.0, 100.0, 98.82, 96.55, 100.0, 96.43, 98.81, 96.47, 97.65, 96.55, 98.73, 100.0, 96.55]%	||	73.41%	73.33%	98.1%	79.92%	98.13%	
  4  1  0  1  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  4  0  0  0  0  2  0  0  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  1  0  3  0  0  1  0  0  0  0  1  0  50.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  3  0  0  0  0  3  0  0  50.0%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  0  0  1  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  0  1  0  2  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  2  0  0  0  0  1  0  3  50.0%		15
Forest OOB Error: 52.77%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	80.0%	97.33%	78.57%	[93.33, 98.89, 97.78, 98.89, 98.89, 98.89, 96.67, 95.56, 97.78, 96.67, 96.67, 95.56, 98.89, 98.89, 96.67]%	[50.0, 92.31, 80.0, 90.91, 90.91, 90.91, 72.73, 71.43, 85.71, 76.92, 76.92, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[96.43, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 97.62, 97.62, 100.0, 98.81, 98.81]%	[50.0, 85.71, 100.0, 100.0, 100.0, 100.0, 80.0, 62.5, 75.0, 71.43, 71.43, 66.67, 100.0, 85.71, 80.0]%	[96.43, 100.0, 97.67, 98.82, 98.82, 98.82, 97.65, 98.78, 100.0, 98.8, 98.8, 97.62, 98.82, 100.0, 97.65]%	||	80.09%	80.0%	98.57%	81.9%	98.58%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	74.44%	96.59%	72.62%	[98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 96.67, 94.44, 95.56, 92.22, 93.33, 95.56, 97.78, 100.0, 95.56]%	[90.91, 92.31, 83.33, 66.67, 90.91, 76.92, 76.92, 44.44, 71.43, 36.36, 66.67, 71.43, 80.0, 100.0, 60.0]%	[83.33, 100.0, 83.33, 50.0, 83.33, 83.33, 83.33, 33.33, 83.33, 33.33, 100.0, 83.33, 66.67, 100.0, 50.0]%	[100.0, 98.81, 98.81, 100.0, 100.0, 97.62, 97.62, 98.81, 96.43, 96.43, 92.86, 96.43, 100.0, 100.0, 98.81]%	[100.0, 85.71, 83.33, 100.0, 100.0, 71.43, 71.43, 66.67, 62.5, 40.0, 50.0, 62.5, 100.0, 100.0, 75.0]%	[98.82, 100.0, 98.81, 96.55, 98.82, 98.8, 98.8, 95.4, 98.78, 95.29, 100.0, 98.78, 97.67, 100.0, 96.51]%	||	73.89%	74.44%	98.17%	77.9%	98.2%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  3  0  2  1  0  0  0  0  0  0  0  0  50.0%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  2  1  0  2  0  0  0  1  33.33%		8
  0  0  0  0  0  0  0  0  5  0  1  0  0  0  0  83.33%		9
  0  0  1  0  0  0  0  0  0  2  0  3  0  0  0  33.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  1  1  0  0  0  3  50.0%		15
Forest OOB Error: 58.14%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	80.0%	97.33%	78.57%	[93.33, 98.89, 97.78, 98.89, 98.89, 98.89, 96.67, 95.56, 97.78, 96.67, 96.67, 95.56, 98.89, 98.89, 96.67]%	[50.0, 92.31, 80.0, 90.91, 90.91, 90.91, 72.73, 71.43, 85.71, 76.92, 76.92, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[96.43, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 97.62, 97.62, 100.0, 98.81, 98.81]%	[50.0, 85.71, 100.0, 100.0, 100.0, 100.0, 80.0, 62.5, 75.0, 71.43, 71.43, 66.67, 100.0, 85.71, 80.0]%	[96.43, 100.0, 97.67, 98.82, 98.82, 98.82, 97.65, 98.78, 100.0, 98.8, 98.8, 97.62, 98.82, 100.0, 97.65]%	||	80.09%	80.0%	98.57%	81.9%	98.58%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[95.56, 97.78, 98.89, 95.56, 98.89, 96.67, 93.33, 94.44, 97.78, 97.78, 94.44, 95.56, 96.67, 95.56, 95.56]%	[60.0, 83.33, 92.31, 60.0, 90.91, 72.73, 57.14, 66.67, 83.33, 80.0, 54.55, 71.43, 72.73, 75.0, 60.0]%	[50.0, 83.33, 100.0, 50.0, 83.33, 66.67, 66.67, 83.33, 83.33, 66.67, 50.0, 83.33, 66.67, 100.0, 50.0]%	[98.81, 98.81, 98.81, 98.81, 100.0, 98.81, 95.24, 95.24, 98.81, 100.0, 97.62, 96.43, 98.81, 95.24, 98.81]%	[75.0, 83.33, 85.71, 75.0, 100.0, 80.0, 50.0, 55.56, 83.33, 100.0, 60.0, 62.5, 80.0, 60.0, 75.0]%	[96.51, 98.81, 100.0, 96.51, 98.82, 97.65, 97.56, 98.77, 98.81, 97.67, 96.47, 98.78, 97.65, 100.0, 96.51]%	||	72.01%	72.22%	98.02%	75.03%	98.03%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  5  0  0  0  0  0  0  0  0  0  0  0  1  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  1  0  0  3  0  1  1  0  0  0  0  0  0  0  0  50.0%		4
  0  0  0  0  5  0  0  0  1  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  0  0  0  0  0  2  0  66.67%		6
  0  0  0  0  0  0  4  0  0  0  0  2  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  1  0  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  2  0  0  3  0  1  0  0  50.0%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  1  0  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  1  0  0  1  1  0  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 51.37%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	80.0%	97.33%	78.57%	[93.33, 98.89, 97.78, 98.89, 98.89, 98.89, 96.67, 95.56, 97.78, 96.67, 96.67, 95.56, 98.89, 98.89, 96.67]%	[50.0, 92.31, 80.0, 90.91, 90.91, 90.91, 72.73, 71.43, 85.71, 76.92, 76.92, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[96.43, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 97.62, 97.62, 100.0, 98.81, 98.81]%	[50.0, 85.71, 100.0, 100.0, 100.0, 100.0, 80.0, 62.5, 75.0, 71.43, 71.43, 66.67, 100.0, 85.71, 80.0]%	[96.43, 100.0, 97.67, 98.82, 98.82, 98.82, 97.65, 98.78, 100.0, 98.8, 98.8, 97.62, 98.82, 100.0, 97.65]%	||	80.09%	80.0%	98.57%	81.9%	98.58%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[98.89, 96.67, 97.78, 96.67, 97.78, 96.67, 96.67, 97.78, 97.78, 96.67, 98.89, 97.78, 96.67, 96.67, 96.67]%	[90.91, 80.0, 80.0, 66.67, 80.0, 76.92, 72.73, 80.0, 83.33, 76.92, 92.31, 83.33, 76.92, 80.0, 76.92]%	[83.33, 100.0, 66.67, 50.0, 66.67, 83.33, 66.67, 66.67, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0, 83.33]%	[100.0, 96.43, 100.0, 100.0, 100.0, 97.62, 98.81, 100.0, 98.81, 97.62, 98.81, 98.81, 97.62, 96.43, 97.62]%	[100.0, 66.67, 100.0, 100.0, 100.0, 71.43, 80.0, 100.0, 83.33, 71.43, 85.71, 83.33, 71.43, 66.67, 71.43]%	[98.82, 100.0, 97.67, 96.55, 97.67, 98.8, 97.65, 97.67, 98.81, 98.8, 100.0, 98.81, 98.8, 100.0, 98.8]%	||	79.8%	80.0%	98.57%	83.43%	98.59%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  4  0  0  0  0  0  0  0  0  0  0  2  0  66.67%		3
  0  0  0  3  0  2  1  0  0  0  0  0  0  0  0  50.0%		4
  0  0  0  0  4  0  0  0  0  1  0  0  0  1  0  66.67%		5
  0  1  0  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  4  0  1  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  0  0  0  0  1  0  1  66.67%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 50.78%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	80.0%	97.33%	78.57%	[93.33, 98.89, 97.78, 98.89, 98.89, 98.89, 96.67, 95.56, 97.78, 96.67, 96.67, 95.56, 98.89, 98.89, 96.67]%	[50.0, 92.31, 80.0, 90.91, 90.91, 90.91, 72.73, 71.43, 85.71, 76.92, 76.92, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[96.43, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 97.62, 97.62, 100.0, 98.81, 98.81]%	[50.0, 85.71, 100.0, 100.0, 100.0, 100.0, 80.0, 62.5, 75.0, 71.43, 71.43, 66.67, 100.0, 85.71, 80.0]%	[96.43, 100.0, 97.67, 98.82, 98.82, 98.82, 97.65, 98.78, 100.0, 98.8, 98.8, 97.62, 98.82, 100.0, 97.65]%	||	80.09%	80.0%	98.57%	81.9%	98.58%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[98.89, 97.78, 100.0, 98.89, 97.78, 97.78, 94.44, 93.33, 96.67, 97.78, 96.67, 96.67, 95.56, 97.78, 95.56]%	[90.91, 85.71, 100.0, 90.91, 85.71, 80.0, 54.55, 62.5, 72.73, 80.0, 72.73, 76.92, 66.67, 85.71, 60.0]%	[83.33, 100.0, 100.0, 83.33, 100.0, 66.67, 50.0, 83.33, 66.67, 66.67, 66.67, 83.33, 66.67, 100.0, 50.0]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 97.62, 94.05, 98.81, 100.0, 98.81, 97.62, 97.62, 97.62, 98.81]%	[100.0, 75.0, 100.0, 100.0, 75.0, 100.0, 60.0, 50.0, 80.0, 100.0, 80.0, 71.43, 66.67, 75.0, 75.0]%	[98.82, 100.0, 100.0, 98.82, 100.0, 97.67, 96.47, 98.75, 97.65, 97.67, 97.65, 98.8, 97.62, 100.0, 96.51]%	||	77.67%	77.78%	98.41%	80.54%	98.43%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  2  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  1  0  0  0  0  1  0  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  0  0  0  4  0  2  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  2  0  0  0  0  0  1  3  50.0%		15
Forest OOB Error: 52.99%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[94.44, 98.89, 97.78, 98.89, 98.89, 98.89, 97.78, 96.67, 97.78, 96.67, 97.78, 95.56, 98.89, 98.89, 96.67]%	[54.55, 92.31, 80.0, 90.91, 90.91, 90.91, 83.33, 80.0, 85.71, 76.92, 83.33, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[60.0, 85.71, 100.0, 100.0, 100.0, 100.0, 83.33, 66.67, 75.0, 71.43, 83.33, 66.67, 100.0, 85.71, 80.0]%	[96.47, 100.0, 97.67, 98.82, 98.82, 98.82, 98.81, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	82.1%	82.22%	98.73%	83.86%	98.74%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	86.67%	98.22%	85.71%	[97.78, 98.89, 98.89, 98.89, 98.89, 97.78, 97.78, 96.67, 100.0, 97.78, 96.67, 98.89, 97.78, 100.0, 96.67]%	[80.0, 92.31, 92.31, 90.91, 92.31, 83.33, 83.33, 72.73, 100.0, 85.71, 72.73, 90.91, 85.71, 100.0, 72.73]%	[66.67, 100.0, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 66.67, 83.33, 100.0, 100.0, 66.67]%	[100.0, 98.81, 98.81, 100.0, 98.81, 98.81, 98.81, 98.81, 100.0, 97.62, 98.81, 100.0, 97.62, 100.0, 98.81]%	[100.0, 85.71, 85.71, 100.0, 85.71, 83.33, 83.33, 80.0, 100.0, 75.0, 80.0, 100.0, 75.0, 100.0, 80.0]%	[97.67, 100.0, 100.0, 98.82, 100.0, 98.81, 98.81, 97.65, 100.0, 100.0, 97.65, 98.82, 100.0, 100.0, 97.65]%	||	86.33%	86.67%	99.05%	87.59%	99.06%	
  4  1  0  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  0  1  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  1  0  0  4  0  0  0  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  1  0  0  0  0  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  1  0  0  0  4  66.67%		15
Forest OOB Error: 46.56%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[94.44, 98.89, 97.78, 98.89, 98.89, 98.89, 97.78, 96.67, 97.78, 96.67, 97.78, 95.56, 98.89, 98.89, 96.67]%	[54.55, 92.31, 80.0, 90.91, 90.91, 90.91, 83.33, 80.0, 85.71, 76.92, 83.33, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[60.0, 85.71, 100.0, 100.0, 100.0, 100.0, 83.33, 66.67, 75.0, 71.43, 83.33, 66.67, 100.0, 85.71, 80.0]%	[96.47, 100.0, 97.67, 98.82, 98.82, 98.82, 98.81, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	82.1%	82.22%	98.73%	83.86%	98.74%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[97.78, 97.78, 100.0, 97.78, 98.89, 96.67, 94.44, 96.67, 97.78, 97.78, 95.56, 96.67, 96.67, 98.89, 96.67]%	[80.0, 83.33, 100.0, 80.0, 90.91, 76.92, 54.55, 72.73, 85.71, 83.33, 71.43, 72.73, 76.92, 92.31, 76.92]%	[66.67, 83.33, 100.0, 66.67, 83.33, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 98.81, 100.0, 100.0, 100.0, 97.62, 97.62, 98.81, 97.62, 98.81, 96.43, 98.81, 97.62, 98.81, 97.62]%	[100.0, 83.33, 100.0, 100.0, 100.0, 71.43, 60.0, 80.0, 75.0, 83.33, 62.5, 80.0, 71.43, 85.71, 71.43]%	[97.67, 98.81, 100.0, 97.67, 98.82, 98.8, 96.47, 97.65, 100.0, 98.81, 98.78, 97.65, 98.8, 100.0, 98.8]%	||	79.85%	80.0%	98.57%	81.61%	98.58%	
  4  1  0  0  0  0  0  0  0  0  1  0  0  0  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  1  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  0  1  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  3  0  1  0  0  0  0  0  1  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  1  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  1  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  4  0  1  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  1  0  0  5  83.33%		15
Forest OOB Error: 51.79%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[94.44, 98.89, 97.78, 98.89, 98.89, 98.89, 97.78, 96.67, 97.78, 96.67, 97.78, 95.56, 98.89, 98.89, 96.67]%	[54.55, 92.31, 80.0, 90.91, 90.91, 90.91, 83.33, 80.0, 85.71, 76.92, 83.33, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[60.0, 85.71, 100.0, 100.0, 100.0, 100.0, 83.33, 66.67, 75.0, 71.43, 83.33, 66.67, 100.0, 85.71, 80.0]%	[96.47, 100.0, 97.67, 98.82, 98.82, 98.82, 98.81, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	82.1%	82.22%	98.73%	83.86%	98.74%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[97.78, 96.67, 100.0, 96.67, 98.89, 96.67, 94.44, 94.44, 100.0, 100.0, 96.67, 97.78, 96.67, 98.89, 98.89]%	[83.33, 76.92, 100.0, 72.73, 92.31, 76.92, 54.55, 61.54, 100.0, 100.0, 80.0, 80.0, 72.73, 90.91, 90.91]%	[83.33, 83.33, 100.0, 66.67, 100.0, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 66.67, 66.67, 83.33, 83.33]%	[98.81, 97.62, 100.0, 98.81, 98.81, 97.62, 97.62, 96.43, 100.0, 100.0, 96.43, 100.0, 98.81, 100.0, 100.0]%	[83.33, 71.43, 100.0, 80.0, 85.71, 71.43, 60.0, 57.14, 100.0, 100.0, 66.67, 100.0, 80.0, 100.0, 100.0]%	[98.81, 98.8, 100.0, 97.65, 100.0, 98.8, 96.47, 97.59, 100.0, 100.0, 100.0, 97.67, 97.65, 98.82, 98.82]%	||	82.19%	82.22%	98.73%	83.71%	98.74%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  1  0  4  1  0  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  1  0  0  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  3  2  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  1  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  1  0  0  0  1  0  0  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  1  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 49.2%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[94.44, 98.89, 97.78, 98.89, 98.89, 98.89, 97.78, 96.67, 97.78, 96.67, 97.78, 95.56, 98.89, 98.89, 96.67]%	[54.55, 92.31, 80.0, 90.91, 90.91, 90.91, 83.33, 80.0, 85.71, 76.92, 83.33, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[60.0, 85.71, 100.0, 100.0, 100.0, 100.0, 83.33, 66.67, 75.0, 71.43, 83.33, 66.67, 100.0, 85.71, 80.0]%	[96.47, 100.0, 97.67, 98.82, 98.82, 98.82, 98.81, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	82.1%	82.22%	98.73%	83.86%	98.74%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[98.89, 97.78, 95.56, 95.56, 98.89, 97.78, 95.56, 92.22, 98.89, 98.89, 98.89, 96.67, 97.78, 98.89, 97.78]%	[90.91, 83.33, 60.0, 66.67, 90.91, 83.33, 60.0, 58.82, 92.31, 92.31, 90.91, 76.92, 83.33, 92.31, 80.0]%	[83.33, 83.33, 50.0, 66.67, 83.33, 83.33, 50.0, 83.33, 100.0, 100.0, 83.33, 83.33, 83.33, 100.0, 66.67]%	[100.0, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81, 92.86, 98.81, 98.81, 100.0, 97.62, 98.81, 98.81, 100.0]%	[100.0, 83.33, 75.0, 66.67, 100.0, 83.33, 75.0, 45.45, 85.71, 85.71, 100.0, 71.43, 83.33, 85.71, 100.0]%	[98.82, 98.81, 96.51, 97.62, 98.82, 98.81, 96.51, 98.73, 100.0, 100.0, 98.82, 98.8, 98.81, 100.0, 97.67]%	||	80.14%	80.0%	98.57%	82.71%	98.58%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  0  0  0  0  0  0  1  0  0  83.33%		2
  0  0  3  0  0  0  0  1  1  0  0  0  0  1  0  50.0%		3
  0  0  0  4  0  1  0  1  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  1  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  3  1  0  0  0  2  0  0  0  50.0%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  1  0  0  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 54.29%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[94.44, 98.89, 97.78, 98.89, 98.89, 98.89, 97.78, 96.67, 97.78, 96.67, 97.78, 95.56, 98.89, 98.89, 96.67]%	[54.55, 92.31, 80.0, 90.91, 90.91, 90.91, 83.33, 80.0, 85.71, 76.92, 83.33, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[60.0, 85.71, 100.0, 100.0, 100.0, 100.0, 83.33, 66.67, 75.0, 71.43, 83.33, 66.67, 100.0, 85.71, 80.0]%	[96.47, 100.0, 97.67, 98.82, 98.82, 98.82, 98.81, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	82.1%	82.22%	98.73%	83.86%	98.74%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[96.67, 97.78, 98.89, 96.67, 95.56, 96.67, 94.44, 93.33, 98.89, 97.78, 96.67, 96.67, 95.56, 100.0, 95.56]%	[76.92, 83.33, 92.31, 66.67, 66.67, 76.92, 54.55, 50.0, 92.31, 83.33, 72.73, 76.92, 71.43, 100.0, 60.0]%	[83.33, 83.33, 100.0, 50.0, 66.67, 83.33, 50.0, 50.0, 100.0, 83.33, 66.67, 83.33, 83.33, 100.0, 50.0]%	[97.62, 98.81, 98.81, 100.0, 97.62, 97.62, 97.62, 96.43, 98.81, 98.81, 98.81, 97.62, 96.43, 100.0, 98.81]%	[71.43, 83.33, 85.71, 100.0, 66.67, 71.43, 60.0, 50.0, 85.71, 83.33, 80.0, 71.43, 62.5, 100.0, 75.0]%	[98.8, 98.81, 100.0, 96.55, 97.62, 98.8, 96.47, 96.43, 100.0, 98.81, 97.65, 98.8, 98.78, 100.0, 96.51]%	||	74.94%	75.56%	98.25%	76.44%	98.27%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  3  0  2  1  0  0  0  0  0  0  0  0  50.0%		4
  0  0  1  0  4  0  0  0  0  1  0  0  0  0  0  66.67%		5
  0  0  0  0  1  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  3  1  0  0  0  2  0  0  0  50.0%		7
  0  0  0  0  0  0  0  3  1  0  0  0  1  0  1  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  1  0  0  0  0  0  0  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  1  0  0  0  0  0  0  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  1  0  0  1  0  0  0  0  1  0  3  50.0%		15
Forest OOB Error: 56.18%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	82.22%	97.63%	80.95%	[94.44, 98.89, 97.78, 98.89, 98.89, 98.89, 97.78, 96.67, 97.78, 96.67, 97.78, 95.56, 98.89, 98.89, 96.67]%	[54.55, 92.31, 80.0, 90.91, 90.91, 90.91, 83.33, 80.0, 85.71, 76.92, 83.33, 66.67, 90.91, 92.31, 72.73]%	[50.0, 100.0, 66.67, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[97.62, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 96.43, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[60.0, 85.71, 100.0, 100.0, 100.0, 100.0, 83.33, 66.67, 75.0, 71.43, 83.33, 66.67, 100.0, 85.71, 80.0]%	[96.47, 100.0, 97.67, 98.82, 98.82, 98.82, 98.81, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 100.0, 97.65]%	||	82.1%	82.22%	98.73%	83.86%	98.74%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 3, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[97.78, 95.56, 95.56, 96.67, 96.67, 95.56, 92.22, 94.44, 98.89, 96.67, 97.78, 96.67, 96.67, 96.67, 96.67]%	[80.0, 66.67, 66.67, 66.67, 76.92, 71.43, 53.33, 54.55, 92.31, 76.92, 83.33, 72.73, 76.92, 72.73, 72.73]%	[66.67, 66.67, 66.67, 50.0, 83.33, 83.33, 66.67, 50.0, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 66.67]%	[100.0, 97.62, 97.62, 100.0, 97.62, 96.43, 94.05, 97.62, 98.81, 97.62, 98.81, 98.81, 97.62, 98.81, 98.81]%	[100.0, 66.67, 66.67, 100.0, 71.43, 62.5, 44.44, 60.0, 85.71, 71.43, 83.33, 80.0, 71.43, 80.0, 80.0]%	[97.67, 97.62, 97.62, 96.55, 98.8, 98.78, 97.53, 96.47, 100.0, 98.8, 98.81, 97.65, 98.8, 97.65, 97.65]%	||	72.26%	72.22%	98.02%	74.91%	98.03%	
  4  1  0  0  0  0  0  0  0  0  0  0  0  1  0  66.67%		1
  0  4  0  0  0  0  2  0  0  0  0  0  0  0  0  66.67%		2
  0  0  4  0  0  1  0  0  1  0  0  0  0  0  0  66.67%		3
  0  0  0  3  0  2  1  0  0  0  0  0  0  0  0  50.0%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  1  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  4  0  0  1  0  1  0  0  0  66.67%		7
  0  0  1  0  0  0  0  3  0  0  1  0  0  0  1  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  1  0  0  0  0  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  4  1  0  0  66.67%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  1  0  1  0  0  0  0  0  0  4  0  66.67%		14
  0  1  0  0  0  0  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 55.34%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	84.44%	97.93%	83.33%	[96.67, 97.78, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89, 97.78]%	[66.67, 85.71, 83.33, 100.0, 90.91, 83.33, 80.0, 85.71, 85.71, 83.33, 83.33, 66.67, 90.91, 92.31, 83.33]%	[50.0, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 66.67, 100.0, 85.71, 83.33]%	[96.55, 100.0, 98.81, 100.0, 98.82, 98.81, 97.67, 100.0, 100.0, 98.81, 98.81, 97.62, 98.82, 100.0, 98.81]%	||	84.08%	84.44%	98.89%	86.27%	98.9%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[96.67, 97.78, 100.0, 98.89, 98.89, 97.78, 93.33, 96.67, 96.67, 98.89, 95.56, 98.89, 97.78, 95.56, 98.89]%	[66.67, 83.33, 100.0, 90.91, 92.31, 83.33, 50.0, 66.67, 80.0, 92.31, 75.0, 90.91, 83.33, 66.67, 90.91]%	[50.0, 83.33, 100.0, 83.33, 100.0, 83.33, 50.0, 50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33]%	[100.0, 98.81, 100.0, 100.0, 98.81, 98.81, 96.43, 100.0, 96.43, 98.81, 95.24, 100.0, 98.81, 97.62, 100.0]%	[100.0, 83.33, 100.0, 100.0, 85.71, 83.33, 50.0, 100.0, 66.67, 85.71, 60.0, 100.0, 83.33, 66.67, 100.0]%	[96.55, 98.81, 100.0, 98.82, 100.0, 98.81, 96.43, 96.55, 100.0, 100.0, 100.0, 98.82, 98.81, 97.62, 98.82]%	||	80.82%	81.11%	98.65%	84.32%	98.67%	
  3  1  0  0  0  0  1  0  0  0  0  0  0  1  0  50.0%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  0  0  0  0  0  0  1  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  3  0  1  1  0  0  0  1  0  50.0%		7
  0  0  0  0  0  0  0  3  0  0  3  0  0  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  1  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 50.76%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	84.44%	97.93%	83.33%	[96.67, 97.78, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89, 97.78]%	[66.67, 85.71, 83.33, 100.0, 90.91, 83.33, 80.0, 85.71, 85.71, 83.33, 83.33, 66.67, 90.91, 92.31, 83.33]%	[50.0, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 66.67, 100.0, 85.71, 83.33]%	[96.55, 100.0, 98.81, 100.0, 98.82, 98.81, 97.67, 100.0, 100.0, 98.81, 98.81, 97.62, 98.82, 100.0, 98.81]%	||	84.08%	84.44%	98.89%	86.27%	98.9%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[96.67, 100.0, 97.78, 96.67, 97.78, 96.67, 96.67, 93.33, 97.78, 98.89, 96.67, 97.78, 97.78, 98.89, 98.89]%	[66.67, 100.0, 85.71, 76.92, 80.0, 76.92, 80.0, 40.0, 85.71, 90.91, 76.92, 83.33, 83.33, 90.91, 90.91]%	[50.0, 100.0, 100.0, 83.33, 66.67, 83.33, 100.0, 33.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 100.0, 97.62, 97.62, 100.0, 97.62, 96.43, 97.62, 97.62, 100.0, 97.62, 98.81, 98.81, 100.0, 100.0]%	[100.0, 100.0, 75.0, 71.43, 100.0, 71.43, 66.67, 50.0, 75.0, 100.0, 71.43, 83.33, 83.33, 100.0, 100.0]%	[96.55, 100.0, 100.0, 98.8, 97.67, 98.8, 100.0, 95.35, 100.0, 98.82, 98.8, 98.81, 98.81, 98.82, 98.82]%	||	80.55%	81.11%	98.65%	83.17%	98.67%	
  3  0  0  0  0  1  1  1  0  0  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  1  0  0  0  0  0  0  0  0  66.67%		5
  0  0  1  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  2  2  0  1  0  1  0  0  33.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 53.41%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	84.44%	97.93%	83.33%	[96.67, 97.78, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89, 97.78]%	[66.67, 85.71, 83.33, 100.0, 90.91, 83.33, 80.0, 85.71, 85.71, 83.33, 83.33, 66.67, 90.91, 92.31, 83.33]%	[50.0, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 66.67, 100.0, 85.71, 83.33]%	[96.55, 100.0, 98.81, 100.0, 98.82, 98.81, 97.67, 100.0, 100.0, 98.81, 98.81, 97.62, 98.82, 100.0, 98.81]%	||	84.08%	84.44%	98.89%	86.27%	98.9%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[97.78, 98.89, 100.0, 97.78, 98.89, 97.78, 91.11, 93.33, 96.67, 96.67, 95.56, 97.78, 96.67, 100.0, 96.67]%	[80.0, 92.31, 100.0, 80.0, 90.91, 83.33, 42.86, 50.0, 72.73, 80.0, 75.0, 80.0, 72.73, 100.0, 72.73]%	[66.67, 100.0, 100.0, 66.67, 83.33, 83.33, 50.0, 50.0, 66.67, 100.0, 100.0, 66.67, 66.67, 100.0, 66.67]%	[100.0, 98.81, 100.0, 100.0, 100.0, 98.81, 94.05, 96.43, 98.81, 96.43, 95.24, 100.0, 98.81, 100.0, 98.81]%	[100.0, 85.71, 100.0, 100.0, 100.0, 83.33, 37.5, 50.0, 80.0, 66.67, 60.0, 100.0, 80.0, 100.0, 80.0]%	[97.67, 100.0, 100.0, 97.67, 98.82, 98.81, 96.34, 96.43, 97.65, 100.0, 100.0, 97.67, 97.65, 100.0, 97.65]%	||	78.17%	77.78%	98.41%	81.55%	98.42%	
  4  0  0  0  0  0  1  0  0  1  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  3  0  0  2  0  0  0  1  50.0%		8
  0  1  0  0  0  0  1  0  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  2  0  0  0  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  1  0  0  1  0  4  66.67%		15
Forest OOB Error: 51.06%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	84.44%	97.93%	83.33%	[96.67, 97.78, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89, 97.78]%	[66.67, 85.71, 83.33, 100.0, 90.91, 83.33, 80.0, 85.71, 85.71, 83.33, 83.33, 66.67, 90.91, 92.31, 83.33]%	[50.0, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 66.67, 100.0, 85.71, 83.33]%	[96.55, 100.0, 98.81, 100.0, 98.82, 98.81, 97.67, 100.0, 100.0, 98.81, 98.81, 97.62, 98.82, 100.0, 98.81]%	||	84.08%	84.44%	98.89%	86.27%	98.9%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	84.44%	97.93%	83.33%	[97.78, 97.78, 98.89, 95.56, 100.0, 96.67, 97.78, 97.78, 100.0, 97.78, 97.78, 98.89, 98.89, 97.78, 95.56]%	[83.33, 85.71, 92.31, 60.0, 100.0, 72.73, 83.33, 85.71, 100.0, 80.0, 80.0, 92.31, 92.31, 83.33, 66.67]%	[83.33, 100.0, 100.0, 50.0, 100.0, 66.67, 83.33, 100.0, 100.0, 66.67, 66.67, 100.0, 100.0, 83.33, 66.67]%	[98.81, 97.62, 98.81, 98.81, 100.0, 98.81, 98.81, 97.62, 100.0, 100.0, 100.0, 98.81, 98.81, 98.81, 97.62]%	[83.33, 75.0, 85.71, 75.0, 100.0, 80.0, 83.33, 75.0, 100.0, 100.0, 100.0, 85.71, 85.71, 83.33, 66.67]%	[98.81, 100.0, 100.0, 96.51, 100.0, 97.65, 98.81, 100.0, 100.0, 97.67, 97.67, 100.0, 100.0, 98.81, 97.62]%	||	83.85%	84.44%	98.89%	85.25%	98.9%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  3  0  1  1  0  0  0  0  0  0  0  1  50.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  1  0  0  0  4  0  0  0  0  0  0  0  1  0  66.67%		6
  1  0  0  0  0  0  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  1  0  0  0  0  0  0  4  0  1  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  5  1  83.33%		14
  0  0  0  1  0  0  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 53.28%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	84.44%	97.93%	83.33%	[96.67, 97.78, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89, 97.78]%	[66.67, 85.71, 83.33, 100.0, 90.91, 83.33, 80.0, 85.71, 85.71, 83.33, 83.33, 66.67, 90.91, 92.31, 83.33]%	[50.0, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 66.67, 100.0, 85.71, 83.33]%	[96.55, 100.0, 98.81, 100.0, 98.82, 98.81, 97.67, 100.0, 100.0, 98.81, 98.81, 97.62, 98.82, 100.0, 98.81]%	||	84.08%	84.44%	98.89%	86.27%	98.9%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[97.78, 97.78, 98.89, 96.67, 100.0, 96.67, 95.56, 96.67, 100.0, 97.78, 95.56, 97.78, 96.67, 97.78, 96.67]%	[80.0, 85.71, 92.31, 66.67, 100.0, 80.0, 66.67, 72.73, 100.0, 85.71, 71.43, 80.0, 72.73, 83.33, 72.73]%	[66.67, 100.0, 100.0, 50.0, 100.0, 100.0, 66.67, 66.67, 100.0, 100.0, 83.33, 66.67, 66.67, 83.33, 66.67]%	[100.0, 97.62, 98.81, 100.0, 100.0, 96.43, 97.62, 98.81, 100.0, 97.62, 96.43, 100.0, 98.81, 98.81, 98.81]%	[100.0, 75.0, 85.71, 100.0, 100.0, 66.67, 66.67, 80.0, 100.0, 75.0, 62.5, 100.0, 80.0, 83.33, 80.0]%	[97.67, 100.0, 100.0, 96.55, 100.0, 100.0, 97.62, 97.65, 100.0, 100.0, 98.78, 97.67, 97.65, 98.81, 97.65]%	||	80.67%	81.11%	98.65%	83.66%	98.67%	
  4  1  1  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  3  0  2  1  0  0  0  0  0  0  0  0  50.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  1  0  0  0  0  4  0  0  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  0  0  1  0  1  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  1  0  0  0  0  0  0  1  4  66.67%		15
Forest OOB Error: 48.65%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	84.44%	97.93%	83.33%	[96.67, 97.78, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89, 97.78]%	[66.67, 85.71, 83.33, 100.0, 90.91, 83.33, 80.0, 85.71, 85.71, 83.33, 83.33, 66.67, 90.91, 92.31, 83.33]%	[50.0, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 66.67, 100.0, 85.71, 83.33]%	[96.55, 100.0, 98.81, 100.0, 98.82, 98.81, 97.67, 100.0, 100.0, 98.81, 98.81, 97.62, 98.82, 100.0, 98.81]%	||	84.08%	84.44%	98.89%	86.27%	98.9%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[98.89, 97.78, 98.89, 95.56, 100.0, 96.67, 97.78, 96.67, 96.67, 97.78, 98.89, 96.67, 98.89, 98.89, 96.67]%	[90.91, 83.33, 90.91, 60.0, 100.0, 76.92, 85.71, 72.73, 76.92, 80.0, 92.31, 76.92, 92.31, 92.31, 72.73]%	[83.33, 83.33, 83.33, 50.0, 100.0, 83.33, 100.0, 66.67, 83.33, 66.67, 100.0, 83.33, 100.0, 100.0, 66.67]%	[100.0, 98.81, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 97.62, 98.81, 98.81, 98.81]%	[100.0, 83.33, 100.0, 75.0, 100.0, 71.43, 75.0, 80.0, 71.43, 100.0, 85.71, 71.43, 85.71, 85.71, 80.0]%	[98.82, 98.81, 98.82, 96.51, 100.0, 98.8, 100.0, 97.65, 98.8, 97.67, 100.0, 98.8, 100.0, 100.0, 97.65]%	||	82.93%	83.33%	98.81%	84.32%	98.82%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  0  0  0  1  0  0  0  83.33%		3
  0  0  0  3  0  2  1  0  0  0  0  0  0  0  0  50.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  1  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  4  0  1  0  1  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  1  0  4  66.67%		15
Forest OOB Error: 50.78%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	84.44%	97.93%	83.33%	[96.67, 98.89, 97.78, 98.89, 98.89, 96.67, 98.89, 97.78, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89, 97.78]%	[66.67, 92.31, 83.33, 90.91, 90.91, 76.92, 90.91, 85.71, 85.71, 83.33, 83.33, 66.67, 90.91, 92.31, 83.33]%	[50.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 100.0, 97.62, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 85.71, 83.33, 100.0, 100.0, 71.43, 100.0, 75.0, 75.0, 83.33, 83.33, 66.67, 100.0, 85.71, 83.33]%	[96.55, 100.0, 98.81, 98.82, 98.82, 98.8, 98.82, 100.0, 100.0, 98.81, 98.81, 97.62, 98.82, 100.0, 98.81]%	||	84.22%	84.44%	98.89%	86.19%	98.9%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[97.78, 96.67, 97.78, 96.67, 98.89, 97.78, 96.67, 97.78, 97.78, 96.67, 97.78, 96.67, 97.78, 100.0, 97.78]%	[80.0, 76.92, 85.71, 66.67, 90.91, 83.33, 80.0, 80.0, 85.71, 66.67, 85.71, 76.92, 83.33, 100.0, 83.33]%	[66.67, 83.33, 100.0, 50.0, 83.33, 83.33, 100.0, 66.67, 100.0, 50.0, 100.0, 83.33, 83.33, 100.0, 83.33]%	[100.0, 97.62, 97.62, 100.0, 100.0, 98.81, 96.43, 100.0, 97.62, 100.0, 97.62, 97.62, 98.81, 100.0, 98.81]%	[100.0, 71.43, 75.0, 100.0, 100.0, 83.33, 66.67, 100.0, 75.0, 100.0, 75.0, 71.43, 83.33, 100.0, 83.33]%	[97.67, 98.8, 100.0, 96.55, 98.82, 98.81, 100.0, 97.67, 100.0, 96.55, 100.0, 98.8, 98.81, 100.0, 98.81]%	||	81.68%	82.22%	98.73%	85.63%	98.75%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  1  3  0  1  1  0  0  0  0  0  0  0  0  50.0%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  1  3  0  2  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  1  0  0  0  0  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 46.21%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	84.44%	97.93%	83.33%	[96.67, 98.89, 97.78, 98.89, 98.89, 96.67, 98.89, 97.78, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89, 97.78]%	[66.67, 92.31, 83.33, 90.91, 90.91, 76.92, 90.91, 85.71, 85.71, 83.33, 83.33, 66.67, 90.91, 92.31, 83.33]%	[50.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 100.0, 97.62, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 85.71, 83.33, 100.0, 100.0, 71.43, 100.0, 75.0, 75.0, 83.33, 83.33, 66.67, 100.0, 85.71, 83.33]%	[96.55, 100.0, 98.81, 98.82, 98.82, 98.8, 98.82, 100.0, 100.0, 98.81, 98.81, 97.62, 98.82, 100.0, 98.81]%	||	84.22%	84.44%	98.89%	86.19%	98.9%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[95.56, 97.78, 98.89, 96.67, 98.89, 97.78, 95.56, 94.44, 97.78, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67]%	[50.0, 83.33, 92.31, 76.92, 90.91, 83.33, 66.67, 61.54, 83.33, 85.71, 80.0, 72.73, 80.0, 76.92, 72.73]%	[33.33, 83.33, 100.0, 83.33, 83.33, 83.33, 66.67, 66.67, 83.33, 100.0, 100.0, 66.67, 66.67, 83.33, 66.67]%	[100.0, 98.81, 98.81, 97.62, 100.0, 98.81, 97.62, 96.43, 98.81, 97.62, 96.43, 98.81, 100.0, 97.62, 98.81]%	[100.0, 83.33, 85.71, 71.43, 100.0, 83.33, 66.67, 57.14, 83.33, 75.0, 66.67, 80.0, 100.0, 71.43, 80.0]%	[95.45, 98.81, 100.0, 98.8, 98.82, 98.81, 97.62, 97.59, 98.81, 100.0, 100.0, 97.65, 97.67, 98.8, 97.65]%	||	77.1%	77.78%	98.41%	80.27%	98.43%	
  2  1  0  0  0  0  0  0  0  1  0  1  0  1  0  33.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  4  2  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  1  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  1  4  66.67%		15
Forest OOB Error: 53.75%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	84.44%	97.93%	83.33%	[96.67, 98.89, 97.78, 98.89, 98.89, 96.67, 98.89, 97.78, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89, 97.78]%	[66.67, 92.31, 83.33, 90.91, 90.91, 76.92, 90.91, 85.71, 85.71, 83.33, 83.33, 66.67, 90.91, 92.31, 83.33]%	[50.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 100.0, 97.62, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 85.71, 83.33, 100.0, 100.0, 71.43, 100.0, 75.0, 75.0, 83.33, 83.33, 66.67, 100.0, 85.71, 83.33]%	[96.55, 100.0, 98.81, 98.82, 98.82, 98.8, 98.82, 100.0, 100.0, 98.81, 98.81, 97.62, 98.82, 100.0, 98.81]%	||	84.22%	84.44%	98.89%	86.19%	98.9%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[97.78, 97.78, 100.0, 97.78, 98.89, 96.67, 95.56, 95.56, 100.0, 98.89, 96.67, 97.78, 98.89, 95.56, 98.89]%	[80.0, 85.71, 100.0, 80.0, 90.91, 76.92, 71.43, 50.0, 100.0, 92.31, 80.0, 80.0, 92.31, 71.43, 90.91]%	[66.67, 100.0, 100.0, 66.67, 83.33, 83.33, 83.33, 33.33, 100.0, 100.0, 100.0, 66.67, 100.0, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 97.62, 96.43, 100.0, 100.0, 98.81, 96.43, 100.0, 98.81, 96.43, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 71.43, 62.5, 100.0, 100.0, 85.71, 66.67, 100.0, 85.71, 62.5, 100.0]%	[97.67, 100.0, 100.0, 97.67, 98.82, 98.8, 98.78, 95.45, 100.0, 100.0, 100.0, 97.67, 100.0, 98.78, 98.82]%	||	82.8%	83.33%	98.81%	87.3%	98.83%	
  4  1  0  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  1  0  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  0  0  0  0  1  0  83.33%		7
  0  0  0  0  0  0  0  2  0  0  3  0  1  0  0  33.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  0  0  4  0  2  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  1  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  1  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 47.84%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	84.44%	97.93%	83.33%	[96.67, 98.89, 97.78, 98.89, 98.89, 96.67, 98.89, 97.78, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89, 97.78]%	[66.67, 92.31, 83.33, 90.91, 90.91, 76.92, 90.91, 85.71, 85.71, 83.33, 83.33, 66.67, 90.91, 92.31, 83.33]%	[50.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 100.0, 97.62, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 85.71, 83.33, 100.0, 100.0, 71.43, 100.0, 75.0, 75.0, 83.33, 83.33, 66.67, 100.0, 85.71, 83.33]%	[96.55, 100.0, 98.81, 98.82, 98.82, 98.8, 98.82, 100.0, 100.0, 98.81, 98.81, 97.62, 98.82, 100.0, 98.81]%	||	84.22%	84.44%	98.89%	86.19%	98.9%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	84.44%	97.93%	83.33%	[97.78, 97.78, 98.89, 97.78, 98.89, 97.78, 98.89, 97.78, 98.89, 93.33, 97.78, 97.78, 98.89, 97.78, 98.89]%	[80.0, 85.71, 92.31, 83.33, 90.91, 80.0, 92.31, 83.33, 90.91, 50.0, 83.33, 85.71, 90.91, 85.71, 90.91]%	[66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 83.33, 100.0, 83.33, 100.0, 83.33]%	[100.0, 97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 98.81, 100.0, 96.43, 98.81, 97.62, 100.0, 97.62, 100.0]%	[100.0, 75.0, 85.71, 83.33, 100.0, 100.0, 85.71, 83.33, 100.0, 50.0, 83.33, 75.0, 100.0, 75.0, 100.0]%	[97.67, 100.0, 100.0, 98.81, 98.82, 97.67, 100.0, 98.81, 98.82, 96.43, 98.81, 100.0, 98.82, 100.0, 98.82]%	||	84.36%	84.44%	98.89%	86.43%	98.9%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  1  0  1  0  4  0  0  0  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  5  0  1  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  3  0  1  0  2  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  1  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  1  0  0  0  0  5  83.33%		15
Forest OOB Error: 54.37%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	84.44%	97.93%	83.33%	[96.67, 98.89, 97.78, 98.89, 98.89, 96.67, 98.89, 97.78, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89, 97.78]%	[66.67, 92.31, 83.33, 90.91, 90.91, 76.92, 90.91, 85.71, 85.71, 83.33, 83.33, 66.67, 90.91, 92.31, 83.33]%	[50.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 100.0, 97.62, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 85.71, 83.33, 100.0, 100.0, 71.43, 100.0, 75.0, 75.0, 83.33, 83.33, 66.67, 100.0, 85.71, 83.33]%	[96.55, 100.0, 98.81, 98.82, 98.82, 98.8, 98.82, 100.0, 100.0, 98.81, 98.81, 97.62, 98.82, 100.0, 98.81]%	||	84.22%	84.44%	98.89%	86.19%	98.9%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[98.89, 96.67, 100.0, 96.67, 95.56, 98.89, 95.56, 96.67, 95.56, 94.44, 97.78, 96.67, 100.0, 98.89, 97.78]%	[90.91, 72.73, 100.0, 66.67, 71.43, 92.31, 71.43, 72.73, 71.43, 61.54, 83.33, 72.73, 100.0, 92.31, 80.0]%	[83.33, 66.67, 100.0, 50.0, 83.33, 100.0, 83.33, 66.67, 83.33, 66.67, 83.33, 66.67, 100.0, 100.0, 66.67]%	[100.0, 98.81, 100.0, 100.0, 96.43, 98.81, 96.43, 98.81, 96.43, 96.43, 98.81, 98.81, 100.0, 98.81, 100.0]%	[100.0, 80.0, 100.0, 100.0, 62.5, 85.71, 62.5, 80.0, 62.5, 57.14, 83.33, 80.0, 100.0, 85.71, 100.0]%	[98.82, 97.65, 100.0, 96.55, 98.78, 100.0, 98.78, 97.65, 98.78, 97.59, 98.81, 97.65, 100.0, 100.0, 97.67]%	||	79.97%	80.0%	98.57%	82.63%	98.58%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  4  0  0  0  0  2  0  0  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  3  0  1  1  0  0  0  0  0  0  1  0  50.0%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  0  1  0  0  0  0  0  0  83.33%		7
  0  0  0  0  1  0  0  4  1  0  0  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  5  0  1  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  1  4  0  1  0  0  0  66.67%		10
  0  0  0  0  1  0  0  0  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  1  0  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 54.12%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	84.44%	97.93%	83.33%	[96.67, 98.89, 97.78, 98.89, 98.89, 96.67, 98.89, 97.78, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89, 97.78]%	[66.67, 92.31, 83.33, 90.91, 90.91, 76.92, 90.91, 85.71, 85.71, 83.33, 83.33, 66.67, 90.91, 92.31, 83.33]%	[50.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 100.0, 97.62, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 85.71, 83.33, 100.0, 100.0, 71.43, 100.0, 75.0, 75.0, 83.33, 83.33, 66.67, 100.0, 85.71, 83.33]%	[96.55, 100.0, 98.81, 98.82, 98.82, 98.8, 98.82, 100.0, 100.0, 98.81, 98.81, 97.62, 98.82, 100.0, 98.81]%	||	84.22%	84.44%	98.89%	86.19%	98.9%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[96.67, 97.78, 96.67, 97.78, 96.67, 96.67, 97.78, 94.44, 97.78, 96.67, 96.67, 98.89, 96.67, 97.78, 96.67]%	[66.67, 85.71, 80.0, 85.71, 66.67, 72.73, 83.33, 66.67, 80.0, 80.0, 72.73, 92.31, 72.73, 80.0, 72.73]%	[50.0, 100.0, 100.0, 100.0, 50.0, 66.67, 83.33, 83.33, 66.67, 100.0, 66.67, 100.0, 66.67, 66.67, 66.67]%	[100.0, 97.62, 96.43, 97.62, 100.0, 98.81, 98.81, 95.24, 100.0, 96.43, 98.81, 98.81, 98.81, 100.0, 98.81]%	[100.0, 75.0, 66.67, 75.0, 100.0, 80.0, 83.33, 55.56, 100.0, 66.67, 80.0, 85.71, 80.0, 100.0, 80.0]%	[96.55, 100.0, 100.0, 100.0, 96.55, 97.65, 98.81, 98.77, 97.67, 100.0, 97.65, 100.0, 97.65, 97.67, 97.65]%	||	77.2%	77.78%	98.41%	81.86%	98.44%	
  3  1  0  1  0  0  0  0  0  1  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  2  0  3  0  0  0  0  0  0  1  0  0  0  50.0%		5
  0  0  1  0  0  4  0  0  0  1  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  0  0  1  83.33%		8
  0  1  0  0  0  0  1  0  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  1  0  0  0  0  1  0  4  66.67%		15
Forest OOB Error: 54.79%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 95.56, 98.89, 97.78, 97.78]%	[66.67, 85.71, 83.33, 100.0, 90.91, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 66.67, 90.91, 83.33, 83.33]%	[50.0, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 66.67, 100.0, 83.33, 83.33]%	[96.55, 100.0, 98.81, 100.0, 98.82, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 98.81, 98.81]%	||	83.06%	83.33%	98.81%	85.32%	98.82%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	84.44%	97.93%	83.33%	[96.67, 98.89, 98.89, 97.78, 97.78, 95.56, 98.89, 98.89, 98.89, 96.67, 97.78, 96.67, 97.78, 98.89, 98.89]%	[72.73, 92.31, 92.31, 83.33, 83.33, 66.67, 90.91, 92.31, 92.31, 72.73, 83.33, 76.92, 83.33, 90.91, 90.91]%	[66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 100.0, 66.67, 83.33, 83.33, 83.33, 83.33, 83.33]%	[98.81, 98.81, 98.81, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81, 98.81, 98.81, 97.62, 98.81, 100.0, 100.0]%	[80.0, 85.71, 85.71, 83.33, 83.33, 66.67, 100.0, 85.71, 85.71, 80.0, 83.33, 71.43, 83.33, 100.0, 100.0]%	[97.65, 100.0, 100.0, 98.81, 98.81, 97.62, 98.82, 100.0, 100.0, 97.65, 98.81, 98.8, 98.81, 98.82, 98.82]%	||	84.29%	84.44%	98.89%	84.95%	98.89%	
  4  1  1  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  1  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  1  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  4  0  2  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  1  0  0  0  0  0  0  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 48.68%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 95.56, 98.89, 97.78, 97.78]%	[66.67, 85.71, 83.33, 100.0, 90.91, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 66.67, 90.91, 83.33, 83.33]%	[50.0, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 66.67, 100.0, 83.33, 83.33]%	[96.55, 100.0, 98.81, 100.0, 98.82, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 98.81, 98.81]%	||	83.06%	83.33%	98.81%	85.32%	98.82%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[96.67, 95.56, 97.78, 100.0, 94.44, 96.67, 94.44, 97.78, 94.44, 96.67, 96.67, 97.78, 95.56, 96.67, 95.56]%	[66.67, 50.0, 80.0, 100.0, 61.54, 72.73, 70.59, 83.33, 70.59, 76.92, 72.73, 80.0, 66.67, 76.92, 66.67]%	[50.0, 33.33, 66.67, 100.0, 66.67, 66.67, 100.0, 83.33, 100.0, 83.33, 66.67, 66.67, 66.67, 83.33, 66.67]%	[100.0, 100.0, 100.0, 100.0, 96.43, 98.81, 94.05, 98.81, 94.05, 97.62, 98.81, 100.0, 97.62, 97.62, 97.62]%	[100.0, 100.0, 100.0, 100.0, 57.14, 80.0, 54.55, 83.33, 54.55, 71.43, 80.0, 100.0, 66.67, 71.43, 66.67]%	[96.55, 95.45, 97.67, 100.0, 97.59, 97.65, 100.0, 98.81, 100.0, 98.8, 97.65, 97.67, 97.62, 98.8, 97.62]%	||	73.02%	73.33%	98.1%	79.05%	98.13%	
  3  0  0  0  1  0  0  0  0  1  0  0  0  0  1  50.0%		1
  0  2  0  0  0  0  3  0  1  0  0  0  0  0  0  33.33%		2
  0  0  4  0  1  0  0  0  1  0  0  0  0  0  0  66.67%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  4  0  1  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  1  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  1  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  0  0  1  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  1  0  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 57.14%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 95.56, 98.89, 97.78, 97.78]%	[66.67, 85.71, 83.33, 100.0, 90.91, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 66.67, 90.91, 83.33, 83.33]%	[50.0, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 66.67, 100.0, 83.33, 83.33]%	[96.55, 100.0, 98.81, 100.0, 98.82, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 98.81, 98.81]%	||	83.06%	83.33%	98.81%	85.32%	98.82%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[97.78, 97.78, 98.89, 97.78, 95.56, 97.78, 95.56, 97.78, 97.78, 92.22, 96.67, 96.67, 96.67, 98.89, 95.56]%	[83.33, 80.0, 92.31, 80.0, 71.43, 80.0, 71.43, 83.33, 83.33, 53.33, 80.0, 72.73, 66.67, 92.31, 60.0]%	[83.33, 66.67, 100.0, 66.67, 83.33, 66.67, 83.33, 83.33, 83.33, 66.67, 100.0, 66.67, 50.0, 100.0, 50.0]%	[98.81, 100.0, 98.81, 100.0, 96.43, 100.0, 96.43, 98.81, 98.81, 94.05, 96.43, 98.81, 100.0, 98.81, 98.81]%	[83.33, 100.0, 85.71, 100.0, 62.5, 100.0, 62.5, 83.33, 83.33, 44.44, 66.67, 80.0, 100.0, 85.71, 75.0]%	[98.81, 97.67, 100.0, 97.67, 98.78, 97.67, 98.78, 98.81, 98.81, 97.53, 100.0, 97.65, 96.55, 100.0, 96.51]%	||	76.68%	76.67%	98.33%	80.84%	98.35%	
  5  0  0  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		1
  0  4  0  0  0  0  2  0  0  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  2  0  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  0  1  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  1  4  0  1  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  1  0  0  0  0  0  0  4  0  0  1  66.67%		12
  1  0  0  0  0  0  0  0  0  0  2  0  3  0  0  50.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  1  0  0  0  0  1  0  1  0  0  0  0  3  50.0%		15
Forest OOB Error: 47.0%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 95.56, 98.89, 97.78, 97.78]%	[66.67, 85.71, 83.33, 100.0, 90.91, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 66.67, 90.91, 83.33, 83.33]%	[50.0, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 66.67, 100.0, 83.33, 83.33]%	[96.55, 100.0, 98.81, 100.0, 98.82, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 98.81, 98.81]%	||	83.06%	83.33%	98.81%	85.32%	98.82%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[97.78, 98.89, 100.0, 96.67, 96.67, 96.67, 95.56, 97.78, 98.89, 98.89, 95.56, 98.89, 96.67, 96.67, 96.67]%	[80.0, 92.31, 100.0, 76.92, 66.67, 76.92, 66.67, 85.71, 92.31, 92.31, 60.0, 92.31, 80.0, 66.67, 72.73]%	[66.67, 100.0, 100.0, 83.33, 50.0, 83.33, 66.67, 100.0, 100.0, 100.0, 50.0, 100.0, 100.0, 50.0, 66.67]%	[100.0, 98.81, 100.0, 97.62, 100.0, 97.62, 97.62, 97.62, 98.81, 98.81, 98.81, 98.81, 96.43, 100.0, 98.81]%	[100.0, 85.71, 100.0, 71.43, 100.0, 71.43, 66.67, 75.0, 85.71, 85.71, 75.0, 85.71, 66.67, 100.0, 80.0]%	[97.67, 100.0, 100.0, 98.8, 96.55, 98.8, 97.62, 100.0, 100.0, 100.0, 96.51, 100.0, 100.0, 96.55, 97.65]%	||	80.1%	81.11%	98.65%	83.27%	98.68%	
  4  1  0  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  2  3  0  0  0  0  0  0  1  0  0  0  50.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  3  0  3  0  0  50.0%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  1  0  0  0  0  0  0  3  1  50.0%		14
  0  0  0  0  0  0  0  1  0  0  1  0  0  0  4  66.67%		15
Forest OOB Error: 50.38%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 95.56, 98.89, 97.78, 97.78]%	[66.67, 85.71, 83.33, 100.0, 90.91, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 66.67, 90.91, 83.33, 83.33]%	[50.0, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 66.67, 100.0, 83.33, 83.33]%	[96.55, 100.0, 98.81, 100.0, 98.82, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 98.81, 98.81]%	||	83.06%	83.33%	98.81%	85.32%	98.82%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[97.78, 96.67, 97.78, 96.67, 98.89, 96.67, 95.56, 95.56, 94.44, 96.67, 94.44, 97.78, 98.89, 98.89, 98.89]%	[80.0, 80.0, 83.33, 72.73, 90.91, 72.73, 66.67, 50.0, 66.67, 72.73, 66.67, 85.71, 90.91, 92.31, 90.91]%	[66.67, 100.0, 83.33, 66.67, 83.33, 66.67, 66.67, 33.33, 83.33, 66.67, 83.33, 100.0, 83.33, 100.0, 83.33]%	[100.0, 96.43, 98.81, 98.81, 100.0, 98.81, 97.62, 100.0, 95.24, 98.81, 95.24, 97.62, 100.0, 98.81, 100.0]%	[100.0, 66.67, 83.33, 80.0, 100.0, 80.0, 66.67, 100.0, 55.56, 80.0, 55.56, 75.0, 100.0, 85.71, 100.0]%	[97.67, 100.0, 98.81, 97.65, 98.82, 97.65, 97.62, 95.45, 98.77, 97.65, 98.77, 100.0, 98.82, 100.0, 98.82]%	||	77.48%	77.78%	98.41%	81.9%	98.43%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  1  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  4  0  0  1  0  1  0  0  0  66.67%		7
  0  1  0  0  0  0  1  2  0  0  2  0  0  0  0  33.33%		8
  0  0  0  1  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  1  4  0  1  0  0  0  66.67%		10
  0  0  1  0  0  0  0  0  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  1  0  0  0  5  83.33%		15
Forest OOB Error: 53.28%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 95.56, 98.89, 97.78, 97.78]%	[66.67, 85.71, 83.33, 100.0, 90.91, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 66.67, 90.91, 83.33, 83.33]%	[50.0, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 66.67, 100.0, 83.33, 83.33]%	[96.55, 100.0, 98.81, 100.0, 98.82, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 98.81, 98.81]%	||	83.06%	83.33%	98.81%	85.32%	98.82%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	86.67%	98.22%	85.71%	[98.89, 97.78, 97.78, 98.89, 97.78, 98.89, 97.78, 97.78, 100.0, 95.56, 96.67, 97.78, 97.78, 100.0, 100.0]%	[90.91, 83.33, 85.71, 90.91, 80.0, 92.31, 83.33, 80.0, 100.0, 71.43, 76.92, 83.33, 83.33, 100.0, 100.0]%	[83.33, 83.33, 100.0, 83.33, 66.67, 100.0, 83.33, 66.67, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0]%	[100.0, 98.81, 97.62, 100.0, 100.0, 98.81, 98.81, 100.0, 100.0, 96.43, 97.62, 98.81, 98.81, 100.0, 100.0]%	[100.0, 83.33, 75.0, 100.0, 100.0, 85.71, 83.33, 100.0, 100.0, 62.5, 71.43, 83.33, 83.33, 100.0, 100.0]%	[98.82, 98.81, 100.0, 98.82, 97.67, 100.0, 98.81, 97.67, 100.0, 98.78, 98.8, 98.81, 98.81, 100.0, 100.0]%	||	86.77%	86.67%	99.05%	88.53%	99.05%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  4  0  0  0  0  1  0  0  1  0  0  66.67%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  4  0  0  1  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  1  0  0  0  0  0  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 54.26%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	84.44%	97.93%	83.33%	[96.67, 97.78, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89, 97.78]%	[66.67, 85.71, 83.33, 100.0, 90.91, 83.33, 80.0, 85.71, 85.71, 83.33, 83.33, 66.67, 90.91, 92.31, 83.33]%	[50.0, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 66.67, 100.0, 85.71, 83.33]%	[96.55, 100.0, 98.81, 100.0, 98.82, 98.81, 97.67, 100.0, 100.0, 98.81, 98.81, 97.62, 98.82, 100.0, 98.81]%	||	84.08%	84.44%	98.89%	86.27%	98.9%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[98.89, 97.78, 98.89, 98.89, 98.89, 95.56, 97.78, 97.78, 98.89, 97.78, 98.89, 97.78, 100.0, 94.44, 98.89]%	[90.91, 83.33, 92.31, 92.31, 90.91, 66.67, 83.33, 80.0, 92.31, 83.33, 92.31, 83.33, 100.0, 61.54, 90.91]%	[83.33, 83.33, 100.0, 100.0, 83.33, 66.67, 83.33, 66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33]%	[100.0, 98.81, 98.81, 98.81, 100.0, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 98.81, 100.0, 96.43, 100.0]%	[100.0, 83.33, 85.71, 85.71, 100.0, 66.67, 83.33, 100.0, 85.71, 83.33, 85.71, 83.33, 100.0, 57.14, 100.0]%	[98.82, 98.81, 100.0, 100.0, 98.82, 97.62, 98.81, 97.67, 100.0, 98.81, 100.0, 98.81, 100.0, 97.59, 98.82]%	||	85.57%	85.56%	98.97%	86.67%	98.97%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  1  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  1  0  0  0  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  1  0  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  1  5  83.33%		15
Forest OOB Error: 46.97%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	84.44%	97.93%	83.33%	[96.67, 97.78, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89, 97.78]%	[66.67, 85.71, 83.33, 100.0, 90.91, 83.33, 80.0, 85.71, 85.71, 83.33, 83.33, 66.67, 90.91, 92.31, 83.33]%	[50.0, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 66.67, 100.0, 85.71, 83.33]%	[96.55, 100.0, 98.81, 100.0, 98.82, 98.81, 97.67, 100.0, 100.0, 98.81, 98.81, 97.62, 98.82, 100.0, 98.81]%	||	84.08%	84.44%	98.89%	86.27%	98.9%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[95.56, 97.78, 96.67, 95.56, 98.89, 95.56, 94.44, 94.44, 95.56, 95.56, 98.89, 97.78, 95.56, 100.0, 94.44]%	[50.0, 85.71, 66.67, 60.0, 90.91, 71.43, 61.54, 61.54, 71.43, 71.43, 90.91, 83.33, 71.43, 100.0, 54.55]%	[33.33, 100.0, 50.0, 50.0, 83.33, 83.33, 66.67, 66.67, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 50.0]%	[100.0, 97.62, 100.0, 98.81, 100.0, 96.43, 96.43, 96.43, 96.43, 96.43, 100.0, 98.81, 96.43, 100.0, 97.62]%	[100.0, 75.0, 100.0, 75.0, 100.0, 62.5, 57.14, 57.14, 62.5, 62.5, 100.0, 83.33, 62.5, 100.0, 60.0]%	[95.45, 100.0, 96.55, 96.51, 98.82, 98.78, 97.59, 97.59, 98.78, 98.78, 98.82, 98.81, 98.78, 100.0, 96.47]%	||	72.72%	73.33%	98.1%	77.17%	98.12%	
  2  1  0  1  0  0  0  0  1  1  0  0  0  0  0  33.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  3  0  0  0  0  1  1  1  0  0  0  0  0  50.0%		3
  0  0  0  3  0  2  1  0  0  0  0  0  0  0  0  50.0%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  1  0  0  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  0  1  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  0  0  0  0  1  0  1  66.67%		8
  0  0  0  0  0  0  0  0  5  0  0  0  1  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  1  1  1  0  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 53.97%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	84.44%	97.93%	83.33%	[96.67, 97.78, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89, 97.78]%	[66.67, 85.71, 83.33, 100.0, 90.91, 83.33, 80.0, 85.71, 85.71, 83.33, 83.33, 66.67, 90.91, 92.31, 83.33]%	[50.0, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 66.67, 100.0, 85.71, 83.33]%	[96.55, 100.0, 98.81, 100.0, 98.82, 98.81, 97.67, 100.0, 100.0, 98.81, 98.81, 97.62, 98.82, 100.0, 98.81]%	||	84.08%	84.44%	98.89%	86.27%	98.9%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[98.89, 95.56, 100.0, 97.78, 98.89, 97.78, 94.44, 96.67, 97.78, 98.89, 95.56, 96.67, 95.56, 98.89, 98.89]%	[90.91, 75.0, 100.0, 80.0, 90.91, 83.33, 61.54, 72.73, 83.33, 90.91, 60.0, 76.92, 75.0, 90.91, 90.91]%	[83.33, 100.0, 100.0, 66.67, 83.33, 83.33, 66.67, 66.67, 83.33, 83.33, 50.0, 83.33, 100.0, 83.33, 83.33]%	[100.0, 95.24, 100.0, 100.0, 100.0, 98.81, 96.43, 98.81, 98.81, 100.0, 98.81, 97.62, 95.24, 100.0, 100.0]%	[100.0, 60.0, 100.0, 100.0, 100.0, 83.33, 57.14, 80.0, 83.33, 100.0, 75.0, 71.43, 60.0, 100.0, 100.0]%	[98.82, 100.0, 100.0, 97.67, 98.82, 98.81, 97.59, 97.65, 98.81, 98.82, 96.51, 98.8, 100.0, 98.82, 98.82]%	||	81.49%	81.11%	98.65%	84.68%	98.66%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  1  0  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  4  0  1  0  0  1  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  0  0  1  0  1  0  0  66.67%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  3  0  2  0  0  50.0%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  1  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 49.18%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	84.44%	97.93%	83.33%	[96.67, 97.78, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89, 97.78]%	[66.67, 85.71, 83.33, 100.0, 90.91, 83.33, 80.0, 85.71, 85.71, 83.33, 83.33, 66.67, 90.91, 92.31, 83.33]%	[50.0, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 66.67, 100.0, 85.71, 83.33]%	[96.55, 100.0, 98.81, 100.0, 98.82, 98.81, 97.67, 100.0, 100.0, 98.81, 98.81, 97.62, 98.82, 100.0, 98.81]%	||	84.08%	84.44%	98.89%	86.27%	98.9%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[96.67, 97.78, 97.78, 97.78, 97.78, 98.89, 97.78, 93.33, 97.78, 98.89, 95.56, 97.78, 96.67, 100.0, 97.78]%	[72.73, 85.71, 85.71, 80.0, 80.0, 92.31, 85.71, 50.0, 85.71, 92.31, 66.67, 80.0, 72.73, 100.0, 80.0]%	[66.67, 100.0, 100.0, 66.67, 66.67, 100.0, 100.0, 50.0, 100.0, 100.0, 66.67, 66.67, 66.67, 100.0, 66.67]%	[98.81, 97.62, 97.62, 100.0, 100.0, 98.81, 97.62, 96.43, 97.62, 98.81, 97.62, 100.0, 98.81, 100.0, 100.0]%	[80.0, 75.0, 75.0, 100.0, 100.0, 85.71, 75.0, 50.0, 75.0, 85.71, 66.67, 100.0, 80.0, 100.0, 100.0]%	[97.65, 100.0, 100.0, 97.67, 97.67, 100.0, 100.0, 96.43, 100.0, 100.0, 97.62, 97.67, 97.65, 100.0, 97.67]%	||	80.64%	81.11%	98.65%	83.21%	98.67%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  1  0  4  0  1  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  1  0  0  0  0  3  1  0  1  0  0  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  1  0  0  0  0  0  0  1  0  0  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  1  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  1  0  0  1  0  4  66.67%		15
Forest OOB Error: 52.16%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	84.44%	97.93%	83.33%	[96.67, 97.78, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89, 97.78]%	[66.67, 85.71, 83.33, 100.0, 90.91, 83.33, 80.0, 85.71, 85.71, 83.33, 83.33, 66.67, 90.91, 92.31, 83.33]%	[50.0, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 66.67, 100.0, 85.71, 83.33]%	[96.55, 100.0, 98.81, 100.0, 98.82, 98.81, 97.67, 100.0, 100.0, 98.81, 98.81, 97.62, 98.82, 100.0, 98.81]%	||	84.08%	84.44%	98.89%	86.27%	98.9%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[98.89, 97.78, 100.0, 96.67, 98.89, 97.78, 95.56, 95.56, 98.89, 95.56, 94.44, 94.44, 98.89, 97.78, 98.89]%	[90.91, 83.33, 100.0, 72.73, 90.91, 83.33, 66.67, 71.43, 90.91, 60.0, 54.55, 66.67, 92.31, 85.71, 90.91]%	[83.33, 83.33, 100.0, 66.67, 83.33, 83.33, 66.67, 83.33, 83.33, 50.0, 50.0, 83.33, 100.0, 100.0, 83.33]%	[100.0, 98.81, 100.0, 98.81, 100.0, 98.81, 97.62, 96.43, 100.0, 98.81, 97.62, 95.24, 98.81, 97.62, 100.0]%	[100.0, 83.33, 100.0, 80.0, 100.0, 83.33, 66.67, 62.5, 100.0, 75.0, 60.0, 55.56, 85.71, 75.0, 100.0]%	[98.82, 98.81, 100.0, 97.65, 98.82, 98.81, 97.62, 98.78, 98.82, 96.51, 96.47, 98.77, 100.0, 100.0, 98.82]%	||	80.02%	80.0%	98.57%	81.81%	98.58%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  0  0  1  0  0  0  83.33%		5
  0  0  0  1  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  4  0  0  0  0  2  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  1  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  3  0  1  0  2  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  3  0  1  0  0  50.0%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  1  0  0  0  5  83.33%		15
Forest OOB Error: 51.82%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	84.44%	97.93%	83.33%	[96.67, 97.78, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89, 97.78]%	[66.67, 85.71, 83.33, 100.0, 90.91, 83.33, 80.0, 85.71, 85.71, 83.33, 83.33, 66.67, 90.91, 92.31, 83.33]%	[50.0, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 66.67, 100.0, 85.71, 83.33]%	[96.55, 100.0, 98.81, 100.0, 98.82, 98.81, 97.67, 100.0, 100.0, 98.81, 98.81, 97.62, 98.82, 100.0, 98.81]%	||	84.08%	84.44%	98.89%	86.27%	98.9%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[98.89, 98.89, 100.0, 98.89, 97.78, 96.67, 95.56, 96.67, 97.78, 92.22, 96.67, 96.67, 97.78, 96.67, 96.67]%	[90.91, 92.31, 100.0, 90.91, 83.33, 76.92, 71.43, 72.73, 83.33, 58.82, 76.92, 66.67, 83.33, 72.73, 66.67]%	[83.33, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 50.0, 83.33, 66.67, 50.0]%	[100.0, 98.81, 100.0, 100.0, 98.81, 97.62, 96.43, 98.81, 98.81, 92.86, 97.62, 100.0, 98.81, 98.81, 100.0]%	[100.0, 85.71, 100.0, 100.0, 83.33, 71.43, 62.5, 80.0, 83.33, 45.45, 71.43, 100.0, 83.33, 80.0, 100.0]%	[98.82, 100.0, 100.0, 98.82, 98.81, 98.8, 98.78, 97.65, 98.81, 98.73, 98.8, 96.55, 98.81, 97.65, 96.55]%	||	79.13%	78.89%	98.49%	83.1%	98.51%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  1  4  0  0  1  0  0  0  0  66.67%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  3  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  1  0  0  0  4  0  66.67%		14
  0  0  0  0  1  0  0  1  0  0  0  0  0  1  3  50.0%		15
Forest OOB Error: 52.07%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	84.44%	97.93%	83.33%	[96.67, 98.89, 97.78, 98.89, 98.89, 96.67, 98.89, 97.78, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89, 97.78]%	[66.67, 92.31, 83.33, 90.91, 90.91, 76.92, 90.91, 85.71, 85.71, 83.33, 83.33, 66.67, 90.91, 92.31, 83.33]%	[50.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 100.0, 97.62, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 85.71, 83.33, 100.0, 100.0, 71.43, 100.0, 75.0, 75.0, 83.33, 83.33, 66.67, 100.0, 85.71, 83.33]%	[96.55, 100.0, 98.81, 98.82, 98.82, 98.8, 98.82, 100.0, 100.0, 98.81, 98.81, 97.62, 98.82, 100.0, 98.81]%	||	84.22%	84.44%	98.89%	86.19%	98.9%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[97.78, 98.89, 98.89, 98.89, 97.78, 95.56, 97.78, 97.78, 98.89, 97.78, 95.56, 97.78, 96.67, 94.44, 97.78]%	[80.0, 92.31, 92.31, 90.91, 83.33, 66.67, 83.33, 83.33, 90.91, 80.0, 66.67, 83.33, 80.0, 66.67, 80.0]%	[66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 66.67, 66.67, 83.33, 100.0, 83.33, 66.67]%	[100.0, 98.81, 98.81, 100.0, 98.81, 97.62, 98.81, 98.81, 100.0, 100.0, 97.62, 98.81, 96.43, 95.24, 100.0]%	[100.0, 85.71, 85.71, 100.0, 83.33, 66.67, 83.33, 83.33, 100.0, 100.0, 66.67, 83.33, 66.67, 55.56, 100.0]%	[97.67, 100.0, 100.0, 98.82, 98.81, 97.62, 98.81, 98.81, 98.82, 97.67, 97.62, 98.81, 100.0, 98.77, 97.67]%	||	81.32%	81.11%	98.65%	84.02%	98.66%	
  4  1  0  0  0  0  0  0  0  0  0  0  0  1  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  1  0  1  4  0  0  0  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  5  0  0  0  0  0  0  1  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  5  0  1  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  4  0  1  0  1  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  0  0  1  0  4  66.67%		15
Forest OOB Error: 53.03%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	84.44%	97.93%	83.33%	[96.67, 98.89, 97.78, 98.89, 98.89, 96.67, 98.89, 97.78, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89, 97.78]%	[66.67, 92.31, 83.33, 90.91, 90.91, 76.92, 90.91, 85.71, 85.71, 83.33, 83.33, 66.67, 90.91, 92.31, 83.33]%	[50.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 100.0, 97.62, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 85.71, 83.33, 100.0, 100.0, 71.43, 100.0, 75.0, 75.0, 83.33, 83.33, 66.67, 100.0, 85.71, 83.33]%	[96.55, 100.0, 98.81, 98.82, 98.82, 98.8, 98.82, 100.0, 100.0, 98.81, 98.81, 97.62, 98.82, 100.0, 98.81]%	||	84.22%	84.44%	98.89%	86.19%	98.9%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	74.44%	96.59%	72.62%	[96.67, 97.78, 98.89, 94.44, 98.89, 93.33, 96.67, 94.44, 98.89, 96.67, 92.22, 98.89, 96.67, 97.78, 96.67]%	[66.67, 85.71, 92.31, 44.44, 90.91, 57.14, 72.73, 54.55, 90.91, 80.0, 53.33, 90.91, 72.73, 85.71, 72.73]%	[50.0, 100.0, 100.0, 33.33, 83.33, 66.67, 66.67, 50.0, 83.33, 100.0, 66.67, 83.33, 66.67, 100.0, 66.67]%	[100.0, 97.62, 98.81, 98.81, 100.0, 95.24, 98.81, 97.62, 100.0, 96.43, 94.05, 100.0, 98.81, 97.62, 98.81]%	[100.0, 75.0, 85.71, 66.67, 100.0, 50.0, 80.0, 60.0, 100.0, 66.67, 44.44, 100.0, 80.0, 75.0, 80.0]%	[96.55, 100.0, 100.0, 95.4, 98.82, 97.56, 97.65, 96.47, 98.82, 100.0, 97.53, 98.82, 97.65, 100.0, 97.65]%	||	74.05%	74.44%	98.17%	77.57%	98.2%	
  3  1  0  0  0  1  0  0  0  0  0  0  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  2  0  3  1  0  0  0  0  0  0  0  0  33.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  1  0  0  0  4  0  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  4  0  0  2  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  3  0  0  3  0  0  0  0  50.0%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  1  0  0  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 54.44%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	84.44%	97.93%	83.33%	[96.67, 98.89, 97.78, 98.89, 98.89, 96.67, 98.89, 97.78, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89, 97.78]%	[66.67, 92.31, 83.33, 90.91, 90.91, 76.92, 90.91, 85.71, 85.71, 83.33, 83.33, 66.67, 90.91, 92.31, 83.33]%	[50.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 100.0, 97.62, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 85.71, 83.33, 100.0, 100.0, 71.43, 100.0, 75.0, 75.0, 83.33, 83.33, 66.67, 100.0, 85.71, 83.33]%	[96.55, 100.0, 98.81, 98.82, 98.82, 98.8, 98.82, 100.0, 100.0, 98.81, 98.81, 97.62, 98.82, 100.0, 98.81]%	||	84.22%	84.44%	98.89%	86.19%	98.9%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[97.78, 98.89, 100.0, 95.56, 98.89, 96.67, 96.67, 96.67, 100.0, 95.56, 95.56, 97.78, 98.89, 97.78, 97.78]%	[83.33, 92.31, 100.0, 66.67, 90.91, 76.92, 72.73, 76.92, 100.0, 75.0, 66.67, 80.0, 90.91, 80.0, 83.33]%	[83.33, 100.0, 100.0, 66.67, 83.33, 83.33, 66.67, 83.33, 100.0, 100.0, 66.67, 66.67, 83.33, 66.67, 83.33]%	[98.81, 98.81, 100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 100.0, 95.24, 97.62, 100.0, 100.0, 100.0, 98.81]%	[83.33, 85.71, 100.0, 66.67, 100.0, 71.43, 80.0, 71.43, 100.0, 60.0, 66.67, 100.0, 100.0, 100.0, 83.33]%	[98.81, 100.0, 100.0, 97.62, 98.82, 98.8, 97.65, 98.8, 100.0, 100.0, 97.62, 97.67, 98.82, 97.67, 98.81]%	||	82.38%	82.22%	98.73%	84.57%	98.74%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  0  1  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  0  0  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 57.49%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	84.44%	97.93%	83.33%	[96.67, 98.89, 97.78, 98.89, 98.89, 96.67, 98.89, 97.78, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89, 97.78]%	[66.67, 92.31, 83.33, 90.91, 90.91, 76.92, 90.91, 85.71, 85.71, 83.33, 83.33, 66.67, 90.91, 92.31, 83.33]%	[50.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 100.0, 97.62, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 85.71, 83.33, 100.0, 100.0, 71.43, 100.0, 75.0, 75.0, 83.33, 83.33, 66.67, 100.0, 85.71, 83.33]%	[96.55, 100.0, 98.81, 98.82, 98.82, 98.8, 98.82, 100.0, 100.0, 98.81, 98.81, 97.62, 98.82, 100.0, 98.81]%	||	84.22%	84.44%	98.89%	86.19%	98.9%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[96.67, 98.89, 96.67, 94.44, 100.0, 95.56, 95.56, 92.22, 100.0, 100.0, 93.33, 97.78, 96.67, 97.78, 100.0]%	[66.67, 92.31, 76.92, 61.54, 100.0, 71.43, 66.67, 46.15, 100.0, 100.0, 50.0, 83.33, 72.73, 80.0, 100.0]%	[50.0, 100.0, 83.33, 66.67, 100.0, 83.33, 66.67, 50.0, 100.0, 100.0, 50.0, 83.33, 66.67, 66.67, 100.0]%	[100.0, 98.81, 97.62, 96.43, 100.0, 96.43, 97.62, 95.24, 100.0, 100.0, 96.43, 98.81, 98.81, 100.0, 100.0]%	[100.0, 85.71, 71.43, 57.14, 100.0, 62.5, 66.67, 42.86, 100.0, 100.0, 50.0, 83.33, 80.0, 100.0, 100.0]%	[96.55, 100.0, 98.8, 97.59, 100.0, 98.78, 97.62, 96.39, 100.0, 100.0, 96.43, 98.81, 97.65, 97.67, 100.0]%	||	77.85%	77.78%	98.41%	79.98%	98.42%	
  3  1  0  0  0  1  0  0  0  0  0  1  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  1  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  1  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  4  2  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  3  0  0  2  0  1  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  2  0  0  0  0  1  0  0  3  0  0  0  0  50.0%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 54.12%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	84.44%	97.93%	83.33%	[96.67, 98.89, 97.78, 98.89, 98.89, 96.67, 98.89, 97.78, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89, 97.78]%	[66.67, 92.31, 83.33, 90.91, 90.91, 76.92, 90.91, 85.71, 85.71, 83.33, 83.33, 66.67, 90.91, 92.31, 83.33]%	[50.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 100.0, 97.62, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 85.71, 83.33, 100.0, 100.0, 71.43, 100.0, 75.0, 75.0, 83.33, 83.33, 66.67, 100.0, 85.71, 83.33]%	[96.55, 100.0, 98.81, 98.82, 98.82, 98.8, 98.82, 100.0, 100.0, 98.81, 98.81, 97.62, 98.82, 100.0, 98.81]%	||	84.22%	84.44%	98.89%	86.19%	98.9%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	74.44%	96.59%	72.62%	[98.89, 97.78, 98.89, 94.44, 98.89, 97.78, 94.44, 96.67, 97.78, 94.44, 95.56, 93.33, 95.56, 100.0, 94.44]%	[90.91, 83.33, 92.31, 61.54, 90.91, 83.33, 61.54, 72.73, 83.33, 54.55, 71.43, 57.14, 66.67, 100.0, 44.44]%	[83.33, 83.33, 100.0, 66.67, 83.33, 83.33, 66.67, 66.67, 83.33, 50.0, 83.33, 66.67, 66.67, 100.0, 33.33]%	[100.0, 98.81, 98.81, 96.43, 100.0, 98.81, 96.43, 98.81, 98.81, 97.62, 96.43, 95.24, 97.62, 100.0, 98.81]%	[100.0, 83.33, 85.71, 57.14, 100.0, 83.33, 57.14, 80.0, 83.33, 60.0, 62.5, 50.0, 66.67, 100.0, 66.67]%	[98.82, 98.81, 100.0, 97.59, 98.82, 98.81, 97.59, 97.65, 98.81, 96.47, 98.78, 97.56, 97.62, 100.0, 95.4]%	||	74.28%	74.44%	98.17%	75.72%	98.18%	
  5  0  0  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  1  0  0  0  4  0  0  0  0  1  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  0  0  1  0  1  0  0  66.67%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  3  0  3  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  3  0  0  0  1  0  0  0  0  0  0  2  33.33%		15
Forest OOB Error: 54.47%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	84.44%	97.93%	83.33%	[96.67, 98.89, 97.78, 98.89, 98.89, 96.67, 98.89, 97.78, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89, 97.78]%	[66.67, 92.31, 83.33, 90.91, 90.91, 76.92, 90.91, 85.71, 85.71, 83.33, 83.33, 66.67, 90.91, 92.31, 83.33]%	[50.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 100.0, 97.62, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 85.71, 83.33, 100.0, 100.0, 71.43, 100.0, 75.0, 75.0, 83.33, 83.33, 66.67, 100.0, 85.71, 83.33]%	[96.55, 100.0, 98.81, 98.82, 98.82, 98.8, 98.82, 100.0, 100.0, 98.81, 98.81, 97.62, 98.82, 100.0, 98.81]%	||	84.22%	84.44%	98.89%	86.19%	98.9%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[95.56, 96.67, 97.78, 95.56, 97.78, 95.56, 96.67, 94.44, 98.89, 98.89, 94.44, 100.0, 98.89, 98.89, 97.78]%	[60.0, 72.73, 85.71, 60.0, 83.33, 66.67, 76.92, 61.54, 92.31, 92.31, 61.54, 100.0, 90.91, 92.31, 80.0]%	[50.0, 66.67, 100.0, 50.0, 83.33, 66.67, 83.33, 66.67, 100.0, 100.0, 66.67, 100.0, 83.33, 100.0, 66.67]%	[98.81, 98.81, 97.62, 98.81, 98.81, 97.62, 97.62, 96.43, 98.81, 98.81, 96.43, 100.0, 100.0, 98.81, 100.0]%	[75.0, 80.0, 75.0, 75.0, 83.33, 66.67, 71.43, 57.14, 85.71, 85.71, 57.14, 100.0, 100.0, 85.71, 100.0]%	[96.51, 97.65, 100.0, 96.51, 98.81, 97.62, 98.8, 97.59, 100.0, 100.0, 97.59, 100.0, 98.82, 100.0, 97.67]%	||	78.42%	78.89%	98.49%	79.86%	98.5%	
  3  1  1  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  4  0  0  1  0  1  0  0  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  1  0  0  3  0  1  1  0  0  0  0  0  0  0  0  50.0%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  4  0  0  1  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  1  0  0  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 50.4%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 95.56, 98.89, 97.78, 97.78]%	[66.67, 85.71, 83.33, 100.0, 90.91, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 66.67, 90.91, 83.33, 83.33]%	[50.0, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 66.67, 100.0, 83.33, 83.33]%	[96.55, 100.0, 98.81, 100.0, 98.82, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 98.81, 98.81]%	||	83.06%	83.33%	98.81%	85.32%	98.82%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	87.78%	98.37%	86.9%	[98.89, 98.89, 98.89, 98.89, 100.0, 95.56, 98.89, 98.89, 98.89, 97.78, 98.89, 96.67, 100.0, 97.78, 96.67]%	[90.91, 92.31, 90.91, 90.91, 100.0, 66.67, 92.31, 90.91, 92.31, 85.71, 92.31, 66.67, 100.0, 83.33, 76.92]%	[83.33, 100.0, 83.33, 83.33, 100.0, 66.67, 100.0, 83.33, 100.0, 100.0, 100.0, 50.0, 100.0, 83.33, 83.33]%	[100.0, 98.81, 100.0, 100.0, 100.0, 97.62, 98.81, 100.0, 98.81, 97.62, 98.81, 100.0, 100.0, 98.81, 97.62]%	[100.0, 85.71, 100.0, 100.0, 100.0, 66.67, 85.71, 100.0, 85.71, 75.0, 85.71, 100.0, 100.0, 83.33, 71.43]%	[98.82, 100.0, 98.82, 98.82, 100.0, 97.62, 100.0, 98.82, 100.0, 100.0, 100.0, 96.55, 100.0, 98.81, 98.8]%	||	87.48%	87.78%	99.13%	89.29%	99.14%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  4  0  0  1  1  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  0  0  1  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  1  0  3  0  1  1  50.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  1  0  0  0  5  83.33%		15
Forest OOB Error: 49.06%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 95.56, 98.89, 97.78, 97.78]%	[66.67, 85.71, 83.33, 100.0, 90.91, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 66.67, 90.91, 83.33, 83.33]%	[50.0, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 66.67, 100.0, 83.33, 83.33]%	[96.55, 100.0, 98.81, 100.0, 98.82, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 98.81, 98.81]%	||	83.06%	83.33%	98.81%	85.32%	98.82%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[98.89, 98.89, 95.56, 98.89, 96.67, 96.67, 96.67, 97.78, 98.89, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78]%	[90.91, 92.31, 75.0, 90.91, 66.67, 76.92, 72.73, 83.33, 92.31, 92.31, 85.71, 100.0, 90.91, 90.91, 80.0]%	[83.33, 100.0, 100.0, 83.33, 50.0, 83.33, 66.67, 83.33, 100.0, 100.0, 100.0, 100.0, 83.33, 83.33, 66.67]%	[100.0, 98.81, 95.24, 100.0, 100.0, 97.62, 98.81, 98.81, 98.81, 98.81, 97.62, 100.0, 100.0, 100.0, 100.0]%	[100.0, 85.71, 60.0, 100.0, 100.0, 71.43, 80.0, 83.33, 85.71, 85.71, 75.0, 100.0, 100.0, 100.0, 100.0]%	[98.82, 100.0, 100.0, 98.82, 96.55, 98.8, 97.65, 98.81, 100.0, 100.0, 100.0, 100.0, 98.82, 98.82, 97.67]%	||	85.39%	85.56%	98.97%	88.46%	98.98%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  3  0  3  0  0  0  0  0  0  0  0  0  0  50.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  4  0  0  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  1  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  1  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 56.75%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 95.56, 98.89, 97.78, 97.78]%	[66.67, 85.71, 83.33, 100.0, 90.91, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 66.67, 90.91, 83.33, 83.33]%	[50.0, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 66.67, 100.0, 83.33, 83.33]%	[96.55, 100.0, 98.81, 100.0, 98.82, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 98.81, 98.81]%	||	83.06%	83.33%	98.81%	85.32%	98.82%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[98.89, 96.67, 100.0, 97.78, 98.89, 96.67, 96.67, 97.78, 98.89, 97.78, 97.78, 97.78, 98.89, 98.89, 97.78]%	[90.91, 80.0, 100.0, 80.0, 90.91, 76.92, 66.67, 85.71, 92.31, 85.71, 80.0, 83.33, 92.31, 90.91, 83.33]%	[83.33, 100.0, 100.0, 66.67, 83.33, 83.33, 50.0, 100.0, 100.0, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33]%	[100.0, 96.43, 100.0, 100.0, 100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81, 100.0, 98.81]%	[100.0, 66.67, 100.0, 100.0, 100.0, 71.43, 100.0, 75.0, 85.71, 75.0, 100.0, 83.33, 85.71, 100.0, 83.33]%	[98.82, 100.0, 100.0, 97.67, 98.82, 98.8, 96.55, 100.0, 100.0, 100.0, 97.67, 98.81, 100.0, 98.82, 98.81]%	||	85.27%	85.56%	98.97%	88.41%	98.99%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  1  0  4  0  1  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  3  1  0  1  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  1  0  0  5  83.33%		15
Forest OOB Error: 47.73%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 95.56, 98.89, 97.78, 97.78]%	[66.67, 85.71, 83.33, 100.0, 90.91, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 66.67, 90.91, 83.33, 83.33]%	[50.0, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 66.67, 100.0, 83.33, 83.33]%	[96.55, 100.0, 98.81, 100.0, 98.82, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 98.81, 98.81]%	||	83.06%	83.33%	98.81%	85.32%	98.82%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[98.89, 98.89, 98.89, 97.78, 98.89, 96.67, 95.56, 97.78, 97.78, 97.78, 96.67, 98.89, 98.89, 100.0, 97.78]%	[90.91, 92.31, 90.91, 80.0, 90.91, 76.92, 66.67, 83.33, 85.71, 83.33, 80.0, 92.31, 90.91, 100.0, 80.0]%	[83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33, 100.0, 100.0, 83.33, 100.0, 66.67]%	[100.0, 98.81, 100.0, 100.0, 100.0, 97.62, 97.62, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 85.71, 100.0, 100.0, 100.0, 71.43, 66.67, 83.33, 75.0, 83.33, 66.67, 85.71, 100.0, 100.0, 100.0]%	[98.82, 100.0, 98.82, 97.67, 98.82, 98.8, 97.62, 98.81, 100.0, 98.81, 100.0, 100.0, 98.82, 100.0, 97.67]%	||	85.61%	85.56%	98.97%	87.86%	98.98%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  4  0  0  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  1  0  0  0  4  66.67%		15
Forest OOB Error: 48.29%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 95.56, 98.89, 97.78, 97.78]%	[66.67, 85.71, 83.33, 100.0, 90.91, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 66.67, 90.91, 83.33, 83.33]%	[50.0, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 66.67, 100.0, 83.33, 83.33]%	[96.55, 100.0, 98.81, 100.0, 98.82, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 98.81, 98.81]%	||	83.06%	83.33%	98.81%	85.32%	98.82%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[95.56, 96.67, 98.89, 98.89, 98.89, 97.78, 95.56, 97.78, 97.78, 93.33, 96.67, 97.78, 98.89, 98.89, 98.89]%	[60.0, 76.92, 92.31, 90.91, 90.91, 83.33, 60.0, 83.33, 85.71, 66.67, 76.92, 80.0, 90.91, 90.91, 90.91]%	[50.0, 83.33, 100.0, 83.33, 83.33, 83.33, 50.0, 83.33, 100.0, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33]%	[98.81, 97.62, 98.81, 100.0, 100.0, 98.81, 98.81, 98.81, 97.62, 92.86, 97.62, 100.0, 100.0, 100.0, 100.0]%	[75.0, 71.43, 85.71, 100.0, 100.0, 83.33, 75.0, 83.33, 75.0, 50.0, 71.43, 100.0, 100.0, 100.0, 100.0]%	[96.51, 98.8, 100.0, 98.82, 98.82, 98.81, 96.51, 98.81, 100.0, 100.0, 98.8, 97.67, 98.82, 98.82, 98.82]%	||	81.32%	81.11%	98.65%	84.68%	98.67%	
  3  1  0  0  0  0  0  0  0  2  0  0  0  0  0  50.0%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  1  0  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  1  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  3  0  0  3  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  1  0  0  0  0  0  0  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  1  0  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 50.0%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 95.56, 98.89, 97.78, 97.78]%	[66.67, 85.71, 83.33, 100.0, 90.91, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 66.67, 90.91, 83.33, 83.33]%	[50.0, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 66.67, 100.0, 83.33, 83.33]%	[96.55, 100.0, 98.81, 100.0, 98.82, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 98.81, 98.81]%	||	83.06%	83.33%	98.81%	85.32%	98.82%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[95.56, 98.89, 100.0, 96.67, 100.0, 95.56, 95.56, 95.56, 98.89, 100.0, 94.44, 97.78, 96.67, 96.67, 97.78]%	[71.43, 92.31, 100.0, 66.67, 100.0, 71.43, 60.0, 66.67, 92.31, 100.0, 54.55, 80.0, 76.92, 76.92, 83.33]%	[83.33, 100.0, 100.0, 50.0, 100.0, 83.33, 50.0, 66.67, 100.0, 100.0, 50.0, 66.67, 83.33, 83.33, 83.33]%	[96.43, 98.81, 100.0, 100.0, 100.0, 96.43, 98.81, 97.62, 98.81, 100.0, 97.62, 100.0, 97.62, 97.62, 98.81]%	[62.5, 85.71, 100.0, 100.0, 100.0, 62.5, 75.0, 66.67, 85.71, 100.0, 60.0, 100.0, 71.43, 71.43, 83.33]%	[98.78, 100.0, 100.0, 96.55, 100.0, 98.78, 96.51, 97.62, 100.0, 100.0, 96.47, 97.67, 98.8, 98.8, 98.81]%	||	79.5%	80.0%	98.57%	81.62%	98.59%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  3  0  2  1  0  0  0  0  0  0  0  0  50.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  2  0  0  0  0  0  3  0  0  0  0  0  0  1  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  1  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  2  0  0  3  0  1  0  0  50.0%		11
  0  0  0  0  0  1  0  0  0  0  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  1  5  83.33%		15
Forest OOB Error: 47.79%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	84.44%	97.93%	83.33%	[96.67, 97.78, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89, 97.78]%	[66.67, 85.71, 83.33, 100.0, 90.91, 83.33, 80.0, 85.71, 85.71, 83.33, 83.33, 66.67, 90.91, 92.31, 83.33]%	[50.0, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 66.67, 100.0, 85.71, 83.33]%	[96.55, 100.0, 98.81, 100.0, 98.82, 98.81, 97.67, 100.0, 100.0, 98.81, 98.81, 97.62, 98.82, 100.0, 98.81]%	||	84.08%	84.44%	98.89%	86.27%	98.9%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[96.67, 98.89, 97.78, 97.78, 100.0, 96.67, 96.67, 95.56, 97.78, 97.78, 97.78, 97.78, 97.78, 98.89, 96.67]%	[72.73, 92.31, 83.33, 80.0, 100.0, 76.92, 76.92, 66.67, 85.71, 85.71, 83.33, 80.0, 80.0, 92.31, 72.73]%	[66.67, 100.0, 83.33, 66.67, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 66.67, 66.67, 100.0, 66.67]%	[98.81, 98.81, 98.81, 100.0, 100.0, 97.62, 97.62, 97.62, 97.62, 97.62, 98.81, 100.0, 100.0, 98.81, 98.81]%	[80.0, 85.71, 83.33, 100.0, 100.0, 71.43, 71.43, 66.67, 75.0, 75.0, 83.33, 100.0, 100.0, 85.71, 80.0]%	[97.65, 100.0, 98.81, 97.67, 100.0, 98.8, 98.8, 97.62, 100.0, 100.0, 98.81, 97.67, 97.67, 100.0, 97.65]%	||	81.91%	82.22%	98.73%	83.84%	98.74%	
  4  1  0  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  5  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  4  0  0  0  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  1  4  66.67%		15
Forest OOB Error: 50.76%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	84.44%	97.93%	83.33%	[96.67, 97.78, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89, 97.78]%	[66.67, 85.71, 83.33, 100.0, 90.91, 83.33, 80.0, 85.71, 85.71, 83.33, 83.33, 66.67, 90.91, 92.31, 83.33]%	[50.0, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 66.67, 100.0, 85.71, 83.33]%	[96.55, 100.0, 98.81, 100.0, 98.82, 98.81, 97.67, 100.0, 100.0, 98.81, 98.81, 97.62, 98.82, 100.0, 98.81]%	||	84.08%	84.44%	98.89%	86.27%	98.9%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[96.67, 97.78, 100.0, 98.89, 98.89, 96.67, 96.67, 97.78, 97.78, 100.0, 98.89, 97.78, 97.78, 96.67, 98.89]%	[66.67, 85.71, 100.0, 90.91, 92.31, 72.73, 72.73, 85.71, 83.33, 100.0, 90.91, 83.33, 85.71, 76.92, 90.91]%	[50.0, 100.0, 100.0, 83.33, 100.0, 66.67, 66.67, 100.0, 83.33, 100.0, 83.33, 83.33, 100.0, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 98.81, 98.81, 98.81, 97.62, 98.81, 100.0, 100.0, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 85.71, 80.0, 80.0, 75.0, 83.33, 100.0, 100.0, 83.33, 75.0, 71.43, 100.0]%	[96.55, 100.0, 100.0, 98.82, 100.0, 97.65, 97.65, 100.0, 98.81, 100.0, 98.82, 98.81, 100.0, 98.8, 98.82]%	||	85.19%	85.56%	98.97%	87.25%	98.98%	
  3  1  0  0  0  0  0  1  0  0  0  1  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  1  0  0  0  4  0  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  4  1  1  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  1  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 49.42%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	84.44%	97.93%	83.33%	[96.67, 97.78, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89, 97.78]%	[66.67, 85.71, 83.33, 100.0, 90.91, 83.33, 80.0, 85.71, 85.71, 83.33, 83.33, 66.67, 90.91, 92.31, 83.33]%	[50.0, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 66.67, 100.0, 85.71, 83.33]%	[96.55, 100.0, 98.81, 100.0, 98.82, 98.81, 97.67, 100.0, 100.0, 98.81, 98.81, 97.62, 98.82, 100.0, 98.81]%	||	84.08%	84.44%	98.89%	86.27%	98.9%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[97.78, 96.67, 98.89, 96.67, 98.89, 96.67, 93.33, 96.67, 100.0, 96.67, 97.78, 95.56, 96.67, 95.56, 97.78]%	[80.0, 72.73, 92.31, 72.73, 90.91, 72.73, 50.0, 76.92, 100.0, 80.0, 83.33, 60.0, 76.92, 71.43, 83.33]%	[66.67, 66.67, 100.0, 66.67, 83.33, 66.67, 50.0, 83.33, 100.0, 100.0, 83.33, 50.0, 83.33, 83.33, 83.33]%	[100.0, 98.81, 98.81, 98.81, 100.0, 98.81, 96.43, 97.62, 100.0, 96.43, 98.81, 98.81, 97.62, 96.43, 98.81]%	[100.0, 80.0, 85.71, 80.0, 100.0, 80.0, 50.0, 71.43, 100.0, 66.67, 83.33, 75.0, 71.43, 62.5, 83.33]%	[97.67, 97.65, 100.0, 97.65, 98.82, 97.65, 96.43, 98.8, 100.0, 100.0, 98.81, 96.51, 98.8, 98.78, 98.81]%	||	77.56%	77.78%	98.41%	79.29%	98.42%	
  4  1  0  0  0  0  0  0  0  0  0  0  0  1  0  66.67%		1
  0  4  0  0  0  0  1  0  0  0  0  0  0  1  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  1  0  0  4  0  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  3  0  0  1  0  1  1  0  0  50.0%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  2  0  3  0  0  1  50.0%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 52.96%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	84.44%	97.93%	83.33%	[96.67, 97.78, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89, 97.78]%	[66.67, 85.71, 83.33, 100.0, 90.91, 83.33, 80.0, 85.71, 85.71, 83.33, 83.33, 66.67, 90.91, 92.31, 83.33]%	[50.0, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 66.67, 100.0, 85.71, 83.33]%	[96.55, 100.0, 98.81, 100.0, 98.82, 98.81, 97.67, 100.0, 100.0, 98.81, 98.81, 97.62, 98.82, 100.0, 98.81]%	||	84.08%	84.44%	98.89%	86.27%	98.9%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	70.0%	96.0%	67.86%	[96.67, 97.78, 96.67, 95.56, 97.78, 94.44, 92.22, 97.78, 94.44, 93.33, 95.56, 97.78, 95.56, 96.67, 97.78]%	[76.92, 83.33, 76.92, 50.0, 83.33, 61.54, 53.33, 83.33, 66.67, 40.0, 71.43, 83.33, 60.0, 72.73, 80.0]%	[83.33, 83.33, 83.33, 33.33, 83.33, 66.67, 66.67, 83.33, 83.33, 33.33, 83.33, 83.33, 50.0, 66.67, 66.67]%	[97.62, 98.81, 97.62, 100.0, 98.81, 96.43, 94.05, 98.81, 95.24, 97.62, 96.43, 98.81, 98.81, 98.81, 100.0]%	[71.43, 83.33, 71.43, 100.0, 83.33, 57.14, 44.44, 83.33, 55.56, 50.0, 62.5, 83.33, 75.0, 80.0, 100.0]%	[98.8, 98.81, 98.8, 95.45, 98.81, 97.59, 97.53, 98.81, 98.77, 95.35, 98.78, 98.81, 96.51, 97.65, 97.67]%	||	69.52%	70.0%	97.86%	73.39%	97.88%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  2  0  3  1  0  0  0  0  0  0  0  0  33.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  1  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  4  0  1  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  0  0  0  1  0  83.33%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  1  2  0  1  0  0  0  33.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  1  0  0  0  0  0  0  0  0  0  0  5  0  0  0  83.33%		12
  1  0  0  0  0  0  0  0  0  0  2  0  3  0  0  50.0%		13
  0  0  2  0  0  0  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  1  0  0  1  0  0  0  4  66.67%		15
Forest OOB Error: 54.11%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	84.44%	97.93%	83.33%	[96.67, 97.78, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89, 97.78]%	[66.67, 85.71, 83.33, 100.0, 90.91, 83.33, 80.0, 85.71, 85.71, 83.33, 83.33, 66.67, 90.91, 92.31, 83.33]%	[50.0, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 66.67, 100.0, 85.71, 83.33]%	[96.55, 100.0, 98.81, 100.0, 98.82, 98.81, 97.67, 100.0, 100.0, 98.81, 98.81, 97.62, 98.82, 100.0, 98.81]%	||	84.08%	84.44%	98.89%	86.27%	98.9%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[95.56, 96.67, 100.0, 95.56, 98.89, 97.78, 96.67, 94.44, 98.89, 96.67, 98.89, 95.56, 97.78, 96.67, 95.56]%	[50.0, 76.92, 100.0, 66.67, 90.91, 83.33, 72.73, 61.54, 92.31, 80.0, 92.31, 60.0, 85.71, 76.92, 60.0]%	[33.33, 83.33, 100.0, 66.67, 83.33, 83.33, 66.67, 66.67, 100.0, 100.0, 100.0, 50.0, 100.0, 83.33, 50.0]%	[100.0, 97.62, 100.0, 97.62, 100.0, 98.81, 98.81, 96.43, 98.81, 96.43, 98.81, 98.81, 97.62, 97.62, 98.81]%	[100.0, 71.43, 100.0, 66.67, 100.0, 83.33, 80.0, 57.14, 85.71, 66.67, 85.71, 75.0, 75.0, 71.43, 75.0]%	[95.45, 98.8, 100.0, 97.62, 98.82, 98.81, 97.65, 97.59, 100.0, 100.0, 100.0, 96.51, 100.0, 98.8, 96.51]%	||	76.62%	77.78%	98.41%	79.54%	98.44%	
  2  1  0  1  0  0  0  0  0  0  0  1  0  1  0  33.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  1  0  4  0  1  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  4  2  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  0  0  1  0  1  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  2  0  3  0  0  1  50.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  0  0  1  1  3  50.0%		15
Forest OOB Error: 50.2%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	84.44%	97.93%	83.33%	[96.67, 97.78, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89, 97.78]%	[66.67, 85.71, 83.33, 100.0, 90.91, 83.33, 80.0, 85.71, 85.71, 83.33, 83.33, 66.67, 90.91, 92.31, 83.33]%	[50.0, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 66.67, 100.0, 85.71, 83.33]%	[96.55, 100.0, 98.81, 100.0, 98.82, 98.81, 97.67, 100.0, 100.0, 98.81, 98.81, 97.62, 98.82, 100.0, 98.81]%	||	84.08%	84.44%	98.89%	86.27%	98.9%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[98.89, 97.78, 100.0, 97.78, 100.0, 94.44, 97.78, 93.33, 98.89, 96.67, 95.56, 97.78, 96.67, 96.67, 97.78]%	[90.91, 85.71, 100.0, 80.0, 100.0, 61.54, 83.33, 40.0, 92.31, 80.0, 71.43, 80.0, 72.73, 72.73, 83.33]%	[83.33, 100.0, 100.0, 66.67, 100.0, 66.67, 83.33, 33.33, 100.0, 100.0, 83.33, 66.67, 66.67, 66.67, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 96.43, 98.81, 97.62, 98.81, 96.43, 96.43, 100.0, 98.81, 98.81, 98.81]%	[100.0, 75.0, 100.0, 100.0, 100.0, 57.14, 83.33, 50.0, 85.71, 66.67, 62.5, 100.0, 80.0, 80.0, 83.33]%	[98.82, 100.0, 100.0, 97.67, 100.0, 97.59, 98.81, 95.35, 100.0, 100.0, 98.78, 97.67, 97.65, 97.65, 98.81]%	||	79.6%	80.0%	98.57%	81.58%	98.59%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  1  0  0  0  4  0  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  2  0  0  2  0  1  0  1  33.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 49.41%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	84.44%	97.93%	83.33%	[96.67, 98.89, 97.78, 98.89, 98.89, 96.67, 98.89, 97.78, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89, 97.78]%	[66.67, 92.31, 83.33, 90.91, 90.91, 76.92, 90.91, 85.71, 85.71, 83.33, 83.33, 66.67, 90.91, 92.31, 83.33]%	[50.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 100.0, 97.62, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 85.71, 83.33, 100.0, 100.0, 71.43, 100.0, 75.0, 75.0, 83.33, 83.33, 66.67, 100.0, 85.71, 83.33]%	[96.55, 100.0, 98.81, 98.82, 98.82, 98.8, 98.82, 100.0, 100.0, 98.81, 98.81, 97.62, 98.82, 100.0, 98.81]%	||	84.22%	84.44%	98.89%	86.19%	98.9%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[97.78, 97.78, 98.89, 97.78, 94.44, 97.78, 96.67, 97.78, 97.78, 97.78, 95.56, 97.78, 96.67, 100.0, 97.78]%	[80.0, 85.71, 90.91, 85.71, 61.54, 80.0, 76.92, 80.0, 83.33, 83.33, 71.43, 83.33, 72.73, 100.0, 83.33]%	[66.67, 100.0, 83.33, 100.0, 66.67, 66.67, 83.33, 66.67, 83.33, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33]%	[100.0, 97.62, 100.0, 97.62, 96.43, 100.0, 97.62, 100.0, 98.81, 98.81, 96.43, 98.81, 98.81, 100.0, 98.81]%	[100.0, 75.0, 100.0, 75.0, 57.14, 100.0, 71.43, 100.0, 83.33, 83.33, 62.5, 83.33, 80.0, 100.0, 83.33]%	[97.67, 100.0, 98.82, 100.0, 97.59, 97.67, 98.8, 97.67, 98.81, 98.81, 98.78, 98.81, 97.65, 100.0, 98.81]%	||	81.22%	81.11%	98.65%	83.63%	98.66%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  1  4  0  1  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  0  1  4  1  0  0  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  1  0  0  0  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  1  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 46.77%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	84.44%	97.93%	83.33%	[96.67, 98.89, 97.78, 98.89, 98.89, 96.67, 98.89, 97.78, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89, 97.78]%	[66.67, 92.31, 83.33, 90.91, 90.91, 76.92, 90.91, 85.71, 85.71, 83.33, 83.33, 66.67, 90.91, 92.31, 83.33]%	[50.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 100.0, 97.62, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 85.71, 83.33, 100.0, 100.0, 71.43, 100.0, 75.0, 75.0, 83.33, 83.33, 66.67, 100.0, 85.71, 83.33]%	[96.55, 100.0, 98.81, 98.82, 98.82, 98.8, 98.82, 100.0, 100.0, 98.81, 98.81, 97.62, 98.82, 100.0, 98.81]%	||	84.22%	84.44%	98.89%	86.19%	98.9%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[95.56, 96.67, 100.0, 98.89, 100.0, 94.44, 97.78, 96.67, 97.78, 97.78, 96.67, 100.0, 98.89, 95.56, 97.78]%	[60.0, 80.0, 100.0, 90.91, 100.0, 61.54, 83.33, 66.67, 85.71, 83.33, 80.0, 100.0, 90.91, 60.0, 83.33]%	[50.0, 100.0, 100.0, 83.33, 100.0, 66.67, 83.33, 50.0, 100.0, 83.33, 100.0, 100.0, 83.33, 50.0, 83.33]%	[98.81, 96.43, 100.0, 100.0, 100.0, 96.43, 98.81, 100.0, 97.62, 98.81, 96.43, 100.0, 100.0, 98.81, 98.81]%	[75.0, 66.67, 100.0, 100.0, 100.0, 57.14, 83.33, 100.0, 75.0, 83.33, 66.67, 100.0, 100.0, 75.0, 83.33]%	[96.51, 100.0, 100.0, 98.82, 100.0, 97.59, 98.81, 96.55, 100.0, 98.81, 100.0, 100.0, 98.82, 96.51, 98.81]%	||	81.72%	82.22%	98.73%	84.37%	98.75%	
  3  1  0  0  0  0  0  0  0  1  0  0  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  1  0  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  1  0  0  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  1  0  0  0  0  0  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  3  0  0  2  0  0  0  1  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  1  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  1  0  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  3  0  0  0  0  0  0  0  3  0  50.0%		14
  0  0  0  0  0  0  0  0  0  0  1  0  0  0  5  83.33%		15
Forest OOB Error: 52.87%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	84.44%	97.93%	83.33%	[96.67, 98.89, 97.78, 98.89, 98.89, 96.67, 98.89, 97.78, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89, 97.78]%	[66.67, 92.31, 83.33, 90.91, 90.91, 76.92, 90.91, 85.71, 85.71, 83.33, 83.33, 66.67, 90.91, 92.31, 83.33]%	[50.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 100.0, 97.62, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 85.71, 83.33, 100.0, 100.0, 71.43, 100.0, 75.0, 75.0, 83.33, 83.33, 66.67, 100.0, 85.71, 83.33]%	[96.55, 100.0, 98.81, 98.82, 98.82, 98.8, 98.82, 100.0, 100.0, 98.81, 98.81, 97.62, 98.82, 100.0, 98.81]%	||	84.22%	84.44%	98.89%	86.19%	98.9%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[96.67, 98.89, 97.78, 95.56, 98.89, 95.56, 97.78, 95.56, 98.89, 97.78, 95.56, 96.67, 98.89, 97.78, 97.78]%	[66.67, 92.31, 83.33, 66.67, 92.31, 71.43, 83.33, 71.43, 92.31, 85.71, 60.0, 72.73, 90.91, 80.0, 83.33]%	[50.0, 100.0, 83.33, 66.67, 100.0, 83.33, 83.33, 83.33, 100.0, 100.0, 50.0, 66.67, 83.33, 66.67, 83.33]%	[100.0, 98.81, 98.81, 97.62, 98.81, 96.43, 98.81, 96.43, 98.81, 97.62, 98.81, 98.81, 100.0, 100.0, 98.81]%	[100.0, 85.71, 83.33, 66.67, 85.71, 62.5, 83.33, 62.5, 85.71, 75.0, 75.0, 80.0, 100.0, 100.0, 83.33]%	[96.55, 100.0, 98.81, 97.62, 100.0, 98.78, 98.81, 98.78, 100.0, 100.0, 96.51, 97.65, 98.82, 97.67, 98.81]%	||	79.5%	80.0%	98.57%	81.92%	98.59%	
  3  1  0  0  0  1  0  0  0  0  0  1  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  1  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  1  0  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  0  0  1  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  3  0  0  3  0  0  0  0  50.0%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  1  0  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 55.24%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	84.44%	97.93%	83.33%	[96.67, 98.89, 97.78, 98.89, 98.89, 96.67, 98.89, 97.78, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89, 97.78]%	[66.67, 92.31, 83.33, 90.91, 90.91, 76.92, 90.91, 85.71, 85.71, 83.33, 83.33, 66.67, 90.91, 92.31, 83.33]%	[50.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 100.0, 97.62, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 85.71, 83.33, 100.0, 100.0, 71.43, 100.0, 75.0, 75.0, 83.33, 83.33, 66.67, 100.0, 85.71, 83.33]%	[96.55, 100.0, 98.81, 98.82, 98.82, 98.8, 98.82, 100.0, 100.0, 98.81, 98.81, 97.62, 98.82, 100.0, 98.81]%	||	84.22%	84.44%	98.89%	86.19%	98.9%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	84.44%	97.93%	83.33%	[98.89, 95.56, 100.0, 95.56, 98.89, 97.78, 98.89, 96.67, 98.89, 98.89, 95.56, 98.89, 96.67, 98.89, 98.89]%	[90.91, 71.43, 100.0, 66.67, 90.91, 83.33, 92.31, 72.73, 90.91, 92.31, 71.43, 90.91, 72.73, 92.31, 90.91]%	[83.33, 83.33, 100.0, 66.67, 83.33, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 83.33]%	[100.0, 96.43, 100.0, 97.62, 100.0, 98.81, 98.81, 98.81, 100.0, 98.81, 96.43, 100.0, 98.81, 98.81, 100.0]%	[100.0, 62.5, 100.0, 66.67, 100.0, 83.33, 85.71, 80.0, 100.0, 85.71, 62.5, 100.0, 80.0, 85.71, 100.0]%	[98.82, 98.78, 100.0, 97.62, 98.82, 98.81, 100.0, 97.65, 98.82, 100.0, 98.78, 98.82, 97.65, 100.0, 98.82]%	||	84.65%	84.44%	98.89%	86.14%	98.89%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  1  0  4  0  1  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  1  0  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  1  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  1  0  83.33%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 49.62%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	84.44%	97.93%	83.33%	[96.67, 98.89, 97.78, 98.89, 98.89, 96.67, 98.89, 97.78, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89, 97.78]%	[66.67, 92.31, 83.33, 90.91, 90.91, 76.92, 90.91, 85.71, 85.71, 83.33, 83.33, 66.67, 90.91, 92.31, 83.33]%	[50.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 100.0, 97.62, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 85.71, 83.33, 100.0, 100.0, 71.43, 100.0, 75.0, 75.0, 83.33, 83.33, 66.67, 100.0, 85.71, 83.33]%	[96.55, 100.0, 98.81, 98.82, 98.82, 98.8, 98.82, 100.0, 100.0, 98.81, 98.81, 97.62, 98.82, 100.0, 98.81]%	||	84.22%	84.44%	98.89%	86.19%	98.9%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[97.78, 100.0, 100.0, 95.56, 96.67, 98.89, 98.89, 96.67, 100.0, 95.56, 94.44, 97.78, 95.56, 94.44, 97.78]%	[80.0, 100.0, 100.0, 66.67, 76.92, 90.91, 90.91, 72.73, 100.0, 71.43, 54.55, 85.71, 66.67, 66.67, 80.0]%	[66.67, 100.0, 100.0, 66.67, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33, 50.0, 100.0, 66.67, 83.33, 66.67]%	[100.0, 100.0, 100.0, 97.62, 97.62, 100.0, 100.0, 98.81, 100.0, 96.43, 97.62, 97.62, 97.62, 95.24, 100.0]%	[100.0, 100.0, 100.0, 66.67, 71.43, 100.0, 100.0, 80.0, 100.0, 62.5, 60.0, 75.0, 66.67, 55.56, 100.0]%	[97.67, 100.0, 100.0, 97.62, 98.8, 98.82, 98.82, 97.65, 100.0, 98.78, 96.47, 100.0, 97.62, 98.77, 97.67]%	||	80.21%	80.0%	98.57%	82.52%	98.58%	
  4  0  0  0  0  0  0  0  0  0  0  0  0  2  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  0  0  0  0  0  0  1  0  1  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  1  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  1  0  0  0  4  0  0  1  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  3  0  2  1  0  50.0%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  1  0  0  0  0  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  1  0  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 44.98%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	84.44%	97.93%	83.33%	[96.67, 98.89, 97.78, 98.89, 98.89, 96.67, 98.89, 97.78, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89, 97.78]%	[66.67, 92.31, 83.33, 90.91, 90.91, 76.92, 90.91, 85.71, 85.71, 83.33, 83.33, 66.67, 90.91, 92.31, 83.33]%	[50.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 100.0, 97.62, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 85.71, 83.33, 100.0, 100.0, 71.43, 100.0, 75.0, 75.0, 83.33, 83.33, 66.67, 100.0, 85.71, 83.33]%	[96.55, 100.0, 98.81, 98.82, 98.82, 98.8, 98.82, 100.0, 100.0, 98.81, 98.81, 97.62, 98.82, 100.0, 98.81]%	||	84.22%	84.44%	98.89%	86.19%	98.9%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	86.67%	98.22%	85.71%	[98.89, 98.89, 96.67, 97.78, 96.67, 100.0, 97.78, 96.67, 98.89, 100.0, 96.67, 98.89, 97.78, 100.0, 97.78]%	[90.91, 92.31, 80.0, 80.0, 76.92, 100.0, 85.71, 66.67, 90.91, 100.0, 80.0, 90.91, 80.0, 100.0, 83.33]%	[83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 100.0, 50.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 83.33]%	[100.0, 98.81, 96.43, 100.0, 97.62, 100.0, 97.62, 100.0, 100.0, 100.0, 96.43, 100.0, 100.0, 100.0, 98.81]%	[100.0, 85.71, 66.67, 100.0, 71.43, 100.0, 75.0, 100.0, 100.0, 100.0, 66.67, 100.0, 100.0, 100.0, 83.33]%	[98.82, 100.0, 100.0, 97.67, 98.8, 100.0, 100.0, 96.55, 98.82, 100.0, 100.0, 98.82, 97.67, 100.0, 98.81]%	||	86.51%	86.67%	99.05%	89.92%	99.07%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  1  4  0  0  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  1  0  0  3  0  0  1  0  0  0  1  50.0%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  1  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 45.56%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 95.56, 98.89, 97.78, 97.78]%	[66.67, 85.71, 83.33, 100.0, 90.91, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 66.67, 90.91, 83.33, 83.33]%	[50.0, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 66.67, 100.0, 83.33, 83.33]%	[96.55, 100.0, 98.81, 100.0, 98.82, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 98.81, 98.81]%	||	83.06%	83.33%	98.81%	85.32%	98.82%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[97.78, 97.78, 98.89, 96.67, 94.44, 95.56, 96.67, 97.78, 98.89, 96.67, 96.67, 95.56, 96.67, 100.0, 97.78]%	[83.33, 83.33, 92.31, 72.73, 44.44, 66.67, 76.92, 83.33, 92.31, 72.73, 76.92, 66.67, 76.92, 100.0, 83.33]%	[83.33, 83.33, 100.0, 66.67, 33.33, 66.67, 83.33, 83.33, 100.0, 66.67, 83.33, 66.67, 83.33, 100.0, 83.33]%	[98.81, 98.81, 98.81, 98.81, 98.81, 97.62, 97.62, 98.81, 98.81, 98.81, 97.62, 97.62, 97.62, 100.0, 98.81]%	[83.33, 83.33, 85.71, 80.0, 66.67, 66.67, 71.43, 83.33, 85.71, 80.0, 71.43, 66.67, 71.43, 100.0, 83.33]%	[98.81, 98.81, 100.0, 97.65, 95.4, 97.62, 98.8, 98.81, 100.0, 97.65, 98.8, 97.62, 98.8, 100.0, 98.81]%	||	78.13%	78.89%	98.49%	78.6%	98.5%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  1  1  2  1  0  0  0  1  0  0  0  0  0  33.33%		5
  0  0  0  0  1  4  0  0  1  0  0  0  0  0  0  66.67%		6
  1  0  0  0  0  0  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  4  0  2  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  4  1  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 54.55%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 95.56, 98.89, 97.78, 97.78]%	[66.67, 85.71, 83.33, 100.0, 90.91, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 66.67, 90.91, 83.33, 83.33]%	[50.0, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 66.67, 100.0, 83.33, 83.33]%	[96.55, 100.0, 98.81, 100.0, 98.82, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 98.81, 98.81]%	||	83.06%	83.33%	98.81%	85.32%	98.82%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[97.78, 93.33, 100.0, 95.56, 98.89, 96.67, 94.44, 94.44, 97.78, 96.67, 97.78, 96.67, 97.78, 96.67, 96.67]%	[80.0, 57.14, 100.0, 66.67, 90.91, 76.92, 66.67, 54.55, 83.33, 76.92, 83.33, 72.73, 83.33, 66.67, 76.92]%	[66.67, 66.67, 100.0, 66.67, 83.33, 83.33, 83.33, 50.0, 83.33, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33]%	[100.0, 95.24, 100.0, 97.62, 100.0, 97.62, 95.24, 97.62, 98.81, 97.62, 98.81, 98.81, 98.81, 100.0, 97.62]%	[100.0, 50.0, 100.0, 66.67, 100.0, 71.43, 55.56, 60.0, 83.33, 71.43, 83.33, 80.0, 83.33, 100.0, 71.43]%	[97.67, 97.56, 100.0, 97.62, 98.82, 98.8, 98.77, 96.47, 98.81, 98.8, 98.81, 97.65, 98.81, 96.55, 98.8]%	||	75.74%	75.56%	98.25%	78.43%	98.26%	
  4  1  0  1  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  4  0  0  0  0  2  0  0  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  1  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  1  3  0  0  1  0  0  0  1  50.0%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  1  0  0  0  1  0  0  0  1  0  0  0  3  0  50.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 57.14%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 95.56, 98.89, 97.78, 97.78]%	[66.67, 85.71, 83.33, 100.0, 90.91, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 66.67, 90.91, 83.33, 83.33]%	[50.0, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 66.67, 100.0, 83.33, 83.33]%	[96.55, 100.0, 98.81, 100.0, 98.82, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 98.81, 98.81]%	||	83.06%	83.33%	98.81%	85.32%	98.82%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[97.78, 94.44, 98.89, 97.78, 96.67, 95.56, 98.89, 96.67, 98.89, 93.33, 95.56, 95.56, 97.78, 98.89, 98.89]%	[80.0, 66.67, 92.31, 80.0, 72.73, 60.0, 92.31, 76.92, 90.91, 50.0, 71.43, 71.43, 80.0, 92.31, 90.91]%	[66.67, 83.33, 100.0, 66.67, 66.67, 50.0, 100.0, 83.33, 83.33, 50.0, 83.33, 83.33, 66.67, 100.0, 83.33]%	[100.0, 95.24, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0, 96.43, 96.43, 96.43, 100.0, 98.81, 100.0]%	[100.0, 55.56, 85.71, 100.0, 80.0, 75.0, 85.71, 71.43, 100.0, 50.0, 62.5, 62.5, 100.0, 85.71, 100.0]%	[97.67, 98.77, 100.0, 97.67, 97.65, 96.51, 100.0, 98.8, 98.82, 96.43, 98.78, 98.78, 97.67, 100.0, 98.82]%	||	77.86%	77.78%	98.41%	80.94%	98.43%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  1  0  4  0  0  0  0  1  0  0  0  0  0  66.67%		5
  0  1  0  0  1  3  0  0  0  0  0  0  0  1  0  50.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  3  0  3  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  1  0  0  0  5  83.33%		15
Forest OOB Error: 58.33%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 95.56, 98.89, 97.78, 97.78]%	[66.67, 85.71, 83.33, 100.0, 90.91, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 66.67, 90.91, 83.33, 83.33]%	[50.0, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 66.67, 100.0, 83.33, 83.33]%	[96.55, 100.0, 98.81, 100.0, 98.82, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 98.81, 98.81]%	||	83.06%	83.33%	98.81%	85.32%	98.82%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[96.67, 97.78, 97.78, 96.67, 95.56, 98.89, 95.56, 95.56, 97.78, 97.78, 97.78, 96.67, 96.67, 98.89, 97.78]%	[72.73, 83.33, 85.71, 76.92, 60.0, 90.91, 66.67, 66.67, 85.71, 85.71, 80.0, 72.73, 76.92, 92.31, 80.0]%	[66.67, 83.33, 100.0, 83.33, 50.0, 83.33, 66.67, 66.67, 100.0, 100.0, 66.67, 66.67, 83.33, 100.0, 66.67]%	[98.81, 98.81, 97.62, 97.62, 98.81, 100.0, 97.62, 97.62, 97.62, 97.62, 100.0, 98.81, 97.62, 98.81, 100.0]%	[80.0, 83.33, 75.0, 71.43, 75.0, 100.0, 66.67, 66.67, 75.0, 75.0, 100.0, 80.0, 71.43, 85.71, 100.0]%	[97.65, 98.81, 100.0, 98.8, 96.51, 98.82, 97.62, 97.62, 100.0, 100.0, 97.67, 97.65, 98.8, 100.0, 97.67]%	||	78.42%	78.89%	98.49%	80.35%	98.51%	
  4  1  0  1  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  2  0  3  0  0  0  0  1  0  0  0  0  0  50.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  0  0  0  0  1  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  1  0  0  0  1  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  1  0  66.67%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  1  1  0  0  0  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 52.07%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 95.56, 98.89, 97.78, 97.78]%	[66.67, 85.71, 83.33, 100.0, 90.91, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 66.67, 90.91, 83.33, 83.33]%	[50.0, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 66.67, 100.0, 83.33, 83.33]%	[96.55, 100.0, 98.81, 100.0, 98.82, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 98.81, 98.81]%	||	83.06%	83.33%	98.81%	85.32%	98.82%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[96.67, 95.56, 100.0, 95.56, 94.44, 93.33, 93.33, 95.56, 100.0, 98.89, 94.44, 95.56, 96.67, 96.67, 97.78]%	[72.73, 66.67, 100.0, 50.0, 66.67, 57.14, 66.67, 71.43, 100.0, 90.91, 66.67, 60.0, 66.67, 66.67, 80.0]%	[66.67, 66.67, 100.0, 33.33, 83.33, 66.67, 100.0, 83.33, 100.0, 83.33, 83.33, 50.0, 50.0, 50.0, 66.67]%	[98.81, 97.62, 100.0, 100.0, 95.24, 95.24, 92.86, 96.43, 100.0, 100.0, 95.24, 98.81, 100.0, 100.0, 100.0]%	[80.0, 66.67, 100.0, 100.0, 55.56, 50.0, 50.0, 62.5, 100.0, 100.0, 55.56, 75.0, 100.0, 100.0, 100.0]%	[97.65, 97.62, 100.0, 95.45, 98.77, 97.56, 100.0, 98.78, 100.0, 98.82, 98.77, 96.51, 96.55, 96.55, 97.67]%	||	72.15%	72.22%	98.02%	79.69%	98.05%	
  4  1  0  0  0  0  0  0  0  0  1  0  0  0  0  66.67%		1
  0  4  0  0  0  0  2  0  0  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  1  0  2  0  3  0  0  0  0  0  0  0  0  0  33.33%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  2  4  0  0  0  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  1  0  0  0  0  0  2  0  0  0  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  1  0  0  2  0  3  0  0  50.0%		13
  0  0  0  0  2  1  0  0  0  0  0  0  0  3  0  50.0%		14
  0  0  0  0  0  0  1  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 53.99%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	83.33%	97.78%	82.14%	[96.67, 97.78, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 95.56, 98.89, 97.78, 97.78]%	[66.67, 85.71, 83.33, 100.0, 90.91, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 66.67, 90.91, 83.33, 83.33]%	[50.0, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 66.67, 100.0, 83.33, 83.33]%	[96.55, 100.0, 98.81, 100.0, 98.82, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 97.62, 98.82, 98.81, 98.81]%	||	83.06%	83.33%	98.81%	85.32%	98.82%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 2, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	64.44%	95.26%	61.9%	[95.56, 95.56, 97.78, 95.56, 98.89, 95.56, 93.33, 92.22, 97.78, 93.33, 95.56, 95.56, 94.44, 93.33, 94.44]%	[66.67, 66.67, 85.71, 50.0, 90.91, 66.67, 50.0, 53.33, 85.71, 50.0, 66.67, 66.67, 54.55, 50.0, 54.55]%	[66.67, 66.67, 100.0, 33.33, 83.33, 66.67, 50.0, 66.67, 100.0, 50.0, 66.67, 66.67, 50.0, 50.0, 50.0]%	[97.62, 97.62, 97.62, 100.0, 100.0, 97.62, 96.43, 94.05, 97.62, 96.43, 97.62, 97.62, 97.62, 96.43, 97.62]%	[66.67, 66.67, 75.0, 100.0, 100.0, 66.67, 50.0, 44.44, 75.0, 50.0, 66.67, 66.67, 60.0, 50.0, 60.0]%	[97.62, 97.62, 100.0, 95.45, 98.82, 97.62, 96.43, 97.53, 100.0, 96.43, 97.62, 97.62, 96.47, 96.43, 96.47]%	||	63.87%	64.44%	97.46%	66.52%	97.48%	
  4  1  0  0  0  0  0  0  0  0  0  0  1  0  0  66.67%		1
  0  4  0  0  0  0  2  0  0  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  1  0  2  0  1  0  0  0  0  0  0  0  2  0  33.33%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  2  0  0  0  0  1  3  0  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  1  0  0  1  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  1  3  0  2  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  1  0  0  1  0  3  0  1  50.0%		13
  0  0  2  0  0  0  0  0  0  1  0  0  0  3  0  50.0%		14
  0  0  0  0  0  0  0  2  0  0  1  0  0  0  3  50.0%		15
Forest OOB Error: 57.85%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 96.67, 98.89, 100.0, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 83.33, 83.33, 76.92, 90.91, 100.0, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.81, 98.81, 98.8, 98.82, 100.0, 98.82]%	||	87.79%	87.78%	99.13%	89.76%	99.14%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	84.44%	97.93%	83.33%	[98.89, 96.67, 100.0, 94.44, 100.0, 95.56, 97.78, 95.56, 97.78, 98.89, 97.78, 97.78, 100.0, 98.89, 98.89]%	[90.91, 76.92, 100.0, 54.55, 100.0, 71.43, 80.0, 75.0, 85.71, 90.91, 80.0, 83.33, 100.0, 90.91, 90.91]%	[83.33, 83.33, 100.0, 50.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 66.67, 83.33, 100.0, 83.33, 83.33]%	[100.0, 97.62, 100.0, 97.62, 100.0, 96.43, 100.0, 95.24, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 100.0]%	[100.0, 71.43, 100.0, 60.0, 100.0, 62.5, 100.0, 60.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 100.0]%	[98.82, 98.8, 100.0, 96.47, 100.0, 98.78, 97.67, 100.0, 100.0, 98.82, 97.67, 98.81, 100.0, 98.82, 98.82]%	||	84.71%	84.44%	98.89%	87.48%	98.9%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  1  0  3  0  2  0  0  0  0  0  0  0  0  0  50.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  4  2  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  1  0  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 47.73%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 96.67, 98.89, 100.0, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 83.33, 83.33, 76.92, 90.91, 100.0, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.81, 98.81, 98.8, 98.82, 100.0, 98.82]%	||	87.79%	87.78%	99.13%	89.76%	99.14%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[97.78, 96.67, 98.89, 98.89, 97.78, 97.78, 98.89, 97.78, 98.89, 94.44, 95.56, 95.56, 96.67, 96.67, 97.78]%	[80.0, 76.92, 92.31, 90.91, 80.0, 83.33, 92.31, 83.33, 92.31, 54.55, 66.67, 71.43, 76.92, 76.92, 80.0]%	[66.67, 83.33, 100.0, 83.33, 66.67, 83.33, 100.0, 83.33, 100.0, 50.0, 66.67, 83.33, 83.33, 83.33, 66.67]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 98.81, 98.81, 98.81, 97.62, 97.62, 96.43, 97.62, 97.62, 100.0]%	[100.0, 71.43, 85.71, 100.0, 100.0, 83.33, 85.71, 83.33, 85.71, 60.0, 66.67, 62.5, 71.43, 71.43, 100.0]%	[97.67, 98.8, 100.0, 98.82, 97.67, 98.81, 100.0, 98.81, 100.0, 96.47, 97.62, 98.78, 98.8, 98.8, 97.67]%	||	79.86%	80.0%	98.57%	81.82%	98.58%	
  4  1  0  0  0  0  0  0  0  0  0  0  1  0  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  1  0  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  1  0  0  0  0  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  0  1  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  3  0  3  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  1  0  0  1  4  66.67%		15
Forest OOB Error: 41.88%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 96.67, 98.89, 100.0, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 83.33, 83.33, 76.92, 90.91, 100.0, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.81, 98.81, 98.8, 98.82, 100.0, 98.82]%	||	87.79%	87.78%	99.13%	89.76%	99.14%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[95.56, 95.56, 100.0, 100.0, 98.89, 97.78, 95.56, 97.78, 98.89, 94.44, 94.44, 96.67, 94.44, 98.89, 96.67]%	[60.0, 60.0, 100.0, 100.0, 90.91, 83.33, 75.0, 85.71, 90.91, 70.59, 66.67, 66.67, 54.55, 90.91, 66.67]%	[50.0, 50.0, 100.0, 100.0, 83.33, 83.33, 100.0, 100.0, 83.33, 100.0, 83.33, 50.0, 50.0, 83.33, 50.0]%	[98.81, 98.81, 100.0, 100.0, 100.0, 98.81, 95.24, 97.62, 100.0, 94.05, 95.24, 100.0, 97.62, 100.0, 100.0]%	[75.0, 75.0, 100.0, 100.0, 100.0, 83.33, 60.0, 75.0, 100.0, 54.55, 55.56, 100.0, 60.0, 100.0, 100.0]%	[96.51, 96.51, 100.0, 100.0, 98.82, 98.81, 100.0, 100.0, 98.82, 100.0, 98.77, 96.55, 96.47, 98.82, 96.55]%	||	77.46%	77.78%	98.41%	82.56%	98.44%	
  3  1  0  0  0  0  0  0  0  2  0  0  0  0  0  50.0%		1
  0  3  0  0  0  0  2  0  0  1  0  0  0  0  0  50.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  1  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  1  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  1  0  0  0  0  0  0  0  0  2  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  3  0  3  0  0  50.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  1  0  1  0  3  50.0%		15
Forest OOB Error: 53.78%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 96.67, 98.89, 100.0, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 83.33, 83.33, 76.92, 90.91, 100.0, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.81, 98.81, 98.8, 98.82, 100.0, 98.82]%	||	87.79%	87.78%	99.13%	89.76%	99.14%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[98.89, 97.78, 100.0, 96.67, 100.0, 98.89, 98.89, 95.56, 98.89, 97.78, 95.56, 96.67, 98.89, 98.89, 97.78]%	[90.91, 85.71, 100.0, 76.92, 100.0, 90.91, 90.91, 60.0, 92.31, 83.33, 71.43, 76.92, 90.91, 90.91, 83.33]%	[83.33, 100.0, 100.0, 83.33, 100.0, 83.33, 83.33, 50.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 98.81, 98.81, 96.43, 97.62, 100.0, 100.0, 98.81]%	[100.0, 75.0, 100.0, 71.43, 100.0, 100.0, 100.0, 75.0, 85.71, 83.33, 62.5, 71.43, 100.0, 100.0, 83.33]%	[98.82, 100.0, 100.0, 98.8, 100.0, 98.82, 98.82, 96.51, 100.0, 98.81, 98.78, 98.8, 98.82, 98.82, 98.81]%	||	85.63%	85.56%	98.97%	87.18%	98.97%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  1  0  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  0  0  1  0  0  0  83.33%		7
  0  0  0  0  0  0  0  3  0  0  2  0  0  0  1  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  1  0  0  0  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 49.61%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 96.67, 98.89, 100.0, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 83.33, 83.33, 76.92, 90.91, 100.0, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.81, 98.81, 98.8, 98.82, 100.0, 98.82]%	||	87.79%	87.78%	99.13%	89.76%	99.14%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[94.44, 97.78, 97.78, 100.0, 95.56, 96.67, 95.56, 94.44, 97.78, 96.67, 97.78, 95.56, 98.89, 97.78, 96.67]%	[61.54, 83.33, 85.71, 100.0, 60.0, 66.67, 60.0, 66.67, 85.71, 72.73, 83.33, 71.43, 90.91, 85.71, 66.67]%	[66.67, 83.33, 100.0, 100.0, 50.0, 50.0, 50.0, 83.33, 100.0, 66.67, 83.33, 83.33, 83.33, 100.0, 50.0]%	[96.43, 98.81, 97.62, 100.0, 98.81, 100.0, 98.81, 95.24, 97.62, 98.81, 98.81, 96.43, 100.0, 97.62, 100.0]%	[57.14, 83.33, 75.0, 100.0, 75.0, 100.0, 75.0, 55.56, 75.0, 80.0, 83.33, 62.5, 100.0, 75.0, 100.0]%	[97.59, 98.81, 100.0, 100.0, 96.51, 96.55, 96.51, 98.77, 100.0, 97.65, 98.81, 98.78, 98.82, 100.0, 96.55]%	||	76.03%	76.67%	98.33%	79.79%	98.36%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  1  0  2  0  3  0  0  0  0  0  0  0  0  0  0  50.0%		5
  0  0  0  0  1  3  0  0  1  0  0  0  0  1  0  50.0%		6
  2  0  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  4  0  2  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  1  3  50.0%		15
Forest OOB Error: 52.08%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 96.67, 98.89, 100.0, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 83.33, 83.33, 76.92, 90.91, 100.0, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.81, 98.81, 98.8, 98.82, 100.0, 98.82]%	||	87.79%	87.78%	99.13%	89.76%	99.14%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[97.78, 97.78, 97.78, 94.44, 98.89, 97.78, 95.56, 97.78, 97.78, 97.78, 97.78, 95.56, 97.78, 97.78, 97.78]%	[80.0, 85.71, 83.33, 61.54, 90.91, 85.71, 66.67, 83.33, 83.33, 80.0, 83.33, 71.43, 83.33, 83.33, 80.0]%	[66.67, 100.0, 83.33, 66.67, 83.33, 100.0, 66.67, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 83.33, 66.67]%	[100.0, 97.62, 98.81, 96.43, 100.0, 97.62, 97.62, 98.81, 98.81, 100.0, 98.81, 96.43, 98.81, 98.81, 100.0]%	[100.0, 75.0, 83.33, 57.14, 100.0, 75.0, 66.67, 83.33, 83.33, 100.0, 83.33, 62.5, 83.33, 83.33, 100.0]%	[97.67, 100.0, 98.81, 97.59, 98.82, 100.0, 97.62, 98.81, 98.81, 97.67, 98.81, 98.78, 98.81, 98.81, 97.67]%	||	80.13%	80.0%	98.57%	82.42%	98.58%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  0  0  0  1  0  83.33%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  1  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  1  0  0  4  0  0  0  0  1  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  4  0  2  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  1  0  0  0  0  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  1  0  0  0  0  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  1  0  0  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 54.72%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	86.75%	86.67%	99.05%	88.97%	99.06%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	88.89%	98.52%	88.1%	[98.89, 98.89, 100.0, 97.78, 100.0, 97.78, 100.0, 96.67, 98.89, 98.89, 97.78, 98.89, 96.67, 98.89, 97.78]%	[90.91, 92.31, 100.0, 83.33, 100.0, 83.33, 100.0, 72.73, 92.31, 90.91, 83.33, 92.31, 76.92, 92.31, 80.0]%	[83.33, 100.0, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 66.67]%	[100.0, 98.81, 100.0, 98.81, 100.0, 98.81, 100.0, 98.81, 98.81, 100.0, 98.81, 98.81, 97.62, 98.81, 100.0]%	[100.0, 85.71, 100.0, 83.33, 100.0, 83.33, 100.0, 80.0, 85.71, 100.0, 83.33, 85.71, 71.43, 85.71, 100.0]%	[98.82, 100.0, 100.0, 98.81, 100.0, 98.81, 100.0, 97.65, 100.0, 98.82, 98.81, 100.0, 98.8, 100.0, 97.67]%	||	88.71%	88.89%	99.21%	89.62%	99.21%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  1  1  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  1  0  0  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 49.04%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	86.75%	86.67%	99.05%	88.97%	99.06%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[97.78, 97.78, 98.89, 97.78, 97.78, 96.67, 100.0, 96.67, 98.89, 98.89, 94.44, 98.89, 96.67, 96.67, 96.67]%	[83.33, 83.33, 92.31, 85.71, 83.33, 72.73, 100.0, 72.73, 90.91, 90.91, 61.54, 92.31, 72.73, 76.92, 72.73]%	[83.33, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 66.67, 83.33, 83.33, 66.67, 100.0, 66.67, 83.33, 66.67]%	[98.81, 98.81, 98.81, 97.62, 98.81, 98.81, 100.0, 98.81, 100.0, 100.0, 96.43, 98.81, 98.81, 97.62, 98.81]%	[83.33, 83.33, 85.71, 75.0, 83.33, 80.0, 100.0, 80.0, 100.0, 100.0, 57.14, 85.71, 80.0, 71.43, 80.0]%	[98.81, 98.81, 100.0, 100.0, 98.81, 97.65, 100.0, 97.65, 98.82, 98.82, 97.59, 100.0, 97.65, 98.8, 97.65]%	||	82.1%	82.22%	98.73%	83.0%	98.74%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  1  5  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  1  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  1  4  0  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  4  0  1  1  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  2  0  0  0  0  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 48.83%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	86.75%	86.67%	99.05%	88.97%	99.06%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[98.89, 98.89, 96.67, 96.67, 97.78, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89, 100.0, 97.78, 97.78, 98.89]%	[90.91, 92.31, 80.0, 72.73, 80.0, 80.0, 83.33, 72.73, 90.91, 92.31, 90.91, 100.0, 85.71, 80.0, 90.91]%	[83.33, 100.0, 100.0, 66.67, 66.67, 100.0, 83.33, 66.67, 83.33, 100.0, 83.33, 100.0, 100.0, 66.67, 83.33]%	[100.0, 98.81, 96.43, 98.81, 100.0, 96.43, 98.81, 98.81, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0]%	[100.0, 85.71, 66.67, 80.0, 100.0, 66.67, 83.33, 80.0, 100.0, 85.71, 100.0, 100.0, 75.0, 100.0, 100.0]%	[98.82, 100.0, 100.0, 97.65, 97.67, 100.0, 98.81, 97.65, 98.82, 100.0, 98.82, 100.0, 100.0, 97.67, 98.82]%	||	85.52%	85.56%	98.97%	88.21%	98.98%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  1  0  4  0  0  0  0  1  0  0  0  0  0  66.67%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  4  0  0  0  0  1  0  0  66.67%		8
  0  0  0  0  0  1  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  1  0  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 59.69%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	86.75%	86.67%	99.05%	88.97%	99.06%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[98.89, 98.89, 98.89, 98.89, 98.89, 94.44, 100.0, 97.78, 97.78, 97.78, 96.67, 97.78, 98.89, 96.67, 98.89]%	[90.91, 92.31, 90.91, 90.91, 92.31, 54.55, 100.0, 83.33, 85.71, 83.33, 72.73, 83.33, 92.31, 76.92, 90.91]%	[83.33, 100.0, 83.33, 83.33, 100.0, 50.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 100.0, 83.33, 83.33]%	[100.0, 98.81, 100.0, 100.0, 98.81, 97.62, 100.0, 98.81, 97.62, 98.81, 98.81, 98.81, 98.81, 97.62, 100.0]%	[100.0, 85.71, 100.0, 100.0, 85.71, 60.0, 100.0, 83.33, 75.0, 83.33, 80.0, 83.33, 85.71, 71.43, 100.0]%	[98.82, 100.0, 98.82, 98.82, 100.0, 96.47, 100.0, 98.81, 100.0, 98.81, 97.65, 98.81, 100.0, 98.8, 98.82]%	||	85.36%	85.56%	98.97%	86.24%	98.98%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  1  3  0  0  1  0  0  0  0  1  0  50.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  1  5  83.33%		15
Forest OOB Error: 44.91%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	86.75%	86.67%	99.05%	88.97%	99.06%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	86.67%	98.22%	85.71%	[97.78, 98.89, 98.89, 97.78, 98.89, 97.78, 97.78, 98.89, 100.0, 97.78, 98.89, 96.67, 97.78, 97.78, 97.78]%	[80.0, 92.31, 92.31, 83.33, 90.91, 80.0, 83.33, 92.31, 100.0, 85.71, 90.91, 72.73, 85.71, 85.71, 80.0]%	[66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 66.67]%	[100.0, 98.81, 98.81, 98.81, 100.0, 100.0, 98.81, 98.81, 100.0, 97.62, 100.0, 98.81, 97.62, 97.62, 100.0]%	[100.0, 85.71, 85.71, 83.33, 100.0, 100.0, 83.33, 85.71, 100.0, 75.0, 100.0, 80.0, 75.0, 75.0, 100.0]%	[97.67, 100.0, 100.0, 98.81, 98.82, 97.67, 98.81, 100.0, 100.0, 100.0, 98.82, 97.65, 100.0, 100.0, 97.67]%	||	86.35%	86.67%	99.05%	88.59%	99.06%	
  4  1  0  0  0  0  0  0  0  0  0  0  0  1  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  1  0  0  0  83.33%		5
  0  0  0  1  0  4  0  0  0  1  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  1  0  0  0  0  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  1  4  66.67%		15
Forest OOB Error: 49.36%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	86.75%	86.67%	99.05%	88.97%	99.06%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	86.67%	98.22%	85.71%	[97.78, 97.78, 100.0, 97.78, 100.0, 97.78, 97.78, 97.78, 98.89, 98.89, 96.67, 97.78, 98.89, 97.78, 97.78]%	[83.33, 85.71, 100.0, 85.71, 100.0, 80.0, 85.71, 85.71, 90.91, 90.91, 72.73, 83.33, 90.91, 80.0, 83.33]%	[83.33, 100.0, 100.0, 100.0, 100.0, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 83.33, 66.67, 83.33]%	[98.81, 97.62, 100.0, 97.62, 100.0, 100.0, 97.62, 97.62, 100.0, 100.0, 98.81, 98.81, 100.0, 100.0, 98.81]%	[83.33, 75.0, 100.0, 75.0, 100.0, 100.0, 75.0, 75.0, 100.0, 100.0, 80.0, 83.33, 100.0, 100.0, 83.33]%	[98.81, 100.0, 100.0, 100.0, 100.0, 97.67, 100.0, 100.0, 98.82, 98.82, 97.65, 98.81, 98.82, 97.67, 98.81]%	||	86.55%	86.67%	99.05%	88.67%	99.06%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  1  0  4  1  0  0  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  4  1  66.67%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 51.35%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 98.89, 98.89, 100.0, 100.0, 97.78, 98.89, 97.78, 97.78, 96.67, 97.78, 97.78, 98.89, 98.89, 98.89]%	[76.92, 92.31, 90.91, 100.0, 100.0, 83.33, 90.91, 83.33, 85.71, 76.92, 83.33, 83.33, 90.91, 90.91, 90.91]%	[83.33, 100.0, 83.33, 100.0, 100.0, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 100.0, 100.0, 100.0, 98.81, 100.0, 98.81, 97.62, 97.62, 98.81, 98.81, 100.0, 100.0, 100.0]%	[71.43, 85.71, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 75.0, 71.43, 83.33, 83.33, 100.0, 100.0, 100.0]%	[98.8, 100.0, 98.82, 100.0, 100.0, 98.81, 98.82, 98.81, 100.0, 98.8, 98.81, 98.81, 98.82, 98.82, 98.82]%	||	87.98%	87.78%	99.13%	89.13%	99.13%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  5  0  0  0  0  0  0  0  0  83.33%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	87.78%	98.37%	86.9%	[98.89, 97.78, 98.89, 98.89, 96.67, 95.56, 100.0, 98.89, 97.78, 98.89, 100.0, 98.89, 97.78, 97.78, 98.89]%	[90.91, 83.33, 92.31, 90.91, 76.92, 60.0, 100.0, 92.31, 83.33, 90.91, 100.0, 92.31, 83.33, 85.71, 90.91]%	[83.33, 83.33, 100.0, 83.33, 83.33, 50.0, 100.0, 100.0, 83.33, 83.33, 100.0, 100.0, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 97.62, 98.81, 100.0, 98.81, 98.81, 100.0, 100.0, 98.81, 98.81, 97.62, 100.0]%	[100.0, 83.33, 85.71, 100.0, 71.43, 75.0, 100.0, 85.71, 83.33, 100.0, 100.0, 85.71, 83.33, 75.0, 100.0]%	[98.82, 98.81, 100.0, 98.82, 98.8, 96.51, 100.0, 100.0, 98.81, 98.82, 100.0, 100.0, 98.81, 100.0, 98.82]%	||	87.55%	87.78%	99.13%	88.57%	99.14%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  2  3  0  0  0  0  0  0  0  1  0  50.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 50.38%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 98.89, 98.89, 100.0, 100.0, 97.78, 98.89, 97.78, 97.78, 96.67, 97.78, 97.78, 98.89, 98.89, 98.89]%	[76.92, 92.31, 90.91, 100.0, 100.0, 83.33, 90.91, 83.33, 85.71, 76.92, 83.33, 83.33, 90.91, 90.91, 90.91]%	[83.33, 100.0, 83.33, 100.0, 100.0, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 100.0, 100.0, 100.0, 98.81, 100.0, 98.81, 97.62, 97.62, 98.81, 98.81, 100.0, 100.0, 100.0]%	[71.43, 85.71, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 75.0, 71.43, 83.33, 83.33, 100.0, 100.0, 100.0]%	[98.8, 100.0, 98.82, 100.0, 100.0, 98.81, 98.82, 98.81, 100.0, 98.8, 98.81, 98.81, 98.82, 98.82, 98.82]%	||	87.98%	87.78%	99.13%	89.13%	99.13%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  5  0  0  0  0  0  0  0  0  83.33%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[98.89, 97.78, 96.67, 96.67, 96.67, 96.67, 98.89, 96.67, 97.78, 94.44, 97.78, 95.56, 95.56, 98.89, 96.67]%	[90.91, 85.71, 76.92, 80.0, 66.67, 66.67, 90.91, 72.73, 83.33, 66.67, 80.0, 66.67, 71.43, 92.31, 72.73]%	[83.33, 100.0, 83.33, 100.0, 50.0, 50.0, 83.33, 66.67, 83.33, 83.33, 66.67, 66.67, 83.33, 100.0, 66.67]%	[100.0, 97.62, 97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 95.24, 100.0, 97.62, 96.43, 98.81, 98.81]%	[100.0, 75.0, 71.43, 66.67, 100.0, 100.0, 100.0, 80.0, 83.33, 55.56, 100.0, 66.67, 62.5, 85.71, 80.0]%	[98.82, 100.0, 98.8, 100.0, 96.55, 96.55, 98.82, 97.65, 98.81, 98.77, 97.67, 97.62, 98.78, 100.0, 97.65]%	||	77.58%	77.78%	98.41%	81.79%	98.43%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  2  0  3  0  0  0  0  0  0  1  0  0  0  50.0%		5
  0  0  0  1  0  3  0  0  1  0  0  0  0  1  0  50.0%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  1  0  0  0  0  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  1  0  0  0  0  0  1  0  0  0  0  4  66.67%		15
Forest OOB Error: 50.41%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 98.89, 98.89, 100.0, 100.0, 97.78, 98.89, 97.78, 97.78, 96.67, 97.78, 97.78, 98.89, 98.89, 98.89]%	[76.92, 92.31, 90.91, 100.0, 100.0, 83.33, 90.91, 83.33, 85.71, 76.92, 83.33, 83.33, 90.91, 90.91, 90.91]%	[83.33, 100.0, 83.33, 100.0, 100.0, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 100.0, 100.0, 100.0, 98.81, 100.0, 98.81, 97.62, 97.62, 98.81, 98.81, 100.0, 100.0, 100.0]%	[71.43, 85.71, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 75.0, 71.43, 83.33, 83.33, 100.0, 100.0, 100.0]%	[98.8, 100.0, 98.82, 100.0, 100.0, 98.81, 98.82, 98.81, 100.0, 98.8, 98.81, 98.81, 98.82, 98.82, 98.82]%	||	87.98%	87.78%	99.13%	89.13%	99.13%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  5  0  0  0  0  0  0  0  0  83.33%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	87.78%	98.37%	86.9%	[98.89, 98.89, 98.89, 98.89, 98.89, 96.67, 96.67, 100.0, 97.78, 96.67, 100.0, 97.78, 97.78, 98.89, 98.89]%	[90.91, 92.31, 90.91, 92.31, 92.31, 66.67, 80.0, 100.0, 85.71, 66.67, 100.0, 83.33, 83.33, 92.31, 90.91]%	[83.33, 100.0, 83.33, 100.0, 100.0, 50.0, 100.0, 100.0, 100.0, 50.0, 100.0, 83.33, 83.33, 100.0, 83.33]%	[100.0, 98.81, 100.0, 98.81, 98.81, 100.0, 96.43, 100.0, 97.62, 100.0, 100.0, 98.81, 98.81, 98.81, 100.0]%	[100.0, 85.71, 100.0, 85.71, 85.71, 100.0, 66.67, 100.0, 75.0, 100.0, 100.0, 83.33, 83.33, 85.71, 100.0]%	[98.82, 100.0, 98.82, 100.0, 100.0, 96.55, 100.0, 100.0, 100.0, 96.55, 100.0, 98.81, 98.81, 100.0, 98.82]%	||	87.18%	87.78%	99.13%	90.08%	99.15%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  1  3  0  0  1  0  0  0  0  1  0  50.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  1  0  0  0  0  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 46.99%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 98.89, 98.89, 100.0, 100.0, 97.78, 98.89, 97.78, 97.78, 96.67, 97.78, 97.78, 98.89, 98.89, 98.89]%	[76.92, 92.31, 90.91, 100.0, 100.0, 83.33, 90.91, 83.33, 85.71, 76.92, 83.33, 83.33, 90.91, 90.91, 90.91]%	[83.33, 100.0, 83.33, 100.0, 100.0, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 100.0, 100.0, 100.0, 98.81, 100.0, 98.81, 97.62, 97.62, 98.81, 98.81, 100.0, 100.0, 100.0]%	[71.43, 85.71, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 75.0, 71.43, 83.33, 83.33, 100.0, 100.0, 100.0]%	[98.8, 100.0, 98.82, 100.0, 100.0, 98.81, 98.82, 98.81, 100.0, 98.8, 98.81, 98.81, 98.82, 98.82, 98.82]%	||	87.98%	87.78%	99.13%	89.13%	99.13%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  5  0  0  0  0  0  0  0  0  83.33%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[98.89, 98.89, 97.78, 100.0, 100.0, 97.78, 98.89, 96.67, 95.56, 94.44, 100.0, 97.78, 100.0, 96.67, 97.78]%	[90.91, 92.31, 83.33, 100.0, 100.0, 83.33, 90.91, 72.73, 71.43, 61.54, 100.0, 83.33, 100.0, 72.73, 83.33]%	[83.33, 100.0, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 100.0, 83.33, 100.0, 66.67, 83.33]%	[100.0, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 98.81, 96.43, 96.43, 100.0, 98.81, 100.0, 98.81, 98.81]%	[100.0, 85.71, 83.33, 100.0, 100.0, 83.33, 100.0, 80.0, 62.5, 57.14, 100.0, 83.33, 100.0, 80.0, 83.33]%	[98.82, 100.0, 98.81, 100.0, 100.0, 98.81, 98.82, 97.65, 98.78, 97.59, 100.0, 98.81, 100.0, 97.65, 98.81]%	||	85.73%	85.56%	98.97%	86.58%	98.97%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  0  0  0  0  0  1  0  83.33%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  4  0  0  0  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  1  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  1  4  0  1  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  1  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 43.23%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 98.89, 98.89, 100.0, 100.0, 97.78, 98.89, 97.78, 97.78, 96.67, 97.78, 97.78, 98.89, 98.89, 98.89]%	[76.92, 92.31, 90.91, 100.0, 100.0, 83.33, 90.91, 83.33, 85.71, 76.92, 83.33, 83.33, 90.91, 90.91, 90.91]%	[83.33, 100.0, 83.33, 100.0, 100.0, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 100.0, 100.0, 100.0, 98.81, 100.0, 98.81, 97.62, 97.62, 98.81, 98.81, 100.0, 100.0, 100.0]%	[71.43, 85.71, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 75.0, 71.43, 83.33, 83.33, 100.0, 100.0, 100.0]%	[98.8, 100.0, 98.82, 100.0, 100.0, 98.81, 98.82, 98.81, 100.0, 98.8, 98.81, 98.81, 98.82, 98.82, 98.82]%	||	87.98%	87.78%	99.13%	89.13%	99.13%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  5  0  0  0  0  0  0  0  0  83.33%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 98.89, 98.89, 98.89, 95.56, 97.78, 98.89, 98.89, 96.67, 95.56, 97.78, 98.89, 96.67]%	[72.73, 83.33, 92.31, 90.91, 90.91, 90.91, 75.0, 85.71, 90.91, 90.91, 76.92, 71.43, 83.33, 90.91, 66.67]%	[66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33, 50.0]%	[98.81, 98.81, 98.81, 100.0, 100.0, 100.0, 95.24, 97.62, 100.0, 100.0, 97.62, 96.43, 98.81, 100.0, 100.0]%	[80.0, 83.33, 85.71, 100.0, 100.0, 100.0, 60.0, 75.0, 100.0, 100.0, 71.43, 62.5, 83.33, 100.0, 100.0]%	[97.65, 98.81, 100.0, 98.82, 98.82, 98.82, 100.0, 100.0, 98.82, 98.82, 98.8, 98.78, 98.81, 98.82, 96.55]%	||	83.53%	83.33%	98.81%	86.75%	98.82%	
  4  0  0  0  0  0  1  0  0  0  0  1  0  0  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  1  0  0  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  1  0  0  0  83.33%		5
  0  1  0  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  1  0  0  0  0  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  1  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  2  0  0  1  0  0  0  3  50.0%		15
Forest OOB Error: 45.19%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 98.89, 98.89, 100.0, 100.0, 97.78, 98.89, 97.78, 97.78, 96.67, 97.78, 97.78, 98.89, 98.89, 98.89]%	[76.92, 92.31, 90.91, 100.0, 100.0, 83.33, 90.91, 83.33, 85.71, 76.92, 83.33, 83.33, 90.91, 90.91, 90.91]%	[83.33, 100.0, 83.33, 100.0, 100.0, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 100.0, 100.0, 100.0, 98.81, 100.0, 98.81, 97.62, 97.62, 98.81, 98.81, 100.0, 100.0, 100.0]%	[71.43, 85.71, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 75.0, 71.43, 83.33, 83.33, 100.0, 100.0, 100.0]%	[98.8, 100.0, 98.82, 100.0, 100.0, 98.81, 98.82, 98.81, 100.0, 98.8, 98.81, 98.81, 98.82, 98.82, 98.82]%	||	87.98%	87.78%	99.13%	89.13%	99.13%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  5  0  0  0  0  0  0  0  0  83.33%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.15, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	84.44%	97.93%	83.33%	[97.78, 98.89, 97.78, 98.89, 96.67, 97.78, 96.67, 98.89, 95.56, 96.67, 100.0, 96.67, 100.0, 97.78, 98.89]%	[83.33, 92.31, 83.33, 92.31, 66.67, 83.33, 66.67, 92.31, 71.43, 72.73, 100.0, 76.92, 100.0, 85.71, 90.91]%	[83.33, 100.0, 83.33, 100.0, 50.0, 83.33, 50.0, 100.0, 83.33, 66.67, 100.0, 83.33, 100.0, 100.0, 83.33]%	[98.81, 98.81, 98.81, 98.81, 100.0, 98.81, 100.0, 98.81, 96.43, 98.81, 100.0, 97.62, 100.0, 97.62, 100.0]%	[83.33, 85.71, 83.33, 85.71, 100.0, 83.33, 100.0, 85.71, 62.5, 80.0, 100.0, 71.43, 100.0, 75.0, 100.0]%	[98.81, 100.0, 98.81, 100.0, 96.55, 98.81, 96.55, 100.0, 98.78, 97.65, 100.0, 98.8, 100.0, 100.0, 98.82]%	||	83.86%	84.44%	98.89%	86.4%	98.91%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  1  3  0  0  0  0  1  0  0  0  0  0  50.0%		5
  0  0  0  0  0  5  0  0  0  0  0  0  0  1  0  83.33%		6
  0  0  0  0  0  1  3  0  1  0  0  1  0  0  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  1  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  1  4  0  1  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  1  0  0  0  0  0  0  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  1  5  83.33%		15
Forest OOB Error: 50.4%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 96.67, 98.89, 100.0, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 83.33, 83.33, 76.92, 90.91, 100.0, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.81, 98.81, 98.8, 98.82, 100.0, 98.82]%	||	87.79%	87.78%	99.13%	89.76%	99.14%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[98.89, 98.89, 100.0, 98.89, 98.89, 96.67, 96.67, 96.67, 97.78, 100.0, 98.89, 97.78, 97.78, 96.67, 96.67]%	[90.91, 92.31, 100.0, 92.31, 90.91, 76.92, 72.73, 72.73, 85.71, 100.0, 90.91, 83.33, 85.71, 72.73, 72.73]%	[83.33, 100.0, 100.0, 100.0, 83.33, 83.33, 66.67, 66.67, 100.0, 100.0, 83.33, 83.33, 100.0, 66.67, 66.67]%	[100.0, 98.81, 100.0, 98.81, 100.0, 97.62, 98.81, 98.81, 97.62, 100.0, 100.0, 98.81, 97.62, 98.81, 98.81]%	[100.0, 85.71, 100.0, 85.71, 100.0, 71.43, 80.0, 80.0, 75.0, 100.0, 100.0, 83.33, 75.0, 80.0, 80.0]%	[98.82, 100.0, 100.0, 100.0, 98.82, 98.8, 97.65, 97.65, 100.0, 100.0, 98.82, 98.81, 100.0, 97.65, 97.65]%	||	85.33%	85.56%	98.97%	86.41%	98.98%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  4  0  1  0  0  1  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  0  0  0  0  1  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  1  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  1  0  0  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 53.26%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 96.67, 98.89, 100.0, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 83.33, 83.33, 76.92, 90.91, 100.0, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.81, 98.81, 98.8, 98.82, 100.0, 98.82]%	||	87.79%	87.78%	99.13%	89.76%	99.14%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	86.67%	98.22%	85.71%	[97.78, 98.89, 96.67, 100.0, 98.89, 98.89, 97.78, 97.78, 97.78, 98.89, 97.78, 98.89, 98.89, 96.67, 97.78]%	[80.0, 92.31, 72.73, 100.0, 90.91, 90.91, 83.33, 83.33, 85.71, 92.31, 85.71, 90.91, 90.91, 80.0, 80.0]%	[66.67, 100.0, 66.67, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 100.0, 83.33, 83.33, 100.0, 66.67]%	[100.0, 98.81, 98.81, 100.0, 100.0, 100.0, 98.81, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 96.43, 100.0]%	[100.0, 85.71, 80.0, 100.0, 100.0, 100.0, 83.33, 83.33, 75.0, 85.71, 75.0, 100.0, 100.0, 66.67, 100.0]%	[97.67, 100.0, 97.65, 100.0, 98.82, 98.82, 98.81, 98.81, 100.0, 100.0, 100.0, 98.82, 98.82, 100.0, 97.67]%	||	86.6%	86.67%	99.05%	88.98%	99.06%	
  4  1  1  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  4  0  0  0  0  0  1  0  0  0  0  1  0  66.67%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  0  0  0  0  0  1  0  83.33%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  1  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 48.18%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 96.67, 98.89, 100.0, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 83.33, 83.33, 76.92, 90.91, 100.0, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.81, 98.81, 98.8, 98.82, 100.0, 98.82]%	||	87.79%	87.78%	99.13%	89.76%	99.14%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	74.44%	96.59%	72.62%	[95.56, 96.67, 98.89, 98.89, 96.67, 97.78, 94.44, 95.56, 98.89, 94.44, 95.56, 96.67, 95.56, 97.78, 95.56]%	[66.67, 72.73, 92.31, 90.91, 76.92, 80.0, 66.67, 71.43, 90.91, 54.55, 66.67, 72.73, 66.67, 85.71, 60.0]%	[66.67, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 50.0, 66.67, 66.67, 66.67, 100.0, 50.0]%	[97.62, 98.81, 98.81, 100.0, 97.62, 100.0, 95.24, 96.43, 100.0, 97.62, 97.62, 98.81, 97.62, 97.62, 98.81]%	[66.67, 80.0, 85.71, 100.0, 71.43, 100.0, 55.56, 62.5, 100.0, 60.0, 66.67, 80.0, 66.67, 75.0, 75.0]%	[97.62, 97.65, 100.0, 98.82, 98.8, 97.67, 98.77, 98.78, 98.82, 96.47, 97.62, 97.65, 97.62, 100.0, 96.51]%	||	74.32%	74.44%	98.17%	76.35%	98.19%	
  4  0  0  0  0  0  1  0  0  1  0  0  0  0  0  66.67%		1
  0  4  0  0  0  0  2  0  0  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  0  0  0  0  0  0  1  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  1  4  1  0  0  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  5  0  0  0  0  0  0  1  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  2  0  0  0  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  1  0  0  0  0  1  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  1  0  0  0  0  0  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  1  1  3  50.0%		15
Forest OOB Error: 48.91%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 96.67, 98.89, 100.0, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 83.33, 83.33, 76.92, 90.91, 100.0, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.81, 98.81, 98.8, 98.82, 100.0, 98.82]%	||	87.79%	87.78%	99.13%	89.76%	99.14%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[97.78, 97.78, 100.0, 97.78, 96.67, 98.89, 97.78, 95.56, 100.0, 95.56, 95.56, 95.56, 96.67, 98.89, 97.78]%	[80.0, 85.71, 100.0, 83.33, 72.73, 92.31, 83.33, 66.67, 100.0, 66.67, 60.0, 71.43, 80.0, 90.91, 80.0]%	[66.67, 100.0, 100.0, 83.33, 66.67, 100.0, 83.33, 66.67, 100.0, 66.67, 50.0, 83.33, 100.0, 83.33, 66.67]%	[100.0, 97.62, 100.0, 98.81, 98.81, 98.81, 98.81, 97.62, 100.0, 97.62, 98.81, 96.43, 96.43, 100.0, 100.0]%	[100.0, 75.0, 100.0, 83.33, 80.0, 85.71, 83.33, 66.67, 100.0, 66.67, 75.0, 62.5, 66.67, 100.0, 100.0]%	[97.67, 100.0, 100.0, 98.81, 97.65, 100.0, 98.81, 97.62, 100.0, 97.62, 96.51, 98.78, 100.0, 98.82, 97.67]%	||	80.87%	81.11%	98.65%	82.99%	98.66%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  1  0  0  4  0  0  0  0  1  0  0  0  0  0  66.67%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  1  0  1  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  4  0  2  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  3  0  2  0  0  50.0%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  1  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  1  0  0  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 51.6%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 96.67, 98.89, 100.0, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 83.33, 83.33, 76.92, 90.91, 100.0, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.81, 98.81, 98.8, 98.82, 100.0, 98.82]%	||	87.79%	87.78%	99.13%	89.76%	99.14%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	74.44%	96.59%	72.62%	[97.78, 97.78, 98.89, 95.56, 96.67, 96.67, 94.44, 95.56, 97.78, 93.33, 95.56, 93.33, 98.89, 98.89, 97.78]%	[83.33, 83.33, 92.31, 60.0, 76.92, 76.92, 61.54, 71.43, 83.33, 50.0, 66.67, 50.0, 90.91, 90.91, 80.0]%	[83.33, 83.33, 100.0, 50.0, 83.33, 83.33, 66.67, 83.33, 83.33, 50.0, 66.67, 50.0, 83.33, 83.33, 66.67]%	[98.81, 98.81, 98.81, 98.81, 97.62, 97.62, 96.43, 96.43, 98.81, 96.43, 97.62, 96.43, 100.0, 100.0, 100.0]%	[83.33, 83.33, 85.71, 75.0, 71.43, 71.43, 57.14, 62.5, 83.33, 50.0, 66.67, 50.0, 100.0, 100.0, 100.0]%	[98.81, 98.81, 100.0, 96.51, 98.8, 98.8, 97.59, 98.78, 98.81, 96.43, 97.62, 96.43, 98.82, 98.82, 97.67]%	||	74.51%	74.44%	98.17%	75.99%	98.18%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  1  0  0  0  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  1  3  0  1  1  0  0  0  0  0  0  0  0  50.0%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  4  0  0  2  0  0  0  0  0  66.67%		7
  0  0  0  0  1  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  3  0  3  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  1  0  0  0  0  0  2  0  0  0  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  1  0  0  0  4  66.67%		15
Forest OOB Error: 51.79%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 96.67, 98.89, 100.0, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 83.33, 83.33, 76.92, 90.91, 100.0, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.81, 98.81, 98.8, 98.82, 100.0, 98.82]%	||	87.79%	87.78%	99.13%	89.76%	99.14%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	88.89%	98.52%	88.1%	[97.78, 98.89, 98.89, 100.0, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 100.0, 97.78, 100.0, 96.67]%	[80.0, 92.31, 92.31, 100.0, 83.33, 100.0, 90.91, 80.0, 83.33, 85.71, 83.33, 100.0, 83.33, 100.0, 76.92]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 100.0, 83.33, 100.0, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 98.81, 100.0, 100.0, 100.0, 98.81, 97.62, 98.81, 100.0, 98.81, 100.0, 97.62]%	[100.0, 85.71, 85.71, 100.0, 83.33, 100.0, 100.0, 100.0, 83.33, 75.0, 83.33, 100.0, 83.33, 100.0, 71.43]%	[97.67, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.67, 98.81, 100.0, 98.81, 100.0, 98.81, 100.0, 98.8]%	||	88.77%	88.89%	99.21%	90.08%	99.21%	
  4  1  0  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  0  1  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  5  0  1  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  1  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 43.73%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	86.75%	86.67%	99.05%	88.97%	99.06%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	88.89%	98.52%	88.1%	[98.89, 98.89, 100.0, 96.67, 98.89, 96.67, 98.89, 100.0, 98.89, 97.78, 98.89, 97.78, 97.78, 100.0, 97.78]%	[90.91, 92.31, 100.0, 76.92, 90.91, 72.73, 90.91, 100.0, 92.31, 85.71, 92.31, 80.0, 83.33, 100.0, 83.33]%	[83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 100.0, 100.0, 100.0, 66.67, 83.33, 100.0, 83.33]%	[100.0, 98.81, 100.0, 97.62, 100.0, 98.81, 100.0, 100.0, 98.81, 97.62, 98.81, 100.0, 98.81, 100.0, 98.81]%	[100.0, 85.71, 100.0, 71.43, 100.0, 80.0, 100.0, 100.0, 85.71, 75.0, 85.71, 100.0, 83.33, 100.0, 83.33]%	[98.82, 100.0, 100.0, 98.8, 98.82, 97.65, 98.82, 100.0, 100.0, 100.0, 100.0, 97.67, 98.81, 100.0, 98.81]%	||	88.78%	88.89%	99.21%	90.02%	99.21%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  1  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  1  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 42.8%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	86.75%	86.67%	99.05%	88.97%	99.06%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	87.78%	98.37%	86.9%	[98.89, 97.78, 97.78, 96.67, 97.78, 97.78, 97.78, 97.78, 98.89, 98.89, 98.89, 98.89, 100.0, 98.89, 98.89]%	[90.91, 85.71, 85.71, 76.92, 80.0, 80.0, 83.33, 85.71, 90.91, 90.91, 90.91, 92.31, 100.0, 92.31, 90.91]%	[83.33, 100.0, 100.0, 83.33, 66.67, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 100.0, 100.0, 100.0, 83.33]%	[100.0, 97.62, 97.62, 97.62, 100.0, 100.0, 98.81, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 98.81, 100.0]%	[100.0, 75.0, 75.0, 71.43, 100.0, 100.0, 83.33, 75.0, 100.0, 100.0, 100.0, 85.71, 100.0, 85.71, 100.0]%	[98.82, 100.0, 100.0, 98.8, 97.67, 97.67, 98.81, 100.0, 98.82, 98.82, 98.82, 100.0, 100.0, 100.0, 98.82]%	||	87.77%	87.78%	99.13%	90.08%	99.14%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  2  0  4  0  0  0  0  0  0  0  0  0  0  66.67%		5
  0  1  0  1  0  4  0  0  0  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  1  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  1  5  83.33%		15
Forest OOB Error: 49.22%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	86.75%	86.67%	99.05%	88.97%	99.06%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[98.89, 98.89, 98.89, 97.78, 96.67, 96.67, 96.67, 94.44, 98.89, 100.0, 95.56, 98.89, 96.67, 97.78, 97.78]%	[90.91, 92.31, 90.91, 85.71, 76.92, 76.92, 66.67, 61.54, 92.31, 100.0, 66.67, 92.31, 72.73, 80.0, 83.33]%	[83.33, 100.0, 83.33, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 100.0, 66.67, 100.0, 66.67, 66.67, 83.33]%	[100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 100.0, 96.43, 98.81, 100.0, 97.62, 98.81, 98.81, 100.0, 98.81]%	[100.0, 85.71, 100.0, 75.0, 71.43, 71.43, 100.0, 57.14, 85.71, 100.0, 66.67, 85.71, 80.0, 100.0, 83.33]%	[98.82, 100.0, 98.82, 100.0, 98.8, 98.8, 96.55, 97.59, 100.0, 100.0, 97.62, 100.0, 97.65, 97.67, 98.81]%	||	81.95%	82.22%	98.73%	84.14%	98.74%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  1  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  1  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  3  2  0  0  0  1  0  0  0  50.0%		7
  0  0  0  0  1  0  0  4  0  0  0  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  1  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 45.67%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	86.75%	86.67%	99.05%	88.97%	99.06%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[97.78, 96.67, 98.89, 94.44, 97.78, 96.67, 95.56, 96.67, 97.78, 98.89, 94.44, 98.89, 97.78, 97.78, 97.78]%	[83.33, 76.92, 92.31, 66.67, 80.0, 76.92, 66.67, 76.92, 83.33, 92.31, 61.54, 90.91, 80.0, 80.0, 80.0]%	[83.33, 83.33, 100.0, 83.33, 66.67, 83.33, 66.67, 83.33, 83.33, 100.0, 66.67, 83.33, 66.67, 66.67, 66.67]%	[98.81, 97.62, 98.81, 95.24, 100.0, 97.62, 97.62, 97.62, 98.81, 98.81, 96.43, 100.0, 100.0, 100.0, 100.0]%	[83.33, 71.43, 85.71, 55.56, 100.0, 71.43, 66.67, 71.43, 83.33, 85.71, 57.14, 100.0, 100.0, 100.0, 100.0]%	[98.81, 98.8, 100.0, 98.77, 97.67, 98.8, 97.62, 98.8, 98.81, 100.0, 97.59, 98.82, 97.67, 97.67, 97.67]%	||	79.19%	78.89%	98.49%	82.12%	98.5%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  2  4  0  0  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  1  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  0  0  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  1  0  0  0  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  1  0  0  0  0  1  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 49.25%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	86.75%	86.67%	99.05%	88.97%	99.06%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	86.67%	98.22%	85.71%	[98.89, 98.89, 98.89, 97.78, 96.67, 97.78, 98.89, 96.67, 98.89, 100.0, 95.56, 100.0, 97.78, 98.89, 97.78]%	[90.91, 92.31, 92.31, 85.71, 72.73, 80.0, 92.31, 72.73, 92.31, 100.0, 71.43, 100.0, 80.0, 90.91, 83.33]%	[83.33, 100.0, 100.0, 100.0, 66.67, 66.67, 100.0, 66.67, 100.0, 100.0, 83.33, 100.0, 66.67, 83.33, 83.33]%	[100.0, 98.81, 98.81, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 100.0, 96.43, 100.0, 100.0, 100.0, 98.81]%	[100.0, 85.71, 85.71, 75.0, 80.0, 100.0, 85.71, 80.0, 85.71, 100.0, 62.5, 100.0, 100.0, 100.0, 83.33]%	[98.82, 100.0, 100.0, 100.0, 97.65, 97.67, 100.0, 97.65, 100.0, 100.0, 98.78, 100.0, 97.67, 98.82, 98.81]%	||	86.47%	86.67%	99.05%	88.25%	99.06%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  4  0  1  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  0  1  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 49.62%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	86.75%	86.67%	99.05%	88.97%	99.06%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[98.89, 96.67, 96.67, 95.56, 95.56, 95.56, 95.56, 97.78, 98.89, 92.22, 97.78, 96.67, 97.78, 96.67, 98.89]%	[90.91, 72.73, 76.92, 71.43, 66.67, 50.0, 71.43, 83.33, 90.91, 46.15, 83.33, 72.73, 83.33, 80.0, 90.91]%	[83.33, 66.67, 83.33, 83.33, 66.67, 33.33, 83.33, 83.33, 83.33, 50.0, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 98.81, 97.62, 96.43, 97.62, 100.0, 96.43, 98.81, 100.0, 95.24, 98.81, 98.81, 98.81, 96.43, 100.0]%	[100.0, 80.0, 71.43, 62.5, 66.67, 100.0, 62.5, 83.33, 100.0, 42.86, 83.33, 80.0, 83.33, 66.67, 100.0]%	[98.82, 97.65, 98.8, 98.78, 97.62, 95.45, 98.78, 98.81, 98.82, 96.39, 98.81, 97.65, 98.81, 100.0, 98.82]%	||	75.39%	75.56%	98.25%	78.84%	98.27%	
  5  0  0  1  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  4  0  0  0  0  1  0  0  0  0  0  0  1  0  66.67%		2
  0  0  5  0  0  0  0  0  0  0  0  0  0  1  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  1  0  0  0  0  0  0  0  0  66.67%		5
  0  1  0  0  1  2  0  0  0  1  0  0  0  1  0  33.33%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  1  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  2  0  0  0  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 47.03%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[97.78, 96.67, 98.89, 96.67, 98.89, 96.67, 98.89, 95.56, 98.89, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89]%	[80.0, 76.92, 92.31, 76.92, 92.31, 72.73, 92.31, 71.43, 90.91, 90.91, 72.73, 83.33, 72.73, 92.31, 90.91]%	[66.67, 83.33, 100.0, 83.33, 100.0, 66.67, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 66.67, 100.0, 83.33]%	[100.0, 97.62, 98.81, 97.62, 98.81, 98.81, 98.81, 96.43, 100.0, 100.0, 98.81, 98.81, 98.81, 98.81, 100.0]%	[100.0, 71.43, 85.71, 71.43, 85.71, 80.0, 85.71, 62.5, 100.0, 100.0, 80.0, 83.33, 80.0, 85.71, 100.0]%	[97.67, 98.8, 100.0, 98.8, 100.0, 97.65, 100.0, 98.78, 98.82, 98.82, 97.65, 98.81, 97.65, 100.0, 98.82]%	||	83.25%	83.33%	98.81%	84.77%	98.82%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  1  1  4  0  0  0  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  1  0  83.33%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 53.21%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[97.78, 97.78, 98.89, 98.89, 98.89, 97.78, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 97.78, 97.78, 97.78]%	[80.0, 85.71, 92.31, 92.31, 90.91, 80.0, 90.91, 72.73, 83.33, 76.92, 90.91, 92.31, 85.71, 85.71, 80.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 66.67, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 100.0, 100.0, 66.67]%	[100.0, 97.62, 98.81, 98.81, 100.0, 100.0, 100.0, 98.81, 98.81, 97.62, 100.0, 98.81, 97.62, 97.62, 100.0]%	[100.0, 75.0, 85.71, 85.71, 100.0, 100.0, 100.0, 80.0, 83.33, 71.43, 100.0, 85.71, 75.0, 75.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.82, 97.67, 98.82, 97.65, 98.81, 98.8, 98.82, 100.0, 100.0, 100.0, 97.67]%	||	85.32%	85.56%	98.97%	87.79%	98.98%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  1  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  0  1  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  1  0  0  0  1  0  0  66.67%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  1  4  66.67%		15
Forest OOB Error: 46.74%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	74.44%	96.59%	72.62%	[98.89, 98.89, 100.0, 95.56, 96.67, 95.56, 95.56, 94.44, 100.0, 93.33, 94.44, 96.67, 97.78, 94.44, 96.67]%	[90.91, 90.91, 100.0, 60.0, 76.92, 66.67, 71.43, 61.54, 100.0, 57.14, 61.54, 72.73, 80.0, 61.54, 72.73]%	[83.33, 83.33, 100.0, 50.0, 83.33, 66.67, 83.33, 66.67, 100.0, 66.67, 66.67, 66.67, 66.67, 66.67, 66.67]%	[100.0, 100.0, 100.0, 98.81, 97.62, 97.62, 96.43, 96.43, 100.0, 95.24, 96.43, 98.81, 100.0, 96.43, 98.81]%	[100.0, 100.0, 100.0, 75.0, 71.43, 66.67, 62.5, 57.14, 100.0, 50.0, 57.14, 80.0, 100.0, 57.14, 80.0]%	[98.82, 98.82, 100.0, 96.51, 98.8, 97.62, 98.78, 97.59, 100.0, 97.56, 97.59, 97.65, 97.67, 97.59, 97.65]%	||	74.94%	74.44%	98.17%	77.13%	98.18%	
  5  0  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  3  1  1  1  0  0  0  0  0  0  0  0  50.0%		4
  0  0  0  0  5  0  0  0  0  0  0  1  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  0  1  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  1  0  0  4  0  0  1  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  4  0  0  0  2  0  66.67%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  4  1  66.67%		14
  0  0  0  1  0  0  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 54.88%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[98.89, 97.78, 98.89, 95.56, 97.78, 96.67, 94.44, 97.78, 96.67, 96.67, 96.67, 95.56, 97.78, 96.67, 100.0]%	[90.91, 83.33, 90.91, 71.43, 85.71, 72.73, 44.44, 83.33, 76.92, 76.92, 76.92, 66.67, 80.0, 76.92, 100.0]%	[83.33, 83.33, 83.33, 83.33, 100.0, 66.67, 33.33, 83.33, 83.33, 83.33, 83.33, 66.67, 66.67, 83.33, 100.0]%	[100.0, 98.81, 100.0, 96.43, 97.62, 98.81, 98.81, 98.81, 97.62, 97.62, 97.62, 97.62, 100.0, 97.62, 100.0]%	[100.0, 83.33, 100.0, 62.5, 75.0, 80.0, 66.67, 83.33, 71.43, 71.43, 71.43, 66.67, 100.0, 71.43, 100.0]%	[98.82, 98.81, 98.82, 98.78, 100.0, 97.65, 95.4, 98.81, 98.8, 98.8, 98.8, 97.62, 97.67, 98.8, 100.0]%	||	78.48%	78.89%	98.49%	80.21%	98.5%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  1  0  2  0  0  1  0  1  0  1  0  33.33%		7
  0  0  0  0  1  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  1  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  1  0  0  0  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 54.72%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	84.44%	97.93%	83.33%	[98.89, 96.67, 100.0, 97.78, 98.89, 97.78, 97.78, 96.67, 95.56, 100.0, 97.78, 98.89, 100.0, 95.56, 96.67]%	[90.91, 72.73, 100.0, 85.71, 90.91, 83.33, 80.0, 76.92, 75.0, 100.0, 83.33, 92.31, 100.0, 66.67, 66.67]%	[83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 50.0]%	[100.0, 98.81, 100.0, 97.62, 100.0, 98.81, 100.0, 97.62, 95.24, 100.0, 98.81, 98.81, 100.0, 97.62, 100.0]%	[100.0, 80.0, 100.0, 75.0, 100.0, 83.33, 100.0, 71.43, 60.0, 100.0, 83.33, 85.71, 100.0, 66.67, 100.0]%	[98.82, 97.65, 100.0, 100.0, 98.82, 98.81, 97.67, 98.8, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 96.55]%	||	84.3%	84.44%	98.89%	87.03%	98.9%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  4  0  0  0  0  0  0  2  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  4  0  0  0  0  1  0  1  0  66.67%		7
  0  0  0  0  0  0  0  5  1  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  1  0  0  0  1  0  0  1  0  0  0  3  50.0%		15
Forest OOB Error: 56.03%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[96.67, 97.78, 97.78, 95.56, 97.78, 94.44, 97.78, 96.67, 97.78, 95.56, 94.44, 94.44, 96.67, 95.56, 95.56]%	[76.92, 83.33, 83.33, 60.0, 83.33, 61.54, 85.71, 72.73, 83.33, 50.0, 70.59, 66.67, 66.67, 71.43, 50.0]%	[83.33, 83.33, 83.33, 50.0, 83.33, 66.67, 100.0, 66.67, 83.33, 33.33, 100.0, 83.33, 50.0, 83.33, 33.33]%	[97.62, 98.81, 98.81, 98.81, 98.81, 96.43, 97.62, 98.81, 98.81, 100.0, 94.05, 95.24, 100.0, 96.43, 100.0]%	[71.43, 83.33, 83.33, 75.0, 83.33, 57.14, 75.0, 80.0, 83.33, 100.0, 54.55, 55.56, 100.0, 62.5, 100.0]%	[98.8, 98.81, 98.81, 96.51, 98.81, 97.59, 100.0, 97.65, 98.81, 95.45, 100.0, 98.77, 96.55, 98.78, 95.45]%	||	71.04%	72.22%	98.02%	77.63%	98.05%	
  5  0  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  0  0  0  0  0  1  0  83.33%		3
  0  0  0  3  1  2  0  0  0  0  0  0  0  0  0  50.0%		4
  0  0  0  0  5  0  0  0  0  0  0  1  0  0  0  83.33%		5
  0  0  1  0  0  4  0  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  1  2  0  3  0  0  0  33.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  1  0  0  0  0  0  0  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  3  0  3  0  0  50.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  1  0  0  1  0  0  0  1  0  0  0  0  0  1  2  33.33%		15
Forest OOB Error: 54.05%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 96.67, 98.89, 100.0, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 83.33, 83.33, 76.92, 90.91, 100.0, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.81, 98.81, 98.8, 98.82, 100.0, 98.82]%	||	87.79%	87.78%	99.13%	89.76%	99.14%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[98.89, 96.67, 98.89, 97.78, 95.56, 98.89, 97.78, 94.44, 97.78, 98.89, 96.67, 98.89, 97.78, 98.89, 96.67]%	[90.91, 76.92, 90.91, 80.0, 66.67, 90.91, 85.71, 54.55, 85.71, 92.31, 76.92, 92.31, 80.0, 92.31, 72.73]%	[83.33, 83.33, 83.33, 66.67, 66.67, 83.33, 100.0, 50.0, 100.0, 100.0, 83.33, 100.0, 66.67, 100.0, 66.67]%	[100.0, 97.62, 100.0, 100.0, 97.62, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 98.81, 100.0, 98.81, 98.81]%	[100.0, 71.43, 100.0, 100.0, 66.67, 100.0, 75.0, 60.0, 75.0, 85.71, 71.43, 85.71, 100.0, 85.71, 80.0]%	[98.82, 98.8, 98.82, 97.67, 97.62, 98.82, 100.0, 96.47, 100.0, 100.0, 98.8, 100.0, 97.67, 100.0, 97.65]%	||	81.92%	82.22%	98.73%	83.78%	98.74%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  4  1  0  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  4  0  0  0  0  0  0  1  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  0  1  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  1  0  0  3  0  0  1  0  0  0  1  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  1  0  0  0  0  0  0  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 53.44%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 96.67, 98.89, 100.0, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 83.33, 83.33, 76.92, 90.91, 100.0, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.81, 98.81, 98.8, 98.82, 100.0, 98.82]%	||	87.79%	87.78%	99.13%	89.76%	99.14%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	87.78%	98.37%	86.9%	[98.89, 98.89, 97.78, 98.89, 97.78, 97.78, 98.89, 98.89, 97.78, 98.89, 97.78, 97.78, 98.89, 97.78, 98.89]%	[90.91, 92.31, 85.71, 90.91, 83.33, 83.33, 90.91, 90.91, 85.71, 90.91, 83.33, 85.71, 92.31, 80.0, 90.91]%	[83.33, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0, 100.0, 66.67, 83.33]%	[100.0, 98.81, 97.62, 100.0, 98.81, 98.81, 100.0, 100.0, 97.62, 100.0, 98.81, 97.62, 98.81, 100.0, 100.0]%	[100.0, 85.71, 75.0, 100.0, 83.33, 83.33, 100.0, 100.0, 75.0, 100.0, 83.33, 75.0, 85.71, 100.0, 100.0]%	[98.82, 100.0, 100.0, 98.82, 98.81, 98.81, 98.82, 98.82, 100.0, 98.82, 98.81, 100.0, 100.0, 97.67, 98.82]%	||	87.81%	87.78%	99.13%	89.76%	99.14%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  0  0  1  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  1  0  0  0  1  0  0  0  0  4  0  66.67%		14
  0  0  1  0  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 45.67%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 96.67, 98.89, 100.0, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 83.33, 83.33, 76.92, 90.91, 100.0, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.81, 98.81, 98.8, 98.82, 100.0, 98.82]%	||	87.79%	87.78%	99.13%	89.76%	99.14%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[98.89, 98.89, 100.0, 97.78, 97.78, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67, 97.78, 98.89, 100.0, 98.89]%	[90.91, 92.31, 100.0, 80.0, 83.33, 83.33, 72.73, 76.92, 85.71, 72.73, 72.73, 85.71, 92.31, 100.0, 90.91]%	[83.33, 100.0, 100.0, 66.67, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67, 66.67, 100.0, 100.0, 100.0, 83.33]%	[100.0, 98.81, 100.0, 100.0, 98.81, 98.81, 98.81, 97.62, 97.62, 98.81, 98.81, 97.62, 98.81, 100.0, 100.0]%	[100.0, 85.71, 100.0, 100.0, 83.33, 83.33, 80.0, 71.43, 75.0, 80.0, 80.0, 75.0, 85.71, 100.0, 100.0]%	[98.82, 100.0, 100.0, 97.67, 98.81, 98.81, 97.65, 98.8, 100.0, 97.65, 97.65, 100.0, 100.0, 100.0, 98.82]%	||	85.31%	85.56%	98.97%	86.63%	98.98%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  1  1  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  4  1  0  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  4  0  2  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 47.86%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 96.67, 98.89, 100.0, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 83.33, 83.33, 76.92, 90.91, 100.0, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.81, 98.81, 98.8, 98.82, 100.0, 98.82]%	||	87.79%	87.78%	99.13%	89.76%	99.14%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[98.89, 97.78, 100.0, 97.78, 100.0, 98.89, 95.56, 97.78, 97.78, 96.67, 97.78, 95.56, 96.67, 97.78, 97.78]%	[90.91, 83.33, 100.0, 83.33, 100.0, 92.31, 71.43, 83.33, 83.33, 72.73, 80.0, 66.67, 80.0, 80.0, 83.33]%	[83.33, 83.33, 100.0, 83.33, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 66.67, 66.67, 100.0, 66.67, 83.33]%	[100.0, 98.81, 100.0, 98.81, 100.0, 98.81, 96.43, 98.81, 98.81, 98.81, 100.0, 97.62, 96.43, 100.0, 98.81]%	[100.0, 83.33, 100.0, 83.33, 100.0, 85.71, 62.5, 83.33, 83.33, 80.0, 100.0, 66.67, 66.67, 100.0, 83.33]%	[98.82, 98.81, 100.0, 98.81, 100.0, 100.0, 98.78, 98.81, 98.81, 97.65, 97.67, 97.62, 100.0, 97.67, 98.81]%	||	83.38%	83.33%	98.81%	85.21%	98.82%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  0  0  0  0  0  1  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  4  0  2  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  4  1  66.67%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 54.55%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 96.67, 98.89, 100.0, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 83.33, 83.33, 76.92, 90.91, 100.0, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.81, 98.81, 98.8, 98.82, 100.0, 98.82]%	||	87.79%	87.78%	99.13%	89.76%	99.14%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[97.78, 97.78, 98.89, 98.89, 98.89, 98.89, 95.56, 95.56, 96.67, 97.78, 98.89, 98.89, 100.0, 100.0, 96.67]%	[80.0, 85.71, 92.31, 90.91, 90.91, 90.91, 66.67, 66.67, 80.0, 83.33, 90.91, 92.31, 100.0, 100.0, 72.73]%	[66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 66.67, 100.0, 83.33, 83.33, 100.0, 100.0, 100.0, 66.67]%	[100.0, 97.62, 98.81, 100.0, 100.0, 100.0, 97.62, 97.62, 96.43, 98.81, 100.0, 98.81, 100.0, 100.0, 98.81]%	[100.0, 75.0, 85.71, 100.0, 100.0, 100.0, 66.67, 66.67, 66.67, 83.33, 100.0, 85.71, 100.0, 100.0, 80.0]%	[97.67, 100.0, 100.0, 98.82, 98.82, 98.82, 97.62, 97.62, 100.0, 98.81, 98.82, 100.0, 100.0, 100.0, 97.65]%	||	85.56%	85.56%	98.97%	87.32%	98.98%	
  4  1  1  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  0  1  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  1  0  0  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  1  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 48.66%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 96.67, 98.89, 100.0, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 83.33, 83.33, 76.92, 90.91, 100.0, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.81, 98.81, 98.8, 98.82, 100.0, 98.82]%	||	87.79%	87.78%	99.13%	89.76%	99.14%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.5)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	70.0%	96.0%	67.86%	[100.0, 95.56, 98.89, 94.44, 96.67, 95.56, 88.89, 95.56, 97.78, 94.44, 94.44, 97.78, 96.67, 95.56, 97.78]%	[100.0, 60.0, 92.31, 28.57, 76.92, 60.0, 44.44, 75.0, 83.33, 54.55, 61.54, 80.0, 66.67, 75.0, 80.0]%	[100.0, 50.0, 100.0, 16.67, 83.33, 50.0, 66.67, 100.0, 83.33, 50.0, 66.67, 66.67, 50.0, 100.0, 66.67]%	[100.0, 98.81, 98.81, 100.0, 97.62, 98.81, 90.48, 95.24, 98.81, 97.62, 96.43, 100.0, 100.0, 95.24, 100.0]%	[100.0, 75.0, 85.71, 100.0, 71.43, 75.0, 33.33, 60.0, 83.33, 60.0, 57.14, 100.0, 100.0, 60.0, 100.0]%	[100.0, 96.51, 100.0, 94.38, 98.8, 96.51, 97.44, 100.0, 98.81, 96.47, 97.59, 97.67, 96.55, 100.0, 97.67]%	||	69.22%	70.0%	97.86%	77.4%	97.89%	
  6  0  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		1
  0  3  0  0  0  0  3  0  0  0  0  0  0  0  0  50.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  1  1  1  1  1  1  0  0  0  0  0  0  0  0  16.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  3  1  0  0  1  0  0  0  1  0  50.0%		6
  0  0  0  0  1  0  4  0  0  0  0  0  0  1  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  1  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  1  3  0  0  0  2  0  50.0%		10
  0  0  0  0  0  0  1  1  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  2  0  0  0  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  1  0  0  2  0  3  0  0  50.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  1  0  0  0  4  66.67%		15
Forest OOB Error: 48.0%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	86.75%	86.67%	99.05%	88.97%	99.06%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[98.89, 97.78, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 97.78, 97.78, 98.89, 97.78, 98.89, 100.0, 97.78]%	[90.91, 83.33, 92.31, 90.91, 76.92, 83.33, 76.92, 76.92, 83.33, 83.33, 90.91, 83.33, 90.91, 100.0, 83.33]%	[83.33, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 97.62, 98.81, 97.62, 97.62, 98.81, 98.81, 100.0, 98.81, 100.0, 100.0, 98.81]%	[100.0, 83.33, 85.71, 100.0, 71.43, 83.33, 71.43, 71.43, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0, 83.33]%	[98.82, 98.81, 100.0, 98.82, 98.8, 98.81, 98.8, 98.8, 98.81, 98.81, 98.82, 98.81, 98.82, 100.0, 98.81]%	||	85.78%	85.56%	98.97%	86.67%	98.97%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  1  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  0  0  1  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 48.48%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	86.75%	86.67%	99.05%	88.97%	99.06%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[98.89, 97.78, 98.89, 95.56, 97.78, 97.78, 97.78, 98.89, 98.89, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78]%	[90.91, 83.33, 92.31, 71.43, 83.33, 83.33, 83.33, 90.91, 90.91, 90.91, 92.31, 66.67, 90.91, 92.31, 83.33]%	[83.33, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 96.43, 98.81, 98.81, 98.81, 100.0, 100.0, 100.0, 98.81, 97.62, 100.0, 98.81, 98.81]%	[100.0, 83.33, 85.71, 62.5, 83.33, 83.33, 83.33, 100.0, 100.0, 100.0, 85.71, 66.67, 100.0, 85.71, 83.33]%	[98.82, 98.81, 100.0, 98.78, 98.81, 98.81, 98.81, 98.82, 98.82, 98.82, 100.0, 97.62, 98.82, 100.0, 98.81]%	||	85.75%	85.56%	98.97%	86.87%	98.97%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  1  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  1  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  0  0  1  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  0  0  4  0  1  1  66.67%		12
  0  0  0  1  0  0  0  0  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 47.15%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	86.75%	86.67%	99.05%	88.97%	99.06%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	70.0%	96.0%	67.86%	[97.78, 95.56, 96.67, 96.67, 94.44, 95.56, 93.33, 97.78, 97.78, 94.44, 95.56, 94.44, 96.67, 96.67, 96.67]%	[83.33, 66.67, 80.0, 72.73, 44.44, 66.67, 57.14, 85.71, 83.33, 61.54, 66.67, 54.55, 72.73, 76.92, 66.67]%	[83.33, 66.67, 100.0, 66.67, 33.33, 66.67, 66.67, 100.0, 83.33, 66.67, 66.67, 50.0, 66.67, 83.33, 50.0]%	[98.81, 97.62, 96.43, 98.81, 98.81, 97.62, 95.24, 97.62, 98.81, 96.43, 97.62, 97.62, 98.81, 97.62, 100.0]%	[83.33, 66.67, 66.67, 80.0, 66.67, 66.67, 50.0, 75.0, 83.33, 57.14, 66.67, 60.0, 80.0, 71.43, 100.0]%	[98.81, 97.62, 100.0, 97.65, 95.4, 97.62, 97.56, 100.0, 98.81, 97.59, 97.62, 96.47, 97.65, 98.8, 96.55]%	||	69.27%	70.0%	97.86%	71.57%	97.88%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  4  0  0  0  0  1  0  1  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  1  0  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  3  0  2  0  0  0  0  0  0  0  0  1  0  33.33%		5
  0  0  0  0  0  4  0  0  0  1  0  0  0  1  0  66.67%		6
  0  0  0  0  0  1  4  0  0  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  4  0  2  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  1  0  0  0  0  0  2  0  0  0  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  1  0  0  0  1  0  1  0  0  0  0  3  50.0%		15
Forest OOB Error: 51.8%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	86.75%	86.67%	99.05%	88.97%	99.06%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	84.44%	97.93%	83.33%	[98.89, 97.78, 98.89, 98.89, 98.89, 97.78, 96.67, 97.78, 96.67, 100.0, 96.67, 96.67, 96.67, 100.0, 96.67]%	[90.91, 83.33, 90.91, 90.91, 92.31, 83.33, 66.67, 80.0, 80.0, 100.0, 72.73, 80.0, 76.92, 100.0, 76.92]%	[83.33, 83.33, 83.33, 83.33, 100.0, 83.33, 50.0, 66.67, 100.0, 100.0, 66.67, 100.0, 83.33, 100.0, 83.33]%	[100.0, 98.81, 100.0, 100.0, 98.81, 98.81, 100.0, 100.0, 96.43, 100.0, 98.81, 96.43, 97.62, 100.0, 97.62]%	[100.0, 83.33, 100.0, 100.0, 85.71, 83.33, 100.0, 100.0, 66.67, 100.0, 80.0, 66.67, 71.43, 100.0, 71.43]%	[98.82, 98.81, 98.82, 98.82, 100.0, 98.81, 96.55, 97.67, 100.0, 100.0, 97.65, 100.0, 98.8, 100.0, 98.8]%	||	84.33%	84.44%	98.89%	87.24%	98.9%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  3  0  0  0  0  3  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  1  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  4  0  1  0  1  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  1  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 53.08%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	86.75%	86.67%	99.05%	88.97%	99.06%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[97.78, 98.89, 98.89, 96.67, 98.89, 98.89, 95.56, 94.44, 96.67, 97.78, 94.44, 98.89, 98.89, 98.89, 98.89]%	[80.0, 92.31, 92.31, 72.73, 90.91, 92.31, 60.0, 61.54, 76.92, 85.71, 44.44, 92.31, 92.31, 92.31, 90.91]%	[66.67, 100.0, 100.0, 66.67, 83.33, 100.0, 50.0, 66.67, 83.33, 100.0, 33.33, 100.0, 100.0, 100.0, 83.33]%	[100.0, 98.81, 98.81, 98.81, 100.0, 98.81, 98.81, 96.43, 97.62, 97.62, 98.81, 98.81, 98.81, 98.81, 100.0]%	[100.0, 85.71, 85.71, 80.0, 100.0, 85.71, 75.0, 57.14, 71.43, 75.0, 66.67, 85.71, 85.71, 85.71, 100.0]%	[97.67, 100.0, 100.0, 97.65, 98.82, 100.0, 96.51, 97.59, 98.8, 100.0, 95.4, 100.0, 100.0, 100.0, 98.82]%	||	81.13%	82.22%	98.73%	82.63%	98.75%	
  4  1  1  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  3  0  0  1  0  1  0  1  0  50.0%		7
  0  0  0  0  0  0  0  4  1  0  1  0  0  0  0  66.67%		8
  0  0  0  1  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  3  1  0  2  0  0  0  0  33.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 46.03%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	86.75%	86.67%	99.05%	88.97%	99.06%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[95.56, 98.89, 100.0, 97.78, 98.89, 97.78, 95.56, 97.78, 98.89, 97.78, 97.78, 98.89, 97.78, 98.89, 98.89]%	[66.67, 92.31, 100.0, 83.33, 90.91, 80.0, 60.0, 83.33, 92.31, 85.71, 83.33, 90.91, 85.71, 92.31, 90.91]%	[66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 50.0, 83.33, 100.0, 100.0, 83.33, 83.33, 100.0, 100.0, 83.33]%	[97.62, 98.81, 100.0, 98.81, 100.0, 100.0, 98.81, 98.81, 98.81, 97.62, 98.81, 100.0, 97.62, 98.81, 100.0]%	[66.67, 85.71, 100.0, 83.33, 100.0, 100.0, 75.0, 83.33, 85.71, 75.0, 83.33, 100.0, 75.0, 85.71, 100.0]%	[97.62, 100.0, 100.0, 98.81, 98.82, 97.67, 96.51, 98.81, 100.0, 100.0, 98.81, 98.82, 100.0, 100.0, 98.82]%	||	85.18%	85.56%	98.97%	86.59%	98.98%	
  4  1  0  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  1  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  1  0  0  0  0  0  3  1  0  0  0  0  0  1  0  50.0%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  1  0  0  0  0  0  0  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 45.49%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	86.67%	98.22%	85.71%	[98.89, 97.78, 97.78, 100.0, 100.0, 100.0, 97.78, 96.67, 98.89, 97.78, 96.67, 97.78, 96.67, 98.89, 97.78]%	[90.91, 83.33, 85.71, 100.0, 100.0, 100.0, 83.33, 76.92, 90.91, 83.33, 76.92, 83.33, 72.73, 90.91, 83.33]%	[83.33, 83.33, 100.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33]%	[100.0, 98.81, 97.62, 100.0, 100.0, 100.0, 98.81, 97.62, 100.0, 98.81, 97.62, 98.81, 98.81, 100.0, 98.81]%	[100.0, 83.33, 75.0, 100.0, 100.0, 100.0, 83.33, 71.43, 100.0, 83.33, 71.43, 83.33, 80.0, 100.0, 83.33]%	[98.82, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 98.81, 98.8, 98.81, 97.65, 98.82, 98.81]%	||	86.78%	86.67%	99.05%	87.63%	99.05%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  1  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 49.43%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[100.0, 98.89, 98.89, 100.0, 96.67, 97.78, 95.56, 96.67, 98.89, 97.78, 100.0, 95.56, 97.78, 100.0, 96.67]%	[100.0, 92.31, 92.31, 100.0, 76.92, 80.0, 71.43, 66.67, 90.91, 85.71, 100.0, 60.0, 83.33, 100.0, 76.92]%	[100.0, 100.0, 100.0, 100.0, 83.33, 66.67, 83.33, 50.0, 83.33, 100.0, 100.0, 50.0, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 97.62, 100.0, 96.43, 100.0, 100.0, 97.62, 100.0, 98.81, 98.81, 100.0, 97.62]%	[100.0, 85.71, 85.71, 100.0, 71.43, 100.0, 62.5, 100.0, 100.0, 75.0, 100.0, 75.0, 83.33, 100.0, 71.43]%	[100.0, 100.0, 100.0, 100.0, 98.8, 97.67, 98.78, 96.55, 98.82, 100.0, 100.0, 96.51, 98.81, 100.0, 98.8]%	||	85.1%	85.56%	98.97%	87.34%	98.98%	
  6  0  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  1  4  1  0  0  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  5  0  0  0  0  1  0  0  0  83.33%		7
  0  0  0  0  1  0  0  3  0  0  0  0  0  0  2  50.0%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  2  0  3  1  0  0  50.0%		12
  0  0  0  0  0  0  1  0  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  1  0  0  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 49.81%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	86.67%	98.22%	85.71%	[96.67, 97.78, 100.0, 98.89, 98.89, 97.78, 97.78, 97.78, 98.89, 96.67, 97.78, 97.78, 98.89, 100.0, 97.78]%	[72.73, 85.71, 100.0, 90.91, 92.31, 80.0, 83.33, 83.33, 92.31, 76.92, 80.0, 83.33, 92.31, 100.0, 83.33]%	[66.67, 100.0, 100.0, 83.33, 100.0, 66.67, 83.33, 83.33, 100.0, 83.33, 66.67, 83.33, 100.0, 100.0, 83.33]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81, 100.0, 98.81]%	[80.0, 75.0, 100.0, 100.0, 85.71, 100.0, 83.33, 83.33, 85.71, 71.43, 100.0, 83.33, 85.71, 100.0, 83.33]%	[97.65, 100.0, 100.0, 98.82, 100.0, 97.67, 98.81, 98.81, 100.0, 98.8, 97.67, 98.81, 100.0, 100.0, 98.81]%	||	86.44%	86.67%	99.05%	87.79%	99.06%	
  4  1  0  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  1  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  5  0  0  0  0  0  0  0  1  83.33%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  1  0  0  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 50.39%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[97.78, 98.89, 100.0, 96.67, 98.89, 95.56, 95.56, 96.67, 97.78, 98.89, 97.78, 97.78, 97.78, 95.56, 96.67]%	[83.33, 92.31, 100.0, 72.73, 90.91, 60.0, 71.43, 80.0, 83.33, 92.31, 80.0, 80.0, 83.33, 71.43, 72.73]%	[83.33, 100.0, 100.0, 66.67, 83.33, 50.0, 83.33, 100.0, 83.33, 100.0, 66.67, 66.67, 83.33, 83.33, 66.67]%	[98.81, 98.81, 100.0, 98.81, 100.0, 98.81, 96.43, 96.43, 98.81, 98.81, 100.0, 100.0, 98.81, 96.43, 98.81]%	[83.33, 85.71, 100.0, 80.0, 100.0, 75.0, 62.5, 66.67, 83.33, 85.71, 100.0, 100.0, 83.33, 62.5, 80.0]%	[98.81, 100.0, 100.0, 97.65, 98.82, 96.51, 98.78, 100.0, 98.81, 100.0, 97.67, 97.67, 98.81, 98.78, 97.65]%	||	80.92%	81.11%	98.65%	83.21%	98.66%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  1  0  0  4  0  0  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  1  0  3  0  0  1  0  0  0  0  1  0  50.0%		6
  0  0  0  0  0  0  5  0  0  0  0  0  0  1  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  4  0  1  1  66.67%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  1  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 50.41%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[97.78, 98.89, 97.78, 96.67, 96.67, 97.78, 98.89, 96.67, 98.89, 97.78, 98.89, 96.67, 97.78, 96.67, 96.67]%	[83.33, 92.31, 85.71, 80.0, 66.67, 83.33, 90.91, 76.92, 92.31, 83.33, 92.31, 72.73, 83.33, 66.67, 72.73]%	[83.33, 100.0, 100.0, 100.0, 50.0, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 50.0, 66.67]%	[98.81, 98.81, 97.62, 96.43, 100.0, 98.81, 100.0, 97.62, 98.81, 98.81, 98.81, 98.81, 98.81, 100.0, 98.81]%	[83.33, 85.71, 75.0, 66.67, 100.0, 83.33, 100.0, 71.43, 85.71, 83.33, 85.71, 80.0, 83.33, 100.0, 80.0]%	[98.81, 100.0, 100.0, 100.0, 96.55, 98.81, 98.82, 98.8, 100.0, 98.81, 100.0, 97.65, 98.81, 96.55, 97.65]%	||	81.51%	82.22%	98.73%	84.24%	98.75%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  1  3  0  0  0  0  1  0  0  0  0  0  50.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  1  0  0  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  2  0  1  0  0  0  0  0  0  0  3  0  50.0%		14
  1  0  1  0  0  0  0  0  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 48.28%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[98.89, 98.89, 100.0, 95.56, 98.89, 94.44, 97.78, 97.78, 100.0, 98.89, 96.67, 98.89, 97.78, 98.89, 97.78]%	[90.91, 92.31, 100.0, 60.0, 90.91, 61.54, 85.71, 80.0, 100.0, 92.31, 80.0, 90.91, 80.0, 92.31, 83.33]%	[83.33, 100.0, 100.0, 50.0, 83.33, 66.67, 100.0, 66.67, 100.0, 100.0, 100.0, 83.33, 66.67, 100.0, 83.33]%	[100.0, 98.81, 100.0, 98.81, 100.0, 96.43, 97.62, 100.0, 100.0, 98.81, 96.43, 100.0, 100.0, 98.81, 98.81]%	[100.0, 85.71, 100.0, 75.0, 100.0, 57.14, 75.0, 100.0, 100.0, 85.71, 66.67, 100.0, 100.0, 85.71, 83.33]%	[98.82, 100.0, 100.0, 96.51, 98.82, 97.59, 100.0, 97.67, 100.0, 100.0, 100.0, 98.82, 97.67, 100.0, 98.81]%	||	85.35%	85.56%	98.97%	87.62%	98.98%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  3  0  3  0  0  0  0  0  0  0  0  0  50.0%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  1  0  4  0  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  1  4  0  0  1  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  1  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 50.99%
