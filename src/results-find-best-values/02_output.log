Run dom  4 apr 2021, 15.29.19, CEST
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.4)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.4)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[96.67, 97.78, 100.0, 100.0, 97.78, 96.67, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 76.92, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 66.67, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	85.68%	85.56%	98.97%	87.2%	98.97%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.4)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	92.22%	98.96%	91.67%	[97.78, 97.78, 98.89, 100.0, 100.0, 100.0, 100.0, 97.78, 100.0, 98.89, 97.78, 98.89, 97.78, 100.0, 98.89]%	[80.0, 85.71, 92.31, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 90.91, 83.33, 92.31, 83.33, 100.0, 90.91]%	[66.67, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 100.0, 98.81, 98.81, 98.81, 100.0, 100.0]%	[100.0, 75.0, 85.71, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 100.0, 83.33, 85.71, 83.33, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 98.81, 100.0, 98.81, 100.0, 98.82]%	||	92.14%	92.22%	99.44%	93.1%	99.45%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 23.79%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.4)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.4)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[96.67, 97.78, 100.0, 100.0, 97.78, 96.67, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 76.92, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 66.67, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	85.68%	85.56%	98.97%	87.2%	98.97%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.4)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	92.22%	98.96%	91.67%	[97.78, 97.78, 100.0, 100.0, 100.0, 100.0, 100.0, 97.78, 100.0, 98.89, 96.67, 98.89, 97.78, 100.0, 98.89]%	[80.0, 85.71, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 90.91, 76.92, 92.31, 83.33, 100.0, 90.91]%	[66.67, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 98.81, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 100.0, 71.43, 85.71, 83.33, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 98.8, 100.0, 98.81, 100.0, 98.82]%	||	92.23%	92.22%	99.44%	93.25%	99.45%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 25.56%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.4)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.4)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[96.67, 97.78, 100.0, 100.0, 97.78, 96.67, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 76.92, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 66.67, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	85.68%	85.56%	98.97%	87.2%	98.97%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.4)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	92.22%	98.96%	91.67%	[97.78, 97.78, 97.78, 100.0, 100.0, 100.0, 100.0, 96.67, 100.0, 98.89, 97.78, 98.89, 98.89, 100.0, 100.0]%	[80.0, 85.71, 85.71, 100.0, 100.0, 100.0, 100.0, 72.73, 100.0, 90.91, 83.33, 92.31, 90.91, 100.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 66.67, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 97.62, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 100.0, 98.81, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 75.0, 100.0, 100.0, 100.0, 100.0, 80.0, 100.0, 100.0, 83.33, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 97.65, 100.0, 98.82, 98.81, 100.0, 98.82, 100.0, 100.0]%	||	92.11%	92.22%	99.44%	93.27%	99.45%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  2  0  0  0  0  4  0  0  0  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 24.44%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.4)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.4)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[96.67, 97.78, 100.0, 100.0, 97.78, 96.67, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 76.92, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 66.67, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	85.68%	85.56%	98.97%	87.2%	98.97%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.4)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	94.44%	99.26%	94.05%	[97.78, 97.78, 100.0, 100.0, 100.0, 100.0, 100.0, 97.78, 100.0, 98.89, 97.78, 98.89, 100.0, 100.0, 100.0]%	[80.0, 85.71, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 90.91, 83.33, 92.31, 100.0, 100.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 83.33, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 100.0, 98.81, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 100.0, 83.33, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 98.81, 100.0, 100.0, 100.0, 100.0]%	||	94.37%	94.44%	99.6%	95.16%	99.61%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 25.19%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.4)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.4)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[96.67, 97.78, 100.0, 100.0, 97.78, 96.67, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 76.92, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 66.67, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	85.68%	85.56%	98.97%	87.2%	98.97%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.4)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	93.33%	99.11%	92.86%	[97.78, 98.89, 98.89, 100.0, 100.0, 100.0, 100.0, 97.78, 100.0, 98.89, 97.78, 98.89, 98.89, 100.0, 98.89]%	[83.33, 92.31, 92.31, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 90.91, 83.33, 92.31, 90.91, 100.0, 90.91]%	[83.33, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 83.33]%	[98.81, 98.81, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 100.0, 98.81, 98.81, 100.0, 100.0, 100.0]%	[83.33, 85.71, 85.71, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 100.0, 83.33, 85.71, 100.0, 100.0, 100.0]%	[98.81, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 98.81, 100.0, 98.82, 100.0, 98.82]%	||	93.31%	93.33%	99.52%	93.81%	99.53%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  1  0  0  0  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 22.22%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.4)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.4)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[96.67, 97.78, 100.0, 100.0, 97.78, 96.67, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 76.92, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 80.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 66.67, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 97.67, 100.0]%	||	85.68%	85.56%	98.97%	87.2%	98.97%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.4)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	91.11%	98.81%	90.48%	[97.78, 97.78, 98.89, 100.0, 100.0, 100.0, 98.89, 96.67, 100.0, 98.89, 97.78, 98.89, 97.78, 100.0, 98.89]%	[80.0, 85.71, 92.31, 100.0, 100.0, 100.0, 90.91, 76.92, 100.0, 90.91, 83.33, 92.31, 83.33, 100.0, 90.91]%	[66.67, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 100.0, 100.0, 97.62, 100.0, 100.0, 98.81, 98.81, 98.81, 100.0, 100.0]%	[100.0, 75.0, 85.71, 100.0, 100.0, 100.0, 100.0, 71.43, 100.0, 100.0, 83.33, 85.71, 83.33, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 100.0, 100.0, 98.82, 98.8, 100.0, 98.82, 98.81, 100.0, 98.81, 100.0, 98.82]%	||	91.11%	91.11%	99.37%	92.3%	99.37%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 23.79%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 100.0, 100.0, 97.78, 96.67, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 76.92, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 90.91, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 98.82, 100.0]%	||	86.89%	86.67%	99.05%	88.53%	99.05%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	93.33%	99.11%	92.86%	[97.78, 97.78, 98.89, 100.0, 100.0, 100.0, 100.0, 97.78, 100.0, 98.89, 97.78, 98.89, 98.89, 100.0, 100.0]%	[80.0, 85.71, 92.31, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 90.91, 83.33, 92.31, 90.91, 100.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 100.0, 98.81, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 100.0, 83.33, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 98.81, 100.0, 98.82, 100.0, 100.0]%	||	93.25%	93.33%	99.52%	94.21%	99.53%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 25.19%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 100.0, 100.0, 97.78, 96.67, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 76.92, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 90.91, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 98.82, 100.0]%	||	86.89%	86.67%	99.05%	88.53%	99.05%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	92.22%	98.96%	91.67%	[98.89, 98.89, 98.89, 100.0, 100.0, 98.89, 98.89, 97.78, 100.0, 98.89, 97.78, 98.89, 97.78, 100.0, 98.89]%	[90.91, 92.31, 92.31, 100.0, 100.0, 92.31, 90.91, 83.33, 100.0, 90.91, 83.33, 92.31, 83.33, 100.0, 90.91]%	[83.33, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 98.81, 100.0, 100.0, 98.81, 98.81, 98.81, 100.0, 100.0]%	[100.0, 85.71, 85.71, 100.0, 100.0, 85.71, 100.0, 83.33, 100.0, 100.0, 83.33, 85.71, 83.33, 100.0, 100.0]%	[98.82, 100.0, 100.0, 100.0, 100.0, 100.0, 98.82, 98.81, 100.0, 98.82, 98.81, 100.0, 98.81, 100.0, 98.82]%	||	92.19%	92.22%	99.44%	92.86%	99.45%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 22.22%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 100.0, 100.0, 97.78, 96.67, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 76.92, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 90.91, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 98.82, 100.0]%	||	86.89%	86.67%	99.05%	88.53%	99.05%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	90.0%	98.67%	89.29%	[97.78, 97.78, 98.89, 100.0, 100.0, 98.89, 97.78, 96.67, 100.0, 98.89, 97.78, 98.89, 97.78, 100.0, 98.89]%	[80.0, 85.71, 92.31, 100.0, 100.0, 92.31, 80.0, 76.92, 100.0, 90.91, 83.33, 92.31, 83.33, 100.0, 90.91]%	[66.67, 100.0, 100.0, 100.0, 100.0, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 100.0, 100.0, 98.81, 98.81, 98.81, 100.0, 100.0]%	[100.0, 75.0, 85.71, 100.0, 100.0, 85.71, 100.0, 71.43, 100.0, 100.0, 83.33, 85.71, 83.33, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 100.0, 100.0, 97.67, 98.8, 100.0, 98.82, 98.81, 100.0, 98.81, 100.0, 98.82]%	||	89.87%	90.0%	99.29%	91.35%	99.29%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  1  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 24.81%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 100.0, 100.0, 97.78, 96.67, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 76.92, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 90.91, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 98.82, 100.0]%	||	86.89%	86.67%	99.05%	88.53%	99.05%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	93.33%	99.11%	92.86%	[98.89, 98.89, 98.89, 100.0, 100.0, 100.0, 100.0, 97.78, 100.0, 98.89, 97.78, 98.89, 97.78, 100.0, 98.89]%	[90.91, 92.31, 92.31, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 90.91, 83.33, 92.31, 83.33, 100.0, 90.91]%	[83.33, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 100.0, 98.81, 98.81, 98.81, 100.0, 100.0]%	[100.0, 85.71, 85.71, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 100.0, 83.33, 85.71, 83.33, 100.0, 100.0]%	[98.82, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 98.81, 100.0, 98.81, 100.0, 98.82]%	||	93.31%	93.33%	99.52%	93.81%	99.53%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 26.3%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 100.0, 100.0, 97.78, 96.67, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 76.92, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 90.91, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 98.82, 100.0]%	||	86.89%	86.67%	99.05%	88.53%	99.05%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	92.22%	98.96%	91.67%	[97.78, 97.78, 98.89, 100.0, 100.0, 100.0, 100.0, 97.78, 100.0, 98.89, 97.78, 98.89, 97.78, 100.0, 98.89]%	[80.0, 85.71, 92.31, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 90.91, 83.33, 92.31, 83.33, 100.0, 90.91]%	[66.67, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 100.0, 98.81, 98.81, 98.81, 100.0, 100.0]%	[100.0, 75.0, 85.71, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 100.0, 83.33, 85.71, 83.33, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 98.81, 100.0, 98.81, 100.0, 98.82]%	||	92.14%	92.22%	99.44%	93.1%	99.45%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 23.7%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 100.0, 100.0, 97.78, 96.67, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 76.92, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 90.91, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 71.43, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.8, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 98.82, 100.0]%	||	86.89%	86.67%	99.05%	88.53%	99.05%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	92.22%	98.96%	91.67%	[97.78, 97.78, 98.89, 100.0, 100.0, 100.0, 98.89, 97.78, 100.0, 97.78, 97.78, 98.89, 98.89, 100.0, 100.0]%	[80.0, 85.71, 92.31, 100.0, 100.0, 100.0, 90.91, 83.33, 100.0, 83.33, 83.33, 92.31, 90.91, 100.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 98.81, 98.81, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 83.33, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 100.0, 100.0, 98.82, 98.81, 100.0, 98.81, 98.81, 100.0, 98.82, 100.0, 100.0]%	||	92.14%	92.22%	99.44%	93.1%	99.45%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 22.59%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	92.22%	98.96%	91.67%	[97.78, 97.78, 98.89, 100.0, 100.0, 98.89, 98.89, 97.78, 100.0, 98.89, 97.78, 98.89, 98.89, 100.0, 100.0]%	[80.0, 85.71, 92.31, 100.0, 100.0, 92.31, 90.91, 83.33, 100.0, 90.91, 83.33, 92.31, 90.91, 100.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 98.81, 100.0, 100.0, 98.81, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 100.0, 100.0, 85.71, 100.0, 83.33, 100.0, 100.0, 83.33, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 100.0, 100.0, 98.82, 98.81, 100.0, 98.82, 98.81, 100.0, 98.82, 100.0, 100.0]%	||	92.14%	92.22%	99.44%	93.25%	99.45%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 23.05%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	93.33%	99.11%	92.86%	[96.67, 97.78, 100.0, 100.0, 100.0, 100.0, 100.0, 98.89, 100.0, 98.89, 97.78, 98.89, 98.89, 100.0, 98.89]%	[72.73, 85.71, 100.0, 100.0, 100.0, 100.0, 100.0, 92.31, 100.0, 90.91, 83.33, 92.31, 90.91, 100.0, 90.91]%	[66.67, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 83.33]%	[98.81, 97.62, 100.0, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 100.0, 98.81, 98.81, 100.0, 100.0, 100.0]%	[80.0, 75.0, 100.0, 100.0, 100.0, 100.0, 100.0, 85.71, 100.0, 100.0, 83.33, 85.71, 100.0, 100.0, 100.0]%	[97.65, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.82, 98.81, 100.0, 98.82, 100.0, 98.82]%	||	93.27%	93.33%	99.52%	93.98%	99.53%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  1  0  0  0  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 26.3%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	93.33%	99.11%	92.86%	[97.78, 97.78, 98.89, 100.0, 100.0, 100.0, 100.0, 97.78, 100.0, 98.89, 97.78, 98.89, 98.89, 100.0, 100.0]%	[80.0, 85.71, 92.31, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 90.91, 83.33, 92.31, 90.91, 100.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 100.0, 98.81, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 100.0, 83.33, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 98.81, 100.0, 98.82, 100.0, 100.0]%	||	93.25%	93.33%	99.52%	94.21%	99.53%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 24.16%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	93.33%	99.11%	92.86%	[97.78, 97.78, 100.0, 100.0, 100.0, 98.89, 98.89, 100.0, 100.0, 98.89, 97.78, 98.89, 97.78, 100.0, 100.0]%	[80.0, 85.71, 100.0, 100.0, 100.0, 92.31, 90.91, 100.0, 100.0, 90.91, 83.33, 92.31, 83.33, 100.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 98.81, 98.81, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 85.71, 100.0, 100.0, 100.0, 100.0, 83.33, 85.71, 83.33, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 100.0, 100.0, 98.82, 100.0, 100.0, 98.82, 98.81, 100.0, 98.81, 100.0, 100.0]%	||	93.25%	93.33%	99.52%	94.21%	99.53%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 21.48%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	96.67%	99.56%	96.43%	[97.78, 97.78, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.89, 100.0, 98.89, 100.0, 100.0, 100.0]%	[80.0, 85.71, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 90.91, 100.0, 92.31, 100.0, 100.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 100.0, 100.0, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.82, 100.0, 100.0, 100.0, 100.0, 100.0]%	||	96.6%	96.67%	99.76%	97.38%	99.77%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 28.15%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	93.33%	99.11%	92.86%	[98.89, 98.89, 97.78, 100.0, 100.0, 100.0, 100.0, 96.67, 100.0, 98.89, 97.78, 98.89, 98.89, 100.0, 100.0]%	[90.91, 92.31, 85.71, 100.0, 100.0, 100.0, 100.0, 72.73, 100.0, 90.91, 83.33, 92.31, 90.91, 100.0, 100.0]%	[83.33, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 66.67, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 98.81, 97.62, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 100.0, 98.81, 98.81, 100.0, 100.0, 100.0]%	[100.0, 85.71, 75.0, 100.0, 100.0, 100.0, 100.0, 80.0, 100.0, 100.0, 83.33, 85.71, 100.0, 100.0, 100.0]%	[98.82, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 97.65, 100.0, 98.82, 98.81, 100.0, 98.82, 100.0, 100.0]%	||	93.27%	93.33%	99.52%	93.98%	99.53%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  2  0  0  0  0  4  0  0  0  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 22.96%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	92.22%	98.96%	91.67%	[97.78, 97.78, 98.89, 100.0, 100.0, 98.89, 98.89, 97.78, 100.0, 98.89, 97.78, 98.89, 98.89, 100.0, 100.0]%	[80.0, 85.71, 92.31, 100.0, 100.0, 92.31, 90.91, 83.33, 100.0, 90.91, 83.33, 92.31, 90.91, 100.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 98.81, 100.0, 100.0, 98.81, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 100.0, 100.0, 85.71, 100.0, 83.33, 100.0, 100.0, 83.33, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 100.0, 100.0, 98.82, 98.81, 100.0, 98.82, 98.81, 100.0, 98.82, 100.0, 100.0]%	||	92.14%	92.22%	99.44%	93.25%	99.45%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 21.19%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	93.33%	99.11%	92.86%	[97.78, 97.78, 98.89, 100.0, 100.0, 100.0, 100.0, 97.78, 100.0, 98.89, 97.78, 98.89, 98.89, 100.0, 100.0]%	[80.0, 85.71, 92.31, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 90.91, 83.33, 92.31, 90.91, 100.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 100.0, 98.81, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 100.0, 83.33, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 98.81, 100.0, 98.82, 100.0, 100.0]%	||	93.25%	93.33%	99.52%	94.21%	99.53%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 25.56%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	92.22%	98.96%	91.67%	[97.78, 97.78, 100.0, 100.0, 100.0, 100.0, 98.89, 96.67, 100.0, 98.89, 97.78, 98.89, 98.89, 100.0, 98.89]%	[80.0, 85.71, 100.0, 100.0, 100.0, 100.0, 90.91, 76.92, 100.0, 90.91, 83.33, 92.31, 92.31, 100.0, 90.91]%	[66.67, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0, 100.0, 100.0, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 100.0, 100.0, 97.62, 100.0, 100.0, 98.81, 98.81, 98.81, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 100.0, 100.0, 71.43, 100.0, 100.0, 83.33, 85.71, 85.71, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 100.0, 100.0, 98.82, 98.8, 100.0, 98.82, 98.81, 100.0, 100.0, 100.0, 98.82]%	||	92.22%	92.22%	99.44%	93.41%	99.45%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  1  0  0  0  5  83.33%		15
Forest OOB Error: 23.33%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	93.33%	99.11%	92.86%	[98.89, 98.89, 98.89, 100.0, 100.0, 98.89, 98.89, 97.78, 100.0, 98.89, 97.78, 98.89, 98.89, 100.0, 100.0]%	[90.91, 92.31, 92.31, 100.0, 100.0, 92.31, 90.91, 83.33, 100.0, 90.91, 83.33, 92.31, 90.91, 100.0, 100.0]%	[83.33, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 98.81, 100.0, 100.0, 98.81, 98.81, 100.0, 100.0, 100.0]%	[100.0, 85.71, 85.71, 100.0, 100.0, 85.71, 100.0, 83.33, 100.0, 100.0, 83.33, 85.71, 100.0, 100.0, 100.0]%	[98.82, 100.0, 100.0, 100.0, 100.0, 100.0, 98.82, 98.81, 100.0, 98.82, 98.81, 100.0, 98.82, 100.0, 100.0]%	||	93.3%	93.33%	99.52%	93.97%	99.53%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 28.52%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	93.33%	99.11%	92.86%	[97.78, 97.78, 98.89, 100.0, 100.0, 100.0, 100.0, 97.78, 100.0, 98.89, 97.78, 98.89, 98.89, 100.0, 100.0]%	[80.0, 85.71, 92.31, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 90.91, 83.33, 92.31, 90.91, 100.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 100.0, 98.81, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 100.0, 83.33, 85.71, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 98.81, 100.0, 98.82, 100.0, 100.0]%	||	93.25%	93.33%	99.52%	94.21%	99.53%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 25.19%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	94.44%	99.26%	94.05%	[98.89, 98.89, 98.89, 100.0, 100.0, 100.0, 100.0, 97.78, 100.0, 98.89, 97.78, 98.89, 98.89, 100.0, 100.0]%	[90.91, 92.31, 92.31, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 90.91, 83.33, 92.31, 90.91, 100.0, 100.0]%	[83.33, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 98.81, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 100.0, 98.81, 98.81, 100.0, 100.0, 100.0]%	[100.0, 85.71, 85.71, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 100.0, 83.33, 85.71, 100.0, 100.0, 100.0]%	[98.82, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 98.81, 100.0, 98.82, 100.0, 100.0]%	||	94.42%	94.44%	99.6%	94.92%	99.61%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 25.19%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.4)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.4)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 98.89, 97.78, 100.0, 98.89, 97.78, 98.89, 97.78, 97.78, 97.78, 97.78, 96.67, 98.89, 100.0, 98.89]%	[80.0, 92.31, 83.33, 100.0, 90.91, 83.33, 90.91, 85.71, 85.71, 83.33, 83.33, 76.92, 90.91, 100.0, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 85.71, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.81, 100.0, 98.82, 98.81, 98.82, 100.0, 100.0, 98.81, 98.81, 98.8, 98.82, 100.0, 98.82]%	||	87.84%	87.78%	99.13%	89.37%	99.13%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.4)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	95.56%	99.41%	95.24%	[98.89, 98.89, 100.0, 100.0, 100.0, 100.0, 100.0, 98.89, 100.0, 98.89, 97.78, 98.89, 98.89, 100.0, 100.0]%	[90.91, 92.31, 100.0, 100.0, 100.0, 100.0, 100.0, 92.31, 100.0, 90.91, 83.33, 92.31, 90.91, 100.0, 100.0]%	[83.33, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 98.81, 100.0, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 100.0, 98.81, 98.81, 100.0, 100.0, 100.0]%	[100.0, 85.71, 100.0, 100.0, 100.0, 100.0, 100.0, 85.71, 100.0, 100.0, 83.33, 85.71, 100.0, 100.0, 100.0]%	[98.82, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.82, 98.81, 100.0, 98.82, 100.0, 100.0]%	||	95.53%	95.56%	99.68%	96.03%	99.69%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 23.33%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.4)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.4)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 98.89, 97.78, 100.0, 98.89, 97.78, 98.89, 97.78, 97.78, 97.78, 97.78, 96.67, 98.89, 100.0, 98.89]%	[80.0, 92.31, 83.33, 100.0, 90.91, 83.33, 90.91, 85.71, 85.71, 83.33, 83.33, 76.92, 90.91, 100.0, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 85.71, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.81, 100.0, 98.82, 98.81, 98.82, 100.0, 100.0, 98.81, 98.81, 98.8, 98.82, 100.0, 98.82]%	||	87.84%	87.78%	99.13%	89.37%	99.13%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.4)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	95.56%	99.41%	95.24%	[98.89, 98.89, 100.0, 100.0, 100.0, 100.0, 100.0, 98.89, 100.0, 98.89, 98.89, 98.89, 98.89, 100.0, 98.89]%	[90.91, 92.31, 100.0, 100.0, 100.0, 100.0, 100.0, 92.31, 100.0, 90.91, 90.91, 92.31, 92.31, 100.0, 90.91]%	[83.33, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 83.33, 100.0, 100.0, 100.0, 83.33]%	[100.0, 98.81, 100.0, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 100.0, 100.0, 98.81, 98.81, 100.0, 100.0]%	[100.0, 85.71, 100.0, 100.0, 100.0, 100.0, 100.0, 85.71, 100.0, 100.0, 100.0, 85.71, 85.71, 100.0, 100.0]%	[98.82, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.82, 98.82, 100.0, 100.0, 100.0, 98.82]%	||	95.52%	95.56%	99.68%	96.19%	99.69%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 19.26%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.4)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.4)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 98.89, 97.78, 100.0, 98.89, 97.78, 98.89, 97.78, 97.78, 97.78, 97.78, 96.67, 98.89, 100.0, 98.89]%	[80.0, 92.31, 83.33, 100.0, 90.91, 83.33, 90.91, 85.71, 85.71, 83.33, 83.33, 76.92, 90.91, 100.0, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 85.71, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.81, 100.0, 98.82, 98.81, 98.82, 100.0, 100.0, 98.81, 98.81, 98.8, 98.82, 100.0, 98.82]%	||	87.84%	87.78%	99.13%	89.37%	99.13%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.4)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	94.44%	99.26%	94.05%	[98.89, 98.89, 100.0, 100.0, 100.0, 100.0, 100.0, 98.89, 100.0, 98.89, 97.78, 98.89, 97.78, 100.0, 98.89]%	[90.91, 92.31, 100.0, 100.0, 100.0, 100.0, 100.0, 92.31, 100.0, 90.91, 83.33, 92.31, 83.33, 100.0, 90.91]%	[83.33, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 83.33]%	[100.0, 98.81, 100.0, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 100.0, 98.81, 98.81, 98.81, 100.0, 100.0]%	[100.0, 85.71, 100.0, 100.0, 100.0, 100.0, 100.0, 85.71, 100.0, 100.0, 83.33, 85.71, 83.33, 100.0, 100.0]%	[98.82, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.82, 98.81, 100.0, 98.81, 100.0, 98.82]%	||	94.42%	94.44%	99.6%	94.92%	99.61%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 22.96%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.4)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.4)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 98.89, 97.78, 100.0, 98.89, 97.78, 98.89, 97.78, 97.78, 97.78, 97.78, 96.67, 98.89, 100.0, 98.89]%	[80.0, 92.31, 83.33, 100.0, 90.91, 83.33, 90.91, 85.71, 85.71, 83.33, 83.33, 76.92, 90.91, 100.0, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 85.71, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.81, 100.0, 98.82, 98.81, 98.82, 100.0, 100.0, 98.81, 98.81, 98.8, 98.82, 100.0, 98.82]%	||	87.84%	87.78%	99.13%	89.37%	99.13%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.4)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	95.56%	99.41%	95.24%	[98.89, 98.89, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.89, 98.89, 98.89, 97.78, 100.0, 98.89]%	[90.91, 92.31, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 90.91, 92.31, 92.31, 83.33, 100.0, 90.91]%	[83.33, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 100.0, 83.33, 100.0, 83.33]%	[100.0, 98.81, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.81, 98.81, 98.81, 100.0, 100.0]%	[100.0, 85.71, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 85.71, 85.71, 83.33, 100.0, 100.0]%	[98.82, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.82, 100.0, 100.0, 98.81, 100.0, 98.82]%	||	95.53%	95.56%	99.68%	96.03%	99.69%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 25.28%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.4)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.4)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 98.89, 97.78, 100.0, 98.89, 97.78, 98.89, 97.78, 97.78, 97.78, 97.78, 96.67, 98.89, 100.0, 98.89]%	[80.0, 92.31, 83.33, 100.0, 90.91, 83.33, 90.91, 85.71, 85.71, 83.33, 83.33, 76.92, 90.91, 100.0, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 85.71, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.81, 100.0, 98.82, 98.81, 98.82, 100.0, 100.0, 98.81, 98.81, 98.8, 98.82, 100.0, 98.82]%	||	87.84%	87.78%	99.13%	89.37%	99.13%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.4)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	96.67%	99.56%	96.43%	[98.89, 98.89, 100.0, 100.0, 100.0, 100.0, 100.0, 98.89, 100.0, 98.89, 98.89, 98.89, 100.0, 100.0, 100.0]%	[90.91, 92.31, 100.0, 100.0, 100.0, 100.0, 100.0, 92.31, 100.0, 90.91, 90.91, 92.31, 100.0, 100.0, 100.0]%	[83.33, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 83.33, 100.0, 100.0, 100.0, 100.0]%	[100.0, 98.81, 100.0, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 100.0, 100.0, 98.81, 100.0, 100.0, 100.0]%	[100.0, 85.71, 100.0, 100.0, 100.0, 100.0, 100.0, 85.71, 100.0, 100.0, 100.0, 85.71, 100.0, 100.0, 100.0]%	[98.82, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.82, 98.82, 100.0, 100.0, 100.0, 100.0]%	||	96.64%	96.67%	99.76%	97.14%	99.76%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 21.93%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.4)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.4)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 98.89, 97.78, 100.0, 98.89, 97.78, 98.89, 97.78, 97.78, 97.78, 97.78, 96.67, 98.89, 100.0, 98.89]%	[80.0, 92.31, 83.33, 100.0, 90.91, 83.33, 90.91, 85.71, 85.71, 83.33, 83.33, 76.92, 90.91, 100.0, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 85.71, 83.33, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 83.33, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.81, 100.0, 98.82, 98.81, 98.82, 100.0, 100.0, 98.81, 98.81, 98.8, 98.82, 100.0, 98.82]%	||	87.84%	87.78%	99.13%	89.37%	99.13%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.4)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	93.33%	99.11%	92.86%	[98.89, 98.89, 100.0, 100.0, 98.89, 100.0, 100.0, 97.78, 100.0, 98.89, 96.67, 98.89, 98.89, 100.0, 98.89]%	[90.91, 92.31, 100.0, 100.0, 92.31, 100.0, 100.0, 83.33, 100.0, 90.91, 76.92, 92.31, 90.91, 100.0, 90.91]%	[83.33, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 83.33]%	[100.0, 98.81, 100.0, 100.0, 98.81, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 100.0, 100.0]%	[100.0, 85.71, 100.0, 100.0, 85.71, 100.0, 100.0, 83.33, 100.0, 100.0, 71.43, 85.71, 100.0, 100.0, 100.0]%	[98.82, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 98.8, 100.0, 98.82, 100.0, 98.82]%	||	93.39%	93.33%	99.52%	94.13%	99.53%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  1  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 25.93%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	90.0%	98.67%	89.29%	[98.89, 98.89, 97.78, 100.0, 98.89, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 98.89, 100.0, 98.89]%	[90.91, 92.31, 83.33, 100.0, 90.91, 83.33, 100.0, 92.31, 85.71, 83.33, 83.33, 83.33, 90.91, 100.0, 90.91]%	[83.33, 100.0, 83.33, 100.0, 83.33, 83.33, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 98.81, 97.62, 98.81, 98.81, 98.81, 100.0, 100.0, 100.0]%	[100.0, 85.71, 83.33, 100.0, 100.0, 83.33, 100.0, 85.71, 75.0, 83.33, 83.33, 83.33, 100.0, 100.0, 100.0]%	[98.82, 100.0, 98.81, 100.0, 98.82, 98.81, 100.0, 100.0, 100.0, 98.81, 98.81, 98.81, 98.82, 100.0, 98.82]%	||	90.04%	90.0%	99.29%	90.87%	99.29%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	93.33%	99.11%	92.86%	[98.89, 98.89, 100.0, 100.0, 100.0, 100.0, 98.89, 98.89, 100.0, 97.78, 97.78, 98.89, 97.78, 100.0, 98.89]%	[90.91, 92.31, 100.0, 100.0, 100.0, 100.0, 90.91, 92.31, 100.0, 83.33, 83.33, 92.31, 83.33, 100.0, 90.91]%	[83.33, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 83.33]%	[100.0, 98.81, 100.0, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 98.81, 98.81, 98.81, 98.81, 100.0, 100.0]%	[100.0, 85.71, 100.0, 100.0, 100.0, 100.0, 100.0, 85.71, 100.0, 83.33, 83.33, 85.71, 83.33, 100.0, 100.0]%	[98.82, 100.0, 100.0, 100.0, 100.0, 100.0, 98.82, 100.0, 100.0, 98.81, 98.81, 100.0, 98.81, 100.0, 98.82]%	||	93.31%	93.33%	99.52%	93.81%	99.53%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 25.28%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	90.0%	98.67%	89.29%	[98.89, 98.89, 97.78, 100.0, 98.89, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 98.89, 100.0, 98.89]%	[90.91, 92.31, 83.33, 100.0, 90.91, 83.33, 100.0, 92.31, 85.71, 83.33, 83.33, 83.33, 90.91, 100.0, 90.91]%	[83.33, 100.0, 83.33, 100.0, 83.33, 83.33, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 98.81, 97.62, 98.81, 98.81, 98.81, 100.0, 100.0, 100.0]%	[100.0, 85.71, 83.33, 100.0, 100.0, 83.33, 100.0, 85.71, 75.0, 83.33, 83.33, 83.33, 100.0, 100.0, 100.0]%	[98.82, 100.0, 98.81, 100.0, 98.82, 98.81, 100.0, 100.0, 100.0, 98.81, 98.81, 98.81, 98.82, 100.0, 98.82]%	||	90.04%	90.0%	99.29%	90.87%	99.29%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	94.44%	99.26%	94.05%	[98.89, 98.89, 100.0, 100.0, 98.89, 100.0, 100.0, 98.89, 100.0, 98.89, 97.78, 98.89, 98.89, 100.0, 98.89]%	[90.91, 92.31, 100.0, 100.0, 92.31, 100.0, 100.0, 92.31, 100.0, 90.91, 83.33, 92.31, 90.91, 100.0, 90.91]%	[83.33, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 83.33]%	[100.0, 98.81, 100.0, 100.0, 98.81, 100.0, 100.0, 98.81, 100.0, 100.0, 98.81, 98.81, 100.0, 100.0, 100.0]%	[100.0, 85.71, 100.0, 100.0, 85.71, 100.0, 100.0, 85.71, 100.0, 100.0, 83.33, 85.71, 100.0, 100.0, 100.0]%	[98.82, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.82, 98.81, 100.0, 98.82, 100.0, 98.82]%	||	94.41%	94.44%	99.6%	95.08%	99.61%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  1  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 24.16%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	90.0%	98.67%	89.29%	[98.89, 98.89, 97.78, 100.0, 98.89, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 98.89, 100.0, 98.89]%	[90.91, 92.31, 83.33, 100.0, 90.91, 83.33, 100.0, 92.31, 85.71, 83.33, 83.33, 83.33, 90.91, 100.0, 90.91]%	[83.33, 100.0, 83.33, 100.0, 83.33, 83.33, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 98.81, 97.62, 98.81, 98.81, 98.81, 100.0, 100.0, 100.0]%	[100.0, 85.71, 83.33, 100.0, 100.0, 83.33, 100.0, 85.71, 75.0, 83.33, 83.33, 83.33, 100.0, 100.0, 100.0]%	[98.82, 100.0, 98.81, 100.0, 98.82, 98.81, 100.0, 100.0, 100.0, 98.81, 98.81, 98.81, 98.82, 100.0, 98.82]%	||	90.04%	90.0%	99.29%	90.87%	99.29%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	95.56%	99.41%	95.24%	[98.89, 98.89, 100.0, 98.89, 100.0, 100.0, 100.0, 100.0, 100.0, 98.89, 98.89, 98.89, 98.89, 100.0, 98.89]%	[90.91, 92.31, 100.0, 92.31, 100.0, 100.0, 100.0, 100.0, 100.0, 90.91, 92.31, 92.31, 90.91, 100.0, 90.91]%	[83.33, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 100.0, 83.33, 100.0, 83.33]%	[100.0, 98.81, 100.0, 98.81, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.81, 98.81, 100.0, 100.0, 100.0]%	[100.0, 85.71, 100.0, 85.71, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 85.71, 85.71, 100.0, 100.0, 100.0]%	[98.82, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.82, 100.0, 100.0, 98.82, 100.0, 98.82]%	||	95.52%	95.56%	99.68%	96.19%	99.69%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 22.3%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	90.0%	98.67%	89.29%	[98.89, 98.89, 97.78, 100.0, 98.89, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 98.89, 100.0, 98.89]%	[90.91, 92.31, 83.33, 100.0, 90.91, 83.33, 100.0, 92.31, 85.71, 83.33, 83.33, 83.33, 90.91, 100.0, 90.91]%	[83.33, 100.0, 83.33, 100.0, 83.33, 83.33, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 98.81, 97.62, 98.81, 98.81, 98.81, 100.0, 100.0, 100.0]%	[100.0, 85.71, 83.33, 100.0, 100.0, 83.33, 100.0, 85.71, 75.0, 83.33, 83.33, 83.33, 100.0, 100.0, 100.0]%	[98.82, 100.0, 98.81, 100.0, 98.82, 98.81, 100.0, 100.0, 100.0, 98.81, 98.81, 98.81, 98.82, 100.0, 98.82]%	||	90.04%	90.0%	99.29%	90.87%	99.29%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	95.56%	99.41%	95.24%	[98.89, 98.89, 100.0, 100.0, 98.89, 100.0, 100.0, 98.89, 100.0, 98.89, 98.89, 98.89, 100.0, 100.0, 98.89]%	[90.91, 92.31, 100.0, 100.0, 92.31, 100.0, 100.0, 92.31, 100.0, 90.91, 90.91, 92.31, 100.0, 100.0, 90.91]%	[83.33, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 83.33, 100.0, 100.0, 100.0, 83.33]%	[100.0, 98.81, 100.0, 100.0, 98.81, 100.0, 100.0, 98.81, 100.0, 100.0, 100.0, 98.81, 100.0, 100.0, 100.0]%	[100.0, 85.71, 100.0, 100.0, 85.71, 100.0, 100.0, 85.71, 100.0, 100.0, 100.0, 85.71, 100.0, 100.0, 100.0]%	[98.82, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.82, 98.82, 100.0, 100.0, 100.0, 98.82]%	||	95.52%	95.56%	99.68%	96.19%	99.69%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  1  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 24.07%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	90.0%	98.67%	89.29%	[98.89, 98.89, 97.78, 100.0, 98.89, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 98.89, 100.0, 98.89]%	[90.91, 92.31, 83.33, 100.0, 90.91, 83.33, 100.0, 92.31, 85.71, 83.33, 83.33, 83.33, 90.91, 100.0, 90.91]%	[83.33, 100.0, 83.33, 100.0, 83.33, 83.33, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 98.81, 97.62, 98.81, 98.81, 98.81, 100.0, 100.0, 100.0]%	[100.0, 85.71, 83.33, 100.0, 100.0, 83.33, 100.0, 85.71, 75.0, 83.33, 83.33, 83.33, 100.0, 100.0, 100.0]%	[98.82, 100.0, 98.81, 100.0, 98.82, 98.81, 100.0, 100.0, 100.0, 98.81, 98.81, 98.81, 98.82, 100.0, 98.82]%	||	90.04%	90.0%	99.29%	90.87%	99.29%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	95.56%	99.41%	95.24%	[98.89, 98.89, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.89, 98.89, 98.89, 97.78, 100.0, 98.89]%	[90.91, 92.31, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 90.91, 92.31, 92.31, 83.33, 100.0, 90.91]%	[83.33, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 100.0, 83.33, 100.0, 83.33]%	[100.0, 98.81, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.81, 98.81, 98.81, 100.0, 100.0]%	[100.0, 85.71, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 85.71, 85.71, 83.33, 100.0, 100.0]%	[98.82, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.82, 100.0, 100.0, 98.81, 100.0, 98.82]%	||	95.53%	95.56%	99.68%	96.03%	99.69%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 24.81%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	90.0%	98.67%	89.29%	[98.89, 98.89, 97.78, 100.0, 98.89, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 97.78, 98.89, 100.0, 98.89]%	[90.91, 92.31, 83.33, 100.0, 90.91, 83.33, 100.0, 92.31, 85.71, 83.33, 83.33, 83.33, 90.91, 100.0, 90.91]%	[83.33, 100.0, 83.33, 100.0, 83.33, 83.33, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 98.81, 97.62, 98.81, 98.81, 98.81, 100.0, 100.0, 100.0]%	[100.0, 85.71, 83.33, 100.0, 100.0, 83.33, 100.0, 85.71, 75.0, 83.33, 83.33, 83.33, 100.0, 100.0, 100.0]%	[98.82, 100.0, 98.81, 100.0, 98.82, 98.81, 100.0, 100.0, 100.0, 98.81, 98.81, 98.81, 98.82, 100.0, 98.82]%	||	90.04%	90.0%	99.29%	90.87%	99.29%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	93.33%	99.11%	92.86%	[98.89, 97.78, 100.0, 100.0, 100.0, 100.0, 98.89, 98.89, 100.0, 97.78, 97.78, 98.89, 98.89, 100.0, 98.89]%	[90.91, 85.71, 100.0, 100.0, 100.0, 100.0, 90.91, 92.31, 100.0, 83.33, 83.33, 92.31, 90.91, 100.0, 90.91]%	[83.33, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 98.81, 98.81, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 100.0, 100.0, 85.71, 100.0, 83.33, 83.33, 85.71, 100.0, 100.0, 100.0]%	[98.82, 100.0, 100.0, 100.0, 100.0, 100.0, 98.82, 100.0, 100.0, 98.81, 98.81, 100.0, 98.82, 100.0, 98.82]%	||	93.38%	93.33%	99.52%	94.21%	99.53%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  1  0  0  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 24.07%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	94.44%	99.26%	94.05%	[98.89, 97.78, 100.0, 100.0, 100.0, 100.0, 98.89, 100.0, 100.0, 97.78, 98.89, 98.89, 98.89, 100.0, 98.89]%	[90.91, 85.71, 100.0, 100.0, 100.0, 100.0, 90.91, 100.0, 100.0, 83.33, 92.31, 92.31, 90.91, 100.0, 90.91]%	[83.33, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 100.0, 83.33, 100.0, 100.0, 83.33, 100.0, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.81, 98.81, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 85.71, 85.71, 100.0, 100.0, 100.0]%	[98.82, 100.0, 100.0, 100.0, 100.0, 100.0, 98.82, 100.0, 100.0, 98.81, 100.0, 100.0, 98.82, 100.0, 98.82]%	||	94.49%	94.44%	99.6%	95.32%	99.61%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  1  0  0  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 20.37%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	93.33%	99.11%	92.86%	[98.89, 98.89, 100.0, 100.0, 100.0, 100.0, 98.89, 98.89, 100.0, 97.78, 96.67, 98.89, 98.89, 100.0, 98.89]%	[90.91, 92.31, 100.0, 100.0, 100.0, 100.0, 90.91, 92.31, 100.0, 83.33, 76.92, 92.31, 90.91, 100.0, 90.91]%	[83.33, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 83.33]%	[100.0, 98.81, 100.0, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 98.81, 97.62, 98.81, 100.0, 100.0, 100.0]%	[100.0, 85.71, 100.0, 100.0, 100.0, 100.0, 100.0, 85.71, 100.0, 83.33, 71.43, 85.71, 100.0, 100.0, 100.0]%	[98.82, 100.0, 100.0, 100.0, 100.0, 100.0, 98.82, 100.0, 100.0, 98.81, 98.8, 100.0, 98.82, 100.0, 98.82]%	||	93.39%	93.33%	99.52%	94.13%	99.53%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  1  0  0  0  5  83.33%		15
Forest OOB Error: 25.56%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	95.56%	99.41%	95.24%	[98.89, 98.89, 100.0, 100.0, 100.0, 100.0, 100.0, 98.89, 100.0, 98.89, 98.89, 98.89, 98.89, 100.0, 98.89]%	[90.91, 92.31, 100.0, 100.0, 100.0, 100.0, 100.0, 90.91, 100.0, 90.91, 92.31, 92.31, 92.31, 100.0, 90.91]%	[83.33, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 100.0, 100.0, 100.0, 100.0, 83.33]%	[100.0, 98.81, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.81, 98.81, 98.81, 100.0, 100.0]%	[100.0, 85.71, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 85.71, 85.71, 85.71, 100.0, 100.0]%	[98.82, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.82, 100.0, 98.82, 100.0, 100.0, 100.0, 100.0, 98.82]%	||	95.52%	95.56%	99.68%	96.19%	99.69%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 20.74%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	95.56%	99.41%	95.24%	[98.89, 98.89, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.89, 98.89, 98.89, 98.89, 98.89, 100.0, 98.89]%	[90.91, 92.31, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 92.31, 90.91, 92.31, 92.31, 90.91, 100.0, 90.91]%	[83.33, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 100.0, 83.33, 100.0, 83.33]%	[100.0, 98.81, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 98.81, 98.81, 100.0, 100.0, 100.0]%	[100.0, 85.71, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 85.71, 100.0, 85.71, 85.71, 100.0, 100.0, 100.0]%	[98.82, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.82, 100.0, 100.0, 98.82, 100.0, 98.82]%	||	95.52%	95.56%	99.68%	96.19%	99.69%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 20.37%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	92.22%	98.96%	91.67%	[98.89, 98.89, 100.0, 100.0, 100.0, 100.0, 98.89, 96.67, 98.89, 98.89, 97.78, 98.89, 97.78, 100.0, 98.89]%	[90.91, 92.31, 100.0, 100.0, 100.0, 100.0, 90.91, 76.92, 92.31, 90.91, 83.33, 92.31, 83.33, 100.0, 90.91]%	[83.33, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 83.33]%	[100.0, 98.81, 100.0, 100.0, 100.0, 100.0, 100.0, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 100.0, 100.0]%	[100.0, 85.71, 100.0, 100.0, 100.0, 100.0, 100.0, 71.43, 85.71, 100.0, 83.33, 85.71, 83.33, 100.0, 100.0]%	[98.82, 100.0, 100.0, 100.0, 100.0, 100.0, 98.82, 98.8, 100.0, 98.82, 98.81, 100.0, 98.81, 100.0, 98.82]%	||	92.28%	92.22%	99.44%	93.02%	99.45%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  1  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 25.93%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	95.56%	99.41%	95.24%	[98.89, 98.89, 100.0, 100.0, 100.0, 100.0, 100.0, 98.89, 100.0, 98.89, 97.78, 98.89, 98.89, 100.0, 100.0]%	[90.91, 92.31, 100.0, 100.0, 100.0, 100.0, 100.0, 92.31, 100.0, 90.91, 83.33, 92.31, 90.91, 100.0, 100.0]%	[83.33, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 98.81, 100.0, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 100.0, 98.81, 98.81, 100.0, 100.0, 100.0]%	[100.0, 85.71, 100.0, 100.0, 100.0, 100.0, 100.0, 85.71, 100.0, 100.0, 83.33, 85.71, 100.0, 100.0, 100.0]%	[98.82, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.82, 98.81, 100.0, 98.82, 100.0, 100.0]%	||	95.53%	95.56%	99.68%	96.03%	99.69%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 20.82%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	93.33%	99.11%	92.86%	[98.89, 98.89, 100.0, 100.0, 100.0, 100.0, 100.0, 97.78, 100.0, 98.89, 96.67, 98.89, 97.78, 100.0, 98.89]%	[90.91, 92.31, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 90.91, 76.92, 92.31, 83.33, 100.0, 90.91]%	[83.33, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 83.33]%	[100.0, 98.81, 100.0, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 98.81, 100.0, 100.0]%	[100.0, 85.71, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 100.0, 71.43, 85.71, 83.33, 100.0, 100.0]%	[98.82, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 98.8, 100.0, 98.81, 100.0, 98.82]%	||	93.4%	93.33%	99.52%	93.97%	99.53%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 22.59%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	95.56%	99.41%	95.24%	[98.89, 98.89, 100.0, 100.0, 100.0, 100.0, 100.0, 98.89, 100.0, 98.89, 97.78, 98.89, 98.89, 100.0, 100.0]%	[90.91, 92.31, 100.0, 100.0, 100.0, 100.0, 100.0, 92.31, 100.0, 90.91, 83.33, 92.31, 90.91, 100.0, 100.0]%	[83.33, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 98.81, 100.0, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 100.0, 98.81, 98.81, 100.0, 100.0, 100.0]%	[100.0, 85.71, 100.0, 100.0, 100.0, 100.0, 100.0, 85.71, 100.0, 100.0, 83.33, 85.71, 100.0, 100.0, 100.0]%	[98.82, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.82, 98.81, 100.0, 98.82, 100.0, 100.0]%	||	95.53%	95.56%	99.68%	96.03%	99.69%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 22.96%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	94.44%	99.26%	94.05%	[98.89, 97.78, 100.0, 100.0, 100.0, 100.0, 98.89, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 100.0, 98.89]%	[90.91, 85.71, 100.0, 100.0, 100.0, 100.0, 90.91, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 100.0, 90.91]%	[83.33, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 100.0, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 100.0, 100.0, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 100.0, 100.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 100.0, 100.0]%	[98.82, 100.0, 100.0, 100.0, 100.0, 100.0, 98.82, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 100.0, 98.82]%	||	94.56%	94.44%	99.6%	95.56%	99.61%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  1  0  0  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 21.48%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	94.44%	99.26%	94.05%	[98.89, 98.89, 100.0, 98.89, 100.0, 100.0, 98.89, 98.89, 100.0, 98.89, 98.89, 98.89, 98.89, 100.0, 98.89]%	[90.91, 92.31, 100.0, 92.31, 100.0, 100.0, 90.91, 92.31, 100.0, 90.91, 92.31, 92.31, 90.91, 100.0, 90.91]%	[83.33, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 100.0, 83.33, 100.0, 100.0, 83.33, 100.0, 83.33]%	[100.0, 98.81, 100.0, 98.81, 100.0, 100.0, 100.0, 98.81, 100.0, 100.0, 98.81, 98.81, 100.0, 100.0, 100.0]%	[100.0, 85.71, 100.0, 85.71, 100.0, 100.0, 100.0, 85.71, 100.0, 100.0, 85.71, 85.71, 100.0, 100.0, 100.0]%	[98.82, 100.0, 100.0, 100.0, 100.0, 100.0, 98.82, 100.0, 100.0, 98.82, 100.0, 100.0, 98.82, 100.0, 98.82]%	||	94.41%	94.44%	99.6%	95.24%	99.61%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 21.85%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	94.44%	99.26%	94.05%	[98.89, 97.78, 100.0, 100.0, 100.0, 100.0, 100.0, 98.89, 100.0, 98.89, 97.78, 98.89, 98.89, 100.0, 98.89]%	[90.91, 85.71, 100.0, 100.0, 100.0, 100.0, 100.0, 92.31, 100.0, 90.91, 83.33, 92.31, 90.91, 100.0, 90.91]%	[83.33, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 100.0, 98.81, 98.81, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 100.0, 100.0, 85.71, 100.0, 100.0, 83.33, 85.71, 100.0, 100.0, 100.0]%	[98.82, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.82, 98.81, 100.0, 98.82, 100.0, 98.82]%	||	94.49%	94.44%	99.6%	95.32%	99.61%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  1  0  0  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 19.63%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 100)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 100)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	94.44%	99.26%	94.05%	[98.89, 98.89, 100.0, 100.0, 98.89, 100.0, 100.0, 98.89, 100.0, 98.89, 97.78, 98.89, 98.89, 100.0, 98.89]%	[90.91, 92.31, 100.0, 100.0, 92.31, 100.0, 100.0, 92.31, 100.0, 90.91, 83.33, 92.31, 90.91, 100.0, 90.91]%	[83.33, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 83.33]%	[100.0, 98.81, 100.0, 100.0, 98.81, 100.0, 100.0, 98.81, 100.0, 100.0, 98.81, 98.81, 100.0, 100.0, 100.0]%	[100.0, 85.71, 100.0, 100.0, 85.71, 100.0, 100.0, 85.71, 100.0, 100.0, 83.33, 85.71, 100.0, 100.0, 100.0]%	[98.82, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.82, 98.81, 100.0, 98.82, 100.0, 98.82]%	||	94.41%	94.44%	99.6%	95.08%	99.61%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  1  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 21.11%
