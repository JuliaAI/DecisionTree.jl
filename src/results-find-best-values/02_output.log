Run dom  4 apr 2021, 14.35.40, CEST
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 100.0, 100.0, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 92.31, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 85.71, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 100.0, 100.0]%	||	87.92%	87.78%	99.13%	89.48%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[98.89, 97.78, 98.89, 100.0, 97.78, 97.78, 96.67, 100.0, 97.78, 95.56, 96.67, 98.89, 97.78, 97.78, 98.89]%	[90.91, 85.71, 90.91, 100.0, 80.0, 80.0, 80.0, 100.0, 85.71, 60.0, 76.92, 90.91, 83.33, 85.71, 90.91]%	[83.33, 100.0, 83.33, 100.0, 66.67, 66.67, 100.0, 100.0, 100.0, 50.0, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 100.0, 96.43, 100.0, 97.62, 98.81, 97.62, 100.0, 98.81, 97.62, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 100.0, 66.67, 100.0, 75.0, 75.0, 71.43, 100.0, 83.33, 75.0, 100.0]%	[98.82, 100.0, 98.82, 100.0, 97.67, 97.67, 100.0, 100.0, 100.0, 96.51, 98.8, 98.82, 98.81, 100.0, 98.82]%	||	85.4%	85.56%	98.97%	88.1%	98.98%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  1  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  1  0  0  4  0  0  0  0  1  0  0  0  0  0  66.67%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  2  0  1  3  0  0  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  1  5  83.33%		15
Forest OOB Error: 43.18%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 100.0, 100.0, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 92.31, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 85.71, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 100.0, 100.0]%	||	87.92%	87.78%	99.13%	89.48%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[97.78, 97.78, 100.0, 96.67, 100.0, 97.78, 95.56, 97.78, 97.78, 96.67, 95.56, 97.78, 96.67, 97.78, 98.89]%	[83.33, 83.33, 100.0, 80.0, 100.0, 83.33, 66.67, 83.33, 83.33, 72.73, 71.43, 80.0, 72.73, 83.33, 90.91]%	[83.33, 83.33, 100.0, 100.0, 100.0, 83.33, 66.67, 83.33, 83.33, 66.67, 83.33, 66.67, 66.67, 83.33, 83.33]%	[98.81, 98.81, 100.0, 96.43, 100.0, 98.81, 97.62, 98.81, 98.81, 98.81, 96.43, 100.0, 98.81, 98.81, 100.0]%	[83.33, 83.33, 100.0, 66.67, 100.0, 83.33, 66.67, 83.33, 83.33, 80.0, 62.5, 100.0, 80.0, 83.33, 100.0]%	[98.81, 98.81, 100.0, 100.0, 100.0, 98.81, 97.62, 98.81, 98.81, 97.65, 98.78, 97.67, 97.65, 98.81, 98.82]%	||	82.3%	82.22%	98.73%	83.72%	98.74%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  1  5  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  1  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  1  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  1  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 49.0%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 100.0, 100.0, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 92.31, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 85.71, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 100.0, 100.0]%	||	87.92%	87.78%	99.13%	89.48%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	88.89%	98.52%	88.1%	[100.0, 100.0, 97.78, 100.0, 97.78, 98.89, 97.78, 98.89, 97.78, 98.89, 95.56, 97.78, 97.78, 100.0, 98.89]%	[100.0, 100.0, 83.33, 100.0, 83.33, 90.91, 83.33, 90.91, 85.71, 90.91, 71.43, 83.33, 83.33, 100.0, 90.91]%	[100.0, 100.0, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 100.0, 98.81, 100.0, 98.81, 100.0, 98.81, 100.0, 97.62, 100.0, 96.43, 98.81, 98.81, 100.0, 100.0]%	[100.0, 100.0, 83.33, 100.0, 83.33, 100.0, 83.33, 100.0, 75.0, 100.0, 62.5, 83.33, 83.33, 100.0, 100.0]%	[100.0, 100.0, 98.81, 100.0, 98.81, 98.82, 98.81, 98.82, 100.0, 98.82, 98.78, 98.81, 98.81, 100.0, 98.82]%	||	89.16%	88.89%	99.21%	90.28%	99.21%	
  6  0  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  1  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  0  1  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  1  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  1  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 51.76%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 100.0, 100.0, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 92.31, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 85.71, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 100.0, 100.0]%	||	87.92%	87.78%	99.13%	89.48%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[97.78, 97.78, 98.89, 100.0, 98.89, 100.0, 95.56, 96.67, 100.0, 98.89, 95.56, 97.78, 95.56, 98.89, 98.89]%	[83.33, 83.33, 90.91, 100.0, 90.91, 100.0, 66.67, 72.73, 100.0, 92.31, 66.67, 83.33, 71.43, 92.31, 90.91]%	[83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 66.67, 66.67, 100.0, 100.0, 66.67, 83.33, 83.33, 100.0, 83.33]%	[98.81, 98.81, 100.0, 100.0, 100.0, 100.0, 97.62, 98.81, 100.0, 98.81, 97.62, 98.81, 96.43, 98.81, 100.0]%	[83.33, 83.33, 100.0, 100.0, 100.0, 100.0, 66.67, 80.0, 100.0, 85.71, 66.67, 83.33, 62.5, 85.71, 100.0]%	[98.81, 98.81, 98.82, 100.0, 98.82, 100.0, 97.62, 97.65, 100.0, 100.0, 97.62, 98.81, 98.78, 100.0, 98.82]%	||	85.66%	85.56%	98.97%	86.48%	98.97%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  1  5  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  4  1  0  0  0  1  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  0  0  1  0  1  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  1  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 48.59%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 100.0, 100.0, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 92.31, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 85.71, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 100.0, 100.0]%	||	87.92%	87.78%	99.13%	89.48%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[96.67, 96.67, 98.89, 100.0, 100.0, 96.67, 96.67, 96.67, 98.89, 96.67, 96.67, 96.67, 96.67, 97.78, 98.89]%	[72.73, 80.0, 90.91, 100.0, 100.0, 76.92, 72.73, 76.92, 92.31, 72.73, 76.92, 72.73, 72.73, 83.33, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 83.33, 100.0, 66.67, 83.33, 66.67, 66.67, 83.33, 83.33]%	[98.81, 96.43, 100.0, 100.0, 100.0, 97.62, 98.81, 97.62, 98.81, 98.81, 97.62, 98.81, 98.81, 98.81, 100.0]%	[80.0, 66.67, 100.0, 100.0, 100.0, 71.43, 80.0, 71.43, 85.71, 80.0, 71.43, 80.0, 80.0, 83.33, 100.0]%	[97.65, 100.0, 98.82, 100.0, 100.0, 98.8, 97.65, 98.8, 100.0, 97.65, 98.8, 97.65, 97.65, 98.81, 98.82]%	||	82.12%	82.22%	98.73%	83.33%	98.74%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  0  0  0  1  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  1  4  0  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  1  0  0  0  0  0  0  0  4  0  1  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 52.9%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 100.0, 100.0, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 92.31, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 85.71, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 100.0, 100.0]%	||	87.92%	87.78%	99.13%	89.48%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[97.78, 95.56, 98.89, 98.89, 95.56, 96.67, 96.67, 96.67, 95.56, 96.67, 96.67, 97.78, 96.67, 97.78, 97.78]%	[80.0, 71.43, 90.91, 90.91, 66.67, 72.73, 76.92, 72.73, 75.0, 72.73, 76.92, 83.33, 76.92, 83.33, 80.0]%	[66.67, 83.33, 83.33, 83.33, 66.67, 66.67, 83.33, 66.67, 100.0, 66.67, 83.33, 83.33, 83.33, 83.33, 66.67]%	[100.0, 96.43, 100.0, 100.0, 97.62, 98.81, 97.62, 98.81, 95.24, 98.81, 97.62, 98.81, 97.62, 98.81, 100.0]%	[100.0, 62.5, 100.0, 100.0, 66.67, 80.0, 71.43, 80.0, 60.0, 80.0, 71.43, 83.33, 71.43, 83.33, 100.0]%	[97.67, 98.78, 98.82, 98.82, 97.62, 97.65, 98.8, 97.65, 100.0, 97.65, 98.8, 98.81, 98.8, 98.81, 97.67]%	||	78.04%	77.78%	98.41%	80.67%	98.42%	
  4  1  0  0  0  0  0  0  1  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  1  0  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  1  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  5  0  0  0  0  1  0  0  0  83.33%		7
  0  1  0  0  0  0  0  4  0  0  1  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  1  0  1  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  1  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  0  0  1  0  4  66.67%		15
Forest OOB Error: 60.54%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[98.89, 97.78, 98.89, 97.78, 98.89, 95.56, 91.11, 96.67, 94.44, 97.78, 97.78, 98.89, 97.78, 96.67, 98.89]%	[90.91, 80.0, 92.31, 83.33, 90.91, 66.67, 50.0, 72.73, 61.54, 83.33, 83.33, 92.31, 83.33, 72.73, 90.91]%	[83.33, 66.67, 100.0, 83.33, 83.33, 66.67, 66.67, 66.67, 66.67, 83.33, 83.33, 100.0, 83.33, 66.67, 83.33]%	[100.0, 100.0, 98.81, 98.81, 100.0, 97.62, 92.86, 98.81, 96.43, 98.81, 98.81, 98.81, 98.81, 98.81, 100.0]%	[100.0, 100.0, 85.71, 83.33, 100.0, 66.67, 40.0, 80.0, 57.14, 83.33, 83.33, 85.71, 83.33, 80.0, 100.0]%	[98.82, 97.67, 100.0, 98.81, 98.82, 97.62, 97.5, 97.65, 97.59, 98.81, 98.81, 100.0, 98.81, 97.65, 98.82]%	||	79.62%	78.89%	98.49%	81.9%	98.49%	
  5  0  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		1
  0  4  0  0  0  0  1  0  1  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  1  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  1  4  0  0  0  0  1  0  0  0  66.67%		7
  0  0  1  0  0  0  0  4  1  0  0  0  0  0  0  66.67%		8
  0  0  0  0  0  0  2  0  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  0  1  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 54.89%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	86.67%	98.22%	85.71%	[98.89, 98.89, 100.0, 98.89, 100.0, 96.67, 96.67, 97.78, 98.89, 100.0, 94.44, 98.89, 96.67, 97.78, 98.89]%	[90.91, 92.31, 100.0, 90.91, 100.0, 76.92, 72.73, 80.0, 92.31, 100.0, 61.54, 90.91, 76.92, 85.71, 90.91]%	[83.33, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 66.67, 100.0, 100.0, 66.67, 83.33, 83.33, 100.0, 83.33]%	[100.0, 98.81, 100.0, 100.0, 100.0, 97.62, 98.81, 100.0, 98.81, 100.0, 96.43, 100.0, 97.62, 97.62, 100.0]%	[100.0, 85.71, 100.0, 100.0, 100.0, 71.43, 80.0, 100.0, 85.71, 100.0, 57.14, 100.0, 71.43, 75.0, 100.0]%	[98.82, 100.0, 100.0, 98.82, 100.0, 98.8, 97.65, 97.67, 100.0, 100.0, 97.59, 98.82, 98.8, 100.0, 98.82]%	||	86.81%	86.67%	99.05%	88.43%	99.05%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  0  0  0  0  0  1  0  83.33%		6
  0  0  0  0  0  1  4  0  1  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  1  5  83.33%		15
Forest OOB Error: 54.98%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 98.89, 100.0, 98.89, 95.56, 97.78, 97.78, 96.67, 98.89, 98.89, 96.67, 98.89, 100.0]%	[83.33, 80.0, 90.91, 92.31, 100.0, 92.31, 60.0, 83.33, 83.33, 80.0, 90.91, 90.91, 80.0, 90.91, 100.0]%	[83.33, 66.67, 83.33, 100.0, 100.0, 100.0, 50.0, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0]%	[98.81, 100.0, 100.0, 98.81, 100.0, 98.81, 98.81, 98.81, 98.81, 96.43, 100.0, 100.0, 96.43, 100.0, 100.0]%	[83.33, 100.0, 100.0, 85.71, 100.0, 85.71, 75.0, 83.33, 83.33, 66.67, 100.0, 100.0, 66.67, 100.0, 100.0]%	[98.81, 97.67, 98.82, 100.0, 100.0, 100.0, 96.51, 98.81, 98.81, 100.0, 98.82, 98.82, 100.0, 98.82, 100.0]%	||	86.55%	86.67%	99.05%	88.65%	99.06%	
  5  0  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		1
  0  4  0  0  0  0  1  0  0  1  0  0  0  0  0  66.67%		2
  0  0  5  0  0  0  0  0  0  0  0  0  1  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  3  1  0  1  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  1  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 46.91%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[96.67, 96.67, 98.89, 97.78, 95.56, 96.67, 94.44, 97.78, 94.44, 92.22, 95.56, 95.56, 96.67, 98.89, 96.67]%	[72.73, 72.73, 90.91, 83.33, 71.43, 72.73, 61.54, 83.33, 66.67, 36.36, 71.43, 66.67, 76.92, 90.91, 66.67]%	[66.67, 66.67, 83.33, 83.33, 83.33, 66.67, 66.67, 83.33, 83.33, 33.33, 83.33, 66.67, 83.33, 83.33, 50.0]%	[98.81, 98.81, 100.0, 98.81, 96.43, 98.81, 96.43, 98.81, 95.24, 96.43, 96.43, 97.62, 97.62, 100.0, 100.0]%	[80.0, 80.0, 100.0, 83.33, 62.5, 80.0, 57.14, 83.33, 55.56, 40.0, 62.5, 66.67, 71.43, 100.0, 100.0]%	[97.65, 97.65, 98.82, 98.81, 98.78, 97.65, 97.59, 98.81, 98.77, 95.29, 98.78, 97.62, 98.8, 98.82, 96.55]%	||	72.29%	72.22%	98.02%	74.83%	98.03%	
  4  1  0  0  0  0  0  0  1  0  0  0  0  0  0  66.67%		1
  0  4  0  0  0  0  1  0  1  0  0  0  0  0  0  66.67%		2
  0  0  5  0  1  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  1  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  1  0  0  0  83.33%		5
  0  0  0  0  1  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  1  4  0  0  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  1  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  1  2  0  1  0  0  0  33.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  1  0  1  0  3  50.0%		15
Forest OOB Error: 51.49%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[97.78, 95.56, 97.78, 98.89, 100.0, 98.89, 96.67, 95.56, 95.56, 96.67, 95.56, 97.78, 97.78, 98.89, 96.67]%	[80.0, 71.43, 80.0, 92.31, 100.0, 92.31, 76.92, 60.0, 71.43, 76.92, 66.67, 80.0, 83.33, 90.91, 76.92]%	[66.67, 83.33, 66.67, 100.0, 100.0, 100.0, 83.33, 50.0, 83.33, 83.33, 66.67, 66.67, 83.33, 83.33, 83.33]%	[100.0, 96.43, 100.0, 98.81, 100.0, 98.81, 97.62, 98.81, 96.43, 97.62, 97.62, 100.0, 98.81, 100.0, 97.62]%	[100.0, 62.5, 100.0, 85.71, 100.0, 85.71, 71.43, 75.0, 62.5, 71.43, 66.67, 100.0, 83.33, 100.0, 71.43]%	[97.67, 98.78, 97.67, 100.0, 100.0, 100.0, 98.8, 96.51, 98.78, 98.8, 97.62, 97.67, 98.81, 98.82, 98.8]%	||	79.94%	80.0%	98.57%	82.38%	98.58%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  4  0  0  0  1  0  1  0  0  0  0  0  0  66.67%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  3  1  0  1  0  0  0  1  50.0%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  1  0  0  0  0  0  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 51.35%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[96.67, 96.67, 97.78, 100.0, 97.78, 100.0, 91.11, 95.56, 98.89, 98.89, 98.89, 97.78, 96.67, 98.89, 98.89]%	[76.92, 72.73, 80.0, 100.0, 83.33, 100.0, 42.86, 71.43, 92.31, 90.91, 90.91, 80.0, 76.92, 92.31, 90.91]%	[83.33, 66.67, 66.67, 100.0, 83.33, 100.0, 50.0, 83.33, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[97.62, 98.81, 100.0, 100.0, 98.81, 100.0, 94.05, 96.43, 98.81, 100.0, 100.0, 100.0, 97.62, 98.81, 100.0]%	[71.43, 80.0, 100.0, 100.0, 83.33, 100.0, 37.5, 62.5, 85.71, 100.0, 100.0, 100.0, 71.43, 85.71, 100.0]%	[98.8, 97.65, 97.67, 100.0, 98.81, 100.0, 96.34, 98.78, 100.0, 98.82, 98.82, 97.67, 98.8, 100.0, 98.82]%	||	82.77%	82.22%	98.73%	85.17%	98.73%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  1  4  0  0  0  0  1  0  0  0  0  0  0  0  0  66.67%		2
  0  0  4  0  1  0  0  0  0  0  0  0  1  0  0  66.67%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  3  1  0  0  0  0  0  1  0  50.0%		7
  0  0  0  0  0  0  0  5  1  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  2  0  0  0  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 55.02%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.15)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	86.67%	98.22%	85.71%	[97.78, 97.78, 100.0, 100.0, 100.0, 96.67, 96.67, 96.67, 96.67, 98.89, 97.78, 98.89, 98.89, 98.89, 97.78]%	[80.0, 83.33, 100.0, 100.0, 100.0, 76.92, 76.92, 76.92, 80.0, 90.91, 80.0, 92.31, 92.31, 90.91, 80.0]%	[66.67, 83.33, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 66.67]%	[100.0, 98.81, 100.0, 100.0, 100.0, 97.62, 97.62, 97.62, 96.43, 100.0, 100.0, 98.81, 98.81, 100.0, 100.0]%	[100.0, 83.33, 100.0, 100.0, 100.0, 71.43, 71.43, 71.43, 66.67, 100.0, 100.0, 85.71, 85.71, 100.0, 100.0]%	[97.67, 98.81, 100.0, 100.0, 100.0, 98.8, 98.8, 98.8, 100.0, 98.82, 97.67, 100.0, 100.0, 98.82, 97.67]%	||	86.7%	86.67%	99.05%	89.05%	99.06%	
  4  1  0  0  0  0  0  0  1  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  1  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  1  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 54.89%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.15)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[95.56, 95.56, 98.89, 96.67, 97.78, 92.22, 97.78, 97.78, 98.89, 96.67, 96.67, 97.78, 96.67, 96.67, 97.78]%	[66.67, 66.67, 90.91, 72.73, 83.33, 58.82, 83.33, 85.71, 92.31, 72.73, 72.73, 83.33, 72.73, 66.67, 83.33]%	[66.67, 66.67, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 100.0, 66.67, 66.67, 83.33, 66.67, 50.0, 83.33]%	[97.62, 97.62, 100.0, 98.81, 98.81, 92.86, 98.81, 97.62, 98.81, 98.81, 98.81, 98.81, 98.81, 100.0, 98.81]%	[66.67, 66.67, 100.0, 80.0, 83.33, 45.45, 83.33, 75.0, 85.71, 80.0, 80.0, 83.33, 80.0, 100.0, 83.33]%	[97.62, 97.62, 98.82, 97.65, 98.81, 98.73, 98.81, 100.0, 100.0, 97.65, 97.65, 98.81, 97.65, 96.55, 98.81]%	||	76.8%	76.67%	98.33%	79.52%	98.34%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  2  4  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		2
  0  0  5  1  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  2  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  1  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  0  0  1  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  1  0  1  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  3  0  0  0  0  0  0  0  3  0  50.0%		14
  0  0  0  0  0  0  0  0  0  1  0  0  0  0  5  83.33%		15
Forest OOB Error: 48.26%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.15)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[97.78, 96.67, 98.89, 98.89, 98.89, 98.89, 95.56, 94.44, 97.78, 95.56, 97.78, 95.56, 96.67, 100.0, 98.89]%	[83.33, 72.73, 90.91, 90.91, 90.91, 90.91, 60.0, 66.67, 83.33, 71.43, 83.33, 71.43, 76.92, 100.0, 90.91]%	[83.33, 66.67, 83.33, 83.33, 83.33, 83.33, 50.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[98.81, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 95.24, 98.81, 96.43, 98.81, 96.43, 97.62, 100.0, 100.0]%	[83.33, 80.0, 100.0, 100.0, 100.0, 100.0, 75.0, 55.56, 83.33, 62.5, 83.33, 62.5, 71.43, 100.0, 100.0]%	[98.81, 97.65, 98.82, 98.82, 98.82, 98.82, 96.51, 98.77, 98.81, 98.78, 98.81, 98.78, 98.8, 100.0, 98.82]%	||	81.58%	81.11%	98.65%	83.8%	98.66%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  1  4  0  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		2
  0  0  5  0  0  0  0  1  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  1  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  3  1  0  1  0  1  0  0  0  50.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  0  0  0  1  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 52.34%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.15)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[97.78, 94.44, 97.78, 100.0, 96.67, 97.78, 92.22, 96.67, 97.78, 92.22, 97.78, 97.78, 96.67, 98.89, 98.89]%	[83.33, 61.54, 83.33, 100.0, 72.73, 80.0, 46.15, 76.92, 80.0, 53.33, 83.33, 80.0, 76.92, 92.31, 90.91]%	[83.33, 66.67, 83.33, 100.0, 66.67, 66.67, 50.0, 83.33, 66.67, 66.67, 83.33, 66.67, 83.33, 100.0, 83.33]%	[98.81, 96.43, 98.81, 100.0, 98.81, 100.0, 95.24, 97.62, 100.0, 94.05, 98.81, 100.0, 97.62, 98.81, 100.0]%	[83.33, 57.14, 83.33, 100.0, 80.0, 100.0, 42.86, 71.43, 100.0, 44.44, 83.33, 100.0, 71.43, 85.71, 100.0]%	[98.81, 97.59, 98.81, 100.0, 97.65, 97.67, 96.39, 98.8, 97.67, 97.53, 98.81, 97.67, 98.8, 100.0, 98.82]%	||	77.39%	76.67%	98.33%	80.2%	98.33%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  1  4  0  0  0  0  1  0  0  0  0  0  0  0  0  66.67%		2
  0  0  5  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  4  0  0  0  0  1  0  0  0  1  0  66.67%		5
  0  0  1  0  1  4  0  0  0  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  3  1  0  2  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  2  0  0  0  0  0  0  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  2  0  0  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 53.33%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.15)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[95.56, 98.89, 98.89, 100.0, 100.0, 97.78, 98.89, 95.56, 97.78, 97.78, 97.78, 96.67, 100.0, 98.89, 96.67]%	[66.67, 92.31, 90.91, 100.0, 100.0, 85.71, 90.91, 66.67, 85.71, 83.33, 83.33, 72.73, 100.0, 90.91, 72.73]%	[66.67, 100.0, 83.33, 100.0, 100.0, 100.0, 83.33, 66.67, 100.0, 83.33, 83.33, 66.67, 100.0, 83.33, 66.67]%	[97.62, 98.81, 100.0, 100.0, 100.0, 97.62, 100.0, 97.62, 97.62, 98.81, 98.81, 98.81, 100.0, 100.0, 98.81]%	[66.67, 85.71, 100.0, 100.0, 100.0, 75.0, 100.0, 66.67, 75.0, 83.33, 83.33, 80.0, 100.0, 100.0, 80.0]%	[97.62, 100.0, 98.82, 100.0, 100.0, 100.0, 98.82, 97.62, 100.0, 98.81, 98.81, 97.65, 100.0, 98.82, 97.65]%	||	85.46%	85.56%	98.97%	86.38%	98.97%	
  4  1  0  0  0  0  0  0  1  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  5  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  1  0  0  0  0  0  0  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 56.08%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.15)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[95.56, 95.56, 97.78, 97.78, 97.78, 96.67, 95.56, 96.67, 98.89, 98.89, 95.56, 94.44, 96.67, 100.0, 100.0]%	[60.0, 71.43, 83.33, 83.33, 83.33, 76.92, 66.67, 72.73, 90.91, 90.91, 71.43, 61.54, 72.73, 100.0, 100.0]%	[50.0, 83.33, 83.33, 83.33, 83.33, 83.33, 66.67, 66.67, 83.33, 83.33, 83.33, 66.67, 66.67, 100.0, 100.0]%	[98.81, 96.43, 98.81, 98.81, 98.81, 97.62, 97.62, 98.81, 100.0, 100.0, 96.43, 96.43, 98.81, 100.0, 100.0]%	[75.0, 62.5, 83.33, 83.33, 83.33, 71.43, 66.67, 80.0, 100.0, 100.0, 62.5, 57.14, 80.0, 100.0, 100.0]%	[96.51, 98.78, 98.81, 98.81, 98.81, 98.8, 97.62, 97.65, 98.82, 98.82, 98.78, 97.59, 97.65, 100.0, 100.0]%	||	79.02%	78.89%	98.49%	80.35%	98.5%	
  3  2  0  0  1  0  0  0  0  0  0  0  0  0  0  50.0%		1
  1  5  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  0  0  0  1  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  1  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  1  0  0  4  0  0  0  0  1  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  1  1  0  0  0  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 54.84%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[98.89, 95.56, 98.89, 100.0, 100.0, 98.89, 97.78, 97.78, 94.44, 98.89, 96.67, 98.89, 96.67, 100.0, 97.78]%	[90.91, 60.0, 90.91, 100.0, 100.0, 90.91, 83.33, 83.33, 66.67, 92.31, 76.92, 90.91, 80.0, 100.0, 80.0]%	[83.33, 50.0, 83.33, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0, 100.0, 66.67]%	[100.0, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 98.81, 95.24, 98.81, 97.62, 100.0, 96.43, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 100.0, 83.33, 83.33, 55.56, 85.71, 71.43, 100.0, 66.67, 100.0, 100.0]%	[98.82, 96.51, 98.82, 100.0, 100.0, 98.82, 98.81, 98.81, 98.77, 100.0, 98.8, 98.82, 100.0, 100.0, 97.67]%	||	85.75%	85.56%	98.97%	88.07%	98.98%	
  5  0  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		1
  0  3  0  0  0  0  1  0  2  0  0  0  0  0  0  50.0%		2
  0  0  5  0  0  0  0  0  0  0  1  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  0  1  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  1  0  4  66.67%		15
Forest OOB Error: 54.14%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	84.44%	97.93%	83.33%	[96.67, 97.78, 97.78, 98.89, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 97.78, 98.89, 98.89, 97.78]%	[76.92, 83.33, 85.71, 90.91, 80.0, 83.33, 85.71, 83.33, 83.33, 83.33, 83.33, 80.0, 92.31, 92.31, 80.0]%	[83.33, 83.33, 100.0, 83.33, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 66.67, 100.0, 100.0, 66.67]%	[97.62, 98.81, 97.62, 100.0, 100.0, 98.81, 97.62, 98.81, 98.81, 98.81, 98.81, 100.0, 98.81, 98.81, 100.0]%	[71.43, 83.33, 75.0, 100.0, 100.0, 83.33, 75.0, 83.33, 83.33, 83.33, 83.33, 100.0, 85.71, 85.71, 100.0]%	[98.8, 98.81, 100.0, 98.82, 97.67, 98.81, 100.0, 98.81, 98.81, 98.81, 98.81, 97.67, 100.0, 100.0, 97.67]%	||	84.26%	84.44%	98.89%	86.19%	98.9%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  1  5  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  2  0  4  0  0  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  1  0  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  1  4  66.67%		15
Forest OOB Error: 51.81%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[97.78, 96.67, 98.89, 98.89, 98.89, 94.44, 94.44, 96.67, 97.78, 94.44, 97.78, 98.89, 97.78, 97.78, 96.67]%	[80.0, 72.73, 90.91, 92.31, 90.91, 61.54, 61.54, 76.92, 85.71, 66.67, 83.33, 90.91, 83.33, 83.33, 66.67]%	[66.67, 66.67, 83.33, 100.0, 83.33, 66.67, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 50.0]%	[100.0, 98.81, 100.0, 98.81, 100.0, 96.43, 96.43, 97.62, 97.62, 95.24, 98.81, 100.0, 98.81, 98.81, 100.0]%	[100.0, 80.0, 100.0, 85.71, 100.0, 57.14, 57.14, 71.43, 75.0, 55.56, 83.33, 100.0, 83.33, 83.33, 100.0]%	[97.67, 97.65, 98.82, 100.0, 98.82, 97.59, 97.59, 98.8, 100.0, 98.77, 98.81, 98.82, 98.81, 98.81, 96.55]%	||	79.12%	78.89%	98.49%	82.13%	98.5%	
  4  1  0  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		1
  0  4  0  0  0  0  1  0  0  1  0  0  0  0  0  66.67%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  1  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  1  4  0  0  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  1  0  0  0  1  0  1  0  0  0  0  3  50.0%		15
Forest OOB Error: 52.12%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[97.78, 96.67, 98.89, 98.89, 100.0, 95.56, 97.78, 96.67, 98.89, 98.89, 97.78, 98.89, 98.89, 97.78, 97.78]%	[83.33, 72.73, 90.91, 92.31, 100.0, 71.43, 83.33, 76.92, 92.31, 90.91, 85.71, 92.31, 90.91, 80.0, 80.0]%	[83.33, 66.67, 83.33, 100.0, 100.0, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 66.67]%	[98.81, 98.81, 100.0, 98.81, 100.0, 96.43, 98.81, 97.62, 98.81, 100.0, 97.62, 98.81, 100.0, 100.0, 100.0]%	[83.33, 80.0, 100.0, 85.71, 100.0, 62.5, 83.33, 71.43, 85.71, 100.0, 75.0, 85.71, 100.0, 100.0, 100.0]%	[98.81, 97.65, 98.82, 100.0, 100.0, 98.78, 98.81, 98.8, 100.0, 98.82, 100.0, 100.0, 98.82, 97.67, 97.67]%	||	85.54%	85.56%	98.97%	87.52%	98.98%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  1  4  0  0  0  0  1  0  0  0  0  0  0  0  0  66.67%		2
  0  0  5  0  0  0  0  1  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  1  0  0  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 54.51%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[96.67, 96.67, 98.89, 97.78, 100.0, 96.67, 93.33, 97.78, 97.78, 95.56, 97.78, 97.78, 97.78, 96.67, 96.67]%	[72.73, 80.0, 90.91, 80.0, 100.0, 76.92, 62.5, 80.0, 85.71, 50.0, 80.0, 80.0, 85.71, 76.92, 76.92]%	[66.67, 100.0, 83.33, 66.67, 100.0, 83.33, 83.33, 66.67, 100.0, 33.33, 66.67, 66.67, 100.0, 83.33, 83.33]%	[98.81, 96.43, 100.0, 100.0, 100.0, 97.62, 94.05, 100.0, 97.62, 100.0, 100.0, 100.0, 97.62, 97.62, 97.62]%	[80.0, 66.67, 100.0, 100.0, 100.0, 71.43, 50.0, 100.0, 75.0, 100.0, 100.0, 100.0, 75.0, 71.43, 71.43]%	[97.65, 100.0, 98.82, 97.67, 100.0, 98.8, 98.75, 97.67, 100.0, 95.45, 97.67, 97.67, 100.0, 98.8, 98.8]%	||	78.56%	78.89%	98.49%	84.06%	98.52%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  0  0  0  1  0  83.33%		3
  0  1  0  4  0  0  0  0  0  0  0  0  0  0  1  66.67%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  0  0  1  1  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  3  0  1  2  0  0  0  0  0  33.33%		10
  0  0  0  0  0  0  0  0  0  0  4  0  1  0  1  66.67%		11
  0  0  0  0  0  0  2  0  0  0  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  1  0  0  0  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 52.99%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	74.44%	96.59%	72.62%	[100.0, 98.89, 97.78, 96.67, 98.89, 95.56, 94.44, 96.67, 95.56, 92.22, 95.56, 95.56, 95.56, 97.78, 97.78]%	[100.0, 90.91, 80.0, 80.0, 90.91, 60.0, 66.67, 72.73, 71.43, 46.15, 71.43, 60.0, 71.43, 80.0, 80.0]%	[100.0, 83.33, 66.67, 100.0, 83.33, 50.0, 83.33, 66.67, 83.33, 50.0, 83.33, 50.0, 83.33, 66.67, 66.67]%	[100.0, 100.0, 100.0, 96.43, 100.0, 98.81, 95.24, 98.81, 96.43, 95.24, 96.43, 98.81, 96.43, 100.0, 100.0]%	[100.0, 100.0, 100.0, 66.67, 100.0, 75.0, 55.56, 80.0, 62.5, 42.86, 62.5, 75.0, 62.5, 100.0, 100.0]%	[100.0, 98.82, 97.67, 100.0, 98.82, 96.51, 98.77, 97.65, 98.78, 96.39, 98.78, 96.51, 98.78, 97.67, 97.67]%	||	74.78%	74.44%	98.17%	78.84%	98.19%	
  6  0  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		1
  0  5  0  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		2
  0  0  4  0  0  0  0  0  1  0  0  0  1  0  0  66.67%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  2  0  3  0  0  1  0  0  0  0  0  0  50.0%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  1  0  1  0  0  66.67%		8
  0  0  0  1  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  2  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  1  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  1  0  0  1  0  0  0  4  66.67%		15
Forest OOB Error: 51.01%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.05)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[97.78, 96.67, 98.89, 100.0, 98.89, 96.67, 98.89, 97.78, 97.78, 97.78, 97.78, 96.67, 96.67, 100.0, 98.89]%	[83.33, 76.92, 90.91, 100.0, 92.31, 72.73, 92.31, 83.33, 83.33, 83.33, 83.33, 72.73, 76.92, 100.0, 90.91]%	[83.33, 83.33, 83.33, 100.0, 100.0, 66.67, 100.0, 83.33, 83.33, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[98.81, 97.62, 100.0, 100.0, 98.81, 98.81, 98.81, 98.81, 98.81, 98.81, 98.81, 98.81, 97.62, 100.0, 100.0]%	[83.33, 71.43, 100.0, 100.0, 85.71, 80.0, 85.71, 83.33, 83.33, 83.33, 83.33, 80.0, 71.43, 100.0, 100.0]%	[98.81, 98.8, 98.82, 100.0, 100.0, 97.65, 100.0, 98.81, 98.81, 98.81, 98.81, 97.65, 98.8, 100.0, 98.82]%	||	85.49%	85.56%	98.97%	86.06%	98.97%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  1  0  5  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  1  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  1  0  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 52.08%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.05)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	84.44%	97.93%	83.33%	[98.89, 98.89, 98.89, 97.78, 98.89, 100.0, 95.56, 95.56, 98.89, 98.89, 94.44, 98.89, 94.44, 100.0, 98.89]%	[90.91, 92.31, 92.31, 80.0, 92.31, 100.0, 66.67, 60.0, 92.31, 90.91, 54.55, 92.31, 66.67, 100.0, 90.91]%	[83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 66.67, 50.0, 100.0, 83.33, 50.0, 100.0, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 98.81, 100.0, 97.62, 98.81, 98.81, 100.0, 97.62, 98.81, 95.24, 100.0, 100.0]%	[100.0, 85.71, 85.71, 100.0, 85.71, 100.0, 66.67, 75.0, 85.71, 100.0, 60.0, 85.71, 55.56, 100.0, 100.0]%	[98.82, 100.0, 100.0, 97.67, 100.0, 100.0, 97.62, 96.51, 100.0, 98.82, 96.47, 100.0, 98.77, 100.0, 98.82]%	||	84.14%	84.44%	98.89%	85.72%	98.9%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  1  0  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  4  1  0  0  0  1  0  0  0  66.67%		7
  0  0  1  0  0  0  0  3  1  0  1  0  0  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  3  0  3  0  0  50.0%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 52.63%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.05)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[93.33, 95.56, 98.89, 97.78, 98.89, 97.78, 94.44, 95.56, 100.0, 95.56, 92.22, 96.67, 95.56, 98.89, 100.0]%	[57.14, 66.67, 90.91, 85.71, 90.91, 83.33, 54.55, 66.67, 100.0, 71.43, 36.36, 72.73, 66.67, 90.91, 100.0]%	[66.67, 66.67, 83.33, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 83.33, 33.33, 66.67, 66.67, 83.33, 100.0]%	[95.24, 97.62, 100.0, 97.62, 100.0, 98.81, 97.62, 97.62, 100.0, 96.43, 96.43, 98.81, 97.62, 100.0, 100.0]%	[50.0, 66.67, 100.0, 75.0, 100.0, 83.33, 60.0, 66.67, 100.0, 62.5, 40.0, 80.0, 66.67, 100.0, 100.0]%	[97.56, 97.62, 98.82, 100.0, 98.82, 98.81, 96.47, 97.62, 100.0, 98.78, 95.29, 97.65, 97.62, 98.82, 100.0]%	||	75.6%	75.56%	98.25%	76.72%	98.26%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  1  4  0  0  0  0  1  0  0  0  0  0  0  0  0  66.67%		2
  0  0  5  0  0  0  0  0  0  0  0  1  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  1  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  2  0  0  1  0  0  3  0  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  1  2  0  2  0  0  33.33%		11
  1  0  0  0  0  0  0  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 52.65%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.05)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	68.89%	95.85%	66.67%	[97.78, 95.56, 96.67, 98.89, 95.56, 96.67, 96.67, 94.44, 94.44, 91.11, 95.56, 96.67, 96.67, 95.56, 95.56]%	[83.33, 60.0, 76.92, 90.91, 66.67, 72.73, 76.92, 61.54, 70.59, 42.86, 71.43, 66.67, 72.73, 60.0, 60.0]%	[83.33, 50.0, 83.33, 83.33, 66.67, 66.67, 83.33, 66.67, 100.0, 50.0, 83.33, 50.0, 66.67, 50.0, 50.0]%	[98.81, 98.81, 97.62, 100.0, 97.62, 98.81, 97.62, 96.43, 94.05, 94.05, 96.43, 100.0, 98.81, 98.81, 98.81]%	[83.33, 75.0, 71.43, 100.0, 66.67, 80.0, 71.43, 57.14, 54.55, 37.5, 62.5, 100.0, 80.0, 75.0, 75.0]%	[98.81, 96.51, 98.8, 98.82, 97.62, 97.65, 98.8, 97.59, 100.0, 96.34, 98.78, 96.55, 97.65, 96.51, 96.51]%	||	68.89%	68.89%	97.78%	72.64%	97.8%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  3  0  0  0  0  1  0  1  1  0  0  0  0  0  50.0%		2
  0  0  5  0  0  0  0  0  0  0  0  0  1  0  0  83.33%		3
  0  0  0  5  1  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  4  0  0  0  0  1  0  0  0  1  0  66.67%		5
  0  0  0  0  1  4  0  0  1  0  0  0  0  0  0  66.67%		6
  1  0  0  0  0  0  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  4  0  0  1  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  1  0  2  3  0  0  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  3  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  1  0  0  1  0  0  0  0  0  0  0  3  1  50.0%		14
  0  0  0  0  0  0  0  1  1  0  1  0  0  0  3  50.0%		15
Forest OOB Error: 55.98%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.05)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[96.67, 93.33, 97.78, 96.67, 97.78, 97.78, 95.56, 95.56, 96.67, 96.67, 95.56, 95.56, 98.89, 98.89, 97.78]%	[72.73, 50.0, 85.71, 66.67, 83.33, 83.33, 71.43, 60.0, 76.92, 76.92, 71.43, 66.67, 90.91, 92.31, 80.0]%	[66.67, 50.0, 100.0, 50.0, 83.33, 83.33, 83.33, 50.0, 83.33, 83.33, 83.33, 66.67, 83.33, 100.0, 66.67]%	[98.81, 96.43, 97.62, 100.0, 98.81, 98.81, 96.43, 98.81, 97.62, 97.62, 96.43, 97.62, 100.0, 98.81, 100.0]%	[80.0, 50.0, 75.0, 100.0, 83.33, 83.33, 62.5, 75.0, 71.43, 71.43, 62.5, 66.67, 100.0, 85.71, 100.0]%	[97.65, 96.43, 100.0, 96.55, 98.81, 98.81, 98.78, 96.51, 98.8, 98.8, 98.78, 97.62, 98.82, 100.0, 97.67]%	||	75.22%	75.56%	98.25%	77.79%	98.27%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  1  3  0  0  0  0  2  0  0  0  0  0  0  0  0  50.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  3  1  1  0  0  1  0  0  0  0  0  0  50.0%		4
  0  0  0  0  5  0  0  0  0  0  0  1  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  2  0  0  0  0  3  0  0  1  0  0  0  0  50.0%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  1  0  0  1  4  66.67%		15
Forest OOB Error: 47.95%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.05)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[98.89, 97.78, 96.67, 96.67, 96.67, 96.67, 93.33, 92.22, 97.78, 94.44, 98.89, 96.67, 94.44, 98.89, 96.67]%	[90.91, 83.33, 76.92, 72.73, 66.67, 76.92, 50.0, 46.15, 83.33, 66.67, 90.91, 72.73, 66.67, 92.31, 66.67]%	[83.33, 83.33, 83.33, 66.67, 50.0, 83.33, 50.0, 50.0, 83.33, 83.33, 83.33, 66.67, 83.33, 100.0, 50.0]%	[100.0, 98.81, 97.62, 98.81, 100.0, 97.62, 96.43, 95.24, 98.81, 95.24, 100.0, 98.81, 95.24, 98.81, 100.0]%	[100.0, 83.33, 71.43, 80.0, 100.0, 71.43, 50.0, 42.86, 83.33, 55.56, 100.0, 80.0, 55.56, 85.71, 100.0]%	[98.82, 98.81, 98.8, 97.65, 96.55, 98.8, 96.43, 96.39, 98.81, 98.77, 98.82, 97.65, 98.77, 100.0, 96.55]%	||	73.53%	73.33%	98.1%	77.28%	98.11%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  1  0  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  2  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  3  0  0  0  0  0  0  1  1  1  0  50.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  3  1  0  2  0  0  0  0  0  50.0%		7
  0  0  1  1  0  0  0  3  0  0  0  0  1  0  0  50.0%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  1  0  0  0  0  0  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  2  0  3  50.0%		15
Forest OOB Error: 55.87%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.0)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[97.78, 96.67, 100.0, 98.89, 100.0, 97.78, 95.56, 97.78, 96.67, 98.89, 96.67, 100.0, 96.67, 100.0, 97.78]%	[80.0, 76.92, 100.0, 92.31, 100.0, 83.33, 71.43, 83.33, 76.92, 90.91, 76.92, 100.0, 72.73, 100.0, 80.0]%	[66.67, 83.33, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 66.67, 100.0, 66.67]%	[100.0, 97.62, 100.0, 98.81, 100.0, 98.81, 96.43, 98.81, 97.62, 100.0, 97.62, 100.0, 98.81, 100.0, 100.0]%	[100.0, 71.43, 100.0, 85.71, 100.0, 83.33, 62.5, 83.33, 71.43, 100.0, 71.43, 100.0, 80.0, 100.0, 100.0]%	[97.67, 98.8, 100.0, 100.0, 100.0, 98.81, 98.78, 98.81, 98.8, 98.82, 98.8, 100.0, 97.65, 100.0, 97.67]%	||	85.65%	85.56%	98.97%	87.28%	98.97%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  1  0  0  0  0  0  0  83.33%		8
  0  0  0  1  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  1  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 52.63%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.0)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[97.78, 94.44, 95.56, 97.78, 98.89, 94.44, 96.67, 94.44, 98.89, 94.44, 97.78, 97.78, 95.56, 97.78, 94.44]%	[80.0, 61.54, 71.43, 83.33, 90.91, 54.55, 76.92, 61.54, 92.31, 54.55, 80.0, 80.0, 75.0, 83.33, 54.55]%	[66.67, 66.67, 83.33, 83.33, 83.33, 50.0, 83.33, 66.67, 100.0, 50.0, 66.67, 66.67, 100.0, 83.33, 50.0]%	[100.0, 96.43, 96.43, 98.81, 100.0, 97.62, 97.62, 96.43, 98.81, 97.62, 100.0, 100.0, 95.24, 98.81, 97.62]%	[100.0, 57.14, 62.5, 83.33, 100.0, 60.0, 71.43, 57.14, 85.71, 60.0, 100.0, 100.0, 60.0, 83.33, 60.0]%	[97.67, 97.59, 98.78, 98.81, 98.82, 96.47, 98.8, 97.59, 100.0, 96.47, 97.67, 97.67, 100.0, 98.81, 96.47]%	||	73.33%	73.33%	98.1%	76.04%	98.11%	
  4  1  1  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  4  0  0  0  0  1  0  1  0  0  0  0  0  0  66.67%		2
  0  0  5  0  0  0  0  0  0  0  0  0  1  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  1  1  0  3  0  0  0  0  0  0  0  1  0  50.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  0  0  1  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  2  0  0  0  0  1  0  0  3  0  0  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  1  0  0  1  0  3  50.0%		15
Forest OOB Error: 52.32%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.0)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[95.56, 97.78, 98.89, 98.89, 98.89, 95.56, 96.67, 98.89, 98.89, 96.67, 96.67, 97.78, 97.78, 96.67, 98.89]%	[71.43, 83.33, 90.91, 92.31, 90.91, 66.67, 72.73, 90.91, 92.31, 76.92, 76.92, 83.33, 83.33, 72.73, 90.91]%	[83.33, 83.33, 83.33, 100.0, 83.33, 66.67, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 66.67, 83.33]%	[96.43, 98.81, 100.0, 98.81, 100.0, 97.62, 98.81, 100.0, 98.81, 97.62, 97.62, 98.81, 98.81, 98.81, 100.0]%	[62.5, 83.33, 100.0, 85.71, 100.0, 66.67, 80.0, 100.0, 85.71, 71.43, 71.43, 83.33, 83.33, 80.0, 100.0]%	[98.78, 98.81, 98.82, 100.0, 98.82, 97.62, 97.65, 98.82, 100.0, 98.8, 98.8, 98.81, 98.81, 97.65, 98.82]%	||	82.38%	82.22%	98.73%	83.56%	98.73%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  1  5  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  0  0  0  1  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  1  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  1  4  0  0  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  1  0  0  0  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 48.26%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.0)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[97.78, 97.78, 96.67, 98.89, 97.78, 98.89, 96.67, 95.56, 96.67, 96.67, 96.67, 97.78, 97.78, 97.78, 94.44]%	[80.0, 85.71, 76.92, 92.31, 80.0, 90.91, 72.73, 66.67, 76.92, 80.0, 72.73, 83.33, 83.33, 83.33, 54.55]%	[66.67, 100.0, 83.33, 100.0, 66.67, 83.33, 66.67, 66.67, 83.33, 100.0, 66.67, 83.33, 83.33, 83.33, 50.0]%	[100.0, 97.62, 97.62, 98.81, 100.0, 100.0, 98.81, 97.62, 97.62, 96.43, 98.81, 98.81, 98.81, 98.81, 97.62]%	[100.0, 75.0, 71.43, 85.71, 100.0, 100.0, 80.0, 66.67, 71.43, 66.67, 80.0, 83.33, 83.33, 83.33, 60.0]%	[97.67, 100.0, 98.8, 100.0, 97.67, 98.82, 97.65, 97.62, 98.8, 100.0, 97.65, 98.81, 98.81, 98.81, 96.47]%	||	78.63%	78.89%	98.49%	80.46%	98.51%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  4  0  1  0  0  1  0  0  0  0  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  4  0  0  1  0  1  0  0  0  66.67%		7
  0  0  1  0  0  0  0  4  0  0  0  0  0  0  1  66.67%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  5  1  83.33%		14
  0  0  0  1  0  0  0  1  0  0  0  0  0  1  3  50.0%		15
Forest OOB Error: 56.64%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.0)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[98.89, 97.78, 98.89, 98.89, 100.0, 98.89, 91.11, 96.67, 98.89, 94.44, 93.33, 97.78, 96.67, 100.0, 100.0]%	[90.91, 83.33, 90.91, 90.91, 100.0, 92.31, 33.33, 72.73, 92.31, 66.67, 50.0, 80.0, 76.92, 100.0, 100.0]%	[83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 33.33, 66.67, 100.0, 83.33, 50.0, 66.67, 83.33, 100.0, 100.0]%	[100.0, 98.81, 100.0, 100.0, 100.0, 98.81, 95.24, 98.81, 98.81, 95.24, 96.43, 100.0, 97.62, 100.0, 100.0]%	[100.0, 83.33, 100.0, 100.0, 100.0, 85.71, 33.33, 80.0, 85.71, 55.56, 50.0, 100.0, 71.43, 100.0, 100.0]%	[98.82, 98.81, 98.82, 98.82, 100.0, 100.0, 95.24, 97.65, 100.0, 98.77, 96.43, 97.67, 98.8, 100.0, 100.0]%	||	81.36%	81.11%	98.65%	83.01%	98.66%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  1  2  0  1  2  0  0  0  0  0  33.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  3  0  2  0  0  50.0%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 53.75%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.0)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[97.78, 95.56, 95.56, 98.89, 97.78, 96.67, 95.56, 94.44, 97.78, 96.67, 94.44, 96.67, 95.56, 98.89, 98.89]%	[80.0, 71.43, 66.67, 92.31, 83.33, 72.73, 60.0, 61.54, 83.33, 80.0, 44.44, 72.73, 71.43, 92.31, 90.91]%	[66.67, 83.33, 66.67, 100.0, 83.33, 66.67, 50.0, 66.67, 83.33, 100.0, 33.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 96.43, 97.62, 98.81, 98.81, 98.81, 98.81, 96.43, 98.81, 96.43, 98.81, 98.81, 96.43, 98.81, 100.0]%	[100.0, 62.5, 66.67, 85.71, 83.33, 80.0, 75.0, 57.14, 83.33, 66.67, 66.67, 80.0, 62.5, 85.71, 100.0]%	[97.67, 98.78, 97.62, 100.0, 98.81, 97.65, 96.51, 97.59, 98.81, 100.0, 95.4, 97.65, 98.78, 100.0, 98.82]%	||	74.88%	75.56%	98.25%	77.02%	98.27%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  4  0  0  0  0  2  0  0  0  0  0  0  0  66.67%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  1  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  1  3  0  0  1  0  1  0  0  0  50.0%		7
  0  0  2  0  0  0  0  4  0  0  0  0  0  0  0  66.67%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  2  0  3  0  0  33.33%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  1  0  0  0  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  1  0  0  0  5  83.33%		15
Forest OOB Error: 51.18%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 100.0, 100.0, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 92.31, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 85.71, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 100.0, 100.0]%	||	87.92%	87.78%	99.13%	89.48%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[97.78, 96.67, 96.67, 100.0, 100.0, 97.78, 97.78, 96.67, 96.67, 95.56, 96.67, 96.67, 95.56, 95.56, 97.78]%	[80.0, 80.0, 72.73, 100.0, 100.0, 80.0, 83.33, 72.73, 76.92, 71.43, 72.73, 72.73, 71.43, 71.43, 80.0]%	[66.67, 100.0, 66.67, 100.0, 100.0, 66.67, 83.33, 66.67, 83.33, 83.33, 66.67, 66.67, 83.33, 83.33, 66.67]%	[100.0, 96.43, 98.81, 100.0, 100.0, 100.0, 98.81, 98.81, 97.62, 96.43, 98.81, 98.81, 96.43, 96.43, 100.0]%	[100.0, 66.67, 80.0, 100.0, 100.0, 100.0, 83.33, 80.0, 71.43, 62.5, 80.0, 80.0, 62.5, 62.5, 100.0]%	[97.67, 100.0, 97.65, 100.0, 100.0, 97.67, 98.81, 97.65, 98.8, 98.78, 97.65, 97.65, 98.78, 98.78, 97.67]%	||	79.03%	78.89%	98.49%	81.93%	98.5%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  1  4  0  0  0  0  0  0  0  0  0  1  0  0  66.67%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  4  1  0  0  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  5  0  0  0  0  1  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  1  4  66.67%		15
Forest OOB Error: 50.38%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 100.0, 100.0, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 92.31, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 85.71, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 100.0, 100.0]%	||	87.92%	87.78%	99.13%	89.48%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	84.44%	97.93%	83.33%	[98.89, 98.89, 100.0, 96.67, 98.89, 96.67, 95.56, 98.89, 96.67, 95.56, 96.67, 98.89, 97.78, 100.0, 98.89]%	[90.91, 92.31, 100.0, 66.67, 90.91, 76.92, 71.43, 90.91, 80.0, 60.0, 76.92, 92.31, 83.33, 100.0, 90.91]%	[83.33, 100.0, 100.0, 50.0, 83.33, 83.33, 83.33, 83.33, 100.0, 50.0, 83.33, 100.0, 83.33, 100.0, 83.33]%	[100.0, 98.81, 100.0, 100.0, 100.0, 97.62, 96.43, 100.0, 96.43, 98.81, 97.62, 98.81, 98.81, 100.0, 100.0]%	[100.0, 85.71, 100.0, 100.0, 100.0, 71.43, 62.5, 100.0, 66.67, 75.0, 71.43, 85.71, 83.33, 100.0, 100.0]%	[98.82, 100.0, 100.0, 96.55, 98.82, 98.8, 98.78, 98.82, 100.0, 96.51, 98.8, 100.0, 98.81, 100.0, 98.82]%	||	84.24%	84.44%	98.89%	86.79%	98.9%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  3  0  2  1  0  0  0  0  0  0  0  0  50.0%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  0  0  1  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  1  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  2  0  1  3  0  0  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  1  0  0  0  5  83.33%		15
Forest OOB Error: 50.78%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 100.0, 100.0, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 92.31, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 85.71, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 100.0, 100.0]%	||	87.92%	87.78%	99.13%	89.48%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[97.78, 95.56, 97.78, 98.89, 97.78, 94.44, 92.22, 96.67, 98.89, 94.44, 95.56, 96.67, 96.67, 96.67, 96.67]%	[80.0, 66.67, 83.33, 90.91, 80.0, 61.54, 53.33, 80.0, 92.31, 61.54, 66.67, 72.73, 76.92, 72.73, 66.67]%	[66.67, 66.67, 83.33, 83.33, 66.67, 66.67, 66.67, 100.0, 100.0, 66.67, 66.67, 66.67, 83.33, 66.67, 50.0]%	[100.0, 97.62, 98.81, 100.0, 100.0, 96.43, 94.05, 96.43, 98.81, 96.43, 97.62, 98.81, 97.62, 98.81, 100.0]%	[100.0, 66.67, 83.33, 100.0, 100.0, 57.14, 44.44, 66.67, 85.71, 57.14, 66.67, 80.0, 71.43, 80.0, 100.0]%	[97.67, 97.62, 98.81, 98.82, 97.67, 97.59, 97.53, 100.0, 100.0, 97.59, 97.62, 97.65, 98.8, 97.65, 96.55]%	||	73.69%	73.33%	98.1%	77.28%	98.1%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  4  0  0  0  0  2  0  0  0  0  0  0  0  0  66.67%		2
  0  0  5  0  0  0  0  0  0  0  0  1  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  1  0  0  0  0  0  66.67%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  4  1  0  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  2  0  0  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  1  1  0  0  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  1  0  1  1  0  0  0  3  50.0%		15
Forest OOB Error: 54.55%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 100.0, 100.0, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 92.31, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 85.71, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 100.0, 100.0]%	||	87.92%	87.78%	99.13%	89.48%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[93.33, 97.78, 97.78, 100.0, 98.89, 97.78, 96.67, 96.67, 96.67, 94.44, 98.89, 96.67, 98.89, 100.0, 95.56]%	[40.0, 85.71, 83.33, 100.0, 90.91, 83.33, 72.73, 76.92, 80.0, 54.55, 92.31, 72.73, 92.31, 100.0, 60.0]%	[33.33, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 50.0, 100.0, 66.67, 100.0, 100.0, 50.0]%	[97.62, 97.62, 98.81, 100.0, 100.0, 98.81, 98.81, 97.62, 96.43, 97.62, 98.81, 98.81, 98.81, 100.0, 98.81]%	[50.0, 75.0, 83.33, 100.0, 100.0, 83.33, 80.0, 71.43, 66.67, 60.0, 85.71, 80.0, 85.71, 100.0, 75.0]%	[95.35, 100.0, 98.81, 100.0, 98.82, 98.81, 97.65, 98.8, 100.0, 96.47, 100.0, 97.65, 100.0, 100.0, 96.51]%	||	78.99%	80.0%	98.57%	79.75%	98.59%	
  2  2  0  0  0  1  0  0  0  0  0  0  0  0  1  33.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  1  0  0  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  1  0  2  3  0  0  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  1  1  0  3  50.0%		15
Forest OOB Error: 53.04%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 100.0, 100.0, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 92.31, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 85.71, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 100.0, 100.0]%	||	87.92%	87.78%	99.13%	89.48%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[98.89, 97.78, 96.67, 96.67, 97.78, 96.67, 93.33, 96.67, 97.78, 93.33, 97.78, 96.67, 95.56, 97.78, 97.78]%	[90.91, 83.33, 76.92, 76.92, 80.0, 72.73, 57.14, 72.73, 83.33, 50.0, 80.0, 72.73, 75.0, 85.71, 80.0]%	[83.33, 83.33, 83.33, 83.33, 66.67, 66.67, 66.67, 66.67, 83.33, 50.0, 66.67, 66.67, 100.0, 100.0, 66.67]%	[100.0, 98.81, 97.62, 97.62, 100.0, 98.81, 95.24, 98.81, 98.81, 96.43, 100.0, 98.81, 95.24, 97.62, 100.0]%	[100.0, 83.33, 71.43, 71.43, 100.0, 80.0, 50.0, 80.0, 83.33, 50.0, 100.0, 80.0, 60.0, 75.0, 100.0]%	[98.82, 98.81, 98.8, 98.8, 97.67, 97.65, 97.56, 97.65, 98.81, 96.43, 97.67, 97.65, 100.0, 100.0, 97.67]%	||	75.83%	75.56%	98.25%	78.97%	98.27%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  1  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  0  0  1  0  0  0  66.67%		5
  0  0  1  1  0  4  0  0  0  0  0  0  0  0  0  66.67%		6
  0  0  0  1  0  0  4  0  0  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  1  0  0  0  1  0  0  66.67%		8
  0  0  0  0  0  0  0  0  5  0  0  0  1  0  0  83.33%		9
  0  0  0  0  0  0  3  0  0  3  0  0  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  2  4  66.67%		15
Forest OOB Error: 51.74%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 100.0, 100.0, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 92.31, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 85.71, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 100.0, 100.0]%	||	87.92%	87.78%	99.13%	89.48%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	84.44%	97.93%	83.33%	[98.89, 97.78, 97.78, 97.78, 98.89, 98.89, 95.56, 96.67, 96.67, 98.89, 96.67, 97.78, 98.89, 100.0, 97.78]%	[90.91, 80.0, 83.33, 83.33, 90.91, 90.91, 66.67, 72.73, 80.0, 90.91, 76.92, 85.71, 92.31, 100.0, 83.33]%	[83.33, 66.67, 83.33, 83.33, 83.33, 83.33, 66.67, 66.67, 100.0, 83.33, 83.33, 100.0, 100.0, 100.0, 83.33]%	[100.0, 100.0, 98.81, 98.81, 100.0, 100.0, 97.62, 98.81, 96.43, 100.0, 97.62, 97.62, 98.81, 100.0, 98.81]%	[100.0, 100.0, 83.33, 83.33, 100.0, 100.0, 66.67, 80.0, 66.67, 100.0, 71.43, 75.0, 85.71, 100.0, 83.33]%	[98.82, 97.67, 98.81, 98.81, 98.82, 98.82, 97.62, 97.65, 100.0, 98.82, 98.8, 100.0, 100.0, 100.0, 98.81]%	||	84.53%	84.44%	98.89%	86.37%	98.9%	
  5  0  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		1
  0  4  0  0  0  0  1  0  1  0  0  0  0  0  0  66.67%		2
  0  0  5  0  0  0  0  0  0  0  0  0  0  0  1  83.33%		3
  0  0  1  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  1  0  0  4  0  0  0  0  1  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 52.29%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	86.67%	98.22%	85.71%	[98.89, 98.89, 100.0, 98.89, 98.89, 96.67, 94.44, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 98.89, 98.89]%	[90.91, 92.31, 100.0, 90.91, 90.91, 76.92, 66.67, 90.91, 92.31, 60.0, 92.31, 90.91, 83.33, 90.91, 92.31]%	[83.33, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 50.0, 100.0, 83.33, 83.33, 83.33, 100.0]%	[100.0, 98.81, 100.0, 100.0, 100.0, 97.62, 95.24, 100.0, 98.81, 98.81, 98.81, 100.0, 98.81, 100.0, 98.81]%	[100.0, 85.71, 100.0, 100.0, 100.0, 71.43, 55.56, 100.0, 85.71, 75.0, 85.71, 100.0, 83.33, 100.0, 85.71]%	[98.82, 100.0, 100.0, 98.82, 98.82, 98.8, 98.77, 98.82, 100.0, 96.51, 100.0, 98.82, 98.81, 98.82, 100.0]%	||	86.77%	86.67%	99.05%	88.54%	99.05%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  0  0  0  0  0  1  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  3  0  0  3  0  0  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 50.0%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[97.78, 96.67, 98.89, 98.89, 100.0, 96.67, 96.67, 95.56, 97.78, 97.78, 96.67, 97.78, 98.89, 96.67, 97.78]%	[83.33, 72.73, 90.91, 90.91, 100.0, 76.92, 76.92, 66.67, 85.71, 83.33, 76.92, 83.33, 90.91, 72.73, 83.33]%	[83.33, 66.67, 83.33, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 83.33, 83.33, 66.67, 83.33]%	[98.81, 98.81, 100.0, 100.0, 100.0, 97.62, 97.62, 97.62, 97.62, 98.81, 97.62, 98.81, 100.0, 98.81, 98.81]%	[83.33, 80.0, 100.0, 100.0, 100.0, 71.43, 71.43, 66.67, 75.0, 83.33, 71.43, 83.33, 100.0, 80.0, 83.33]%	[98.81, 97.65, 98.82, 98.82, 100.0, 98.8, 98.8, 97.62, 100.0, 98.81, 98.8, 98.81, 98.82, 97.65, 98.81]%	||	82.31%	82.22%	98.73%	83.29%	98.73%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  1  4  0  0  0  0  0  0  1  0  0  0  0  0  0  66.67%		2
  0  0  5  0  0  0  0  1  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  1  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  1  5  83.33%		15
Forest OOB Error: 55.77%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[95.56, 96.67, 98.89, 98.89, 98.89, 96.67, 92.22, 97.78, 97.78, 93.33, 96.67, 96.67, 97.78, 97.78, 97.78]%	[71.43, 72.73, 90.91, 92.31, 90.91, 72.73, 53.33, 83.33, 83.33, 50.0, 76.92, 72.73, 83.33, 83.33, 80.0]%	[83.33, 66.67, 83.33, 100.0, 83.33, 66.67, 66.67, 83.33, 83.33, 50.0, 83.33, 66.67, 83.33, 83.33, 66.67]%	[96.43, 98.81, 100.0, 98.81, 100.0, 98.81, 94.05, 98.81, 98.81, 96.43, 97.62, 98.81, 98.81, 98.81, 100.0]%	[62.5, 80.0, 100.0, 85.71, 100.0, 80.0, 44.44, 83.33, 83.33, 50.0, 71.43, 80.0, 83.33, 83.33, 100.0]%	[98.78, 97.65, 98.82, 100.0, 98.82, 97.65, 97.53, 98.81, 98.81, 96.43, 98.8, 97.65, 98.81, 98.81, 97.67]%	||	77.16%	76.67%	98.33%	79.16%	98.34%	
  5  0  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		1
  1  4  0  0  0  0  1  0  0  0  0  0  0  0  0  66.67%		2
  0  0  5  0  0  0  0  0  0  0  0  1  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  1  0  4  0  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  4  0  0  2  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  3  0  0  3  0  0  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  1  0  0  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  2  0  0  0  0  0  0  0  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 50.85%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[97.78, 96.67, 100.0, 100.0, 97.78, 96.67, 95.56, 97.78, 96.67, 96.67, 96.67, 97.78, 97.78, 97.78, 98.89]%	[80.0, 72.73, 100.0, 100.0, 80.0, 72.73, 66.67, 83.33, 80.0, 76.92, 76.92, 83.33, 83.33, 85.71, 90.91]%	[66.67, 66.67, 100.0, 100.0, 66.67, 66.67, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 98.81, 100.0, 100.0, 100.0, 98.81, 97.62, 98.81, 96.43, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0]%	[100.0, 80.0, 100.0, 100.0, 100.0, 80.0, 66.67, 83.33, 66.67, 71.43, 71.43, 83.33, 83.33, 75.0, 100.0]%	[97.67, 97.65, 100.0, 100.0, 97.67, 97.65, 97.62, 98.81, 100.0, 98.8, 98.8, 98.81, 98.81, 100.0, 98.82]%	||	82.17%	82.22%	98.73%	84.08%	98.74%	
  4  1  0  0  0  0  0  0  1  0  0  0  0  0  0  66.67%		1
  0  4  0  0  0  0  1  0  1  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  4  0  1  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  1  4  0  0  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  1  0  0  0  5  83.33%		15
Forest OOB Error: 53.28%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	68.89%	95.85%	66.67%	[98.89, 96.67, 95.56, 98.89, 98.89, 93.33, 91.11, 95.56, 95.56, 94.44, 94.44, 95.56, 94.44, 97.78, 96.67]%	[92.31, 66.67, 66.67, 90.91, 90.91, 50.0, 50.0, 66.67, 66.67, 54.55, 61.54, 60.0, 66.67, 85.71, 66.67]%	[100.0, 50.0, 66.67, 83.33, 83.33, 50.0, 66.67, 66.67, 66.67, 50.0, 66.67, 50.0, 83.33, 100.0, 50.0]%	[98.81, 100.0, 97.62, 100.0, 100.0, 96.43, 92.86, 97.62, 97.62, 97.62, 96.43, 98.81, 95.24, 97.62, 100.0]%	[85.71, 100.0, 66.67, 100.0, 100.0, 50.0, 40.0, 66.67, 66.67, 60.0, 57.14, 75.0, 55.56, 75.0, 100.0]%	[100.0, 96.55, 97.62, 98.82, 98.82, 96.43, 97.5, 97.62, 97.62, 96.47, 97.59, 96.51, 98.77, 100.0, 96.55]%	||	69.06%	68.89%	97.78%	73.23%	97.79%	
  6  0  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		1
  1  3  0  0  0  0  2  0  0  0  0  0  0  0  0  50.0%		2
  0  0  4  0  0  1  0  0  0  0  0  0  1  0  0  66.67%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  3  0  0  1  0  0  0  0  2  0  50.0%		6
  0  0  0  0  0  1  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  1  0  0  0  0  4  0  0  1  0  0  0  0  66.67%		8
  0  0  0  0  0  0  1  1  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  1  0  0  0  1  0  1  0  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  1  1  0  1  0  3  50.0%		15
Forest OOB Error: 51.5%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[97.78, 94.44, 95.56, 97.78, 97.78, 97.78, 94.44, 95.56, 98.89, 94.44, 97.78, 96.67, 97.78, 100.0, 98.89]%	[80.0, 66.67, 75.0, 83.33, 80.0, 83.33, 54.55, 66.67, 90.91, 66.67, 80.0, 72.73, 83.33, 100.0, 90.91]%	[66.67, 83.33, 100.0, 83.33, 66.67, 83.33, 50.0, 66.67, 83.33, 83.33, 66.67, 66.67, 83.33, 100.0, 83.33]%	[100.0, 95.24, 95.24, 98.81, 100.0, 98.81, 97.62, 97.62, 100.0, 95.24, 100.0, 98.81, 98.81, 100.0, 100.0]%	[100.0, 55.56, 60.0, 83.33, 100.0, 83.33, 60.0, 66.67, 100.0, 55.56, 100.0, 80.0, 83.33, 100.0, 100.0]%	[97.67, 98.77, 100.0, 98.81, 97.67, 98.81, 96.47, 97.62, 98.82, 98.77, 97.67, 97.65, 98.81, 100.0, 98.82]%	||	78.27%	77.78%	98.41%	81.85%	98.42%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  1  0  5  0  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  1  0  0  0  0  0  66.67%		5
  0  0  0  1  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  3  0  0  1  0  1  0  0  0  50.0%		7
  0  0  2  0  0  0  0  4  0  0  0  0  0  0  0  66.67%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  1  0  0  0  0  0  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 56.68%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.15)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[98.89, 97.78, 98.89, 100.0, 98.89, 98.89, 94.44, 97.78, 100.0, 95.56, 94.44, 97.78, 95.56, 100.0, 97.78]%	[90.91, 83.33, 90.91, 100.0, 92.31, 90.91, 66.67, 80.0, 100.0, 60.0, 61.54, 83.33, 71.43, 100.0, 83.33]%	[83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 100.0, 50.0, 66.67, 83.33, 83.33, 100.0, 83.33]%	[100.0, 98.81, 100.0, 100.0, 98.81, 100.0, 95.24, 100.0, 100.0, 98.81, 96.43, 98.81, 96.43, 100.0, 98.81]%	[100.0, 83.33, 100.0, 100.0, 85.71, 100.0, 55.56, 100.0, 100.0, 75.0, 57.14, 83.33, 62.5, 100.0, 83.33]%	[98.82, 98.81, 98.82, 100.0, 100.0, 98.82, 98.77, 97.67, 100.0, 96.51, 97.59, 98.81, 98.78, 100.0, 98.81]%	||	83.64%	83.33%	98.81%	85.73%	98.81%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  0  0  0  0  1  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  1  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  0  0  1  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  3  0  0  3  0  0  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  1  0  0  0  5  83.33%		15
Forest OOB Error: 50.0%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.15)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[95.56, 98.89, 97.78, 96.67, 100.0, 96.67, 92.22, 97.78, 96.67, 96.67, 97.78, 96.67, 98.89, 100.0, 100.0]%	[66.67, 92.31, 80.0, 72.73, 100.0, 76.92, 46.15, 80.0, 76.92, 76.92, 83.33, 72.73, 92.31, 100.0, 100.0]%	[66.67, 100.0, 66.67, 66.67, 100.0, 83.33, 50.0, 66.67, 83.33, 83.33, 83.33, 66.67, 100.0, 100.0, 100.0]%	[97.62, 98.81, 100.0, 98.81, 100.0, 97.62, 95.24, 100.0, 97.62, 97.62, 98.81, 98.81, 98.81, 100.0, 100.0]%	[66.67, 85.71, 100.0, 80.0, 100.0, 71.43, 42.86, 100.0, 71.43, 71.43, 83.33, 80.0, 85.71, 100.0, 100.0]%	[97.62, 100.0, 97.67, 97.65, 100.0, 98.8, 96.39, 97.67, 98.8, 98.8, 98.81, 97.65, 100.0, 100.0, 100.0]%	||	81.13%	81.11%	98.65%	82.57%	98.66%	
  4  0  0  0  0  0  0  0  1  1  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  0  0  1  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  1  0  0  0  0  1  3  0  0  1  0  0  0  0  0  50.0%		7
  0  1  0  0  0  0  0  4  0  0  1  0  0  0  0  66.67%		8
  0  0  0  1  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  2  0  0  0  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 49.8%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.15)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[97.78, 96.67, 96.67, 100.0, 100.0, 100.0, 97.78, 95.56, 97.78, 97.78, 97.78, 96.67, 95.56, 98.89, 97.78]%	[80.0, 76.92, 72.73, 100.0, 100.0, 100.0, 80.0, 50.0, 85.71, 85.71, 83.33, 76.92, 71.43, 92.31, 83.33]%	[66.67, 83.33, 66.67, 100.0, 100.0, 100.0, 66.67, 33.33, 100.0, 100.0, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 100.0, 100.0, 100.0, 97.62, 97.62, 98.81, 97.62, 96.43, 98.81, 98.81]%	[100.0, 71.43, 80.0, 100.0, 100.0, 100.0, 100.0, 100.0, 75.0, 75.0, 83.33, 71.43, 62.5, 85.71, 83.33]%	[97.67, 98.8, 97.65, 100.0, 100.0, 100.0, 97.67, 95.45, 100.0, 100.0, 98.81, 98.8, 98.78, 100.0, 98.81]%	||	82.56%	83.33%	98.81%	85.85%	98.83%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  4  0  0  0  0  0  1  0  0  0  1  0  0  66.67%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  4  0  0  1  0  1  0  0  0  66.67%		7
  0  0  1  0  0  0  0  2  0  0  0  1  1  0  1  33.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  1  5  83.33%		15
Forest OOB Error: 54.15%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.15)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[97.78, 96.67, 98.89, 97.78, 97.78, 94.44, 96.67, 100.0, 98.89, 98.89, 96.67, 97.78, 96.67, 96.67, 98.89]%	[80.0, 76.92, 90.91, 85.71, 83.33, 54.55, 72.73, 100.0, 92.31, 92.31, 76.92, 83.33, 72.73, 76.92, 90.91]%	[66.67, 83.33, 83.33, 100.0, 83.33, 50.0, 66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 83.33]%	[100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 100.0, 98.81, 98.81, 97.62, 98.81, 98.81, 97.62, 100.0]%	[100.0, 71.43, 100.0, 75.0, 83.33, 60.0, 80.0, 100.0, 85.71, 85.71, 71.43, 83.33, 80.0, 71.43, 100.0]%	[97.67, 98.8, 98.82, 100.0, 98.81, 96.47, 97.65, 100.0, 100.0, 100.0, 98.8, 98.81, 97.65, 98.8, 98.82]%	||	81.97%	82.22%	98.73%	83.16%	98.74%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  0  0  0  0  0  1  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  1  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  1  3  0  0  1  0  0  0  0  1  0  50.0%		6
  0  0  0  0  0  1  4  0  0  0  0  1  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 52.31%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.15)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[97.78, 98.89, 98.89, 100.0, 100.0, 97.78, 95.56, 93.33, 96.67, 96.67, 96.67, 97.78, 96.67, 98.89, 98.89]%	[85.71, 90.91, 90.91, 100.0, 100.0, 83.33, 66.67, 40.0, 76.92, 76.92, 72.73, 83.33, 76.92, 90.91, 92.31]%	[100.0, 83.33, 83.33, 100.0, 100.0, 83.33, 66.67, 33.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0]%	[97.62, 100.0, 100.0, 100.0, 100.0, 98.81, 97.62, 97.62, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81]%	[75.0, 100.0, 100.0, 100.0, 100.0, 83.33, 66.67, 50.0, 71.43, 71.43, 80.0, 83.33, 71.43, 100.0, 85.71]%	[100.0, 98.82, 98.82, 100.0, 100.0, 98.81, 97.62, 95.35, 98.8, 98.8, 97.65, 98.81, 98.8, 98.82, 100.0]%	||	81.84%	82.22%	98.73%	82.56%	98.74%	
  6  0  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		1
  1  5  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  4  0  0  2  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  2  1  0  1  0  1  0  1  33.33%		8
  1  0  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 55.78%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.15)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[97.78, 96.67, 98.89, 100.0, 100.0, 96.67, 95.56, 96.67, 97.78, 95.56, 96.67, 97.78, 97.78, 97.78, 98.89]%	[80.0, 80.0, 90.91, 100.0, 100.0, 76.92, 60.0, 76.92, 83.33, 71.43, 76.92, 83.33, 83.33, 80.0, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 50.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33, 66.67, 83.33]%	[100.0, 96.43, 100.0, 100.0, 100.0, 97.62, 98.81, 97.62, 98.81, 96.43, 97.62, 98.81, 98.81, 100.0, 100.0]%	[100.0, 66.67, 100.0, 100.0, 100.0, 71.43, 75.0, 71.43, 83.33, 62.5, 71.43, 83.33, 83.33, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.8, 96.51, 98.8, 98.81, 98.78, 98.8, 98.81, 98.81, 97.67, 98.82]%	||	82.27%	82.22%	98.73%	84.56%	98.74%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  0  1  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  0  1  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  3  1  1  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  1  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 51.75%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 100.0, 100.0, 98.89, 95.56, 97.78, 100.0, 98.89, 95.56, 97.78, 96.67, 98.89, 98.89]%	[83.33, 85.71, 90.91, 100.0, 100.0, 92.31, 66.67, 80.0, 100.0, 92.31, 66.67, 80.0, 76.92, 90.91, 92.31]%	[83.33, 100.0, 83.33, 100.0, 100.0, 100.0, 66.67, 66.67, 100.0, 100.0, 66.67, 66.67, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 100.0, 98.81, 97.62, 100.0, 100.0, 98.81, 97.62, 100.0, 97.62, 100.0, 98.81]%	[83.33, 75.0, 100.0, 100.0, 100.0, 85.71, 66.67, 100.0, 100.0, 85.71, 66.67, 100.0, 71.43, 100.0, 85.71]%	[98.81, 100.0, 98.82, 100.0, 100.0, 100.0, 97.62, 97.67, 100.0, 100.0, 97.62, 97.67, 98.8, 98.82, 100.0]%	||	86.54%	86.67%	99.05%	88.02%	99.06%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  1  0  0  0  0  4  0  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 49.62%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[97.78, 98.89, 97.78, 97.78, 96.67, 96.67, 95.56, 95.56, 96.67, 95.56, 95.56, 96.67, 97.78, 95.56, 98.89]%	[83.33, 92.31, 83.33, 80.0, 66.67, 72.73, 66.67, 66.67, 76.92, 71.43, 66.67, 72.73, 83.33, 75.0, 90.91]%	[83.33, 100.0, 83.33, 66.67, 50.0, 66.67, 66.67, 66.67, 83.33, 83.33, 66.67, 66.67, 83.33, 100.0, 83.33]%	[98.81, 98.81, 98.81, 100.0, 100.0, 98.81, 97.62, 97.62, 97.62, 96.43, 97.62, 98.81, 98.81, 95.24, 100.0]%	[83.33, 85.71, 83.33, 100.0, 100.0, 80.0, 66.67, 66.67, 71.43, 62.5, 66.67, 80.0, 83.33, 60.0, 100.0]%	[98.81, 100.0, 98.81, 97.67, 96.55, 97.65, 97.62, 97.62, 98.8, 98.78, 97.62, 97.65, 98.81, 100.0, 98.82]%	||	76.58%	76.67%	98.33%	79.31%	98.35%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  0  0  0  1  0  83.33%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  1  0  3  0  0  0  0  0  0  0  0  2  0  50.0%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  4  0  0  2  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  1  0  1  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  1  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  1  0  0  0  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 51.97%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[96.67, 96.67, 95.56, 100.0, 97.78, 100.0, 93.33, 91.11, 98.89, 97.78, 93.33, 97.78, 93.33, 100.0, 98.89]%	[72.73, 76.92, 71.43, 100.0, 80.0, 100.0, 50.0, 42.86, 90.91, 85.71, 40.0, 80.0, 57.14, 100.0, 90.91]%	[66.67, 83.33, 83.33, 100.0, 66.67, 100.0, 50.0, 50.0, 83.33, 100.0, 33.33, 66.67, 66.67, 100.0, 83.33]%	[98.81, 97.62, 96.43, 100.0, 100.0, 100.0, 96.43, 94.05, 100.0, 97.62, 97.62, 100.0, 95.24, 100.0, 100.0]%	[80.0, 71.43, 62.5, 100.0, 100.0, 100.0, 50.0, 37.5, 100.0, 75.0, 50.0, 100.0, 50.0, 100.0, 100.0]%	[97.65, 98.8, 98.78, 100.0, 97.67, 100.0, 96.43, 96.34, 98.82, 100.0, 95.35, 97.67, 97.56, 100.0, 98.82]%	||	75.91%	75.56%	98.25%	78.43%	98.26%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  1  0  0  0  4  0  0  0  0  0  0  0  1  0  0  66.67%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  2  0  0  0  0  3  0  0  1  0  0  0  0  50.0%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  2  0  3  0  0  33.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  1  0  0  0  0  5  83.33%		15
Forest OOB Error: 53.39%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[97.78, 95.56, 97.78, 98.89, 98.89, 100.0, 96.67, 95.56, 96.67, 98.89, 96.67, 96.67, 96.67, 98.89, 98.89]%	[80.0, 71.43, 83.33, 92.31, 90.91, 100.0, 76.92, 60.0, 80.0, 90.91, 72.73, 76.92, 76.92, 90.91, 90.91]%	[66.67, 83.33, 83.33, 100.0, 83.33, 100.0, 83.33, 50.0, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 83.33]%	[100.0, 96.43, 98.81, 98.81, 100.0, 100.0, 97.62, 98.81, 96.43, 100.0, 98.81, 97.62, 97.62, 100.0, 100.0]%	[100.0, 62.5, 83.33, 85.71, 100.0, 100.0, 71.43, 75.0, 66.67, 100.0, 80.0, 71.43, 71.43, 100.0, 100.0]%	[97.67, 98.78, 98.81, 100.0, 98.82, 100.0, 98.8, 96.51, 100.0, 98.82, 97.65, 98.8, 98.8, 98.82, 98.82]%	||	82.28%	82.22%	98.73%	84.5%	98.74%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  1  0  0  0  0  0  0  0  0  0  0  0  83.33%		2
  0  1  5  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  0  0  0  0  1  0  0  0  83.33%		7
  0  0  0  0  0  0  0  3  2  0  0  0  1  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  1  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  1  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 55.38%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	86.67%	98.22%	85.71%	[97.78, 94.44, 97.78, 100.0, 98.89, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 97.78, 97.78, 97.78, 98.89]%	[80.0, 70.59, 83.33, 100.0, 90.91, 90.91, 85.71, 100.0, 90.91, 90.91, 83.33, 83.33, 83.33, 83.33, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 94.05, 98.81, 100.0, 100.0, 100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 98.81, 98.81, 98.81, 100.0]%	[100.0, 54.55, 83.33, 100.0, 100.0, 100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0]%	[97.67, 100.0, 98.81, 100.0, 98.82, 98.82, 100.0, 100.0, 98.82, 98.82, 98.81, 98.81, 98.81, 98.81, 98.82]%	||	87.17%	86.67%	99.05%	89.75%	99.06%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  0  1  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  1  0  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  1  0  0  0  0  0  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  1  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  1  5  83.33%		15
Forest OOB Error: 53.67%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[97.78, 97.78, 97.78, 97.78, 97.78, 98.89, 96.67, 97.78, 100.0, 96.67, 96.67, 100.0, 97.78, 98.89, 98.89]%	[83.33, 83.33, 83.33, 85.71, 80.0, 92.31, 72.73, 83.33, 100.0, 72.73, 72.73, 100.0, 85.71, 92.31, 90.91]%	[83.33, 83.33, 83.33, 100.0, 66.67, 100.0, 66.67, 83.33, 100.0, 66.67, 66.67, 100.0, 100.0, 100.0, 83.33]%	[98.81, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81, 98.81, 100.0, 98.81, 98.81, 100.0, 97.62, 98.81, 100.0]%	[83.33, 83.33, 83.33, 75.0, 100.0, 85.71, 80.0, 83.33, 100.0, 80.0, 80.0, 100.0, 75.0, 85.71, 100.0]%	[98.81, 98.81, 98.81, 100.0, 97.67, 100.0, 97.65, 98.81, 100.0, 97.65, 97.65, 100.0, 100.0, 100.0, 98.82]%	||	85.23%	85.56%	98.97%	86.32%	98.98%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  0  0  0  0  0  1  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  1  4  0  0  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  1  1  0  0  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 58.06%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.05)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[97.78, 97.78, 98.89, 98.89, 98.89, 96.67, 96.67, 97.78, 98.89, 95.56, 96.67, 97.78, 97.78, 98.89, 97.78]%	[83.33, 83.33, 90.91, 92.31, 90.91, 72.73, 72.73, 80.0, 92.31, 71.43, 76.92, 83.33, 83.33, 92.31, 83.33]%	[83.33, 83.33, 83.33, 100.0, 83.33, 66.67, 66.67, 66.67, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[98.81, 98.81, 100.0, 98.81, 100.0, 98.81, 98.81, 100.0, 98.81, 96.43, 97.62, 98.81, 98.81, 98.81, 98.81]%	[83.33, 83.33, 100.0, 85.71, 100.0, 80.0, 80.0, 100.0, 85.71, 62.5, 71.43, 83.33, 83.33, 85.71, 83.33]%	[98.81, 98.81, 98.82, 100.0, 98.82, 97.65, 97.65, 97.67, 100.0, 98.78, 98.8, 98.81, 98.81, 100.0, 98.81]%	||	83.28%	83.33%	98.81%	84.52%	98.82%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  1  0  5  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  1  0  4  0  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  1  4  0  0  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  1  0  0  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  1  0  0  0  5  83.33%		15
Forest OOB Error: 49.43%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.05)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[98.89, 97.78, 95.56, 100.0, 98.89, 100.0, 95.56, 95.56, 98.89, 97.78, 97.78, 98.89, 95.56, 100.0, 100.0]%	[90.91, 85.71, 71.43, 100.0, 90.91, 100.0, 60.0, 60.0, 92.31, 85.71, 83.33, 90.91, 66.67, 100.0, 100.0]%	[83.33, 100.0, 83.33, 100.0, 83.33, 100.0, 50.0, 50.0, 100.0, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0]%	[100.0, 97.62, 96.43, 100.0, 100.0, 100.0, 98.81, 98.81, 98.81, 97.62, 98.81, 100.0, 97.62, 100.0, 100.0]%	[100.0, 75.0, 62.5, 100.0, 100.0, 100.0, 75.0, 75.0, 85.71, 75.0, 83.33, 100.0, 66.67, 100.0, 100.0]%	[98.82, 100.0, 98.78, 100.0, 98.82, 100.0, 96.51, 96.51, 100.0, 100.0, 98.81, 98.82, 97.62, 100.0, 100.0]%	||	85.19%	85.56%	98.97%	86.55%	98.98%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  1  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  1  0  0  0  0  3  0  1  1  0  0  0  0  0  50.0%		7
  0  0  2  0  0  0  0  3  0  0  0  0  1  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  1  0  0  0  0  0  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 46.83%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.05)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[98.89, 98.89, 97.78, 96.67, 96.67, 97.78, 97.78, 94.44, 97.78, 96.67, 96.67, 97.78, 95.56, 96.67, 97.78]%	[90.91, 92.31, 85.71, 66.67, 72.73, 85.71, 85.71, 44.44, 83.33, 76.92, 76.92, 83.33, 66.67, 72.73, 83.33]%	[83.33, 100.0, 100.0, 50.0, 66.67, 100.0, 100.0, 33.33, 83.33, 83.33, 83.33, 83.33, 66.67, 66.67, 83.33]%	[100.0, 98.81, 97.62, 100.0, 98.81, 97.62, 97.62, 98.81, 98.81, 97.62, 97.62, 98.81, 97.62, 98.81, 98.81]%	[100.0, 85.71, 75.0, 100.0, 80.0, 75.0, 75.0, 66.67, 83.33, 71.43, 71.43, 83.33, 66.67, 80.0, 83.33]%	[98.82, 100.0, 100.0, 96.55, 97.65, 100.0, 100.0, 95.4, 98.81, 98.8, 98.8, 98.81, 97.62, 97.65, 98.81]%	||	77.83%	78.89%	98.49%	79.79%	98.51%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  3  0  2  0  0  0  0  1  0  0  0  0  50.0%		4
  0  0  0  0  4  0  1  0  0  0  0  0  1  0  0  66.67%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  1  0  0  0  0  2  1  0  0  0  0  1  1  33.33%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  1  0  0  0  0  1  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  1  0  0  0  0  5  83.33%		15
Forest OOB Error: 52.19%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.05)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[96.67, 97.78, 96.67, 97.78, 97.78, 96.67, 96.67, 95.56, 96.67, 96.67, 97.78, 96.67, 97.78, 98.89, 97.78]%	[72.73, 85.71, 72.73, 83.33, 83.33, 72.73, 80.0, 71.43, 72.73, 76.92, 83.33, 72.73, 80.0, 92.31, 80.0]%	[66.67, 100.0, 66.67, 83.33, 83.33, 66.67, 100.0, 83.33, 66.67, 83.33, 83.33, 66.67, 66.67, 100.0, 66.67]%	[98.81, 97.62, 98.81, 98.81, 98.81, 98.81, 96.43, 96.43, 98.81, 97.62, 98.81, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 80.0, 83.33, 83.33, 80.0, 66.67, 62.5, 80.0, 71.43, 83.33, 80.0, 100.0, 85.71, 100.0]%	[97.65, 100.0, 97.65, 98.81, 98.81, 97.65, 100.0, 98.78, 97.65, 98.8, 98.81, 97.65, 97.67, 100.0, 97.67]%	||	78.67%	78.89%	98.49%	80.75%	98.51%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  1  0  0  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  1  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  1  1  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  4  1  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  1  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 43.78%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.05)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	84.44%	97.93%	83.33%	[98.89, 96.67, 98.89, 97.78, 100.0, 97.78, 96.67, 95.56, 97.78, 100.0, 95.56, 98.89, 97.78, 98.89, 97.78]%	[90.91, 72.73, 90.91, 85.71, 100.0, 80.0, 72.73, 60.0, 85.71, 100.0, 66.67, 92.31, 85.71, 92.31, 83.33]%	[83.33, 66.67, 83.33, 100.0, 100.0, 66.67, 66.67, 50.0, 100.0, 100.0, 66.67, 100.0, 100.0, 100.0, 83.33]%	[100.0, 98.81, 100.0, 97.62, 100.0, 100.0, 98.81, 98.81, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 98.81]%	[100.0, 80.0, 100.0, 75.0, 100.0, 100.0, 80.0, 75.0, 75.0, 100.0, 66.67, 85.71, 75.0, 85.71, 83.33]%	[98.82, 97.65, 98.82, 100.0, 100.0, 97.67, 97.65, 96.51, 100.0, 100.0, 97.62, 100.0, 100.0, 100.0, 98.81]%	||	83.94%	84.44%	98.89%	85.43%	98.9%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  4  0  0  0  0  1  0  1  0  0  0  0  0  0  66.67%		2
  0  0  5  0  0  0  0  0  0  0  0  0  0  1  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  1  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  1  0  0  4  0  0  0  0  1  0  0  0  66.67%		7
  0  0  0  0  0  0  0  3  0  0  2  0  0  0  1  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 57.65%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.05)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	86.67%	98.22%	85.71%	[98.89, 98.89, 100.0, 97.78, 98.89, 100.0, 96.67, 96.67, 100.0, 98.89, 95.56, 96.67, 95.56, 100.0, 98.89]%	[90.91, 92.31, 100.0, 83.33, 90.91, 100.0, 72.73, 72.73, 100.0, 92.31, 71.43, 76.92, 66.67, 100.0, 90.91]%	[83.33, 100.0, 100.0, 83.33, 83.33, 100.0, 66.67, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 100.0, 83.33]%	[100.0, 98.81, 100.0, 98.81, 100.0, 100.0, 98.81, 98.81, 100.0, 98.81, 96.43, 97.62, 97.62, 100.0, 100.0]%	[100.0, 85.71, 100.0, 83.33, 100.0, 100.0, 80.0, 80.0, 100.0, 85.71, 62.5, 71.43, 66.67, 100.0, 100.0]%	[98.82, 100.0, 100.0, 98.81, 98.82, 100.0, 97.65, 97.65, 100.0, 100.0, 98.78, 98.8, 97.62, 100.0, 98.82]%	||	86.74%	86.67%	99.05%	87.69%	99.05%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  1  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  4  0  0  0  0  2  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  0  0  1  0  1  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  1  0  0  0  5  83.33%		15
Forest OOB Error: 56.4%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.0)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[97.78, 98.89, 97.78, 100.0, 100.0, 98.89, 95.56, 97.78, 97.78, 97.78, 97.78, 96.67, 96.67, 100.0, 97.78]%	[83.33, 92.31, 83.33, 100.0, 100.0, 90.91, 66.67, 83.33, 83.33, 83.33, 83.33, 76.92, 76.92, 100.0, 80.0]%	[83.33, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 66.67]%	[98.81, 98.81, 98.81, 100.0, 100.0, 100.0, 97.62, 98.81, 98.81, 98.81, 98.81, 97.62, 97.62, 100.0, 100.0]%	[83.33, 85.71, 83.33, 100.0, 100.0, 100.0, 66.67, 83.33, 83.33, 83.33, 83.33, 71.43, 71.43, 100.0, 100.0]%	[98.81, 100.0, 98.81, 100.0, 100.0, 98.82, 97.62, 98.81, 98.81, 98.81, 98.81, 98.8, 98.8, 100.0, 97.67]%	||	85.58%	85.56%	98.97%	86.35%	98.97%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  0  0  1  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  4  1  0  0  0  1  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  1  0  0  0  0  0  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  1  0  0  0  0  0  0  0  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  1  0  0  1  0  4  66.67%		15
Forest OOB Error: 54.51%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.0)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[97.78, 97.78, 95.56, 97.78, 100.0, 97.78, 97.78, 94.44, 100.0, 97.78, 95.56, 98.89, 97.78, 100.0, 97.78]%	[80.0, 85.71, 66.67, 85.71, 100.0, 80.0, 80.0, 54.55, 100.0, 85.71, 66.67, 90.91, 83.33, 100.0, 85.71]%	[66.67, 100.0, 66.67, 100.0, 100.0, 66.67, 66.67, 50.0, 100.0, 100.0, 66.67, 83.33, 83.33, 100.0, 100.0]%	[100.0, 97.62, 97.62, 97.62, 100.0, 100.0, 100.0, 97.62, 100.0, 97.62, 97.62, 100.0, 98.81, 100.0, 97.62]%	[100.0, 75.0, 66.67, 75.0, 100.0, 100.0, 100.0, 60.0, 100.0, 75.0, 66.67, 100.0, 83.33, 100.0, 75.0]%	[97.67, 100.0, 97.62, 100.0, 100.0, 97.67, 97.67, 96.47, 100.0, 100.0, 97.62, 98.82, 98.81, 100.0, 100.0]%	||	83.0%	83.33%	98.81%	85.11%	98.82%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  4  1  0  0  0  1  0  0  0  0  0  0  0  66.67%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  1  1  0  4  0  0  0  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  4  0  0  2  0  0  0  0  0  66.67%		7
  0  0  1  0  0  0  0  3  0  0  1  0  0  0  1  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 51.6%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.0)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[97.78, 98.89, 98.89, 100.0, 100.0, 95.56, 95.56, 95.56, 97.78, 96.67, 93.33, 98.89, 97.78, 97.78, 97.78]%	[80.0, 92.31, 90.91, 100.0, 100.0, 71.43, 60.0, 66.67, 83.33, 76.92, 57.14, 90.91, 83.33, 80.0, 85.71]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 50.0, 66.67, 83.33, 83.33, 66.67, 83.33, 83.33, 66.67, 100.0]%	[100.0, 98.81, 100.0, 100.0, 100.0, 96.43, 98.81, 97.62, 98.81, 97.62, 95.24, 100.0, 98.81, 100.0, 97.62]%	[100.0, 85.71, 100.0, 100.0, 100.0, 62.5, 75.0, 66.67, 83.33, 71.43, 50.0, 100.0, 83.33, 100.0, 75.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.78, 96.51, 97.62, 98.81, 98.8, 97.56, 98.82, 98.81, 97.67, 100.0]%	||	81.24%	81.11%	98.65%	83.53%	98.66%	
  4  1  0  0  0  0  0  0  1  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  1  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  0  1  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  3  1  0  0  0  0  0  0  2  50.0%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  5  1  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  1  0  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 52.24%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.0)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[98.89, 97.78, 97.78, 97.78, 97.78, 97.78, 96.67, 95.56, 96.67, 96.67, 96.67, 96.67, 97.78, 96.67, 98.89]%	[90.91, 83.33, 80.0, 85.71, 80.0, 83.33, 80.0, 60.0, 76.92, 76.92, 72.73, 72.73, 85.71, 72.73, 92.31]%	[83.33, 83.33, 66.67, 100.0, 66.67, 83.33, 100.0, 50.0, 83.33, 83.33, 66.67, 66.67, 100.0, 66.67, 100.0]%	[100.0, 98.81, 100.0, 97.62, 100.0, 98.81, 96.43, 98.81, 97.62, 97.62, 98.81, 98.81, 97.62, 98.81, 98.81]%	[100.0, 83.33, 100.0, 75.0, 100.0, 83.33, 66.67, 75.0, 71.43, 71.43, 80.0, 80.0, 75.0, 80.0, 85.71]%	[98.82, 98.81, 97.67, 100.0, 97.67, 98.81, 100.0, 96.51, 98.8, 98.8, 97.65, 97.65, 100.0, 97.65, 100.0]%	||	79.56%	80.0%	98.57%	81.79%	98.59%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		2
  0  0  4  0  0  0  0  0  0  0  0  0  1  1  0  66.67%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  1  4  0  1  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  3  1  0  1  0  0  0  1  50.0%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 51.68%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.0)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[97.78, 96.67, 96.67, 100.0, 100.0, 100.0, 95.56, 95.56, 100.0, 98.89, 97.78, 96.67, 97.78, 98.89, 98.89]%	[83.33, 72.73, 76.92, 100.0, 100.0, 100.0, 71.43, 60.0, 100.0, 90.91, 80.0, 76.92, 85.71, 92.31, 90.91]%	[83.33, 66.67, 83.33, 100.0, 100.0, 100.0, 83.33, 50.0, 100.0, 83.33, 66.67, 83.33, 100.0, 100.0, 83.33]%	[98.81, 98.81, 97.62, 100.0, 100.0, 100.0, 96.43, 98.81, 100.0, 100.0, 100.0, 97.62, 97.62, 98.81, 100.0]%	[83.33, 80.0, 71.43, 100.0, 100.0, 100.0, 62.5, 75.0, 100.0, 100.0, 100.0, 71.43, 75.0, 85.71, 100.0]%	[98.81, 97.65, 98.8, 100.0, 100.0, 100.0, 98.78, 96.51, 100.0, 98.82, 97.67, 98.8, 100.0, 100.0, 98.82]%	||	85.41%	85.56%	98.97%	86.96%	98.98%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  1  4  0  0  0  0  1  0  0  0  0  0  0  0  0  66.67%		2
  0  0  5  0  0  0  0  0  0  0  0  0  0  1  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  0  0  0  0  1  0  0  0  83.33%		7
  0  0  2  0  0  0  0  3  0  0  0  0  1  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  1  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 54.18%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.0)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[97.78, 95.56, 100.0, 100.0, 98.89, 96.67, 96.67, 96.67, 95.56, 98.89, 96.67, 97.78, 96.67, 98.89, 97.78]%	[80.0, 60.0, 100.0, 100.0, 90.91, 72.73, 76.92, 76.92, 75.0, 90.91, 72.73, 83.33, 80.0, 92.31, 80.0]%	[66.67, 50.0, 100.0, 100.0, 83.33, 66.67, 83.33, 83.33, 100.0, 83.33, 66.67, 83.33, 100.0, 100.0, 66.67]%	[100.0, 98.81, 100.0, 100.0, 100.0, 98.81, 97.62, 97.62, 95.24, 100.0, 98.81, 98.81, 96.43, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 80.0, 71.43, 71.43, 60.0, 100.0, 80.0, 83.33, 66.67, 85.71, 100.0]%	[97.67, 96.51, 100.0, 100.0, 98.82, 97.65, 98.8, 98.8, 100.0, 98.82, 97.65, 98.81, 100.0, 100.0, 97.67]%	||	82.12%	82.22%	98.73%	84.9%	98.75%	
  4  1  0  0  0  0  0  0  1  0  0  0  0  0  0  66.67%		1
  0  3  0  0  0  0  1  0  2  0  0  0  0  0  0  50.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  1  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  1  0  1  0  4  66.67%		15
Forest OOB Error: 48.37%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 100.0, 100.0, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 92.31, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 85.71, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 100.0, 100.0]%	||	87.92%	87.78%	99.13%	89.48%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	86.67%	98.22%	85.71%	[98.89, 98.89, 97.78, 98.89, 98.89, 97.78, 95.56, 97.78, 97.78, 98.89, 97.78, 97.78, 97.78, 100.0, 98.89]%	[90.91, 92.31, 83.33, 90.91, 90.91, 83.33, 66.67, 83.33, 85.71, 92.31, 83.33, 83.33, 83.33, 100.0, 90.91]%	[83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 66.67, 83.33, 100.0, 100.0, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 100.0, 98.81, 97.62, 98.81, 97.62, 98.81, 98.81, 98.81, 98.81, 100.0, 100.0]%	[100.0, 85.71, 83.33, 100.0, 100.0, 83.33, 66.67, 83.33, 75.0, 85.71, 83.33, 83.33, 83.33, 100.0, 100.0]%	[98.82, 100.0, 98.81, 98.82, 98.82, 98.81, 97.62, 98.81, 100.0, 100.0, 98.81, 98.81, 98.81, 100.0, 98.82]%	||	86.71%	86.67%	99.05%	87.54%	99.05%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  0  0  1  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  4  0  0  1  0  1  0  0  0  66.67%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 43.02%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 100.0, 100.0, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 92.31, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 85.71, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 100.0, 100.0]%	||	87.92%	87.78%	99.13%	89.48%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[98.89, 98.89, 97.78, 98.89, 96.67, 97.78, 95.56, 97.78, 98.89, 96.67, 96.67, 98.89, 94.44, 98.89, 97.78]%	[90.91, 92.31, 83.33, 90.91, 76.92, 83.33, 71.43, 85.71, 90.91, 66.67, 66.67, 92.31, 66.67, 92.31, 80.0]%	[83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33, 50.0, 50.0, 100.0, 83.33, 100.0, 66.67]%	[100.0, 98.81, 98.81, 100.0, 97.62, 98.81, 96.43, 97.62, 100.0, 100.0, 100.0, 98.81, 95.24, 98.81, 100.0]%	[100.0, 85.71, 83.33, 100.0, 71.43, 83.33, 62.5, 75.0, 100.0, 100.0, 100.0, 85.71, 55.56, 85.71, 100.0]%	[98.82, 100.0, 98.81, 98.82, 98.8, 98.81, 98.78, 100.0, 98.82, 96.55, 96.55, 100.0, 98.77, 100.0, 97.67]%	||	82.03%	82.22%	98.73%	85.89%	98.75%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  0  0  1  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  1  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  0  0  1  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  3  0  0  3  0  0  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  3  0  3  0  0  50.0%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  1  0  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 51.98%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 100.0, 100.0, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 92.31, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 85.71, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 100.0, 100.0]%	||	87.92%	87.78%	99.13%	89.48%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[96.67, 97.78, 97.78, 96.67, 97.78, 97.78, 96.67, 98.89, 98.89, 95.56, 97.78, 96.67, 97.78, 100.0, 100.0]%	[72.73, 85.71, 85.71, 76.92, 83.33, 80.0, 66.67, 90.91, 90.91, 71.43, 80.0, 76.92, 85.71, 100.0, 100.0]%	[66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 50.0, 83.33, 83.33, 83.33, 66.67, 83.33, 100.0, 100.0, 100.0]%	[98.81, 97.62, 97.62, 97.62, 98.81, 100.0, 100.0, 100.0, 100.0, 96.43, 100.0, 97.62, 97.62, 100.0, 100.0]%	[80.0, 75.0, 75.0, 71.43, 83.33, 100.0, 100.0, 100.0, 100.0, 62.5, 100.0, 71.43, 75.0, 100.0, 100.0]%	[97.65, 100.0, 100.0, 98.8, 98.81, 97.67, 96.55, 98.82, 98.82, 98.78, 97.67, 98.8, 100.0, 100.0, 100.0]%	||	83.13%	83.33%	98.81%	86.25%	98.83%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  0  0  0  1  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  1  1  4  0  0  0  0  0  0  0  0  0  66.67%		6
  0  0  0  1  0  0  3  0  0  1  0  1  0  0  0  50.0%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 54.55%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 100.0, 100.0, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 92.31, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 85.71, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 100.0, 100.0]%	||	87.92%	87.78%	99.13%	89.48%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[96.67, 97.78, 95.56, 100.0, 97.78, 96.67, 91.11, 96.67, 97.78, 95.56, 97.78, 95.56, 96.67, 98.89, 98.89]%	[72.73, 85.71, 66.67, 100.0, 85.71, 72.73, 42.86, 76.92, 83.33, 60.0, 83.33, 60.0, 72.73, 92.31, 90.91]%	[66.67, 100.0, 66.67, 100.0, 100.0, 66.67, 50.0, 83.33, 83.33, 50.0, 83.33, 50.0, 66.67, 100.0, 83.33]%	[98.81, 97.62, 97.62, 100.0, 97.62, 98.81, 94.05, 97.62, 98.81, 98.81, 98.81, 98.81, 98.81, 98.81, 100.0]%	[80.0, 75.0, 66.67, 100.0, 75.0, 80.0, 37.5, 71.43, 83.33, 75.0, 83.33, 75.0, 80.0, 85.71, 100.0]%	[97.65, 100.0, 97.62, 100.0, 100.0, 97.65, 96.34, 98.8, 98.81, 96.51, 98.81, 96.51, 97.65, 100.0, 98.82]%	||	76.4%	76.67%	98.33%	77.87%	98.34%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  4  0  2  0  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  1  0  0  0  0  1  3  0  0  0  0  1  0  0  0  50.0%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  3  0  0  3  0  0  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  2  0  0  1  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 53.53%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 100.0, 100.0, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 92.31, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 85.71, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 100.0, 100.0]%	||	87.92%	87.78%	99.13%	89.48%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[97.78, 97.78, 97.78, 98.89, 96.67, 98.89, 93.33, 95.56, 100.0, 98.89, 96.67, 97.78, 95.56, 100.0, 98.89]%	[80.0, 85.71, 83.33, 90.91, 72.73, 92.31, 57.14, 60.0, 100.0, 90.91, 76.92, 83.33, 71.43, 100.0, 90.91]%	[66.67, 100.0, 83.33, 83.33, 66.67, 100.0, 66.67, 50.0, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 97.62, 98.81, 100.0, 98.81, 98.81, 95.24, 98.81, 100.0, 100.0, 97.62, 98.81, 96.43, 100.0, 100.0]%	[100.0, 75.0, 83.33, 100.0, 80.0, 85.71, 50.0, 75.0, 100.0, 100.0, 71.43, 83.33, 62.5, 100.0, 100.0]%	[97.67, 100.0, 98.81, 98.82, 97.65, 100.0, 97.56, 96.51, 100.0, 98.82, 98.8, 98.81, 98.78, 100.0, 98.82]%	||	82.38%	82.22%	98.73%	84.42%	98.74%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  0  0  1  0  0  83.33%		3
  0  0  0  5  1  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  4  0  2  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  1  4  0  0  0  0  1  0  0  0  66.67%		7
  0  0  1  0  0  0  0  3  0  0  1  0  1  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 54.4%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[97.78, 97.78, 100.0, 100.0, 97.78, 98.89, 98.89, 95.56, 97.78, 98.89, 95.56, 98.89, 98.89, 98.89, 100.0]%	[80.0, 85.71, 100.0, 100.0, 83.33, 90.91, 90.91, 66.67, 83.33, 90.91, 71.43, 92.31, 90.91, 92.31, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 62.5, 85.71, 100.0, 85.71, 100.0]%	[97.67, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 97.62, 98.81, 98.82, 98.78, 100.0, 98.82, 100.0, 100.0]%	||	87.92%	87.78%	99.13%	89.48%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[98.89, 98.89, 97.78, 96.67, 98.89, 97.78, 95.56, 95.56, 95.56, 91.11, 96.67, 96.67, 95.56, 95.56, 95.56]%	[90.91, 90.91, 80.0, 72.73, 90.91, 83.33, 66.67, 66.67, 71.43, 42.86, 72.73, 72.73, 75.0, 71.43, 60.0]%	[83.33, 83.33, 66.67, 66.67, 83.33, 83.33, 66.67, 66.67, 83.33, 50.0, 66.67, 66.67, 100.0, 83.33, 50.0]%	[100.0, 100.0, 100.0, 98.81, 100.0, 98.81, 97.62, 97.62, 96.43, 94.05, 98.81, 98.81, 95.24, 96.43, 98.81]%	[100.0, 100.0, 100.0, 80.0, 100.0, 83.33, 66.67, 66.67, 62.5, 37.5, 80.0, 80.0, 60.0, 62.5, 75.0]%	[98.82, 98.82, 97.67, 97.65, 98.82, 98.81, 97.62, 97.62, 98.78, 96.34, 97.65, 97.65, 100.0, 98.78, 96.51]%	||	73.89%	73.33%	98.1%	76.94%	98.1%	
  5  0  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		2
  0  0  4  0  0  0  0  0  1  0  0  0  0  1  0  66.67%		3
  0  0  0  4  0  1  0  0  1  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  0  0  1  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  4  0  0  2  0  0  0  0  0  66.67%		7
  0  0  0  1  0  0  0  4  0  0  0  0  1  0  0  66.67%		8
  0  0  0  0  0  0  0  1  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  0  3  0  0  0  2  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  1  0  1  0  3  50.0%		15
Forest OOB Error: 55.51%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[95.56, 96.67, 97.78, 97.78, 97.78, 96.67, 97.78, 98.89, 98.89, 98.89, 97.78, 97.78, 96.67, 98.89, 98.89]%	[66.67, 76.92, 83.33, 80.0, 83.33, 76.92, 85.71, 90.91, 92.31, 90.91, 83.33, 83.33, 76.92, 90.91, 90.91]%	[66.67, 83.33, 83.33, 66.67, 83.33, 83.33, 100.0, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 97.62, 98.81, 100.0, 98.81, 97.62, 97.62, 100.0, 98.81, 100.0, 98.81, 98.81, 97.62, 100.0, 100.0]%	[66.67, 71.43, 83.33, 100.0, 83.33, 71.43, 75.0, 100.0, 85.71, 100.0, 83.33, 83.33, 71.43, 100.0, 100.0]%	[97.62, 98.8, 98.81, 97.67, 98.81, 98.8, 100.0, 98.82, 100.0, 98.82, 98.81, 98.81, 98.8, 98.82, 98.82]%	||	83.5%	83.33%	98.81%	85.0%	98.81%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  1  0  5  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  2  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  1  0  0  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  1  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 53.76%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	84.44%	97.93%	83.33%	[97.78, 98.89, 98.89, 98.89, 98.89, 98.89, 96.67, 97.78, 100.0, 96.67, 94.44, 98.89, 94.44, 98.89, 98.89]%	[80.0, 92.31, 90.91, 90.91, 92.31, 92.31, 66.67, 83.33, 100.0, 80.0, 61.54, 90.91, 61.54, 90.91, 92.31]%	[66.67, 100.0, 83.33, 83.33, 100.0, 100.0, 50.0, 83.33, 100.0, 100.0, 66.67, 83.33, 66.67, 83.33, 100.0]%	[100.0, 98.81, 100.0, 100.0, 98.81, 98.81, 100.0, 98.81, 100.0, 96.43, 96.43, 100.0, 96.43, 100.0, 98.81]%	[100.0, 85.71, 100.0, 100.0, 85.71, 85.71, 100.0, 83.33, 100.0, 66.67, 57.14, 100.0, 57.14, 100.0, 85.71]%	[97.67, 100.0, 98.82, 98.82, 100.0, 100.0, 96.55, 98.81, 100.0, 100.0, 97.59, 98.82, 97.59, 98.82, 100.0]%	||	84.4%	84.44%	98.89%	87.14%	98.9%	
  4  1  0  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  1  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  3  1  0  2  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  1  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 53.82%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[98.89, 98.89, 98.89, 97.78, 98.89, 95.56, 97.78, 96.67, 97.78, 97.78, 96.67, 98.89, 97.78, 95.56, 98.89]%	[90.91, 92.31, 90.91, 80.0, 90.91, 66.67, 85.71, 66.67, 85.71, 85.71, 72.73, 90.91, 85.71, 71.43, 90.91]%	[83.33, 100.0, 83.33, 66.67, 83.33, 66.67, 100.0, 50.0, 100.0, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33]%	[100.0, 98.81, 100.0, 100.0, 100.0, 97.62, 97.62, 100.0, 97.62, 97.62, 98.81, 100.0, 97.62, 96.43, 100.0]%	[100.0, 85.71, 100.0, 100.0, 100.0, 66.67, 75.0, 100.0, 75.0, 75.0, 80.0, 100.0, 75.0, 62.5, 100.0]%	[98.82, 100.0, 98.82, 97.67, 98.82, 97.62, 100.0, 96.55, 100.0, 100.0, 97.65, 98.82, 100.0, 98.78, 98.82]%	||	83.15%	83.33%	98.81%	86.33%	98.83%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  0  0  0  1  0  83.33%		3
  0  0  0  4  0  1  0  0  0  0  0  0  0  1  0  66.67%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  3  1  1  1  0  0  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  1  0  0  0  0  5  83.33%		15
Forest OOB Error: 53.17%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	71.11%	96.15%	69.05%	[95.56, 95.56, 98.89, 96.67, 97.78, 97.78, 92.22, 93.33, 95.56, 94.44, 94.44, 97.78, 96.67, 97.78, 97.78]%	[66.67, 75.0, 90.91, 76.92, 80.0, 83.33, 46.15, 62.5, 60.0, 54.55, 61.54, 80.0, 72.73, 83.33, 80.0]%	[66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 50.0, 83.33, 50.0, 50.0, 66.67, 66.67, 66.67, 83.33, 66.67]%	[97.62, 95.24, 100.0, 97.62, 100.0, 98.81, 95.24, 94.05, 98.81, 97.62, 96.43, 100.0, 98.81, 98.81, 100.0]%	[66.67, 60.0, 100.0, 71.43, 100.0, 83.33, 42.86, 50.0, 75.0, 60.0, 57.14, 100.0, 80.0, 83.33, 100.0]%	[97.62, 100.0, 98.82, 98.8, 97.67, 98.81, 96.39, 98.75, 96.51, 96.47, 97.59, 97.67, 97.65, 98.81, 97.67]%	||	71.58%	71.11%	97.94%	75.32%	97.95%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  0  0  0  1  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  1  4  0  0  0  1  0  0  0  0  0  0  66.67%		5
  0  0  0  1  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  2  0  0  0  0  0  3  1  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  2  0  0  0  0  0  1  3  0  0  0  0  0  0  50.0%		9
  0  0  0  0  0  0  3  0  0  3  0  0  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  1  0  1  0  4  66.67%		15
Forest OOB Error: 54.27%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[97.78, 97.78, 98.89, 98.89, 97.78, 98.89, 97.78, 94.44, 98.89, 93.33, 96.67, 96.67, 100.0, 98.89, 95.56]%	[83.33, 85.71, 90.91, 90.91, 80.0, 90.91, 80.0, 61.54, 90.91, 62.5, 72.73, 76.92, 100.0, 92.31, 66.67]%	[83.33, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 66.67, 83.33, 83.33, 66.67, 83.33, 100.0, 100.0, 66.67]%	[98.81, 97.62, 100.0, 100.0, 100.0, 100.0, 100.0, 96.43, 100.0, 94.05, 98.81, 97.62, 100.0, 98.81, 97.62]%	[83.33, 75.0, 100.0, 100.0, 100.0, 100.0, 100.0, 57.14, 100.0, 50.0, 80.0, 71.43, 100.0, 85.71, 66.67]%	[98.81, 100.0, 98.82, 98.82, 97.67, 98.82, 97.67, 97.59, 98.82, 98.75, 97.65, 98.8, 100.0, 100.0, 97.62]%	||	81.69%	81.11%	98.65%	84.62%	98.66%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  0  1  0  0  0  83.33%		3
  0  0  0  5  0  0  0  0  0  1  0  0  0  0  0  83.33%		4
  0  0  0  0  4  0  0  0  0  1  0  0  0  1  0  66.67%		5
  0  1  0  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  4  0  0  2  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  5  0  0  0  0  0  1  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  1  0  0  0  0  0  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 49.8%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	87.78%	98.37%	86.9%	[97.78, 97.78, 98.89, 98.89, 100.0, 100.0, 95.56, 96.67, 100.0, 97.78, 95.56, 100.0, 96.67, 100.0, 100.0]%	[80.0, 85.71, 92.31, 90.91, 100.0, 100.0, 60.0, 76.92, 100.0, 85.71, 60.0, 100.0, 76.92, 100.0, 100.0]%	[66.67, 100.0, 100.0, 83.33, 100.0, 100.0, 50.0, 83.33, 100.0, 100.0, 50.0, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 98.81, 100.0, 100.0, 100.0, 98.81, 97.62, 100.0, 97.62, 98.81, 100.0, 97.62, 100.0, 100.0]%	[100.0, 75.0, 85.71, 100.0, 100.0, 100.0, 75.0, 71.43, 100.0, 75.0, 75.0, 100.0, 71.43, 100.0, 100.0]%	[97.67, 100.0, 100.0, 98.82, 100.0, 100.0, 96.51, 98.8, 100.0, 100.0, 96.51, 100.0, 98.8, 100.0, 100.0]%	||	87.23%	87.78%	99.13%	88.57%	99.14%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  3  1  0  2  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  3  0  2  0  0  50.0%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  1  0  0  0  0  0  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 48.85%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.15)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	86.67%	98.22%	85.71%	[100.0, 96.67, 97.78, 98.89, 100.0, 98.89, 96.67, 97.78, 98.89, 97.78, 97.78, 98.89, 96.67, 100.0, 96.67]%	[100.0, 76.92, 80.0, 92.31, 100.0, 90.91, 76.92, 83.33, 90.91, 83.33, 83.33, 90.91, 76.92, 100.0, 76.92]%	[100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 97.62, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 98.81, 98.81, 100.0, 97.62, 100.0, 97.62]%	[100.0, 71.43, 100.0, 85.71, 100.0, 100.0, 71.43, 83.33, 100.0, 83.33, 83.33, 100.0, 71.43, 100.0, 71.43]%	[100.0, 98.8, 97.67, 100.0, 100.0, 98.82, 98.8, 98.81, 98.82, 98.81, 98.81, 98.82, 98.8, 100.0, 98.8]%	||	86.85%	86.67%	99.05%	88.1%	99.05%	
  6  0  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  4  0  0  0  0  0  0  0  0  0  1  0  1  66.67%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  1  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  0  0  1  83.33%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  1  0  0  0  0  0  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 53.96%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.15)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[98.89, 95.56, 95.56, 98.89, 98.89, 97.78, 97.78, 96.67, 97.78, 97.78, 97.78, 95.56, 94.44, 100.0, 98.89]%	[90.91, 66.67, 66.67, 92.31, 90.91, 83.33, 83.33, 72.73, 83.33, 83.33, 83.33, 71.43, 61.54, 100.0, 90.91]%	[83.33, 66.67, 66.67, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33]%	[100.0, 97.62, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 98.81, 98.81, 98.81, 96.43, 96.43, 100.0, 100.0]%	[100.0, 66.67, 66.67, 85.71, 100.0, 83.33, 83.33, 80.0, 83.33, 83.33, 83.33, 62.5, 57.14, 100.0, 100.0]%	[98.82, 97.62, 97.62, 100.0, 98.82, 98.81, 98.81, 97.65, 98.81, 98.81, 98.81, 98.78, 97.59, 100.0, 98.82]%	||	81.38%	81.11%	98.65%	82.36%	98.65%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  4  0  0  0  0  1  0  0  0  0  0  1  0  0  66.67%		2
  0  0  4  1  0  0  0  0  0  0  0  1  0  0  0  66.67%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  1  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  2  0  0  0  0  4  0  0  0  0  0  0  0  66.67%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 48.95%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.15)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[97.78, 92.22, 97.78, 98.89, 98.89, 94.44, 93.33, 92.22, 97.78, 95.56, 97.78, 97.78, 98.89, 96.67, 96.67]%	[80.0, 53.33, 80.0, 90.91, 90.91, 61.54, 57.14, 53.33, 83.33, 66.67, 83.33, 80.0, 92.31, 72.73, 72.73]%	[66.67, 66.67, 66.67, 83.33, 83.33, 66.67, 66.67, 66.67, 83.33, 66.67, 83.33, 66.67, 100.0, 66.67, 66.67]%	[100.0, 94.05, 100.0, 100.0, 100.0, 96.43, 95.24, 94.05, 98.81, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81]%	[100.0, 44.44, 100.0, 100.0, 100.0, 57.14, 50.0, 44.44, 83.33, 66.67, 83.33, 100.0, 85.71, 80.0, 80.0]%	[97.67, 97.53, 97.67, 98.82, 98.82, 97.59, 97.56, 97.53, 98.81, 97.62, 98.81, 97.67, 100.0, 97.65, 97.65]%	||	74.55%	73.33%	98.1%	78.34%	98.09%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  4  0  0  0  0  2  0  0  0  0  0  0  0  0  66.67%		2
  0  0  4  0  0  0  0  1  0  0  0  0  0  0  1  66.67%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  4  2  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  0  0  1  0  1  0  0  66.67%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  2  0  0  0  0  0  0  0  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  1  0  1  0  0  0  0  4  66.67%		15
Forest OOB Error: 50.93%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.15)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[97.78, 97.78, 97.78, 100.0, 100.0, 98.89, 96.67, 96.67, 97.78, 96.67, 97.78, 96.67, 98.89, 100.0, 97.78]%	[80.0, 85.71, 83.33, 100.0, 100.0, 90.91, 76.92, 72.73, 85.71, 76.92, 83.33, 72.73, 90.91, 100.0, 83.33]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 100.0, 97.62, 98.81, 97.62, 97.62, 98.81, 98.81, 100.0, 100.0, 98.81]%	[100.0, 75.0, 83.33, 100.0, 100.0, 100.0, 71.43, 80.0, 75.0, 71.43, 83.33, 80.0, 100.0, 100.0, 83.33]%	[97.67, 100.0, 98.81, 100.0, 100.0, 98.82, 98.8, 97.65, 100.0, 98.8, 98.81, 97.65, 98.82, 100.0, 98.81]%	||	85.5%	85.56%	98.97%	86.86%	98.98%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  4  0  0  0  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  1  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 53.12%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.15)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[98.89, 97.78, 96.67, 98.89, 98.89, 100.0, 96.67, 95.56, 100.0, 98.89, 93.33, 98.89, 95.56, 97.78, 98.89]%	[90.91, 85.71, 72.73, 90.91, 92.31, 100.0, 72.73, 66.67, 100.0, 92.31, 50.0, 92.31, 66.67, 83.33, 90.91]%	[83.33, 100.0, 66.67, 83.33, 100.0, 100.0, 66.67, 66.67, 100.0, 100.0, 50.0, 100.0, 66.67, 83.33, 83.33]%	[100.0, 97.62, 98.81, 100.0, 98.81, 100.0, 98.81, 97.62, 100.0, 98.81, 96.43, 98.81, 97.62, 98.81, 100.0]%	[100.0, 75.0, 80.0, 100.0, 85.71, 100.0, 80.0, 66.67, 100.0, 85.71, 50.0, 85.71, 66.67, 83.33, 100.0]%	[98.82, 100.0, 97.65, 98.82, 100.0, 100.0, 97.65, 97.62, 100.0, 100.0, 96.43, 100.0, 97.62, 98.81, 98.82]%	||	83.17%	83.33%	98.81%	83.92%	98.82%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  4  0  0  0  0  0  0  0  1  0  0  1  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  4  0  0  1  0  1  0  0  0  66.67%		7
  0  0  1  0  0  0  0  4  0  0  1  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  3  0  2  0  0  50.0%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  1  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  1  0  0  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 53.23%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.15)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[96.67, 95.56, 97.78, 97.78, 98.89, 97.78, 95.56, 94.44, 96.67, 98.89, 96.67, 98.89, 94.44, 98.89, 98.89]%	[72.73, 60.0, 80.0, 83.33, 90.91, 83.33, 60.0, 66.67, 80.0, 92.31, 72.73, 90.91, 66.67, 92.31, 90.91]%	[66.67, 50.0, 66.67, 83.33, 83.33, 83.33, 50.0, 83.33, 100.0, 100.0, 66.67, 83.33, 83.33, 100.0, 83.33]%	[98.81, 98.81, 100.0, 98.81, 100.0, 98.81, 98.81, 95.24, 96.43, 98.81, 98.81, 100.0, 95.24, 98.81, 100.0]%	[80.0, 75.0, 100.0, 83.33, 100.0, 83.33, 75.0, 55.56, 66.67, 85.71, 80.0, 100.0, 55.56, 85.71, 100.0]%	[97.65, 96.51, 97.67, 98.81, 98.82, 98.81, 96.51, 98.77, 100.0, 100.0, 97.65, 98.82, 98.77, 100.0, 98.82]%	||	78.85%	78.89%	98.49%	81.72%	98.51%	
  4  1  0  0  0  0  0  0  1  0  0  0  0  0  0  66.67%		1
  1  3  0  0  0  0  1  0  1  0  0  0  0  0  0  50.0%		2
  0  0  4  1  0  0  0  0  0  0  0  0  1  0  0  66.67%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  1  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  3  3  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  1  5  83.33%		15
Forest OOB Error: 50.61%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[97.78, 96.67, 100.0, 98.89, 100.0, 96.67, 95.56, 95.56, 98.89, 97.78, 98.89, 96.67, 95.56, 98.89, 96.67]%	[80.0, 76.92, 100.0, 90.91, 100.0, 76.92, 66.67, 66.67, 92.31, 83.33, 90.91, 76.92, 71.43, 90.91, 72.73]%	[66.67, 83.33, 100.0, 83.33, 100.0, 83.33, 66.67, 66.67, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 66.67]%	[100.0, 97.62, 100.0, 100.0, 100.0, 97.62, 97.62, 97.62, 98.81, 98.81, 100.0, 97.62, 96.43, 100.0, 98.81]%	[100.0, 71.43, 100.0, 100.0, 100.0, 71.43, 66.67, 66.67, 85.71, 83.33, 100.0, 71.43, 62.5, 100.0, 80.0]%	[97.67, 98.8, 100.0, 98.82, 100.0, 98.8, 97.62, 97.62, 100.0, 98.81, 98.82, 98.8, 98.78, 98.82, 97.65]%	||	82.44%	82.22%	98.73%	83.94%	98.73%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  4  0  0  0  0  1  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  0  0  0  0  1  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  0  0  1  0  4  66.67%		15
Forest OOB Error: 56.39%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	88.89%	98.52%	88.1%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 96.67, 97.78, 96.67, 98.89, 97.78, 98.89, 98.89, 100.0, 100.0]%	[80.0, 85.71, 92.31, 100.0, 100.0, 83.33, 76.92, 83.33, 76.92, 90.91, 83.33, 90.91, 90.91, 100.0, 100.0]%	[66.67, 100.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 97.62, 98.81, 97.62, 100.0, 98.81, 100.0, 100.0, 100.0, 100.0]%	[100.0, 75.0, 85.71, 100.0, 100.0, 83.33, 71.43, 83.33, 71.43, 100.0, 83.33, 100.0, 100.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 100.0, 100.0, 98.81, 98.8, 98.81, 98.8, 98.82, 98.81, 98.82, 98.82, 100.0, 100.0]%	||	88.97%	88.89%	99.21%	90.24%	99.21%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  1  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  1  0  0  0  0  0  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  1  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 52.49%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[96.67, 98.89, 96.67, 97.78, 98.89, 98.89, 94.44, 96.67, 98.89, 96.67, 95.56, 95.56, 95.56, 98.89, 97.78]%	[66.67, 92.31, 72.73, 80.0, 92.31, 92.31, 61.54, 76.92, 92.31, 66.67, 66.67, 71.43, 66.67, 92.31, 83.33]%	[50.0, 100.0, 66.67, 66.67, 100.0, 100.0, 66.67, 83.33, 100.0, 50.0, 66.67, 83.33, 66.67, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 98.81, 98.81, 96.43, 97.62, 98.81, 100.0, 97.62, 96.43, 97.62, 98.81, 98.81]%	[100.0, 85.71, 80.0, 100.0, 85.71, 85.71, 57.14, 71.43, 85.71, 100.0, 66.67, 62.5, 66.67, 85.71, 83.33]%	[96.55, 100.0, 97.65, 97.67, 100.0, 100.0, 97.59, 98.8, 100.0, 96.55, 97.62, 98.78, 97.62, 100.0, 98.81]%	||	78.28%	78.89%	98.49%	81.09%	98.51%	
  3  1  0  0  0  0  0  0  1  0  0  1  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  4  0  0  0  0  0  0  0  1  0  0  1  0  66.67%		3
  0  0  0  4  1  0  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  1  4  0  0  0  0  1  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  1  0  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 50.4%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[95.56, 98.89, 97.78, 96.67, 98.89, 97.78, 96.67, 97.78, 98.89, 94.44, 96.67, 95.56, 94.44, 98.89, 98.89]%	[66.67, 92.31, 80.0, 80.0, 92.31, 80.0, 66.67, 83.33, 90.91, 66.67, 72.73, 66.67, 61.54, 92.31, 90.91]%	[66.67, 100.0, 66.67, 100.0, 100.0, 66.67, 50.0, 83.33, 83.33, 83.33, 66.67, 66.67, 66.67, 100.0, 83.33]%	[97.62, 98.81, 100.0, 96.43, 98.81, 100.0, 100.0, 98.81, 100.0, 95.24, 98.81, 97.62, 96.43, 98.81, 100.0]%	[66.67, 85.71, 100.0, 66.67, 85.71, 100.0, 100.0, 83.33, 100.0, 55.56, 80.0, 66.67, 57.14, 85.71, 100.0]%	[97.62, 100.0, 97.67, 100.0, 100.0, 97.67, 96.55, 98.81, 98.82, 98.77, 97.65, 97.62, 97.59, 100.0, 98.82]%	||	78.87%	78.89%	98.49%	82.21%	98.51%	
  4  1  0  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  1  0  4  0  1  0  0  0  0  0  0  0  0  0  0  66.67%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  4  0  0  0  1  0  0  0  1  0  66.67%		6
  0  0  0  2  0  0  3  0  0  0  0  1  0  0  0  50.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  1  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  1  0  0  0  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 48.09%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 92.22, 93.33, 100.0, 96.67, 94.44, 98.89, 96.67, 98.89, 96.67]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 53.33, 57.14, 100.0, 66.67, 54.55, 90.91, 72.73, 92.31, 76.92]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 66.67, 100.0, 50.0, 50.0, 83.33, 66.67, 100.0, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 94.05, 95.24, 100.0, 100.0, 97.62, 100.0, 98.81, 98.81, 97.62]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 44.44, 50.0, 100.0, 100.0, 60.0, 100.0, 80.0, 85.71, 71.43]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.53, 97.56, 100.0, 96.55, 96.47, 98.82, 97.65, 100.0, 98.8]%	||	80.3%	80.0%	98.57%	83.33%	98.58%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  0  0  0  0  0  1  0  83.33%		6
  0  0  0  0  0  1  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  3  0  0  3  0  0  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  3  0  1  0  0  50.0%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  1  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 50.4%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[95.56, 96.67, 95.56, 98.89, 97.78, 96.67, 95.56, 95.56, 98.89, 95.56, 97.78, 96.67, 96.67, 97.78, 97.78]%	[66.67, 72.73, 71.43, 92.31, 80.0, 72.73, 60.0, 60.0, 92.31, 75.0, 80.0, 76.92, 76.92, 83.33, 83.33]%	[66.67, 66.67, 83.33, 100.0, 66.67, 66.67, 50.0, 50.0, 100.0, 100.0, 66.67, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 96.43, 98.81, 100.0, 98.81, 98.81, 98.81, 98.81, 95.24, 100.0, 97.62, 97.62, 98.81, 98.81]%	[66.67, 80.0, 62.5, 85.71, 100.0, 80.0, 75.0, 75.0, 85.71, 60.0, 100.0, 71.43, 71.43, 83.33, 83.33]%	[97.62, 97.65, 98.78, 100.0, 97.67, 97.65, 96.51, 96.51, 100.0, 100.0, 97.67, 98.8, 98.8, 98.81, 98.81]%	||	76.25%	76.67%	98.33%	78.67%	98.35%	
  4  1  0  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		1
  1  4  0  0  0  0  1  0  0  0  0  0  0  0  0  66.67%		2
  1  0  5  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  4  0  0  0  0  0  0  1  0  0  0  66.67%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  1  3  0  0  2  0  0  0  0  0  50.0%		7
  0  0  2  0  0  0  0  3  0  0  0  0  1  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  1  0  0  0  0  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  5  1  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  1  0  0  5  83.33%		15
Forest OOB Error: 58.44%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.05)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[98.89, 97.78, 97.78, 98.89, 98.89, 98.89, 96.67, 97.78, 100.0, 97.78, 97.78, 97.78, 96.67, 97.78, 97.78]%	[90.91, 83.33, 80.0, 92.31, 90.91, 90.91, 76.92, 83.33, 100.0, 83.33, 83.33, 83.33, 76.92, 85.71, 83.33]%	[83.33, 83.33, 66.67, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 98.81, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 97.62, 98.81]%	[100.0, 83.33, 100.0, 85.71, 100.0, 100.0, 71.43, 83.33, 100.0, 83.33, 83.33, 83.33, 71.43, 75.0, 83.33]%	[98.82, 98.81, 97.67, 100.0, 98.82, 98.82, 98.8, 98.81, 100.0, 98.81, 98.81, 98.81, 98.8, 100.0, 98.81]%	||	85.64%	85.56%	98.97%	86.9%	98.97%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  4  1  0  0  0  0  0  0  0  0  1  0  0  66.67%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  0  0  0  0  0  1  0  83.33%		6
  0  0  0  0  0  0  5  0  0  0  0  1  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  0  0  1  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 50.19%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.05)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	74.44%	96.59%	72.62%	[98.89, 98.89, 97.78, 98.89, 97.78, 95.56, 93.33, 97.78, 95.56, 92.22, 95.56, 96.67, 96.67, 96.67, 96.67]%	[90.91, 92.31, 83.33, 90.91, 83.33, 66.67, 50.0, 80.0, 71.43, 46.15, 66.67, 72.73, 76.92, 76.92, 72.73]%	[83.33, 100.0, 83.33, 83.33, 83.33, 66.67, 50.0, 66.67, 83.33, 50.0, 66.67, 66.67, 83.33, 83.33, 66.67]%	[100.0, 98.81, 98.81, 100.0, 98.81, 97.62, 96.43, 100.0, 96.43, 95.24, 97.62, 98.81, 97.62, 97.62, 98.81]%	[100.0, 85.71, 83.33, 100.0, 83.33, 66.67, 50.0, 100.0, 62.5, 42.86, 66.67, 80.0, 71.43, 71.43, 80.0]%	[98.82, 100.0, 98.81, 98.82, 98.81, 97.62, 96.43, 97.67, 98.78, 96.39, 97.62, 97.65, 98.8, 98.8, 97.65]%	||	74.73%	74.44%	98.17%	76.26%	98.18%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  0  0  1  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  1  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  1  3  0  0  2  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  2  4  66.67%		15
Forest OOB Error: 53.88%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.05)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	86.67%	98.22%	85.71%	[95.56, 97.78, 100.0, 100.0, 98.89, 97.78, 96.67, 97.78, 96.67, 97.78, 98.89, 98.89, 98.89, 98.89, 98.89]%	[71.43, 83.33, 100.0, 100.0, 90.91, 80.0, 72.73, 83.33, 76.92, 85.71, 92.31, 90.91, 90.91, 92.31, 90.91]%	[83.33, 83.33, 100.0, 100.0, 83.33, 66.67, 66.67, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 100.0, 83.33]%	[96.43, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 98.81, 97.62, 97.62, 98.81, 100.0, 100.0, 98.81, 100.0]%	[62.5, 83.33, 100.0, 100.0, 100.0, 100.0, 80.0, 83.33, 71.43, 75.0, 85.71, 100.0, 100.0, 85.71, 100.0]%	[98.78, 98.81, 100.0, 100.0, 98.82, 97.67, 97.65, 98.81, 98.8, 100.0, 100.0, 98.82, 98.82, 100.0, 98.82]%	||	86.78%	86.67%	99.05%	88.47%	99.05%	
  5  0  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		1
  1  5  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  1  0  0  0  0  4  0  0  0  0  0  0  0  1  0  66.67%		6
  1  0  0  0  0  0  4  0  0  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  1  0  0  0  0  0  0  83.33%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 51.95%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.05)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[97.78, 97.78, 98.89, 98.89, 98.89, 96.67, 94.44, 95.56, 98.89, 96.67, 96.67, 98.89, 94.44, 98.89, 96.67]%	[83.33, 83.33, 90.91, 92.31, 90.91, 72.73, 61.54, 60.0, 92.31, 72.73, 76.92, 92.31, 61.54, 92.31, 72.73]%	[83.33, 83.33, 83.33, 100.0, 83.33, 66.67, 66.67, 50.0, 100.0, 66.67, 83.33, 100.0, 66.67, 100.0, 66.67]%	[98.81, 98.81, 100.0, 98.81, 100.0, 98.81, 96.43, 98.81, 98.81, 98.81, 97.62, 98.81, 96.43, 98.81, 98.81]%	[83.33, 83.33, 100.0, 85.71, 100.0, 80.0, 57.14, 75.0, 85.71, 80.0, 71.43, 85.71, 57.14, 85.71, 80.0]%	[98.81, 98.81, 98.82, 100.0, 98.82, 97.65, 97.59, 96.51, 100.0, 97.65, 98.8, 100.0, 97.59, 100.0, 97.65]%	||	79.73%	80.0%	98.57%	80.68%	98.58%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  1  5  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  1  4  0  0  0  0  1  0  0  0  66.67%		7
  0  0  0  0  0  0  0  3  0  0  1  0  1  0  1  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  2  0  0  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  1  0  0  0  0  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  2  0  4  66.67%		15
Forest OOB Error: 51.21%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.05)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[96.67, 95.56, 97.78, 98.89, 98.89, 97.78, 94.44, 95.56, 96.67, 96.67, 95.56, 95.56, 96.67, 98.89, 97.78]%	[72.73, 66.67, 83.33, 90.91, 90.91, 83.33, 70.59, 66.67, 76.92, 66.67, 66.67, 66.67, 76.92, 92.31, 80.0]%	[66.67, 66.67, 83.33, 83.33, 83.33, 83.33, 100.0, 66.67, 83.33, 50.0, 66.67, 66.67, 83.33, 100.0, 66.67]%	[98.81, 97.62, 98.81, 100.0, 100.0, 98.81, 94.05, 97.62, 97.62, 100.0, 97.62, 97.62, 97.62, 98.81, 100.0]%	[80.0, 66.67, 83.33, 100.0, 100.0, 83.33, 54.55, 66.67, 71.43, 100.0, 66.67, 66.67, 71.43, 85.71, 100.0]%	[97.65, 97.62, 98.81, 98.82, 98.82, 98.81, 100.0, 97.62, 98.8, 96.55, 97.62, 97.62, 98.8, 100.0, 97.67]%	||	76.75%	76.67%	98.33%	79.76%	98.35%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  4  0  0  0  0  2  0  0  0  0  0  0  0  0  66.67%		2
  0  0  5  0  0  0  0  1  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  1  0  0  66.67%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  1  0  1  0  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  1  0  1  0  0  0  0  0  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 55.74%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.05)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	71.11%	96.15%	69.05%	[96.67, 96.67, 95.56, 95.56, 97.78, 94.44, 94.44, 96.67, 98.89, 95.56, 96.67, 94.44, 97.78, 94.44, 96.67]%	[72.73, 72.73, 71.43, 60.0, 83.33, 61.54, 70.59, 76.92, 92.31, 66.67, 72.73, 54.55, 83.33, 54.55, 66.67]%	[66.67, 66.67, 83.33, 50.0, 83.33, 66.67, 100.0, 83.33, 100.0, 66.67, 66.67, 50.0, 83.33, 50.0, 50.0]%	[98.81, 98.81, 96.43, 98.81, 98.81, 96.43, 94.05, 97.62, 98.81, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0]%	[80.0, 80.0, 62.5, 75.0, 83.33, 57.14, 54.55, 71.43, 85.71, 66.67, 80.0, 60.0, 83.33, 60.0, 100.0]%	[97.65, 97.65, 98.78, 96.51, 98.81, 97.59, 100.0, 98.8, 100.0, 97.62, 97.65, 96.47, 98.81, 96.47, 96.55]%	||	70.67%	71.11%	97.94%	73.31%	97.96%	
  4  1  0  0  0  0  1  0  0  0  0  0  0  0  0  66.67%		1
  1  4  0  0  0  0  1  0  0  0  0  0  0  0  0  66.67%		2
  0  0  5  1  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  3  1  2  0  0  0  0  0  0  0  0  0  50.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  1  0  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  4  0  2  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  2  0  0  1  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  1  0  0  1  1  0  0  0  0  0  0  3  0  50.0%		14
  0  0  0  0  0  0  0  1  0  1  0  0  0  1  3  50.0%		15
Forest OOB Error: 53.49%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.0)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	84.44%	97.93%	83.33%	[97.78, 96.67, 98.89, 100.0, 100.0, 98.89, 96.67, 97.78, 96.67, 94.44, 97.78, 96.67, 98.89, 98.89, 98.89]%	[80.0, 76.92, 90.91, 100.0, 100.0, 90.91, 76.92, 85.71, 80.0, 54.55, 83.33, 72.73, 90.91, 92.31, 90.91]%	[66.67, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 100.0, 100.0, 50.0, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 100.0, 97.62, 97.62, 96.43, 97.62, 98.81, 98.81, 100.0, 98.81, 100.0]%	[100.0, 71.43, 100.0, 100.0, 100.0, 100.0, 71.43, 75.0, 66.67, 60.0, 83.33, 80.0, 100.0, 85.71, 100.0]%	[97.67, 98.8, 98.82, 100.0, 100.0, 98.82, 98.8, 100.0, 100.0, 96.47, 98.81, 97.65, 98.82, 100.0, 98.82]%	||	84.41%	84.44%	98.89%	86.24%	98.9%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  0  0  0  0  1  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  2  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 47.92%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.0)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[96.67, 94.44, 98.89, 100.0, 98.89, 98.89, 96.67, 94.44, 100.0, 96.67, 92.22, 98.89, 94.44, 98.89, 97.78]%	[72.73, 61.54, 90.91, 100.0, 90.91, 90.91, 66.67, 54.55, 100.0, 80.0, 46.15, 90.91, 66.67, 92.31, 83.33]%	[66.67, 66.67, 83.33, 100.0, 83.33, 83.33, 50.0, 50.0, 100.0, 100.0, 50.0, 83.33, 83.33, 100.0, 83.33]%	[98.81, 96.43, 100.0, 100.0, 100.0, 100.0, 100.0, 97.62, 100.0, 96.43, 95.24, 100.0, 95.24, 98.81, 98.81]%	[80.0, 57.14, 100.0, 100.0, 100.0, 100.0, 100.0, 60.0, 100.0, 66.67, 42.86, 100.0, 55.56, 85.71, 83.33]%	[97.65, 97.59, 98.82, 100.0, 98.82, 98.82, 96.55, 96.47, 100.0, 100.0, 96.39, 98.82, 98.77, 100.0, 98.81]%	||	79.17%	78.89%	98.49%	82.08%	98.5%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  1  4  0  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		2
  0  0  5  0  0  0  0  0  0  0  1  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  1  0  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  3  1  0  2  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  3  0  0  2  0  1  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  3  0  2  0  0  50.0%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 48.09%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.0)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[98.89, 98.89, 97.78, 100.0, 98.89, 97.78, 97.78, 95.56, 98.89, 96.67, 95.56, 98.89, 94.44, 97.78, 96.67]%	[90.91, 92.31, 85.71, 100.0, 90.91, 80.0, 80.0, 66.67, 92.31, 80.0, 60.0, 90.91, 66.67, 85.71, 66.67]%	[83.33, 100.0, 100.0, 100.0, 83.33, 66.67, 66.67, 66.67, 100.0, 100.0, 50.0, 83.33, 83.33, 100.0, 50.0]%	[100.0, 98.81, 97.62, 100.0, 100.0, 100.0, 100.0, 97.62, 98.81, 96.43, 98.81, 100.0, 95.24, 97.62, 100.0]%	[100.0, 85.71, 75.0, 100.0, 100.0, 100.0, 100.0, 66.67, 85.71, 66.67, 75.0, 100.0, 55.56, 75.0, 100.0]%	[98.82, 100.0, 100.0, 100.0, 98.82, 97.67, 97.67, 97.62, 100.0, 100.0, 96.51, 98.82, 98.77, 100.0, 96.55]%	||	81.92%	82.22%	98.73%	85.69%	98.75%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  4  1  0  1  0  0  0  0  0  66.67%		7
  0  0  1  0  0  0  0  4  0  0  0  0  1  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  3  0  3  0  0  50.0%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  1  0  0  0  1  3  50.0%		15
Forest OOB Error: 48.59%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.0)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[98.89, 96.67, 98.89, 100.0, 98.89, 96.67, 95.56, 97.78, 96.67, 98.89, 96.67, 98.89, 97.78, 96.67, 97.78]%	[90.91, 72.73, 90.91, 100.0, 92.31, 76.92, 75.0, 80.0, 76.92, 90.91, 76.92, 92.31, 83.33, 66.67, 83.33]%	[83.33, 66.67, 83.33, 100.0, 100.0, 83.33, 100.0, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 50.0, 83.33]%	[100.0, 98.81, 100.0, 100.0, 98.81, 97.62, 95.24, 100.0, 97.62, 100.0, 97.62, 98.81, 98.81, 100.0, 98.81]%	[100.0, 80.0, 100.0, 100.0, 85.71, 71.43, 60.0, 100.0, 71.43, 100.0, 71.43, 85.71, 83.33, 100.0, 83.33]%	[98.82, 97.65, 98.82, 100.0, 100.0, 98.8, 100.0, 97.67, 98.8, 98.82, 98.8, 100.0, 98.81, 96.55, 98.81]%	||	83.28%	83.33%	98.81%	86.16%	98.82%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  4  0  0  0  0  1  0  1  0  0  0  0  0  0  66.67%		2
  0  0  5  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  1  2  0  0  0  0  0  0  0  3  0  50.0%		14
  0  0  0  0  0  0  1  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 49.22%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.0)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	86.67%	98.22%	85.71%	[98.89, 96.67, 97.78, 100.0, 98.89, 100.0, 96.67, 96.67, 100.0, 98.89, 96.67, 96.67, 97.78, 98.89, 98.89]%	[90.91, 80.0, 80.0, 100.0, 90.91, 100.0, 72.73, 72.73, 100.0, 90.91, 76.92, 80.0, 83.33, 92.31, 90.91]%	[83.33, 100.0, 66.67, 100.0, 83.33, 100.0, 66.67, 66.67, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 83.33]%	[100.0, 96.43, 100.0, 100.0, 100.0, 100.0, 98.81, 98.81, 100.0, 100.0, 97.62, 96.43, 98.81, 98.81, 100.0]%	[100.0, 66.67, 100.0, 100.0, 100.0, 100.0, 80.0, 80.0, 100.0, 100.0, 71.43, 66.67, 83.33, 85.71, 100.0]%	[98.82, 100.0, 97.67, 100.0, 98.82, 100.0, 97.65, 97.65, 100.0, 98.82, 98.8, 100.0, 98.81, 100.0, 98.82]%	||	86.78%	86.67%	99.05%	88.92%	99.06%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  1  4  0  0  0  0  0  0  0  0  0  1  0  0  66.67%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  4  0  0  0  0  2  0  0  0  66.67%		7
  0  1  0  0  0  0  0  4  0  0  1  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  1  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 51.38%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.0)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (5, 270, 2)
 test size = (5, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	87.78%	98.37%	86.9%	[96.67, 97.78, 100.0, 100.0, 97.78, 100.0, 98.89, 95.56, 98.89, 98.89, 95.56, 98.89, 98.89, 97.78, 100.0]%	[72.73, 85.71, 100.0, 100.0, 83.33, 100.0, 90.91, 66.67, 90.91, 90.91, 71.43, 92.31, 90.91, 83.33, 100.0]%	[66.67, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0]%	[98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 100.0, 100.0, 83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 62.5, 85.71, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 98.81, 100.0, 98.82, 97.62, 98.82, 98.82, 98.78, 100.0, 98.82, 98.81, 100.0]%	||	87.94%	87.78%	99.13%	89.1%	99.13%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
 test size = (5, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[98.89, 96.67, 100.0, 100.0, 100.0, 97.78, 93.33, 98.89, 98.89, 94.44, 96.67, 97.78, 96.67, 97.78, 98.89]%	[90.91, 72.73, 100.0, 100.0, 100.0, 80.0, 62.5, 90.91, 90.91, 54.55, 76.92, 83.33, 76.92, 85.71, 90.91]%	[83.33, 66.67, 100.0, 100.0, 100.0, 66.67, 83.33, 83.33, 83.33, 50.0, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 98.81, 100.0, 100.0, 100.0, 100.0, 94.05, 100.0, 100.0, 97.62, 97.62, 98.81, 97.62, 97.62, 100.0]%	[100.0, 80.0, 100.0, 100.0, 100.0, 100.0, 50.0, 100.0, 100.0, 60.0, 71.43, 83.33, 71.43, 75.0, 100.0]%	[98.82, 97.65, 100.0, 100.0, 100.0, 97.67, 98.75, 98.82, 98.82, 96.47, 98.8, 98.81, 98.8, 100.0, 98.82]%	||	83.75%	83.33%	98.81%	86.08%	98.82%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  4  0  0  0  0  2  0  0  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  4  0  0  0  0  0  0  0  2  0  66.67%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 49.43%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	86.75%	86.67%	99.05%	88.97%	99.06%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[98.89, 98.89, 97.78, 97.78, 98.89, 96.67, 97.78, 95.56, 97.78, 97.78, 97.78, 96.67, 97.78, 96.67, 97.78]%	[90.91, 92.31, 83.33, 85.71, 90.91, 66.67, 83.33, 71.43, 85.71, 83.33, 80.0, 76.92, 85.71, 72.73, 80.0]%	[83.33, 100.0, 83.33, 100.0, 83.33, 50.0, 83.33, 83.33, 100.0, 83.33, 66.67, 83.33, 100.0, 66.67, 66.67]%	[100.0, 98.81, 98.81, 97.62, 100.0, 100.0, 98.81, 96.43, 97.62, 98.81, 100.0, 97.62, 97.62, 98.81, 100.0]%	[100.0, 85.71, 83.33, 75.0, 100.0, 100.0, 83.33, 62.5, 75.0, 83.33, 100.0, 71.43, 75.0, 80.0, 100.0]%	[98.82, 100.0, 98.81, 100.0, 98.82, 96.55, 98.81, 98.78, 100.0, 98.81, 97.67, 98.8, 100.0, 97.65, 97.67]%	||	81.93%	82.22%	98.73%	84.98%	98.75%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  1  0  3  0  0  1  0  0  0  0  1  0  50.0%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  1  0  0  0  0  0  0  0  1  0  4  0  66.67%		14
  0  0  0  0  0  0  0  1  0  0  0  0  1  0  4  66.67%		15
Forest OOB Error: 46.62%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	86.75%	86.67%	99.05%	88.97%	99.06%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[97.78, 96.67, 96.67, 100.0, 96.67, 97.78, 92.22, 97.78, 96.67, 95.56, 96.67, 97.78, 97.78, 97.78, 97.78]%	[83.33, 72.73, 76.92, 100.0, 66.67, 80.0, 58.82, 80.0, 76.92, 66.67, 76.92, 80.0, 83.33, 85.71, 83.33]%	[83.33, 66.67, 83.33, 100.0, 50.0, 66.67, 83.33, 66.67, 83.33, 66.67, 83.33, 66.67, 83.33, 100.0, 83.33]%	[98.81, 98.81, 97.62, 100.0, 100.0, 100.0, 92.86, 100.0, 97.62, 97.62, 97.62, 100.0, 98.81, 97.62, 98.81]%	[83.33, 80.0, 71.43, 100.0, 100.0, 100.0, 45.45, 100.0, 71.43, 66.67, 71.43, 100.0, 83.33, 75.0, 83.33]%	[98.81, 97.65, 98.8, 100.0, 96.55, 97.67, 98.73, 97.67, 98.8, 97.62, 98.8, 97.67, 98.81, 100.0, 98.81]%	||	78.09%	77.78%	98.41%	82.09%	98.43%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  1  4  0  0  0  0  1  0  0  0  0  0  0  0  0  66.67%		2
  0  0  5  0  0  0  0  0  0  0  0  0  0  1  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  2  0  3  0  1  0  0  0  0  0  0  0  0  50.0%		5
  0  0  0  0  0  4  0  0  1  1  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  1  0  1  0  0  0  0  66.67%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  0  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  1  5  83.33%		15
Forest OOB Error: 55.32%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	86.75%	86.67%	99.05%	88.97%	99.06%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	87.78%	98.37%	86.9%	[98.89, 98.89, 97.78, 100.0, 97.78, 97.78, 97.78, 97.78, 97.78, 100.0, 98.89, 97.78, 97.78, 98.89, 97.78]%	[90.91, 92.31, 85.71, 100.0, 80.0, 80.0, 80.0, 83.33, 85.71, 100.0, 90.91, 85.71, 85.71, 92.31, 80.0]%	[83.33, 100.0, 100.0, 100.0, 66.67, 66.67, 66.67, 83.33, 100.0, 100.0, 83.33, 100.0, 100.0, 100.0, 66.67]%	[100.0, 98.81, 97.62, 100.0, 100.0, 100.0, 100.0, 98.81, 97.62, 100.0, 100.0, 97.62, 97.62, 98.81, 100.0]%	[100.0, 85.71, 75.0, 100.0, 100.0, 100.0, 100.0, 83.33, 75.0, 100.0, 100.0, 75.0, 75.0, 85.71, 100.0]%	[98.82, 100.0, 100.0, 100.0, 97.67, 97.67, 97.67, 98.81, 100.0, 100.0, 98.82, 100.0, 100.0, 100.0, 97.67]%	||	87.51%	87.78%	99.13%	90.32%	99.14%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  2  0  4  0  0  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  4  0  0  0  0  2  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  1  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 48.03%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	86.75%	86.67%	99.05%	88.97%	99.06%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	90.0%	98.67%	89.29%	[97.78, 98.89, 100.0, 98.89, 98.89, 97.78, 100.0, 97.78, 98.89, 100.0, 97.78, 98.89, 97.78, 98.89, 97.78]%	[83.33, 92.31, 100.0, 92.31, 92.31, 80.0, 100.0, 80.0, 92.31, 100.0, 85.71, 90.91, 83.33, 90.91, 83.33]%	[83.33, 100.0, 100.0, 100.0, 100.0, 66.67, 100.0, 66.67, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33]%	[98.81, 98.81, 100.0, 98.81, 98.81, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 100.0, 98.81, 100.0, 98.81]%	[83.33, 85.71, 100.0, 85.71, 85.71, 100.0, 100.0, 100.0, 85.71, 100.0, 75.0, 100.0, 83.33, 100.0, 83.33]%	[98.81, 100.0, 100.0, 100.0, 100.0, 97.67, 100.0, 97.67, 100.0, 100.0, 100.0, 98.82, 98.81, 98.82, 98.81]%	||	89.78%	90.0%	99.29%	91.19%	99.29%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  1  0  0  0  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  1  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  1  0  0  0  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  5  1  83.33%		14
  0  0  0  0  1  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 46.4%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	86.75%	86.67%	99.05%	88.97%	99.06%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[98.89, 96.67, 98.89, 97.78, 97.78, 98.89, 97.78, 97.78, 98.89, 98.89, 98.89, 97.78, 98.89, 97.78, 95.56]%	[90.91, 80.0, 92.31, 83.33, 83.33, 90.91, 83.33, 83.33, 90.91, 92.31, 92.31, 83.33, 90.91, 80.0, 66.67]%	[83.33, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 66.67]%	[100.0, 96.43, 98.81, 98.81, 98.81, 100.0, 98.81, 98.81, 100.0, 98.81, 98.81, 98.81, 100.0, 100.0, 97.62]%	[100.0, 66.67, 85.71, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0, 85.71, 85.71, 83.33, 100.0, 100.0, 66.67]%	[98.82, 100.0, 100.0, 98.81, 98.81, 98.82, 98.81, 98.81, 98.82, 100.0, 100.0, 98.81, 98.82, 97.67, 97.62]%	||	85.59%	85.56%	98.97%	87.14%	98.98%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  1  0  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  1  0  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  0  0  1  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  1  0  0  0  0  0  0  0  0  0  0  4  1  66.67%		14
  0  0  0  1  0  0  0  0  0  1  0  0  0  0  4  66.67%		15
Forest OOB Error: 50.39%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	86.75%	86.67%	99.05%	88.97%	99.06%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[98.89, 98.89, 98.89, 95.56, 98.89, 95.56, 95.56, 97.78, 97.78, 96.67, 97.78, 98.89, 97.78, 97.78, 97.78]%	[90.91, 92.31, 90.91, 66.67, 90.91, 60.0, 66.67, 83.33, 85.71, 80.0, 83.33, 90.91, 83.33, 83.33, 83.33]%	[83.33, 100.0, 83.33, 66.67, 83.33, 50.0, 66.67, 83.33, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 98.81, 100.0, 97.62, 100.0, 98.81, 97.62, 98.81, 97.62, 96.43, 98.81, 100.0, 98.81, 98.81, 98.81]%	[100.0, 85.71, 100.0, 66.67, 100.0, 75.0, 66.67, 83.33, 75.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33]%	[98.82, 100.0, 98.82, 97.62, 98.82, 96.51, 97.62, 98.81, 100.0, 100.0, 98.81, 98.82, 98.81, 98.81, 98.81]%	||	82.11%	82.22%	98.73%	83.49%	98.74%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  1  0  3  0  0  1  0  0  0  0  1  0  50.0%		6
  0  0  0  0  0  0  4  0  0  2  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  0  0  0  0  1  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 54.51%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	87.78%	98.37%	86.9%	[98.89, 98.89, 98.89, 97.78, 98.89, 98.89, 100.0, 96.67, 98.89, 98.89, 96.67, 97.78, 97.78, 98.89, 97.78]%	[90.91, 92.31, 92.31, 83.33, 90.91, 92.31, 100.0, 76.92, 90.91, 90.91, 76.92, 83.33, 83.33, 92.31, 80.0]%	[83.33, 100.0, 100.0, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 66.67]%	[100.0, 98.81, 98.81, 98.81, 100.0, 98.81, 100.0, 97.62, 100.0, 100.0, 97.62, 98.81, 98.81, 98.81, 100.0]%	[100.0, 85.71, 85.71, 83.33, 100.0, 85.71, 100.0, 71.43, 100.0, 100.0, 71.43, 83.33, 83.33, 85.71, 100.0]%	[98.82, 100.0, 100.0, 98.81, 98.82, 100.0, 100.0, 98.8, 98.82, 98.82, 98.8, 98.81, 98.81, 100.0, 97.67]%	||	87.78%	87.78%	99.13%	89.05%	99.13%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  1  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  1  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  1  0  0  0  4  66.67%		15
Forest OOB Error: 49.43%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	87.78%	98.37%	86.9%	[98.89, 97.78, 100.0, 98.89, 98.89, 98.89, 96.67, 96.67, 100.0, 98.89, 94.44, 98.89, 98.89, 98.89, 98.89]%	[90.91, 85.71, 100.0, 90.91, 90.91, 92.31, 72.73, 80.0, 100.0, 92.31, 54.55, 90.91, 90.91, 92.31, 90.91]%	[83.33, 100.0, 100.0, 83.33, 83.33, 100.0, 66.67, 100.0, 100.0, 100.0, 50.0, 83.33, 83.33, 100.0, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 100.0, 98.81, 97.62, 100.0, 100.0, 98.81, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 85.71, 80.0, 66.67, 100.0, 85.71, 60.0, 100.0, 100.0, 85.71, 100.0]%	[98.82, 100.0, 100.0, 98.82, 98.82, 100.0, 97.65, 100.0, 100.0, 100.0, 96.47, 98.82, 98.82, 100.0, 98.82]%	||	87.69%	87.78%	99.13%	89.25%	99.14%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  1  0  0  0  0  4  0  0  0  1  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  3  0  0  3  0  0  0  0  50.0%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  1  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 53.41%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	90.0%	98.67%	89.29%	[98.89, 98.89, 98.89, 98.89, 98.89, 96.67, 100.0, 98.89, 98.89, 100.0, 97.78, 98.89, 97.78, 98.89, 97.78]%	[90.91, 92.31, 92.31, 90.91, 92.31, 76.92, 100.0, 92.31, 90.91, 100.0, 83.33, 90.91, 83.33, 90.91, 83.33]%	[83.33, 100.0, 100.0, 83.33, 100.0, 83.33, 100.0, 100.0, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 98.81, 98.81, 100.0, 98.81, 97.62, 100.0, 98.81, 100.0, 100.0, 98.81, 100.0, 98.81, 100.0, 98.81]%	[100.0, 85.71, 85.71, 100.0, 85.71, 71.43, 100.0, 85.71, 100.0, 100.0, 83.33, 100.0, 83.33, 100.0, 83.33]%	[98.82, 100.0, 100.0, 98.82, 100.0, 98.8, 100.0, 100.0, 98.82, 100.0, 98.81, 98.82, 98.81, 98.82, 98.81]%	||	90.05%	90.0%	99.29%	90.95%	99.29%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  1  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  1  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  1  0  0  0  0  0  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 49.8%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[98.89, 97.78, 100.0, 98.89, 96.67, 97.78, 96.67, 95.56, 97.78, 96.67, 96.67, 96.67, 97.78, 97.78, 96.67]%	[90.91, 83.33, 100.0, 92.31, 76.92, 83.33, 66.67, 66.67, 85.71, 72.73, 76.92, 76.92, 80.0, 83.33, 76.92]%	[83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 66.67, 83.33, 83.33, 66.67, 83.33, 83.33]%	[100.0, 98.81, 100.0, 98.81, 97.62, 98.81, 100.0, 97.62, 97.62, 98.81, 97.62, 97.62, 100.0, 98.81, 97.62]%	[100.0, 83.33, 100.0, 85.71, 71.43, 83.33, 100.0, 66.67, 75.0, 80.0, 71.43, 71.43, 100.0, 83.33, 71.43]%	[98.82, 98.81, 100.0, 100.0, 98.8, 98.81, 96.55, 97.62, 100.0, 97.65, 98.8, 98.8, 97.67, 98.81, 98.8]%	||	80.85%	81.11%	98.65%	82.87%	98.66%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  2  0  3  0  0  0  0  1  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  4  0  1  0  1  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 49.01%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[97.78, 96.67, 100.0, 96.67, 97.78, 96.67, 94.44, 93.33, 100.0, 98.89, 94.44, 96.67, 97.78, 96.67, 97.78]%	[83.33, 80.0, 100.0, 72.73, 83.33, 72.73, 44.44, 57.14, 100.0, 92.31, 54.55, 72.73, 80.0, 80.0, 83.33]%	[83.33, 100.0, 100.0, 66.67, 83.33, 66.67, 33.33, 66.67, 100.0, 100.0, 50.0, 66.67, 66.67, 100.0, 83.33]%	[98.81, 96.43, 100.0, 98.81, 98.81, 98.81, 98.81, 95.24, 100.0, 98.81, 97.62, 98.81, 100.0, 96.43, 98.81]%	[83.33, 66.67, 100.0, 80.0, 83.33, 80.0, 66.67, 50.0, 100.0, 85.71, 60.0, 80.0, 100.0, 66.67, 83.33]%	[98.81, 100.0, 100.0, 97.65, 98.81, 97.65, 95.4, 97.56, 100.0, 100.0, 96.47, 97.65, 97.67, 100.0, 98.81]%	||	77.11%	77.78%	98.41%	79.05%	98.43%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  1  0  0  0  4  0  0  0  0  0  0  0  1  0  66.67%		6
  1  1  0  0  0  0  2  0  0  1  0  1  0  0  0  33.33%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  1  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  3  0  0  3  0  0  0  0  50.0%		11
  0  0  0  0  1  0  0  0  0  0  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 52.05%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	91.11%	98.81%	90.48%	[98.89, 98.89, 100.0, 97.78, 98.89, 96.67, 100.0, 98.89, 98.89, 100.0, 97.78, 98.89, 98.89, 98.89, 98.89]%	[90.91, 92.31, 100.0, 85.71, 92.31, 66.67, 100.0, 92.31, 92.31, 100.0, 83.33, 90.91, 90.91, 92.31, 90.91]%	[83.33, 100.0, 100.0, 100.0, 100.0, 50.0, 100.0, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 98.81, 100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 98.81, 100.0, 98.81, 100.0, 100.0, 98.81, 100.0]%	[100.0, 85.71, 100.0, 75.0, 85.71, 100.0, 100.0, 85.71, 85.71, 100.0, 83.33, 100.0, 100.0, 85.71, 100.0]%	[98.82, 100.0, 100.0, 100.0, 100.0, 96.55, 100.0, 100.0, 100.0, 100.0, 98.81, 98.82, 98.82, 100.0, 98.82]%	||	90.73%	91.11%	99.37%	92.46%	99.38%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  1  0  3  0  0  1  0  0  0  0  1  0  50.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  1  0  0  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 43.25%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.15)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[96.67, 97.78, 97.78, 96.67, 97.78, 95.56, 98.89, 97.78, 97.78, 96.67, 100.0, 97.78, 100.0, 97.78, 97.78]%	[72.73, 85.71, 85.71, 80.0, 80.0, 60.0, 90.91, 83.33, 83.33, 76.92, 100.0, 83.33, 100.0, 83.33, 80.0]%	[66.67, 100.0, 100.0, 100.0, 66.67, 50.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 83.33, 66.67]%	[98.81, 97.62, 97.62, 96.43, 100.0, 98.81, 100.0, 98.81, 98.81, 97.62, 100.0, 98.81, 100.0, 98.81, 100.0]%	[80.0, 75.0, 75.0, 66.67, 100.0, 75.0, 100.0, 83.33, 83.33, 71.43, 100.0, 83.33, 100.0, 83.33, 100.0]%	[97.65, 100.0, 100.0, 100.0, 97.67, 96.51, 98.82, 98.81, 98.81, 98.8, 100.0, 98.81, 100.0, 98.81, 97.67]%	||	83.02%	83.33%	98.81%	85.1%	98.82%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  2  0  4  0  0  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  2  0  3  0  0  0  0  0  0  0  1  0  50.0%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  1  0  0  0  0  0  0  83.33%		8
  1  0  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  1  0  0  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 49.43%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.15)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[95.56, 96.67, 98.89, 93.33, 97.78, 95.56, 96.67, 95.56, 96.67, 96.67, 96.67, 95.56, 97.78, 97.78, 95.56]%	[50.0, 72.73, 92.31, 50.0, 83.33, 66.67, 76.92, 71.43, 80.0, 76.92, 72.73, 71.43, 83.33, 80.0, 60.0]%	[33.33, 66.67, 100.0, 50.0, 83.33, 66.67, 83.33, 83.33, 100.0, 83.33, 66.67, 83.33, 83.33, 66.67, 50.0]%	[100.0, 98.81, 98.81, 96.43, 98.81, 97.62, 97.62, 96.43, 96.43, 97.62, 98.81, 96.43, 98.81, 100.0, 98.81]%	[100.0, 80.0, 85.71, 50.0, 83.33, 66.67, 71.43, 62.5, 66.67, 71.43, 80.0, 62.5, 83.33, 100.0, 75.0]%	[95.45, 97.65, 100.0, 96.43, 98.81, 97.62, 98.8, 98.78, 100.0, 98.8, 97.65, 98.78, 98.81, 97.67, 96.51]%	||	72.52%	73.33%	98.1%	75.9%	98.12%	
  2  1  1  1  0  0  0  0  0  1  0  0  0  0  0  33.33%		1
  0  4  0  0  0  0  0  0  1  1  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  3  0  1  2  0  0  0  0  0  0  0  0  50.0%		4
  0  0  0  0  5  0  0  0  0  0  0  1  0  0  0  83.33%		5
  0  0  0  0  1  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  5  0  0  0  0  1  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  1  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  4  1  66.67%		14
  0  0  0  2  0  0  0  1  0  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 48.58%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.15)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[97.78, 97.78, 100.0, 97.78, 100.0, 94.44, 97.78, 96.67, 97.78, 97.78, 98.89, 96.67, 97.78, 96.67, 98.89]%	[80.0, 83.33, 100.0, 85.71, 100.0, 54.55, 80.0, 80.0, 85.71, 83.33, 90.91, 72.73, 83.33, 76.92, 90.91]%	[66.67, 83.33, 100.0, 100.0, 100.0, 50.0, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33]%	[100.0, 98.81, 100.0, 97.62, 100.0, 97.62, 100.0, 96.43, 97.62, 98.81, 100.0, 98.81, 98.81, 97.62, 100.0]%	[100.0, 83.33, 100.0, 75.0, 100.0, 60.0, 100.0, 66.67, 75.0, 83.33, 100.0, 80.0, 83.33, 71.43, 100.0]%	[97.67, 98.81, 100.0, 100.0, 100.0, 96.47, 97.67, 100.0, 100.0, 98.81, 98.82, 97.65, 98.81, 98.8, 98.82]%	||	83.16%	83.33%	98.81%	85.21%	98.82%	
  4  1  0  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  3  0  0  1  0  0  0  0  2  0  50.0%		6
  0  0  0  0  0  1  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  1  0  1  0  0  0  0  0  4  0  0  0  66.67%		12
  0  0  0  1  0  0  0  0  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  1  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 52.55%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.15)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	68.89%	95.85%	66.67%	[96.67, 96.67, 97.78, 95.56, 96.67, 95.56, 92.22, 93.33, 96.67, 95.56, 92.22, 95.56, 96.67, 97.78, 98.89]%	[76.92, 66.67, 85.71, 60.0, 72.73, 66.67, 58.82, 62.5, 76.92, 60.0, 36.36, 66.67, 66.67, 83.33, 90.91]%	[83.33, 50.0, 100.0, 50.0, 66.67, 66.67, 83.33, 83.33, 83.33, 50.0, 33.33, 66.67, 50.0, 83.33, 83.33]%	[97.62, 100.0, 97.62, 98.81, 98.81, 97.62, 92.86, 94.05, 97.62, 98.81, 96.43, 97.62, 100.0, 98.81, 100.0]%	[71.43, 100.0, 75.0, 75.0, 80.0, 66.67, 45.45, 50.0, 71.43, 75.0, 40.0, 66.67, 100.0, 83.33, 100.0]%	[98.8, 96.55, 100.0, 96.51, 97.65, 97.62, 98.73, 98.75, 98.8, 96.51, 95.29, 97.62, 96.55, 98.81, 98.82]%	||	68.73%	68.89%	97.78%	73.33%	97.8%	
  5  0  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		1
  0  3  0  0  0  0  3  0  0  0  0  0  0  0  0  50.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  3  0  2  0  0  1  0  0  0  0  0  0  50.0%		4
  0  0  1  0  4  0  0  0  0  1  0  0  0  0  0  66.67%		5
  0  0  0  1  0  4  1  0  0  0  0  0  0  0  0  66.67%		6
  1  0  0  0  0  0  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  1  3  0  2  0  0  0  50.0%		10
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  33.33%		11
  0  0  0  0  0  0  1  0  0  0  0  4  0  1  0  66.67%		12
  0  0  0  0  0  0  0  1  0  0  2  0  3  0  0  50.0%		13
  0  0  0  0  1  0  0  0  0  0  0  0  0  5  0  83.33%		14
  1  0  0  0  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 48.56%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.15)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	74.44%	96.59%	72.62%	[97.78, 96.67, 98.89, 97.78, 96.67, 93.33, 96.67, 98.89, 97.78, 95.56, 96.67, 92.22, 96.67, 96.67, 96.67]%	[80.0, 72.73, 92.31, 80.0, 80.0, 57.14, 76.92, 92.31, 83.33, 50.0, 76.92, 53.33, 72.73, 72.73, 72.73]%	[66.67, 66.67, 100.0, 66.67, 100.0, 66.67, 83.33, 100.0, 83.33, 33.33, 83.33, 66.67, 66.67, 66.67, 66.67]%	[100.0, 98.81, 98.81, 100.0, 96.43, 95.24, 97.62, 98.81, 98.81, 100.0, 97.62, 94.05, 98.81, 98.81, 98.81]%	[100.0, 80.0, 85.71, 100.0, 66.67, 50.0, 71.43, 85.71, 83.33, 100.0, 71.43, 44.44, 80.0, 80.0, 80.0]%	[97.67, 97.65, 100.0, 97.67, 100.0, 97.56, 98.8, 100.0, 98.81, 95.45, 98.8, 97.53, 97.65, 97.65, 97.65]%	||	74.21%	74.44%	98.17%	78.58%	98.19%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  4  0  0  0  0  1  0  1  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  2  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  1  0  0  4  1  0  0  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  5  0  0  0  0  1  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  2  0  3  0  1  0  33.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  1  0  0  0  0  0  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  1  0  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 48.39%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.15)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	71.11%	96.15%	69.05%	[96.67, 96.67, 98.89, 95.56, 97.78, 93.33, 93.33, 95.56, 98.89, 95.56, 97.78, 93.33, 95.56, 96.67, 96.67]%	[72.73, 72.73, 92.31, 71.43, 83.33, 57.14, 62.5, 75.0, 90.91, 60.0, 80.0, 50.0, 60.0, 72.73, 66.67]%	[66.67, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33, 50.0, 66.67, 50.0, 50.0, 66.67, 50.0]%	[98.81, 98.81, 98.81, 96.43, 98.81, 95.24, 94.05, 95.24, 100.0, 98.81, 100.0, 96.43, 98.81, 98.81, 100.0]%	[80.0, 80.0, 85.71, 62.5, 83.33, 50.0, 50.0, 60.0, 100.0, 75.0, 100.0, 50.0, 75.0, 80.0, 100.0]%	[97.65, 97.65, 100.0, 98.78, 98.81, 97.56, 98.75, 100.0, 98.82, 96.51, 97.67, 96.43, 96.51, 97.65, 96.55]%	||	71.16%	71.11%	97.94%	75.44%	97.96%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  4  0  0  0  0  2  0  0  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  1  0  4  0  0  0  0  0  0  1  0  0  66.67%		6
  0  0  0  0  0  0  5  0  0  0  0  0  0  1  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  5  1  0  0  0  0  0  83.33%		9
  0  0  1  0  0  0  0  0  0  3  0  2  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  1  0  0  0  0  0  2  0  0  0  0  3  0  0  0  50.0%		12
  0  0  0  2  0  0  0  1  0  0  0  0  3  0  0  50.0%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  1  1  0  1  0  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 50.0%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[98.89, 98.89, 98.89, 96.67, 98.89, 96.67, 98.89, 96.67, 96.67, 96.67, 94.44, 97.78, 97.78, 97.78, 98.89]%	[90.91, 92.31, 92.31, 76.92, 90.91, 72.73, 90.91, 72.73, 76.92, 72.73, 61.54, 83.33, 83.33, 85.71, 90.91]%	[83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 66.67, 83.33, 66.67, 66.67, 83.33, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 97.62, 100.0, 98.81, 100.0, 98.81, 97.62, 98.81, 96.43, 98.81, 98.81, 97.62, 100.0]%	[100.0, 85.71, 85.71, 71.43, 100.0, 80.0, 100.0, 80.0, 71.43, 80.0, 57.14, 83.33, 83.33, 75.0, 100.0]%	[98.82, 100.0, 100.0, 98.8, 98.82, 97.65, 98.82, 97.65, 98.8, 97.65, 97.59, 98.81, 98.81, 100.0, 98.82]%	||	82.28%	82.22%	98.73%	83.54%	98.74%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  1  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  5  0  1  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  1  0  66.67%		8
  0  0  0  1  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  4  0  1  0  1  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  1  0  0  0  5  83.33%		15
Forest OOB Error: 54.72%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	90.0%	98.67%	89.29%	[98.89, 97.78, 100.0, 97.78, 98.89, 97.78, 98.89, 100.0, 98.89, 96.67, 98.89, 97.78, 98.89, 100.0, 98.89]%	[90.91, 83.33, 100.0, 83.33, 90.91, 83.33, 92.31, 100.0, 92.31, 76.92, 90.91, 83.33, 92.31, 100.0, 90.91]%	[83.33, 83.33, 100.0, 83.33, 83.33, 83.33, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33]%	[100.0, 98.81, 100.0, 98.81, 100.0, 98.81, 98.81, 100.0, 98.81, 97.62, 100.0, 98.81, 98.81, 100.0, 100.0]%	[100.0, 83.33, 100.0, 83.33, 100.0, 83.33, 85.71, 100.0, 85.71, 71.43, 100.0, 83.33, 85.71, 100.0, 100.0]%	[98.82, 98.81, 100.0, 98.81, 98.82, 98.81, 100.0, 100.0, 100.0, 98.8, 98.82, 98.81, 100.0, 100.0, 98.82]%	||	90.05%	90.0%	99.29%	90.79%	99.29%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 49.42%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	90.0%	98.67%	89.29%	[98.89, 98.89, 98.89, 100.0, 98.89, 98.89, 98.89, 96.67, 97.78, 98.89, 97.78, 100.0, 96.67, 98.89, 100.0]%	[90.91, 92.31, 90.91, 100.0, 90.91, 90.91, 90.91, 72.73, 85.71, 92.31, 83.33, 100.0, 76.92, 92.31, 100.0]%	[83.33, 100.0, 83.33, 100.0, 83.33, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 100.0, 83.33, 100.0, 100.0]%	[100.0, 98.81, 100.0, 100.0, 100.0, 100.0, 100.0, 98.81, 97.62, 98.81, 98.81, 100.0, 97.62, 98.81, 100.0]%	[100.0, 85.71, 100.0, 100.0, 100.0, 100.0, 100.0, 80.0, 75.0, 85.71, 83.33, 100.0, 71.43, 85.71, 100.0]%	[98.82, 100.0, 98.82, 100.0, 98.82, 98.82, 98.82, 97.65, 100.0, 100.0, 98.81, 100.0, 98.8, 100.0, 100.0]%	||	90.01%	90.0%	99.29%	91.13%	99.29%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  0  0  0  0  0  1  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  1  0  0  0  1  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 49.24%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	86.67%	98.22%	85.71%	[98.89, 96.67, 98.89, 98.89, 100.0, 97.78, 97.78, 96.67, 98.89, 98.89, 96.67, 100.0, 97.78, 97.78, 97.78]%	[90.91, 76.92, 92.31, 90.91, 100.0, 83.33, 83.33, 72.73, 90.91, 90.91, 76.92, 100.0, 83.33, 85.71, 83.33]%	[83.33, 83.33, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 98.81, 98.81, 98.81, 100.0, 100.0, 97.62, 100.0, 98.81, 97.62, 98.81]%	[100.0, 71.43, 85.71, 100.0, 100.0, 83.33, 83.33, 80.0, 100.0, 100.0, 71.43, 100.0, 83.33, 75.0, 83.33]%	[98.82, 98.8, 100.0, 98.82, 100.0, 98.81, 98.81, 97.65, 98.82, 98.82, 98.8, 100.0, 98.81, 100.0, 98.81]%	||	86.77%	86.67%	99.05%	87.79%	99.05%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  0  0  0  0  0  1  0  83.33%		6
  0  1  0  0  0  0  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  0  0  1  0  1  66.67%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  0  0  1  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  1  0  0  0  5  83.33%		15
Forest OOB Error: 51.32%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	87.78%	98.37%	86.9%	[98.89, 97.78, 98.89, 96.67, 98.89, 98.89, 95.56, 98.89, 98.89, 98.89, 98.89, 98.89, 97.78, 98.89, 98.89]%	[90.91, 85.71, 90.91, 72.73, 90.91, 92.31, 66.67, 90.91, 92.31, 92.31, 90.91, 90.91, 85.71, 92.31, 90.91]%	[83.33, 100.0, 83.33, 66.67, 83.33, 100.0, 66.67, 83.33, 100.0, 100.0, 83.33, 83.33, 100.0, 100.0, 83.33]%	[100.0, 97.62, 100.0, 98.81, 100.0, 98.81, 97.62, 100.0, 98.81, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0]%	[100.0, 75.0, 100.0, 80.0, 100.0, 85.71, 66.67, 100.0, 85.71, 85.71, 100.0, 100.0, 75.0, 85.71, 100.0]%	[98.82, 100.0, 98.82, 97.65, 98.82, 100.0, 97.62, 98.82, 100.0, 100.0, 98.82, 98.82, 100.0, 100.0, 98.82]%	||	87.76%	87.78%	99.13%	89.3%	99.14%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  1  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  4  0  1  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  1  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  1  0  0  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 48.8%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	84.44%	97.93%	83.33%	[98.89, 97.78, 95.56, 96.67, 96.67, 98.89, 95.56, 97.78, 98.89, 98.89, 97.78, 97.78, 98.89, 100.0, 98.89]%	[90.91, 83.33, 75.0, 72.73, 66.67, 92.31, 71.43, 83.33, 90.91, 90.91, 83.33, 85.71, 90.91, 100.0, 90.91]%	[83.33, 83.33, 100.0, 66.67, 50.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 83.33]%	[100.0, 98.81, 95.24, 98.81, 100.0, 98.81, 96.43, 98.81, 100.0, 100.0, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 83.33, 60.0, 80.0, 100.0, 85.71, 62.5, 83.33, 100.0, 100.0, 83.33, 75.0, 100.0, 100.0, 100.0]%	[98.82, 98.81, 100.0, 97.65, 96.55, 100.0, 98.78, 98.81, 98.82, 98.82, 98.81, 100.0, 98.82, 100.0, 98.82]%	||	84.56%	84.44%	98.89%	87.55%	98.9%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  2  0  3  0  1  0  0  0  0  0  0  0  0  50.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  0  0  0  0  1  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  1  0  0  0  0  0  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 53.1%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.05)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	87.78%	98.37%	86.9%	[98.89, 97.78, 100.0, 96.67, 97.78, 96.67, 98.89, 97.78, 97.78, 97.78, 98.89, 98.89, 98.89, 100.0, 98.89]%	[90.91, 83.33, 100.0, 76.92, 85.71, 72.73, 90.91, 83.33, 83.33, 85.71, 90.91, 90.91, 92.31, 100.0, 90.91]%	[83.33, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0, 100.0, 83.33]%	[100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 100.0, 98.81, 98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0]%	[100.0, 83.33, 100.0, 71.43, 75.0, 80.0, 100.0, 83.33, 83.33, 75.0, 100.0, 100.0, 85.71, 100.0, 100.0]%	[98.82, 98.81, 100.0, 98.8, 100.0, 97.65, 98.82, 98.81, 98.81, 100.0, 98.82, 98.82, 100.0, 100.0, 98.82]%	||	87.86%	87.78%	99.13%	89.14%	99.13%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  1  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  1  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  1  0  0  0  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  1  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 50.94%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.05)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[98.89, 95.56, 96.67, 100.0, 95.56, 93.33, 94.44, 96.67, 97.78, 98.89, 98.89, 97.78, 98.89, 95.56, 98.89]%	[90.91, 66.67, 76.92, 100.0, 60.0, 50.0, 54.55, 72.73, 83.33, 92.31, 92.31, 83.33, 92.31, 71.43, 90.91]%	[83.33, 66.67, 83.33, 100.0, 50.0, 50.0, 50.0, 66.67, 83.33, 100.0, 100.0, 83.33, 100.0, 83.33, 83.33]%	[100.0, 97.62, 97.62, 100.0, 98.81, 96.43, 97.62, 98.81, 98.81, 98.81, 98.81, 98.81, 98.81, 96.43, 100.0]%	[100.0, 66.67, 71.43, 100.0, 75.0, 50.0, 60.0, 80.0, 83.33, 85.71, 85.71, 83.33, 85.71, 62.5, 100.0]%	[98.82, 97.62, 98.8, 100.0, 96.51, 96.43, 96.47, 97.65, 98.81, 100.0, 100.0, 98.81, 100.0, 98.78, 98.82]%	||	78.51%	78.89%	98.49%	79.29%	98.5%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  4  0  0  0  0  2  0  0  0  0  0  0  0  0  66.67%		2
  0  0  5  0  0  0  0  0  0  0  0  0  0  1  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  2  0  3  0  0  0  0  0  0  1  0  0  0  50.0%		5
  0  0  0  0  0  3  0  0  1  0  0  0  0  2  0  50.0%		6
  0  0  0  0  1  0  3  1  0  1  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  1  0  0  66.67%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  1  0  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  1  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 49.57%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.05)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[97.78, 98.89, 98.89, 98.89, 98.89, 96.67, 98.89, 97.78, 100.0, 94.44, 98.89, 97.78, 98.89, 98.89, 95.56]%	[80.0, 92.31, 92.31, 92.31, 90.91, 72.73, 90.91, 83.33, 100.0, 70.59, 90.91, 80.0, 92.31, 90.91, 66.67]%	[66.67, 100.0, 100.0, 100.0, 83.33, 66.67, 83.33, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 83.33, 66.67]%	[100.0, 98.81, 98.81, 98.81, 100.0, 98.81, 100.0, 98.81, 100.0, 94.05, 100.0, 100.0, 98.81, 100.0, 97.62]%	[100.0, 85.71, 85.71, 85.71, 100.0, 80.0, 100.0, 83.33, 100.0, 54.55, 100.0, 100.0, 85.71, 100.0, 66.67]%	[97.67, 100.0, 100.0, 100.0, 98.82, 97.65, 98.82, 98.81, 100.0, 100.0, 98.82, 97.67, 100.0, 98.82, 97.62]%	||	85.75%	85.56%	98.97%	88.49%	98.98%	
  4  1  0  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  1  0  4  0  0  0  1  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  0  0  1  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  1  0  0  0  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 47.26%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.05)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[96.67, 97.78, 100.0, 96.67, 100.0, 97.78, 97.78, 92.22, 94.44, 96.67, 94.44, 96.67, 95.56, 100.0, 98.89]%	[72.73, 83.33, 100.0, 76.92, 100.0, 83.33, 80.0, 46.15, 66.67, 76.92, 54.55, 72.73, 66.67, 100.0, 90.91]%	[66.67, 83.33, 100.0, 83.33, 100.0, 83.33, 66.67, 50.0, 83.33, 83.33, 50.0, 66.67, 66.67, 100.0, 83.33]%	[98.81, 98.81, 100.0, 97.62, 100.0, 98.81, 100.0, 95.24, 95.24, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0]%	[80.0, 83.33, 100.0, 71.43, 100.0, 83.33, 100.0, 42.86, 55.56, 71.43, 60.0, 80.0, 66.67, 100.0, 100.0]%	[97.65, 98.81, 100.0, 98.8, 100.0, 98.81, 97.67, 96.39, 98.77, 98.8, 96.47, 97.65, 97.62, 100.0, 98.82]%	||	78.06%	77.78%	98.41%	79.64%	98.42%	
  4  1  0  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  4  1  1  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  3  1  0  0  0  2  0  0  50.0%		8
  0  0  0  1  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  3  0  0  3  0  0  0  0  50.0%		11
  0  0  0  1  0  0  0  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  1  0  0  0  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 47.52%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.05)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[98.89, 97.78, 98.89, 95.56, 97.78, 97.78, 94.44, 94.44, 98.89, 96.67, 94.44, 96.67, 98.89, 100.0, 98.89]%	[90.91, 83.33, 92.31, 60.0, 80.0, 85.71, 54.55, 61.54, 92.31, 80.0, 54.55, 76.92, 90.91, 100.0, 90.91]%	[83.33, 83.33, 100.0, 50.0, 66.67, 100.0, 50.0, 66.67, 100.0, 100.0, 50.0, 83.33, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 98.81, 100.0, 97.62, 97.62, 96.43, 98.81, 96.43, 97.62, 97.62, 100.0, 100.0, 100.0]%	[100.0, 83.33, 85.71, 75.0, 100.0, 75.0, 60.0, 57.14, 85.71, 66.67, 60.0, 71.43, 100.0, 100.0, 100.0]%	[98.82, 98.81, 100.0, 96.51, 97.67, 100.0, 96.47, 97.59, 100.0, 100.0, 96.47, 98.8, 98.82, 100.0, 98.82]%	||	79.6%	80.0%	98.57%	81.33%	98.59%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  3  0  2  1  0  0  0  0  0  0  0  0  50.0%		4
  0  0  1  0  4  0  0  0  0  0  0  1  0  0  0  66.67%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  3  0  1  1  0  1  0  0  0  50.0%		7
  0  0  0  0  0  0  0  4  0  1  1  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  3  0  0  3  0  0  0  0  50.0%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 55.92%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.05)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	87.78%	98.37%	86.9%	[97.78, 100.0, 98.89, 97.78, 98.89, 98.89, 98.89, 96.67, 100.0, 97.78, 95.56, 98.89, 96.67, 100.0, 98.89]%	[80.0, 100.0, 92.31, 83.33, 90.91, 90.91, 92.31, 72.73, 100.0, 85.71, 71.43, 92.31, 72.73, 100.0, 90.91]%	[66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 100.0, 66.67, 100.0, 100.0, 83.33, 100.0, 66.67, 100.0, 83.33]%	[100.0, 100.0, 98.81, 98.81, 100.0, 100.0, 98.81, 98.81, 100.0, 97.62, 96.43, 98.81, 98.81, 100.0, 100.0]%	[100.0, 100.0, 85.71, 83.33, 100.0, 100.0, 85.71, 80.0, 100.0, 75.0, 62.5, 85.71, 80.0, 100.0, 100.0]%	[97.67, 100.0, 100.0, 98.81, 98.82, 98.82, 100.0, 97.65, 100.0, 100.0, 98.78, 100.0, 97.65, 100.0, 98.82]%	||	87.71%	87.78%	99.13%	89.2%	99.14%	
  4  0  0  0  0  0  0  0  0  2  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  1  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  0  0  1  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  1  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  1  0  0  0  0  0  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 42.46%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.0)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	86.67%	98.22%	85.71%	[97.78, 100.0, 98.89, 96.67, 100.0, 96.67, 98.89, 97.78, 97.78, 97.78, 97.78, 98.89, 97.78, 97.78, 98.89]%	[83.33, 100.0, 92.31, 76.92, 100.0, 72.73, 90.91, 83.33, 83.33, 83.33, 83.33, 92.31, 80.0, 85.71, 90.91]%	[83.33, 100.0, 100.0, 83.33, 100.0, 66.67, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 66.67, 100.0, 83.33]%	[98.81, 100.0, 98.81, 97.62, 100.0, 98.81, 100.0, 98.81, 98.81, 98.81, 98.81, 98.81, 100.0, 97.62, 100.0]%	[83.33, 100.0, 85.71, 71.43, 100.0, 80.0, 100.0, 83.33, 83.33, 83.33, 83.33, 85.71, 100.0, 75.0, 100.0]%	[98.81, 100.0, 100.0, 98.8, 100.0, 97.65, 98.82, 98.81, 98.81, 98.81, 98.81, 100.0, 97.67, 100.0, 98.82]%	||	86.56%	86.67%	99.05%	87.63%	99.05%	
  5  0  0  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  1  0  4  0  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  0  0  0  0  0  0  1  0  83.33%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  1  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  1  0  0  0  0  0  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 50.94%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.0)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[97.78, 97.78, 97.78, 96.67, 98.89, 98.89, 96.67, 97.78, 97.78, 100.0, 95.56, 96.67, 95.56, 98.89, 97.78]%	[83.33, 83.33, 85.71, 76.92, 90.91, 92.31, 66.67, 83.33, 83.33, 100.0, 60.0, 76.92, 71.43, 90.91, 83.33]%	[83.33, 83.33, 100.0, 83.33, 83.33, 100.0, 50.0, 83.33, 83.33, 100.0, 50.0, 83.33, 83.33, 83.33, 83.33]%	[98.81, 98.81, 97.62, 97.62, 100.0, 98.81, 100.0, 98.81, 98.81, 100.0, 98.81, 97.62, 96.43, 100.0, 98.81]%	[83.33, 83.33, 75.0, 71.43, 100.0, 85.71, 100.0, 83.33, 83.33, 100.0, 75.0, 71.43, 62.5, 100.0, 83.33]%	[98.81, 98.81, 100.0, 98.8, 98.82, 100.0, 96.55, 98.81, 98.81, 100.0, 96.51, 98.8, 98.78, 98.82, 98.81]%	||	81.9%	82.22%	98.73%	83.85%	98.74%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  3  1  0  0  0  2  0  0  0  50.0%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  1  0  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  3  0  3  0  0  50.0%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 48.43%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.0)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	84.44%	97.93%	83.33%	[98.89, 96.67, 97.78, 98.89, 97.78, 96.67, 96.67, 97.78, 97.78, 97.78, 95.56, 98.89, 98.89, 100.0, 98.89]%	[90.91, 80.0, 85.71, 90.91, 83.33, 72.73, 76.92, 83.33, 83.33, 83.33, 66.67, 90.91, 90.91, 100.0, 90.91]%	[83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 100.0, 83.33]%	[100.0, 96.43, 97.62, 100.0, 98.81, 98.81, 97.62, 98.81, 98.81, 98.81, 97.62, 100.0, 100.0, 100.0, 100.0]%	[100.0, 66.67, 75.0, 100.0, 83.33, 80.0, 71.43, 83.33, 83.33, 83.33, 66.67, 100.0, 100.0, 100.0, 100.0]%	[98.82, 100.0, 100.0, 98.82, 98.81, 97.65, 98.8, 98.81, 98.81, 98.81, 97.62, 98.82, 98.82, 100.0, 98.82]%	||	84.66%	84.44%	98.89%	86.21%	98.89%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  1  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  1  0  0  0  0  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  1  0  0  0  0  1  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  1  0  0  0  0  5  83.33%		15
Forest OOB Error: 55.0%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.0)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	70.0%	96.0%	67.86%	[93.33, 94.44, 96.67, 96.67, 98.89, 97.78, 95.56, 96.67, 97.78, 93.33, 96.67, 93.33, 96.67, 94.44, 97.78]%	[50.0, 44.44, 80.0, 72.73, 90.91, 83.33, 75.0, 72.73, 83.33, 40.0, 76.92, 62.5, 66.67, 61.54, 80.0]%	[50.0, 33.33, 100.0, 66.67, 83.33, 83.33, 100.0, 66.67, 83.33, 33.33, 83.33, 83.33, 50.0, 66.67, 66.67]%	[96.43, 98.81, 96.43, 98.81, 100.0, 98.81, 95.24, 98.81, 98.81, 97.62, 97.62, 94.05, 100.0, 96.43, 100.0]%	[50.0, 66.67, 66.67, 80.0, 100.0, 83.33, 60.0, 80.0, 83.33, 50.0, 71.43, 50.0, 100.0, 57.14, 100.0]%	[96.43, 95.4, 100.0, 97.65, 98.82, 98.81, 100.0, 97.65, 98.81, 95.35, 98.8, 98.75, 96.55, 97.59, 97.67]%	||	69.34%	70.0%	97.86%	73.24%	97.89%	
  3  1  0  0  0  0  0  0  0  0  0  1  0  1  0  50.0%		1
  1  2  0  0  0  0  3  0  0  0  0  0  0  0  0  33.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  1  4  0  1  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  0  0  1  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  0  0  0  0  0  1  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  1  0  66.67%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  1  2  0  3  0  0  0  33.33%		10
  0  0  0  0  0  0  1  0  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  1  0  0  1  0  0  0  1  0  0  0  0  3  0  0  50.0%		13
  0  0  1  0  0  0  0  0  0  1  0  0  0  4  0  66.67%		14
  1  0  0  0  0  0  0  0  0  0  1  0  0  0  4  66.67%		15
Forest OOB Error: 58.14%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.0)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[96.67, 97.78, 100.0, 98.89, 98.89, 95.56, 96.67, 96.67, 97.78, 98.89, 96.67, 97.78, 98.89, 96.67, 98.89]%	[76.92, 85.71, 100.0, 90.91, 90.91, 60.0, 72.73, 80.0, 83.33, 90.91, 72.73, 83.33, 90.91, 80.0, 90.91]%	[83.33, 100.0, 100.0, 83.33, 83.33, 50.0, 66.67, 100.0, 83.33, 83.33, 66.67, 83.33, 83.33, 100.0, 83.33]%	[97.62, 97.62, 100.0, 100.0, 100.0, 98.81, 98.81, 96.43, 98.81, 100.0, 98.81, 98.81, 100.0, 96.43, 100.0]%	[71.43, 75.0, 100.0, 100.0, 100.0, 75.0, 80.0, 66.67, 83.33, 100.0, 80.0, 83.33, 100.0, 66.67, 100.0]%	[98.8, 100.0, 100.0, 98.82, 98.82, 96.51, 97.65, 100.0, 98.81, 98.82, 97.65, 98.81, 98.82, 100.0, 98.82]%	||	83.29%	83.33%	98.81%	85.43%	98.82%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  1  0  0  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  3  0  0  1  0  0  0  0  2  0  50.0%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  5  0  0  0  0  1  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  1  0  0  0  0  0  0  0  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  1  0  0  0  5  83.33%		15
Forest OOB Error: 48.47%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.0)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.01, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[95.56, 95.56, 98.89, 100.0, 97.78, 96.67, 94.44, 96.67, 98.89, 96.67, 96.67, 96.67, 97.78, 96.67, 96.67]%	[71.43, 66.67, 92.31, 100.0, 80.0, 66.67, 61.54, 72.73, 90.91, 76.92, 76.92, 72.73, 85.71, 80.0, 66.67]%	[83.33, 66.67, 100.0, 100.0, 66.67, 50.0, 66.67, 66.67, 83.33, 83.33, 83.33, 66.67, 100.0, 100.0, 50.0]%	[96.43, 97.62, 98.81, 100.0, 100.0, 100.0, 96.43, 98.81, 100.0, 97.62, 97.62, 98.81, 97.62, 96.43, 100.0]%	[62.5, 66.67, 85.71, 100.0, 100.0, 100.0, 57.14, 80.0, 100.0, 71.43, 71.43, 80.0, 75.0, 66.67, 100.0]%	[98.78, 97.62, 100.0, 100.0, 97.67, 96.55, 97.59, 97.65, 98.82, 98.8, 98.8, 97.65, 100.0, 100.0, 96.55]%	||	77.41%	77.78%	98.41%	81.1%	98.43%	
  5  0  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		1
  0  4  0  0  0  0  2  0  0  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  4  0  0  0  0  1  0  0  0  0  0  66.67%		5
  0  1  0  0  0  3  0  0  0  0  0  0  0  2  0  50.0%		6
  2  0  0  0  0  0  4  0  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  1  0  0  0  0  0  0  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  1  1  3  50.0%		15
Forest OOB Error: 51.15%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	86.75%	86.67%	99.05%	88.97%	99.06%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[98.89, 97.78, 98.89, 100.0, 98.89, 96.67, 98.89, 97.78, 96.67, 96.67, 94.44, 96.67, 95.56, 97.78, 96.67]%	[90.91, 83.33, 90.91, 100.0, 92.31, 72.73, 90.91, 83.33, 76.92, 76.92, 61.54, 76.92, 71.43, 83.33, 66.67]%	[83.33, 83.33, 83.33, 100.0, 100.0, 66.67, 83.33, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 50.0]%	[100.0, 98.81, 100.0, 100.0, 98.81, 98.81, 100.0, 98.81, 97.62, 97.62, 96.43, 97.62, 96.43, 98.81, 100.0]%	[100.0, 83.33, 100.0, 100.0, 85.71, 80.0, 100.0, 83.33, 71.43, 71.43, 57.14, 71.43, 62.5, 83.33, 100.0]%	[98.82, 98.81, 98.82, 100.0, 100.0, 97.65, 98.82, 98.81, 98.8, 98.8, 97.59, 98.8, 98.78, 98.81, 96.55]%	||	81.21%	81.11%	98.65%	83.31%	98.66%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  0  0  0  0  0  1  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  1  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  5  0  1  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  0  0  1  1  3  50.0%		15
Forest OOB Error: 46.62%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	86.75%	86.67%	99.05%	88.97%	99.06%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[98.89, 96.67, 97.78, 95.56, 98.89, 96.67, 97.78, 97.78, 97.78, 97.78, 95.56, 98.89, 95.56, 95.56, 98.89]%	[90.91, 76.92, 83.33, 66.67, 92.31, 72.73, 83.33, 83.33, 83.33, 83.33, 66.67, 92.31, 66.67, 66.67, 90.91]%	[83.33, 83.33, 83.33, 66.67, 100.0, 66.67, 83.33, 83.33, 83.33, 83.33, 66.67, 100.0, 66.67, 66.67, 83.33]%	[100.0, 97.62, 98.81, 97.62, 98.81, 98.81, 98.81, 98.81, 98.81, 98.81, 97.62, 98.81, 97.62, 97.62, 100.0]%	[100.0, 71.43, 83.33, 66.67, 85.71, 80.0, 83.33, 83.33, 83.33, 83.33, 66.67, 85.71, 66.67, 66.67, 100.0]%	[98.82, 98.8, 98.81, 97.62, 100.0, 97.65, 98.81, 98.81, 98.81, 98.81, 97.62, 100.0, 97.62, 97.62, 98.82]%	||	79.96%	80.0%	98.57%	80.41%	98.57%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  1  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  4  0  1  0  0  0  0  0  0  0  1  0  66.67%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  4  0  0  0  0  0  0  1  1  0  66.67%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  1  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  1  0  0  0  0  0  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  1  0  0  0  0  0  0  1  0  0  0  0  4  0  66.67%		14
  0  0  0  0  1  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 55.04%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	86.75%	86.67%	99.05%	88.97%	99.06%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	84.44%	97.93%	83.33%	[98.89, 98.89, 98.89, 95.56, 98.89, 95.56, 96.67, 98.89, 98.89, 98.89, 96.67, 97.78, 97.78, 97.78, 98.89]%	[90.91, 90.91, 92.31, 66.67, 90.91, 71.43, 80.0, 90.91, 92.31, 90.91, 76.92, 83.33, 83.33, 80.0, 90.91]%	[83.33, 83.33, 100.0, 66.67, 83.33, 83.33, 100.0, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 66.67, 83.33]%	[100.0, 100.0, 98.81, 97.62, 100.0, 96.43, 96.43, 100.0, 98.81, 100.0, 97.62, 98.81, 98.81, 100.0, 100.0]%	[100.0, 100.0, 85.71, 66.67, 100.0, 62.5, 66.67, 100.0, 85.71, 100.0, 71.43, 83.33, 83.33, 100.0, 100.0]%	[98.82, 98.82, 100.0, 97.62, 98.82, 98.78, 100.0, 98.82, 100.0, 98.82, 98.8, 98.81, 98.81, 97.67, 98.82]%	||	84.78%	84.44%	98.89%	87.02%	98.9%	
  5  0  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  2  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  1  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 53.46%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	86.75%	86.67%	99.05%	88.97%	99.06%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[98.89, 98.89, 100.0, 97.78, 97.78, 95.56, 95.56, 96.67, 98.89, 97.78, 95.56, 97.78, 97.78, 97.78, 97.78]%	[90.91, 92.31, 100.0, 83.33, 83.33, 66.67, 66.67, 72.73, 92.31, 83.33, 66.67, 83.33, 83.33, 83.33, 83.33]%	[83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 66.67, 66.67, 100.0, 83.33, 66.67, 83.33, 83.33, 83.33, 83.33]%	[100.0, 98.81, 100.0, 98.81, 98.81, 97.62, 97.62, 98.81, 98.81, 98.81, 97.62, 98.81, 98.81, 98.81, 98.81]%	[100.0, 85.71, 100.0, 83.33, 83.33, 66.67, 66.67, 80.0, 85.71, 83.33, 66.67, 83.33, 83.33, 83.33, 83.33]%	[98.82, 100.0, 100.0, 98.81, 98.81, 97.62, 97.62, 97.65, 100.0, 98.81, 97.62, 98.81, 98.81, 98.81, 98.81]%	||	82.11%	82.22%	98.73%	82.32%	98.73%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  1  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  1  0  4  0  0  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  1  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 48.85%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	86.75%	86.67%	99.05%	88.97%	99.06%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	73.33%	96.44%	71.43%	[96.67, 97.78, 97.78, 96.67, 96.67, 95.56, 96.67, 95.56, 97.78, 94.44, 95.56, 97.78, 96.67, 94.44, 96.67]%	[72.73, 83.33, 85.71, 72.73, 66.67, 50.0, 76.92, 60.0, 83.33, 66.67, 71.43, 83.33, 76.92, 70.59, 66.67]%	[66.67, 83.33, 100.0, 66.67, 50.0, 33.33, 83.33, 50.0, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 50.0]%	[98.81, 98.81, 97.62, 98.81, 100.0, 100.0, 97.62, 98.81, 98.81, 95.24, 96.43, 98.81, 97.62, 94.05, 100.0]%	[80.0, 83.33, 75.0, 80.0, 100.0, 100.0, 71.43, 75.0, 83.33, 55.56, 62.5, 83.33, 71.43, 54.55, 100.0]%	[97.65, 98.81, 100.0, 97.65, 96.55, 95.45, 98.8, 96.51, 98.81, 98.77, 98.78, 98.81, 98.8, 100.0, 96.55]%	||	72.47%	73.33%	98.1%	78.36%	98.13%	
  4  1  0  0  0  0  0  0  0  0  0  0  0  1  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  1  0  1  4  0  0  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  1  0  3  0  0  0  0  1  0  0  0  1  0  50.0%		5
  0  0  0  1  0  2  0  0  1  0  0  0  0  2  0  33.33%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  3  0  0  2  0  1  0  0  50.0%		8
  0  0  0  0  0  0  0  0  5  0  1  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  5  1  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  2  0  0  0  0  3  50.0%		15
Forest OOB Error: 49.78%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	86.75%	86.67%	99.05%	88.97%	99.06%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[98.89, 98.89, 98.89, 97.78, 98.89, 96.67, 96.67, 94.44, 96.67, 97.78, 95.56, 100.0, 96.67, 98.89, 97.78]%	[90.91, 92.31, 92.31, 83.33, 92.31, 72.73, 76.92, 54.55, 72.73, 83.33, 66.67, 100.0, 72.73, 92.31, 83.33]%	[83.33, 100.0, 100.0, 83.33, 100.0, 66.67, 83.33, 50.0, 66.67, 83.33, 66.67, 100.0, 66.67, 100.0, 83.33]%	[100.0, 98.81, 98.81, 98.81, 98.81, 98.81, 97.62, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81, 98.81]%	[100.0, 85.71, 85.71, 83.33, 85.71, 80.0, 71.43, 60.0, 80.0, 83.33, 66.67, 100.0, 80.0, 85.71, 83.33]%	[98.82, 100.0, 100.0, 98.81, 100.0, 97.65, 98.8, 96.47, 97.65, 98.81, 97.62, 100.0, 97.65, 100.0, 98.81]%	||	81.76%	82.22%	98.73%	82.06%	98.74%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  3  0  0  0  0  1  0  1  50.0%		8
  0  0  0  1  0  0  1  0  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  1  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  1  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 49.42%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	86.67%	98.22%	85.71%	[98.89, 97.78, 100.0, 98.89, 97.78, 97.78, 97.78, 96.67, 98.89, 100.0, 97.78, 97.78, 97.78, 100.0, 95.56]%	[90.91, 83.33, 100.0, 90.91, 85.71, 83.33, 83.33, 80.0, 90.91, 100.0, 83.33, 80.0, 83.33, 100.0, 66.67]%	[83.33, 83.33, 100.0, 83.33, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 83.33, 66.67, 83.33, 100.0, 66.67]%	[100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 98.81, 96.43, 100.0, 100.0, 98.81, 100.0, 98.81, 100.0, 97.62]%	[100.0, 83.33, 100.0, 100.0, 75.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67]%	[98.82, 98.81, 100.0, 98.82, 100.0, 98.81, 98.81, 100.0, 98.82, 100.0, 98.81, 97.67, 98.81, 100.0, 97.62]%	||	86.78%	86.67%	99.05%	88.33%	99.05%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  1  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  1  0  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  1  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  4  0  0  2  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  1  0  4  66.67%		15
Forest OOB Error: 52.87%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	90.0%	98.67%	89.29%	[98.89, 98.89, 100.0, 97.78, 98.89, 98.89, 98.89, 97.78, 97.78, 98.89, 97.78, 98.89, 98.89, 100.0, 97.78]%	[90.91, 92.31, 100.0, 83.33, 92.31, 90.91, 92.31, 83.33, 83.33, 90.91, 83.33, 92.31, 90.91, 100.0, 83.33]%	[83.33, 100.0, 100.0, 83.33, 100.0, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 83.33]%	[100.0, 98.81, 100.0, 98.81, 98.81, 100.0, 98.81, 98.81, 98.81, 100.0, 98.81, 98.81, 100.0, 100.0, 98.81]%	[100.0, 85.71, 100.0, 83.33, 85.71, 100.0, 85.71, 83.33, 83.33, 100.0, 83.33, 85.71, 100.0, 100.0, 83.33]%	[98.82, 100.0, 100.0, 98.81, 100.0, 98.82, 100.0, 98.81, 98.81, 98.82, 98.81, 100.0, 98.82, 100.0, 98.81]%	||	89.97%	90.0%	99.29%	90.63%	99.29%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  0  0  1  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 48.63%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[98.89, 97.78, 98.89, 97.78, 100.0, 97.78, 94.44, 91.11, 98.89, 98.89, 95.56, 100.0, 98.89, 97.78, 97.78]%	[90.91, 85.71, 92.31, 80.0, 100.0, 85.71, 54.55, 42.86, 90.91, 92.31, 60.0, 100.0, 90.91, 83.33, 83.33]%	[83.33, 100.0, 100.0, 66.67, 100.0, 100.0, 50.0, 50.0, 83.33, 100.0, 50.0, 100.0, 83.33, 83.33, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 97.62, 97.62, 94.05, 100.0, 98.81, 98.81, 100.0, 100.0, 98.81, 98.81]%	[100.0, 75.0, 85.71, 100.0, 100.0, 75.0, 60.0, 37.5, 100.0, 85.71, 75.0, 100.0, 100.0, 83.33, 83.33]%	[98.82, 100.0, 100.0, 97.67, 100.0, 100.0, 96.47, 96.34, 98.82, 100.0, 96.51, 100.0, 98.82, 98.81, 98.81]%	||	82.19%	82.22%	98.73%	84.04%	98.74%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  1  0  0  0  0  3  1  0  1  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  1  3  0  0  1  0  0  0  1  50.0%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  3  0  0  3  0  0  0  0  50.0%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  1  5  83.33%		15
Forest OOB Error: 53.7%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[98.89, 97.78, 98.89, 96.67, 98.89, 97.78, 95.56, 97.78, 96.67, 98.89, 98.89, 97.78, 100.0, 96.67, 95.56]%	[90.91, 83.33, 92.31, 72.73, 90.91, 80.0, 71.43, 83.33, 76.92, 90.91, 90.91, 83.33, 100.0, 80.0, 66.67]%	[83.33, 83.33, 100.0, 66.67, 83.33, 66.67, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 100.0, 66.67]%	[100.0, 98.81, 98.81, 98.81, 100.0, 100.0, 96.43, 98.81, 97.62, 100.0, 100.0, 98.81, 100.0, 96.43, 97.62]%	[100.0, 83.33, 85.71, 80.0, 100.0, 100.0, 62.5, 83.33, 71.43, 100.0, 100.0, 83.33, 100.0, 66.67, 66.67]%	[98.82, 98.81, 100.0, 97.65, 98.82, 97.67, 98.78, 98.81, 98.8, 98.82, 98.82, 98.81, 100.0, 100.0, 97.62]%	||	83.58%	83.33%	98.81%	85.53%	98.82%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  0  1  0  0  0  0  0  0  1  0  66.67%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  0  1  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  0  0  1  83.33%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  1  4  66.67%		15
Forest OOB Error: 55.65%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	86.67%	98.22%	85.71%	[98.89, 97.78, 98.89, 98.89, 96.67, 97.78, 98.89, 97.78, 98.89, 97.78, 97.78, 97.78, 100.0, 100.0, 95.56]%	[90.91, 85.71, 92.31, 92.31, 80.0, 80.0, 90.91, 85.71, 90.91, 85.71, 80.0, 80.0, 100.0, 100.0, 60.0]%	[83.33, 100.0, 100.0, 100.0, 100.0, 66.67, 83.33, 100.0, 83.33, 100.0, 66.67, 66.67, 100.0, 100.0, 50.0]%	[100.0, 97.62, 98.81, 98.81, 96.43, 100.0, 100.0, 97.62, 100.0, 97.62, 100.0, 100.0, 100.0, 100.0, 98.81]%	[100.0, 75.0, 85.71, 85.71, 66.67, 100.0, 100.0, 75.0, 100.0, 75.0, 100.0, 100.0, 100.0, 100.0, 75.0]%	[98.82, 100.0, 100.0, 100.0, 100.0, 97.67, 98.82, 100.0, 98.82, 100.0, 97.67, 97.67, 100.0, 100.0, 96.51]%	||	86.3%	86.67%	99.05%	89.21%	99.07%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  1  0  4  0  0  0  1  0  0  0  0  0  66.67%		6
  0  0  0  0  1  0  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  1  0  2  0  0  0  0  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 47.93%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	84.44%	97.93%	83.33%	[96.67, 98.89, 100.0, 98.89, 98.89, 95.56, 100.0, 96.67, 100.0, 97.78, 94.44, 98.89, 98.89, 96.67, 96.67]%	[76.92, 92.31, 100.0, 90.91, 90.91, 60.0, 100.0, 72.73, 100.0, 85.71, 66.67, 90.91, 92.31, 76.92, 66.67]%	[83.33, 100.0, 100.0, 83.33, 83.33, 50.0, 100.0, 66.67, 100.0, 100.0, 83.33, 83.33, 100.0, 83.33, 50.0]%	[97.62, 98.81, 100.0, 100.0, 100.0, 98.81, 100.0, 98.81, 100.0, 97.62, 95.24, 100.0, 98.81, 97.62, 100.0]%	[71.43, 85.71, 100.0, 100.0, 100.0, 75.0, 100.0, 80.0, 100.0, 75.0, 55.56, 100.0, 85.71, 71.43, 100.0]%	[98.8, 100.0, 100.0, 98.82, 98.82, 96.51, 100.0, 97.65, 100.0, 100.0, 98.77, 98.82, 100.0, 98.8, 96.55]%	||	84.2%	84.44%	98.89%	86.66%	98.9%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  3  0  0  0  1  0  0  0  2  0  50.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  1  0  0  0  0  0  0  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  1  0  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  2  0  0  0  3  50.0%		15
Forest OOB Error: 49.79%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.15)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 97.78, 98.89, 95.56, 98.89, 98.89, 97.78, 98.89, 96.67, 100.0, 97.78, 98.89, 98.89]%	[80.0, 83.33, 92.31, 83.33, 90.91, 66.67, 92.31, 92.31, 83.33, 92.31, 76.92, 100.0, 80.0, 92.31, 90.91]%	[66.67, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 100.0, 83.33]%	[100.0, 98.81, 98.81, 98.81, 100.0, 97.62, 98.81, 98.81, 98.81, 98.81, 97.62, 100.0, 100.0, 98.81, 100.0]%	[100.0, 83.33, 85.71, 83.33, 100.0, 66.67, 85.71, 85.71, 83.33, 85.71, 71.43, 100.0, 100.0, 85.71, 100.0]%	[97.67, 98.81, 100.0, 98.81, 98.82, 97.62, 100.0, 100.0, 98.81, 100.0, 98.8, 100.0, 97.67, 100.0, 98.82]%	||	86.46%	86.67%	99.05%	87.78%	99.06%	
  4  1  0  0  0  0  0  0  0  0  0  0  0  1  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  1  1  0  4  0  0  0  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  1  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 50.39%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.15)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	86.67%	98.22%	85.71%	[98.89, 98.89, 100.0, 93.33, 97.78, 96.67, 98.89, 97.78, 98.89, 98.89, 97.78, 98.89, 98.89, 98.89, 98.89]%	[90.91, 92.31, 100.0, 62.5, 83.33, 72.73, 90.91, 85.71, 90.91, 92.31, 80.0, 90.91, 90.91, 92.31, 90.91]%	[83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 83.33, 100.0, 83.33]%	[100.0, 98.81, 100.0, 94.05, 98.81, 98.81, 100.0, 97.62, 100.0, 98.81, 100.0, 100.0, 100.0, 98.81, 100.0]%	[100.0, 85.71, 100.0, 50.0, 83.33, 80.0, 100.0, 75.0, 100.0, 85.71, 100.0, 100.0, 100.0, 85.71, 100.0]%	[98.82, 100.0, 100.0, 98.75, 98.81, 97.65, 98.82, 100.0, 98.82, 100.0, 97.67, 98.82, 98.82, 100.0, 98.82]%	||	87.11%	86.67%	99.05%	89.7%	99.05%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  1  0  4  0  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  0  1  0  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  1  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  1  0  0  0  1  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  1  0  0  0  5  0  0  0  83.33%		12
  0  0  0  1  0  0  0  0  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 52.12%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.15)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	84.44%	97.93%	83.33%	[98.89, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 95.56, 98.89, 97.78, 96.67, 97.78, 97.78, 98.89, 98.89]%	[90.91, 85.71, 92.31, 85.71, 83.33, 66.67, 90.91, 66.67, 92.31, 83.33, 72.73, 85.71, 83.33, 90.91, 90.91]%	[83.33, 100.0, 100.0, 100.0, 83.33, 50.0, 83.33, 66.67, 100.0, 83.33, 66.67, 100.0, 83.33, 83.33, 83.33]%	[100.0, 97.62, 98.81, 97.62, 98.81, 100.0, 100.0, 97.62, 98.81, 98.81, 98.81, 97.62, 98.81, 100.0, 100.0]%	[100.0, 75.0, 85.71, 75.0, 83.33, 100.0, 100.0, 66.67, 85.71, 83.33, 80.0, 75.0, 83.33, 100.0, 100.0]%	[98.82, 100.0, 100.0, 100.0, 98.81, 96.55, 98.82, 97.62, 100.0, 98.81, 97.65, 100.0, 98.81, 98.82, 98.82]%	||	84.1%	84.44%	98.89%	86.21%	98.9%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  1  0  1  1  3  0  0  0  0  0  0  0  0  0  50.0%		6
  0  0  0  0  0  0  5  0  0  0  0  1  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  1  0  1  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  1  0  0  0  0  0  0  0  0  0  5  0  0  83.33%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 50.78%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.15)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	88.89%	98.52%	88.1%	[98.89, 98.89, 98.89, 98.89, 100.0, 100.0, 96.67, 96.67, 96.67, 98.89, 97.78, 98.89, 97.78, 100.0, 98.89]%	[90.91, 92.31, 90.91, 90.91, 100.0, 100.0, 76.92, 72.73, 76.92, 90.91, 80.0, 92.31, 85.71, 100.0, 92.31]%	[83.33, 100.0, 83.33, 83.33, 100.0, 100.0, 83.33, 66.67, 83.33, 83.33, 66.67, 100.0, 100.0, 100.0, 100.0]%	[100.0, 98.81, 100.0, 100.0, 100.0, 100.0, 97.62, 98.81, 97.62, 100.0, 100.0, 98.81, 97.62, 100.0, 98.81]%	[100.0, 85.71, 100.0, 100.0, 100.0, 100.0, 71.43, 80.0, 71.43, 100.0, 100.0, 85.71, 75.0, 100.0, 85.71]%	[98.82, 100.0, 98.82, 98.82, 100.0, 100.0, 98.8, 97.65, 98.8, 98.82, 97.67, 100.0, 100.0, 100.0, 100.0]%	||	88.86%	88.89%	99.21%	90.33%	99.21%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  0  1  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  0  0  1  0  1  66.67%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 53.17%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.15)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[98.89, 98.89, 100.0, 96.67, 98.89, 96.67, 98.89, 96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 98.89, 97.78]%	[90.91, 92.31, 100.0, 76.92, 90.91, 72.73, 92.31, 72.73, 83.33, 90.91, 83.33, 83.33, 76.92, 92.31, 83.33]%	[83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 100.0, 66.67, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 98.81, 100.0, 97.62, 100.0, 98.81, 98.81, 98.81, 98.81, 100.0, 98.81, 98.81, 97.62, 98.81, 98.81]%	[100.0, 85.71, 100.0, 71.43, 100.0, 80.0, 85.71, 80.0, 83.33, 100.0, 83.33, 83.33, 71.43, 85.71, 83.33]%	[98.82, 100.0, 100.0, 98.8, 98.82, 97.65, 100.0, 97.65, 98.81, 98.82, 98.81, 98.81, 98.8, 100.0, 98.81]%	||	85.49%	85.56%	98.97%	86.22%	98.97%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  1  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  1  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  1  0  1  66.67%		8
  0  0  0  0  0  0  0  0  5  0  0  0  0  1  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 47.55%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.15)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[95.56, 97.78, 100.0, 98.89, 98.89, 95.56, 97.78, 97.78, 97.78, 95.56, 97.78, 93.33, 100.0, 96.67, 96.67]%	[71.43, 85.71, 100.0, 90.91, 90.91, 66.67, 80.0, 85.71, 83.33, 60.0, 83.33, 57.14, 100.0, 76.92, 66.67]%	[83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 66.67, 100.0, 83.33, 50.0, 83.33, 66.67, 100.0, 83.33, 50.0]%	[96.43, 97.62, 100.0, 100.0, 100.0, 97.62, 100.0, 97.62, 98.81, 98.81, 98.81, 95.24, 100.0, 97.62, 100.0]%	[62.5, 75.0, 100.0, 100.0, 100.0, 66.67, 100.0, 75.0, 83.33, 75.0, 83.33, 50.0, 100.0, 71.43, 100.0]%	[98.78, 100.0, 100.0, 98.82, 98.82, 97.62, 97.67, 100.0, 98.81, 96.51, 98.81, 97.56, 100.0, 98.8, 96.55]%	||	79.92%	80.0%	98.57%	82.82%	98.58%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  1  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  1  0  0  0  0  4  0  0  0  0  0  0  1  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  1  0  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  3  0  3  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  1  0  0  0  0  0  0  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  1  0  0  0  0  0  0  1  0  0  1  0  0  0  3  50.0%		15
Forest OOB Error: 49.38%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[96.67, 96.67, 96.67, 96.67, 98.89, 97.78, 98.89, 100.0, 98.89, 97.78, 98.89, 97.78, 98.89, 98.89, 97.78]%	[72.73, 76.92, 80.0, 80.0, 90.91, 80.0, 90.91, 100.0, 90.91, 83.33, 90.91, 83.33, 92.31, 90.91, 83.33]%	[66.67, 83.33, 100.0, 100.0, 83.33, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33]%	[98.81, 97.62, 96.43, 96.43, 100.0, 100.0, 100.0, 100.0, 100.0, 98.81, 100.0, 98.81, 98.81, 100.0, 98.81]%	[80.0, 71.43, 66.67, 66.67, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33, 85.71, 100.0, 83.33]%	[97.65, 98.8, 100.0, 100.0, 98.82, 97.67, 98.82, 100.0, 98.82, 98.81, 98.82, 98.81, 100.0, 98.82, 98.81]%	||	85.77%	85.56%	98.97%	88.03%	98.98%	
  4  2  0  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  1  5  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  2  0  4  0  0  0  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  1  0  0  0  0  0  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 51.32%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[95.56, 97.78, 98.89, 98.89, 100.0, 96.67, 96.67, 96.67, 100.0, 96.67, 97.78, 96.67, 97.78, 97.78, 96.67]%	[66.67, 83.33, 92.31, 92.31, 100.0, 76.92, 72.73, 76.92, 100.0, 72.73, 83.33, 76.92, 80.0, 80.0, 76.92]%	[66.67, 83.33, 100.0, 100.0, 100.0, 83.33, 66.67, 83.33, 100.0, 66.67, 83.33, 83.33, 66.67, 66.67, 83.33]%	[97.62, 98.81, 98.81, 98.81, 100.0, 97.62, 98.81, 97.62, 100.0, 98.81, 98.81, 97.62, 100.0, 100.0, 97.62]%	[66.67, 83.33, 85.71, 85.71, 100.0, 71.43, 80.0, 71.43, 100.0, 80.0, 83.33, 71.43, 100.0, 100.0, 71.43]%	[97.62, 98.81, 100.0, 100.0, 100.0, 98.8, 97.65, 98.8, 100.0, 97.65, 98.81, 98.8, 97.67, 97.67, 98.8]%	||	82.07%	82.22%	98.73%	83.37%	98.74%	
  4  1  1  0  0  0  0  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  0  1  0  0  0  0  0  83.33%		6
  1  0  0  0  0  1  4  0  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  0  0  0  0  1  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  4  0  2  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  1  0  0  0  0  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 51.19%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	72.22%	96.3%	70.24%	[96.67, 96.67, 98.89, 96.67, 96.67, 95.56, 96.67, 98.89, 97.78, 90.0, 96.67, 93.33, 95.56, 97.78, 96.67]%	[72.73, 66.67, 92.31, 66.67, 76.92, 66.67, 76.92, 92.31, 83.33, 40.0, 76.92, 50.0, 66.67, 85.71, 66.67]%	[66.67, 50.0, 100.0, 50.0, 83.33, 66.67, 83.33, 100.0, 83.33, 50.0, 83.33, 50.0, 66.67, 100.0, 50.0]%	[98.81, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 98.81, 92.86, 97.62, 96.43, 97.62, 97.62, 100.0]%	[80.0, 100.0, 85.71, 100.0, 71.43, 66.67, 71.43, 85.71, 83.33, 33.33, 71.43, 50.0, 66.67, 75.0, 100.0]%	[97.65, 96.55, 100.0, 96.55, 98.8, 97.62, 98.8, 100.0, 98.81, 96.3, 98.8, 96.43, 97.62, 100.0, 96.55]%	||	72.03%	72.22%	98.02%	76.05%	98.03%	
  4  0  0  0  0  0  0  0  0  1  0  0  0  1  0  66.67%		1
  0  3  0  0  0  0  2  0  0  1  0  0  0  0  0  50.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  3  1  2  0  0  0  0  0  0  0  0  0  50.0%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  1  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  3  0  3  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  1  0  0  0  0  0  0  0  0  2  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  1  1  3  50.0%		15
Forest OOB Error: 50.0%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	86.67%	98.22%	85.71%	[98.89, 98.89, 96.67, 96.67, 98.89, 97.78, 96.67, 96.67, 98.89, 100.0, 97.78, 98.89, 98.89, 98.89, 98.89]%	[90.91, 92.31, 80.0, 76.92, 90.91, 83.33, 76.92, 76.92, 90.91, 100.0, 83.33, 90.91, 90.91, 90.91, 90.91]%	[83.33, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 98.81, 96.43, 97.62, 100.0, 98.81, 97.62, 97.62, 100.0, 100.0, 98.81, 100.0, 100.0, 100.0, 100.0]%	[100.0, 85.71, 66.67, 71.43, 100.0, 83.33, 71.43, 71.43, 100.0, 100.0, 83.33, 100.0, 100.0, 100.0, 100.0]%	[98.82, 100.0, 100.0, 98.8, 98.82, 98.81, 98.8, 98.8, 98.82, 100.0, 98.81, 98.82, 98.82, 98.82, 98.82]%	||	87.07%	86.67%	99.05%	88.89%	99.05%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  1  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  1  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  1  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 50.76%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	87.78%	98.37%	86.9%	[97.78, 98.89, 97.78, 98.89, 97.78, 100.0, 96.67, 96.67, 100.0, 96.67, 98.89, 98.89, 97.78, 100.0, 98.89]%	[80.0, 92.31, 85.71, 90.91, 80.0, 100.0, 72.73, 76.92, 100.0, 80.0, 92.31, 90.91, 83.33, 100.0, 90.91]%	[66.67, 100.0, 100.0, 83.33, 66.67, 100.0, 66.67, 83.33, 100.0, 100.0, 100.0, 83.33, 83.33, 100.0, 83.33]%	[100.0, 98.81, 97.62, 100.0, 100.0, 100.0, 98.81, 97.62, 100.0, 96.43, 98.81, 100.0, 98.81, 100.0, 100.0]%	[100.0, 85.71, 75.0, 100.0, 100.0, 100.0, 80.0, 71.43, 100.0, 66.67, 85.71, 100.0, 83.33, 100.0, 100.0]%	[97.67, 100.0, 100.0, 98.82, 97.67, 100.0, 97.65, 98.8, 100.0, 100.0, 100.0, 98.82, 98.81, 100.0, 98.82]%	||	87.74%	87.78%	99.13%	89.86%	99.14%	
  4  1  0  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  0  0  0  1  0  0  0  0  0  66.67%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  4  1  0  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  1  0  0  0  0  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 45.2%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	86.67%	98.22%	85.71%	[98.89, 98.89, 97.78, 96.67, 97.78, 96.67, 96.67, 100.0, 100.0, 96.67, 97.78, 98.89, 98.89, 98.89, 98.89]%	[90.91, 92.31, 85.71, 66.67, 80.0, 76.92, 76.92, 100.0, 100.0, 76.92, 83.33, 92.31, 90.91, 92.31, 90.91]%	[83.33, 100.0, 100.0, 50.0, 66.67, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 83.33]%	[100.0, 98.81, 97.62, 100.0, 100.0, 97.62, 97.62, 100.0, 100.0, 97.62, 98.81, 98.81, 100.0, 98.81, 100.0]%	[100.0, 85.71, 75.0, 100.0, 100.0, 71.43, 71.43, 100.0, 100.0, 71.43, 83.33, 85.71, 100.0, 85.71, 100.0]%	[98.82, 100.0, 100.0, 96.55, 97.67, 98.8, 98.8, 100.0, 100.0, 98.8, 98.81, 100.0, 98.82, 100.0, 98.82]%	||	86.41%	86.67%	99.05%	88.65%	99.06%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  3  0  2  1  0  0  0  0  0  0  0  0  50.0%		4
  0  0  1  0  4  0  0  0  0  0  0  0  0  1  0  66.67%		5
  0  0  0  0  0  5  0  0  0  1  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  1  0  0  0  0  0  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  1  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 46.88%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.05)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[100.0, 98.89, 97.78, 97.78, 98.89, 96.67, 96.67, 96.67, 98.89, 98.89, 96.67, 97.78, 98.89, 97.78, 98.89]%	[100.0, 90.91, 85.71, 83.33, 90.91, 72.73, 76.92, 76.92, 90.91, 92.31, 76.92, 80.0, 90.91, 85.71, 90.91]%	[100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 100.0, 97.62, 98.81, 100.0, 98.81, 97.62, 97.62, 100.0, 98.81, 97.62, 100.0, 100.0, 97.62, 100.0]%	[100.0, 100.0, 75.0, 83.33, 100.0, 80.0, 71.43, 71.43, 100.0, 85.71, 71.43, 100.0, 100.0, 75.0, 100.0]%	[100.0, 98.82, 100.0, 98.81, 98.82, 97.65, 98.8, 98.8, 98.82, 100.0, 98.8, 97.67, 98.82, 100.0, 98.82]%	||	85.67%	85.56%	98.97%	87.56%	98.98%	
  6  0  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  1  0  4  0  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  0  1  0  83.33%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  1  0  0  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  1  0  0  0  5  83.33%		15
Forest OOB Error: 49.62%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.05)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[98.89, 96.67, 100.0, 97.78, 96.67, 94.44, 95.56, 96.67, 96.67, 96.67, 98.89, 96.67, 96.67, 96.67, 94.44]%	[90.91, 72.73, 100.0, 83.33, 76.92, 54.55, 75.0, 76.92, 72.73, 76.92, 90.91, 72.73, 76.92, 72.73, 54.55]%	[83.33, 66.67, 100.0, 83.33, 83.33, 50.0, 100.0, 83.33, 66.67, 83.33, 83.33, 66.67, 83.33, 66.67, 50.0]%	[100.0, 98.81, 100.0, 98.81, 97.62, 97.62, 95.24, 97.62, 98.81, 97.62, 100.0, 98.81, 97.62, 98.81, 97.62]%	[100.0, 80.0, 100.0, 83.33, 71.43, 60.0, 60.0, 71.43, 80.0, 71.43, 100.0, 80.0, 71.43, 80.0, 60.0]%	[98.82, 97.65, 100.0, 98.81, 98.8, 96.47, 100.0, 98.8, 97.65, 98.8, 98.82, 97.65, 98.8, 97.65, 96.47]%	||	76.52%	76.67%	98.33%	77.94%	98.34%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  4  0  0  0  0  1  0  1  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  1  3  0  0  0  0  0  0  1  1  0  50.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  0  0  1  83.33%		8
  0  0  0  0  1  0  1  0  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  1  1  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  1  0  0  1  1  0  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 51.68%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.05)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[97.78, 98.89, 97.78, 97.78, 97.78, 93.33, 96.67, 98.89, 98.89, 95.56, 97.78, 98.89, 98.89, 95.56, 97.78]%	[83.33, 90.91, 85.71, 83.33, 83.33, 50.0, 76.92, 90.91, 90.91, 75.0, 85.71, 90.91, 90.91, 60.0, 80.0]%	[83.33, 83.33, 100.0, 83.33, 83.33, 50.0, 83.33, 83.33, 83.33, 100.0, 100.0, 83.33, 83.33, 50.0, 66.67]%	[98.81, 100.0, 97.62, 98.81, 98.81, 96.43, 97.62, 100.0, 100.0, 95.24, 97.62, 100.0, 100.0, 98.81, 100.0]%	[83.33, 100.0, 75.0, 83.33, 83.33, 50.0, 71.43, 100.0, 100.0, 60.0, 75.0, 100.0, 100.0, 75.0, 100.0]%	[98.81, 98.82, 100.0, 98.81, 98.81, 96.43, 98.8, 98.82, 98.82, 100.0, 100.0, 98.82, 98.82, 96.51, 97.67]%	||	81.19%	81.11%	98.65%	83.76%	98.66%	
  5  0  0  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  1  1  0  3  0  0  0  1  0  0  0  0  0  50.0%		6
  1  0  0  0  0  0  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  1  0  0  1  0  0  0  1  0  0  0  3  0  50.0%		14
  0  0  0  0  1  1  0  0  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 53.71%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.05)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	75.56%	96.74%	73.81%	[96.67, 98.89, 98.89, 95.56, 98.89, 94.44, 95.56, 96.67, 98.89, 96.67, 97.78, 93.33, 97.78, 93.33, 97.78]%	[66.67, 90.91, 92.31, 75.0, 90.91, 54.55, 66.67, 80.0, 92.31, 66.67, 80.0, 57.14, 85.71, 50.0, 80.0]%	[50.0, 83.33, 100.0, 100.0, 83.33, 50.0, 66.67, 100.0, 100.0, 50.0, 66.67, 66.67, 100.0, 50.0, 66.67]%	[100.0, 100.0, 98.81, 95.24, 100.0, 97.62, 97.62, 96.43, 98.81, 100.0, 100.0, 95.24, 97.62, 96.43, 100.0]%	[100.0, 100.0, 85.71, 60.0, 100.0, 60.0, 66.67, 66.67, 85.71, 100.0, 100.0, 50.0, 75.0, 50.0, 100.0]%	[96.55, 98.82, 100.0, 100.0, 98.82, 96.47, 97.62, 100.0, 100.0, 96.55, 97.67, 97.56, 100.0, 96.43, 97.67]%	||	75.26%	75.56%	98.25%	79.98%	98.28%	
  3  0  0  0  0  0  1  0  0  0  0  1  0  1  0  50.0%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  0  0  0  0  1  0  83.33%		5
  0  0  1  2  0  3  0  0  0  0  0  0  0  0  0  50.0%		6
  0  0  0  0  0  0  4  1  1  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  3  0  3  0  0  0  50.0%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  1  0  0  0  4  0  1  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  2  0  1  0  0  0  0  0  0  0  3  0  50.0%		14
  0  0  0  0  0  1  0  0  0  0  0  0  1  0  4  66.67%		15
Forest OOB Error: 53.09%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.05)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	68.89%	95.85%	66.67%	[95.56, 96.67, 100.0, 95.56, 94.44, 97.78, 92.22, 95.56, 98.89, 91.11, 97.78, 95.56, 97.78, 93.33, 95.56]%	[71.43, 72.73, 100.0, 50.0, 66.67, 80.0, 63.16, 71.43, 90.91, 33.33, 83.33, 60.0, 80.0, 57.14, 50.0]%	[83.33, 66.67, 100.0, 33.33, 83.33, 66.67, 100.0, 83.33, 83.33, 33.33, 83.33, 50.0, 66.67, 66.67, 33.33]%	[96.43, 98.81, 100.0, 100.0, 95.24, 100.0, 91.67, 96.43, 100.0, 95.24, 98.81, 98.81, 100.0, 95.24, 100.0]%	[62.5, 80.0, 100.0, 100.0, 55.56, 100.0, 46.15, 62.5, 100.0, 33.33, 83.33, 75.0, 100.0, 50.0, 100.0]%	[98.78, 97.65, 100.0, 95.45, 98.77, 97.67, 100.0, 98.78, 98.82, 95.24, 98.81, 96.51, 97.67, 97.56, 95.45]%	||	68.68%	68.89%	97.78%	76.56%	97.81%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  4  0  0  0  0  2  0  0  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  1  0  0  2  0  0  1  0  0  0  0  0  0  2  0  33.33%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  0  0  0  0  0  2  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  1  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  3  0  0  2  0  1  0  0  0  33.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  1  0  0  0  0  0  0  0  0  2  0  3  0  0  0  50.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  1  0  0  0  0  1  0  0  0  4  0  66.67%		14
  1  0  0  0  1  0  0  1  0  1  0  0  0  0  2  33.33%		15
Forest OOB Error: 55.24%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.05)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[98.89, 98.89, 97.78, 97.78, 97.78, 96.67, 96.67, 95.56, 97.78, 95.56, 95.56, 94.44, 98.89, 96.67, 96.67]%	[90.91, 92.31, 85.71, 85.71, 83.33, 72.73, 76.92, 66.67, 83.33, 50.0, 71.43, 61.54, 90.91, 72.73, 72.73]%	[83.33, 100.0, 100.0, 100.0, 83.33, 66.67, 83.33, 66.67, 83.33, 33.33, 83.33, 66.67, 83.33, 66.67, 66.67]%	[100.0, 98.81, 97.62, 97.62, 98.81, 98.81, 97.62, 97.62, 98.81, 100.0, 96.43, 96.43, 100.0, 98.81, 98.81]%	[100.0, 85.71, 75.0, 75.0, 83.33, 80.0, 71.43, 66.67, 83.33, 100.0, 62.5, 57.14, 100.0, 80.0, 80.0]%	[98.82, 100.0, 100.0, 100.0, 98.81, 97.65, 98.8, 97.62, 98.81, 95.45, 98.78, 97.59, 98.82, 97.65, 97.65]%	||	77.13%	77.78%	98.41%	80.01%	98.43%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  1  4  0  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  4  0  0  2  0  0  0  0  66.67%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  1  2  0  3  0  0  0  33.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  1  1  0  0  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  1  0  0  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 49.2%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.0)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[98.89, 98.89, 95.56, 98.89, 97.78, 95.56, 96.67, 95.56, 96.67, 94.44, 95.56, 97.78, 96.67, 100.0, 96.67]%	[90.91, 92.31, 71.43, 90.91, 85.71, 60.0, 76.92, 71.43, 76.92, 44.44, 60.0, 83.33, 72.73, 100.0, 76.92]%	[83.33, 100.0, 83.33, 83.33, 100.0, 50.0, 83.33, 83.33, 83.33, 33.33, 50.0, 83.33, 66.67, 100.0, 83.33]%	[100.0, 98.81, 96.43, 100.0, 97.62, 98.81, 97.62, 96.43, 97.62, 98.81, 98.81, 98.81, 98.81, 100.0, 97.62]%	[100.0, 85.71, 62.5, 100.0, 75.0, 75.0, 71.43, 62.5, 71.43, 66.67, 75.0, 83.33, 80.0, 100.0, 71.43]%	[98.82, 100.0, 98.78, 98.82, 100.0, 96.51, 98.8, 98.78, 98.8, 95.4, 96.51, 98.81, 97.65, 100.0, 98.8]%	||	76.93%	77.78%	98.41%	78.67%	98.43%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  1  0  1  3  0  0  0  0  0  0  0  0  1  50.0%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  2  0  1  2  0  1  0  0  0  33.33%		10
  0  0  1  0  0  0  0  2  0  0  3  0  0  0  0  50.0%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 48.48%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.0)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[98.89, 96.67, 98.89, 98.89, 98.89, 96.67, 98.89, 96.67, 97.78, 98.89, 96.67, 98.89, 96.67, 98.89, 98.89]%	[90.91, 76.92, 92.31, 90.91, 90.91, 76.92, 90.91, 76.92, 83.33, 92.31, 76.92, 90.91, 72.73, 92.31, 90.91]%	[83.33, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 66.67, 100.0, 83.33]%	[100.0, 97.62, 98.81, 100.0, 100.0, 97.62, 100.0, 97.62, 98.81, 98.81, 97.62, 100.0, 98.81, 98.81, 100.0]%	[100.0, 71.43, 85.71, 100.0, 100.0, 71.43, 100.0, 71.43, 83.33, 85.71, 71.43, 100.0, 80.0, 85.71, 100.0]%	[98.82, 98.8, 100.0, 98.82, 98.82, 98.8, 98.82, 98.8, 98.81, 100.0, 98.8, 98.82, 97.65, 100.0, 98.82]%	||	85.74%	85.56%	98.97%	87.08%	98.97%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  1  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  1  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  1  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 48.65%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.0)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[97.78, 98.89, 98.89, 95.56, 97.78, 95.56, 98.89, 95.56, 96.67, 98.89, 97.78, 97.78, 100.0, 96.67, 97.78]%	[83.33, 92.31, 92.31, 66.67, 85.71, 66.67, 90.91, 60.0, 80.0, 90.91, 80.0, 83.33, 100.0, 72.73, 83.33]%	[83.33, 100.0, 100.0, 66.67, 100.0, 66.67, 83.33, 50.0, 100.0, 83.33, 66.67, 83.33, 100.0, 66.67, 83.33]%	[98.81, 98.81, 98.81, 97.62, 97.62, 97.62, 100.0, 98.81, 96.43, 100.0, 100.0, 98.81, 100.0, 98.81, 98.81]%	[83.33, 85.71, 85.71, 66.67, 75.0, 66.67, 100.0, 75.0, 66.67, 100.0, 100.0, 83.33, 100.0, 80.0, 83.33]%	[98.81, 100.0, 100.0, 97.62, 100.0, 97.62, 98.82, 96.51, 100.0, 98.82, 97.67, 98.81, 100.0, 97.65, 98.81]%	||	81.88%	82.22%	98.73%	83.43%	98.74%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  1  4  0  1  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  1  0  5  0  0  0  0  0  0  0  0  83.33%		7
  1  0  0  1  0  0  0  3  1  0  0  0  0  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  1  0  1  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  1  1  0  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 52.92%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.0)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	88.89%	98.52%	88.1%	[98.89, 100.0, 98.89, 95.56, 98.89, 98.89, 97.78, 97.78, 100.0, 98.89, 96.67, 100.0, 97.78, 98.89, 98.89]%	[90.91, 100.0, 92.31, 71.43, 90.91, 92.31, 83.33, 83.33, 100.0, 92.31, 66.67, 100.0, 85.71, 90.91, 90.91]%	[83.33, 100.0, 100.0, 83.33, 83.33, 100.0, 83.33, 83.33, 100.0, 100.0, 50.0, 100.0, 100.0, 83.33, 83.33]%	[100.0, 100.0, 98.81, 96.43, 100.0, 98.81, 98.81, 98.81, 100.0, 98.81, 100.0, 100.0, 97.62, 100.0, 100.0]%	[100.0, 100.0, 85.71, 62.5, 100.0, 85.71, 83.33, 83.33, 100.0, 85.71, 100.0, 100.0, 75.0, 100.0, 100.0]%	[98.82, 100.0, 100.0, 98.78, 98.82, 100.0, 98.81, 98.81, 100.0, 100.0, 96.55, 100.0, 100.0, 98.82, 98.82]%	||	88.74%	88.89%	99.21%	90.75%	99.22%	
  5  0  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  1  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  3  0  2  0  0  50.0%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  1  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 50.0%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.0)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	87.78%	98.37%	86.9%	[98.89, 98.89, 94.44, 96.67, 97.78, 97.78, 98.89, 97.78, 100.0, 98.89, 100.0, 100.0, 97.78, 98.89, 98.89]%	[90.91, 92.31, 70.59, 76.92, 80.0, 83.33, 90.91, 80.0, 100.0, 90.91, 100.0, 100.0, 83.33, 92.31, 90.91]%	[83.33, 100.0, 100.0, 83.33, 66.67, 83.33, 83.33, 66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 100.0, 83.33]%	[100.0, 98.81, 94.05, 97.62, 100.0, 98.81, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.81, 98.81, 100.0]%	[100.0, 85.71, 54.55, 71.43, 100.0, 83.33, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 85.71, 100.0]%	[98.82, 100.0, 100.0, 98.8, 97.67, 98.81, 98.82, 97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 100.0, 98.82]%	||	88.16%	87.78%	99.13%	90.94%	99.14%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  0  0  0  0  0  0  0  1  0  83.33%		4
  0  0  2  0  4  0  0  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  1  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  1  5  0  0  0  0  0  0  0  0  83.33%		7
  0  0  1  0  0  0  0  4  0  0  0  0  1  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  1  0  0  0  0  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  1  0  0  0  0  0  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 43.78%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.0)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.005, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	87.78%	98.37%	86.9%	[98.89, 100.0, 98.89, 97.78, 98.89, 97.78, 97.78, 97.78, 98.89, 98.89, 97.78, 98.89, 95.56, 98.89, 98.89]%	[90.91, 100.0, 92.31, 83.33, 90.91, 83.33, 85.71, 80.0, 92.31, 92.31, 80.0, 90.91, 75.0, 90.91, 90.91]%	[83.33, 100.0, 100.0, 83.33, 83.33, 83.33, 100.0, 66.67, 100.0, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33]%	[100.0, 100.0, 98.81, 98.81, 100.0, 98.81, 97.62, 100.0, 98.81, 98.81, 100.0, 100.0, 95.24, 100.0, 100.0]%	[100.0, 100.0, 85.71, 83.33, 100.0, 83.33, 75.0, 100.0, 85.71, 85.71, 100.0, 100.0, 60.0, 100.0, 100.0]%	[98.82, 100.0, 100.0, 98.81, 98.82, 98.81, 100.0, 97.67, 100.0, 100.0, 97.67, 98.82, 100.0, 98.82, 98.82]%	||	87.92%	87.78%	99.13%	90.59%	99.14%	
  5  0  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  4  0  0  0  0  2  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 48.77%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	86.75%	86.67%	99.05%	88.97%	99.06%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[97.78, 97.78, 98.89, 97.78, 98.89, 94.44, 97.78, 96.67, 97.78, 98.89, 98.89, 97.78, 98.89, 95.56, 96.67]%	[83.33, 85.71, 90.91, 85.71, 92.31, 54.55, 80.0, 76.92, 85.71, 90.91, 90.91, 85.71, 90.91, 60.0, 72.73]%	[83.33, 100.0, 83.33, 100.0, 100.0, 50.0, 66.67, 83.33, 100.0, 83.33, 83.33, 100.0, 83.33, 50.0, 66.67]%	[98.81, 97.62, 100.0, 97.62, 98.81, 97.62, 100.0, 97.62, 97.62, 100.0, 100.0, 97.62, 100.0, 98.81, 98.81]%	[83.33, 75.0, 100.0, 75.0, 85.71, 60.0, 100.0, 71.43, 75.0, 100.0, 100.0, 75.0, 100.0, 75.0, 80.0]%	[98.81, 100.0, 98.82, 100.0, 100.0, 96.47, 97.67, 98.8, 100.0, 98.82, 98.82, 100.0, 98.82, 96.51, 97.65]%	||	81.76%	82.22%	98.73%	83.7%	98.75%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  1  3  0  0  1  0  0  0  0  1  0  50.0%		6
  0  1  0  0  0  0  4  0  0  0  0  1  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  0  0  0  0  1  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  1  0  0  0  0  0  0  0  0  0  0  0  5  0  0  83.33%		13
  0  0  0  1  0  2  0  0  0  0  0  0  0  3  0  50.0%		14
  0  0  0  1  0  0  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 49.81%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	86.75%	86.67%	99.05%	88.97%	99.06%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[98.89, 98.89, 97.78, 96.67, 96.67, 97.78, 96.67, 96.67, 97.78, 97.78, 97.78, 95.56, 95.56, 98.89, 98.89]%	[90.91, 92.31, 85.71, 76.92, 72.73, 80.0, 76.92, 66.67, 83.33, 80.0, 83.33, 71.43, 71.43, 92.31, 90.91]%	[83.33, 100.0, 100.0, 83.33, 66.67, 66.67, 83.33, 50.0, 83.33, 66.67, 83.33, 83.33, 83.33, 100.0, 83.33]%	[100.0, 98.81, 97.62, 97.62, 98.81, 100.0, 97.62, 100.0, 98.81, 100.0, 98.81, 96.43, 96.43, 98.81, 100.0]%	[100.0, 85.71, 75.0, 71.43, 80.0, 100.0, 71.43, 100.0, 83.33, 100.0, 83.33, 62.5, 62.5, 85.71, 100.0]%	[98.82, 100.0, 100.0, 98.8, 97.65, 97.67, 98.8, 96.55, 98.81, 97.67, 98.81, 98.78, 98.78, 100.0, 98.82]%	||	80.99%	81.11%	98.65%	84.06%	98.66%	
  5  0  0  1  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  4  0  1  0  0  0  0  0  0  0  0  66.67%		5
  0  1  0  0  0  4  0  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  0  0  0  0  1  0  0  0  83.33%		7
  0  0  0  0  0  0  0  3  1  0  0  0  2  0  0  50.0%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  4  0  2  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  1  0  0  0  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  1  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 45.75%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	86.75%	86.67%	99.05%	88.97%	99.06%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	67.78%	95.7%	65.48%	[95.56, 96.67, 98.89, 95.56, 96.67, 94.44, 94.44, 94.44, 96.67, 94.44, 96.67, 91.11, 96.67, 96.67, 96.67]%	[60.0, 66.67, 92.31, 60.0, 76.92, 61.54, 54.55, 66.67, 80.0, 54.55, 72.73, 50.0, 72.73, 72.73, 72.73]%	[50.0, 50.0, 100.0, 50.0, 83.33, 66.67, 50.0, 83.33, 100.0, 50.0, 66.67, 66.67, 66.67, 66.67, 66.67]%	[98.81, 100.0, 98.81, 98.81, 97.62, 96.43, 97.62, 95.24, 96.43, 97.62, 98.81, 92.86, 98.81, 98.81, 98.81]%	[75.0, 100.0, 85.71, 75.0, 71.43, 57.14, 60.0, 55.56, 66.67, 60.0, 80.0, 40.0, 80.0, 80.0, 80.0]%	[96.51, 96.55, 100.0, 96.51, 98.8, 97.59, 96.47, 98.77, 100.0, 96.47, 97.65, 97.5, 97.65, 97.65, 97.65]%	||	67.61%	67.78%	97.7%	71.1%	97.72%	
  3  0  0  0  0  0  0  0  0  1  0  1  0  0  1  50.0%		1
  0  3  0  0  0  0  1  0  1  1  0  0  0  0  0  50.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  3  0  2  1  0  0  0  0  0  0  0  0  50.0%		4
  0  0  0  0  5  0  0  0  0  0  0  1  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  1  0  0  0  0  1  3  0  1  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  3  0  3  0  0  0  50.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  1  0  1  0  0  0  0  0  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  1  0  0  0  0  0  0  1  0  4  0  66.67%		14
  0  0  0  1  0  0  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 46.67%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	86.75%	86.67%	99.05%	88.97%	99.06%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	88.89%	98.52%	88.1%	[98.89, 97.78, 97.78, 96.67, 98.89, 96.67, 98.89, 97.78, 98.89, 100.0, 98.89, 100.0, 100.0, 98.89, 97.78]%	[90.91, 83.33, 83.33, 72.73, 92.31, 72.73, 92.31, 83.33, 92.31, 100.0, 90.91, 100.0, 100.0, 92.31, 83.33]%	[83.33, 83.33, 83.33, 66.67, 100.0, 66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 100.0, 100.0, 100.0, 83.33]%	[100.0, 98.81, 98.81, 98.81, 98.81, 98.81, 98.81, 98.81, 98.81, 100.0, 100.0, 100.0, 100.0, 98.81, 98.81]%	[100.0, 83.33, 83.33, 80.0, 85.71, 80.0, 85.71, 83.33, 85.71, 100.0, 100.0, 100.0, 100.0, 85.71, 83.33]%	[98.82, 98.81, 98.81, 97.65, 100.0, 97.65, 100.0, 98.81, 100.0, 100.0, 98.82, 100.0, 100.0, 100.0, 98.81]%	||	88.66%	88.89%	99.21%	89.08%	99.21%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  0  0  0  0  0  1  0  83.33%		3
  0  0  0  4  1  1  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  1  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  0  0  1  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  1  0  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 51.72%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	86.75%	86.67%	99.05%	88.97%	99.06%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[96.67, 97.78, 98.89, 100.0, 97.78, 98.89, 97.78, 96.67, 97.78, 97.78, 96.67, 98.89, 97.78, 97.78, 95.56]%	[66.67, 85.71, 92.31, 100.0, 83.33, 90.91, 80.0, 72.73, 85.71, 85.71, 76.92, 90.91, 80.0, 83.33, 71.43]%	[50.0, 100.0, 100.0, 100.0, 83.33, 83.33, 66.67, 66.67, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 83.33]%	[100.0, 97.62, 98.81, 100.0, 98.81, 100.0, 100.0, 98.81, 97.62, 97.62, 97.62, 100.0, 100.0, 98.81, 96.43]%	[100.0, 75.0, 85.71, 100.0, 83.33, 100.0, 100.0, 80.0, 75.0, 75.0, 71.43, 100.0, 100.0, 83.33, 62.5]%	[96.55, 100.0, 100.0, 100.0, 98.81, 98.82, 97.67, 97.65, 100.0, 100.0, 98.8, 98.82, 97.67, 98.81, 98.78]%	||	83.05%	83.33%	98.81%	86.09%	98.83%	
  3  2  0  0  0  0  0  0  0  0  1  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  0  0  0  0  0  1  0  83.33%		6
  0  0  0  0  0  0  4  0  1  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  1  0  0  0  0  0  1  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  1  0  0  0  0  0  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  5  1  83.33%		14
  0  0  0  0  1  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 57.32%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	86.67%	98.22%	85.71%	[97.78, 97.78, 98.89, 100.0, 100.0, 97.78, 97.78, 97.78, 97.78, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[80.0, 85.71, 90.91, 100.0, 100.0, 83.33, 80.0, 85.71, 85.71, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[100.0, 97.62, 100.0, 100.0, 100.0, 98.81, 100.0, 97.62, 97.62, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[100.0, 75.0, 100.0, 100.0, 100.0, 83.33, 100.0, 75.0, 75.0, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.67, 100.0, 98.82, 100.0, 100.0, 98.81, 97.67, 100.0, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	86.75%	86.67%	99.05%	88.97%	99.06%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.25)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[98.89, 98.89, 98.89, 95.56, 95.56, 95.56, 96.67, 98.89, 98.89, 98.89, 97.78, 98.89, 96.67, 96.67, 97.78]%	[90.91, 92.31, 92.31, 71.43, 60.0, 71.43, 66.67, 90.91, 92.31, 92.31, 83.33, 90.91, 76.92, 72.73, 83.33]%	[83.33, 100.0, 100.0, 83.33, 50.0, 83.33, 50.0, 83.33, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33]%	[100.0, 98.81, 98.81, 96.43, 98.81, 96.43, 100.0, 100.0, 98.81, 98.81, 98.81, 100.0, 97.62, 98.81, 98.81]%	[100.0, 85.71, 85.71, 62.5, 75.0, 62.5, 100.0, 100.0, 85.71, 85.71, 83.33, 100.0, 71.43, 80.0, 83.33]%	[98.82, 100.0, 100.0, 98.78, 96.51, 98.78, 96.55, 98.82, 100.0, 100.0, 98.81, 98.82, 98.8, 97.65, 98.81]%	||	81.85%	82.22%	98.73%	84.06%	98.74%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  3  0  0  0  0  0  0  0  1  1  0  50.0%		5
  0  0  0  1  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  1  1  0  3  0  0  1  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  5  1  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 53.85%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[97.78, 96.67, 98.89, 97.78, 100.0, 96.67, 95.56, 95.56, 100.0, 98.89, 95.56, 97.78, 97.78, 96.67, 98.89]%	[83.33, 76.92, 92.31, 83.33, 100.0, 72.73, 60.0, 71.43, 100.0, 92.31, 66.67, 85.71, 80.0, 72.73, 90.91]%	[83.33, 83.33, 100.0, 83.33, 100.0, 66.67, 50.0, 83.33, 100.0, 100.0, 66.67, 100.0, 66.67, 66.67, 83.33]%	[98.81, 97.62, 98.81, 98.81, 100.0, 98.81, 98.81, 96.43, 100.0, 98.81, 97.62, 97.62, 100.0, 98.81, 100.0]%	[83.33, 71.43, 85.71, 83.33, 100.0, 80.0, 75.0, 62.5, 100.0, 85.71, 66.67, 75.0, 100.0, 80.0, 100.0]%	[98.81, 98.8, 100.0, 98.81, 100.0, 97.65, 96.51, 98.78, 100.0, 100.0, 97.62, 100.0, 97.67, 97.65, 98.82]%	||	81.89%	82.22%	98.73%	83.25%	98.74%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  1  0  0  4  0  0  0  0  0  0  0  1  0  66.67%		6
  0  1  0  0  0  0  3  0  0  1  0  1  0  0  0  50.0%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  1  0  0  0  0  0  0  0  0  0  0  1  0  4  0  66.67%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 53.21%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[98.89, 97.78, 100.0, 95.56, 97.78, 97.78, 95.56, 96.67, 97.78, 98.89, 96.67, 96.67, 97.78, 98.89, 97.78]%	[90.91, 83.33, 100.0, 66.67, 80.0, 85.71, 66.67, 66.67, 85.71, 92.31, 72.73, 76.92, 85.71, 90.91, 83.33]%	[83.33, 83.33, 100.0, 66.67, 66.67, 100.0, 66.67, 50.0, 100.0, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33]%	[100.0, 98.81, 100.0, 97.62, 100.0, 97.62, 97.62, 100.0, 97.62, 98.81, 98.81, 97.62, 97.62, 100.0, 98.81]%	[100.0, 83.33, 100.0, 66.67, 100.0, 75.0, 66.67, 100.0, 75.0, 85.71, 80.0, 71.43, 75.0, 100.0, 83.33]%	[98.82, 98.81, 100.0, 97.62, 97.67, 100.0, 97.62, 96.55, 100.0, 100.0, 97.65, 98.8, 100.0, 98.82, 98.81]%	||	81.84%	82.22%	98.73%	84.14%	98.74%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  1  4  0  0  0  0  0  0  1  0  0  0  66.67%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  4  0  0  1  0  1  0  0  0  66.67%		7
  0  0  0  0  0  0  0  3  2  0  1  0  0  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 47.2%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	76.67%	96.89%	75.0%	[95.56, 97.78, 95.56, 96.67, 96.67, 96.67, 94.44, 96.67, 97.78, 96.67, 97.78, 95.56, 96.67, 100.0, 98.89]%	[60.0, 83.33, 66.67, 72.73, 72.73, 76.92, 54.55, 72.73, 85.71, 80.0, 80.0, 71.43, 76.92, 100.0, 90.91]%	[50.0, 83.33, 66.67, 66.67, 66.67, 83.33, 50.0, 66.67, 100.0, 100.0, 66.67, 83.33, 83.33, 100.0, 83.33]%	[98.81, 98.81, 97.62, 98.81, 98.81, 97.62, 97.62, 98.81, 97.62, 96.43, 100.0, 96.43, 97.62, 100.0, 100.0]%	[75.0, 83.33, 66.67, 80.0, 80.0, 71.43, 60.0, 80.0, 75.0, 66.67, 100.0, 62.5, 71.43, 100.0, 100.0]%	[96.51, 98.81, 97.62, 97.65, 97.65, 98.8, 96.47, 97.65, 100.0, 100.0, 97.67, 98.78, 98.8, 100.0, 98.82]%	||	76.31%	76.67%	98.33%	78.13%	98.35%	
  3  1  0  0  0  1  0  0  0  0  0  1  0  0  0  50.0%		1
  0  5  0  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		2
  0  0  4  1  0  0  0  0  0  1  0  0  0  0  0  66.67%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  1  0  4  0  0  0  0  1  0  0  0  0  0  66.67%		5
  0  0  0  0  1  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  3  0  0  1  0  2  0  0  0  50.0%		7
  0  0  1  0  0  0  0  4  1  0  0  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  1  0  0  0  0  0  0  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  1  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 52.82%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[98.89, 98.89, 97.78, 96.67, 98.89, 95.56, 95.56, 96.67, 97.78, 98.89, 96.67, 98.89, 98.89, 98.89, 95.56]%	[90.91, 92.31, 85.71, 66.67, 92.31, 75.0, 60.0, 72.73, 80.0, 90.91, 76.92, 92.31, 90.91, 90.91, 71.43]%	[83.33, 100.0, 100.0, 50.0, 100.0, 100.0, 50.0, 66.67, 66.67, 83.33, 83.33, 100.0, 83.33, 83.33, 83.33]%	[100.0, 98.81, 97.62, 100.0, 98.81, 95.24, 98.81, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0, 100.0, 96.43]%	[100.0, 85.71, 75.0, 100.0, 85.71, 60.0, 75.0, 80.0, 100.0, 100.0, 71.43, 85.71, 100.0, 100.0, 62.5]%	[98.82, 100.0, 100.0, 96.55, 100.0, 100.0, 96.51, 97.65, 97.67, 98.82, 98.8, 100.0, 98.82, 98.82, 98.78]%	||	81.93%	82.22%	98.73%	85.4%	98.75%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  3  0  3  0  0  0  0  0  0  0  0  0  50.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  3  0  0  0  1  0  0  0  2  50.0%		7
  0  0  1  0  0  0  0  4  0  0  0  0  0  0  1  66.67%		8
  0  0  1  0  0  0  1  0  4  0  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  1  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 46.99%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	93.33%	99.11%	92.86%	[97.78, 98.89, 100.0, 98.89, 100.0, 97.78, 100.0, 100.0, 97.78, 98.89, 98.89, 98.89, 100.0, 100.0, 98.89]%	[83.33, 92.31, 100.0, 90.91, 100.0, 83.33, 100.0, 100.0, 83.33, 90.91, 92.31, 92.31, 100.0, 100.0, 90.91]%	[83.33, 100.0, 100.0, 83.33, 100.0, 83.33, 100.0, 100.0, 83.33, 83.33, 100.0, 100.0, 100.0, 100.0, 83.33]%	[98.81, 98.81, 100.0, 100.0, 100.0, 98.81, 100.0, 100.0, 98.81, 100.0, 98.81, 98.81, 100.0, 100.0, 100.0]%	[83.33, 85.71, 100.0, 100.0, 100.0, 83.33, 100.0, 100.0, 83.33, 100.0, 85.71, 85.71, 100.0, 100.0, 100.0]%	[98.81, 100.0, 100.0, 98.82, 100.0, 98.81, 100.0, 100.0, 98.81, 98.82, 100.0, 100.0, 100.0, 100.0, 98.82]%	||	93.31%	93.33%	99.52%	93.81%	99.53%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  1  0  0  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  1  0  0  0  5  83.33%		15
Forest OOB Error: 54.69%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.2)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.2)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[96.67, 96.67, 97.78, 95.56, 97.78, 96.67, 96.67, 95.56, 94.44, 95.56, 98.89, 97.78, 98.89, 98.89, 97.78]%	[76.92, 72.73, 85.71, 66.67, 83.33, 72.73, 72.73, 60.0, 54.55, 75.0, 92.31, 80.0, 92.31, 92.31, 80.0]%	[83.33, 66.67, 100.0, 66.67, 83.33, 66.67, 66.67, 50.0, 50.0, 100.0, 100.0, 66.67, 100.0, 100.0, 66.67]%	[97.62, 98.81, 97.62, 97.62, 98.81, 98.81, 98.81, 98.81, 97.62, 95.24, 98.81, 100.0, 98.81, 98.81, 100.0]%	[71.43, 80.0, 75.0, 66.67, 83.33, 80.0, 80.0, 75.0, 60.0, 60.0, 85.71, 100.0, 85.71, 85.71, 100.0]%	[98.8, 97.65, 100.0, 97.62, 98.81, 97.65, 97.65, 96.51, 96.47, 100.0, 100.0, 97.67, 100.0, 100.0, 97.67]%	||	77.15%	77.78%	98.41%	79.24%	98.43%	
  5  0  0  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		1
  0  4  0  0  0  0  1  0  1  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  1  0  0  4  0  1  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  0  1  0  0  0  1  0  66.67%		6
  0  0  0  0  1  0  4  0  0  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  3  1  0  1  0  1  0  0  50.0%		8
  0  1  0  2  0  0  0  0  3  0  0  0  0  0  0  50.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  1  0  0  0  0  0  0  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  1  0  0  0  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 47.6%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.15)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	88.89%	98.52%	88.1%	[98.89, 98.89, 98.89, 98.89, 97.78, 96.67, 97.78, 98.89, 98.89, 100.0, 97.78, 97.78, 97.78, 100.0, 98.89]%	[90.91, 92.31, 92.31, 90.91, 85.71, 72.73, 85.71, 90.91, 90.91, 100.0, 85.71, 80.0, 83.33, 100.0, 90.91]%	[83.33, 100.0, 100.0, 83.33, 100.0, 66.67, 100.0, 83.33, 83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 83.33]%	[100.0, 98.81, 98.81, 100.0, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0, 97.62, 100.0, 98.81, 100.0, 100.0]%	[100.0, 85.71, 85.71, 100.0, 75.0, 80.0, 75.0, 100.0, 100.0, 100.0, 75.0, 100.0, 83.33, 100.0, 100.0]%	[98.82, 100.0, 100.0, 98.82, 100.0, 97.65, 100.0, 98.82, 98.82, 100.0, 100.0, 97.67, 98.81, 100.0, 98.82]%	||	88.82%	88.89%	99.21%	90.65%	99.22%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  2  4  0  0  0  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  2  0  0  0  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 52.08%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.15)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	78.89%	97.19%	77.38%	[98.89, 97.78, 98.89, 96.67, 96.67, 94.44, 96.67, 97.78, 98.89, 94.44, 96.67, 96.67, 97.78, 97.78, 97.78]%	[90.91, 83.33, 92.31, 72.73, 76.92, 61.54, 76.92, 83.33, 90.91, 61.54, 76.92, 76.92, 83.33, 80.0, 80.0]%	[83.33, 83.33, 100.0, 66.67, 83.33, 66.67, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 66.67, 66.67]%	[100.0, 98.81, 98.81, 98.81, 97.62, 96.43, 97.62, 98.81, 100.0, 96.43, 97.62, 97.62, 98.81, 100.0, 100.0]%	[100.0, 83.33, 85.71, 80.0, 71.43, 57.14, 71.43, 83.33, 100.0, 57.14, 71.43, 71.43, 83.33, 100.0, 100.0]%	[98.82, 98.81, 100.0, 97.65, 98.8, 97.59, 98.8, 98.81, 98.82, 97.59, 98.8, 98.8, 98.81, 97.67, 97.67]%	||	79.17%	78.89%	98.49%	81.05%	98.5%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  2  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  1  4  0  0  0  1  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  1  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  4  0  2  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  1  0  0  0  0  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  1  1  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  1  0  0  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 49.53%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.15)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	87.78%	98.37%	86.9%	[98.89, 98.89, 100.0, 98.89, 98.89, 96.67, 98.89, 96.67, 98.89, 98.89, 97.78, 97.78, 98.89, 97.78, 97.78]%	[90.91, 92.31, 100.0, 90.91, 90.91, 72.73, 90.91, 80.0, 92.31, 92.31, 83.33, 80.0, 90.91, 85.71, 83.33]%	[83.33, 100.0, 100.0, 83.33, 83.33, 66.67, 83.33, 100.0, 100.0, 100.0, 83.33, 66.67, 83.33, 100.0, 83.33]%	[100.0, 98.81, 100.0, 100.0, 100.0, 98.81, 100.0, 96.43, 98.81, 98.81, 98.81, 100.0, 100.0, 97.62, 98.81]%	[100.0, 85.71, 100.0, 100.0, 100.0, 80.0, 100.0, 66.67, 85.71, 85.71, 83.33, 100.0, 100.0, 75.0, 83.33]%	[98.82, 100.0, 100.0, 98.82, 98.82, 97.65, 98.82, 100.0, 100.0, 100.0, 98.81, 97.67, 98.82, 100.0, 98.81]%	||	87.77%	87.78%	99.13%	89.7%	99.14%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  4  0  0  1  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  0  5  1  0  0  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  1  0  0  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  1  5  83.33%		15
Forest OOB Error: 45.96%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.15)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[98.89, 98.89, 98.89, 96.67, 97.78, 95.56, 98.89, 96.67, 97.78, 97.78, 96.67, 100.0, 95.56, 98.89, 97.78]%	[90.91, 92.31, 92.31, 72.73, 83.33, 66.67, 92.31, 72.73, 85.71, 83.33, 72.73, 100.0, 71.43, 90.91, 80.0]%	[83.33, 100.0, 100.0, 66.67, 83.33, 66.67, 100.0, 66.67, 100.0, 83.33, 66.67, 100.0, 83.33, 83.33, 66.67]%	[100.0, 98.81, 98.81, 98.81, 98.81, 97.62, 98.81, 98.81, 97.62, 98.81, 98.81, 100.0, 96.43, 100.0, 100.0]%	[100.0, 85.71, 85.71, 80.0, 83.33, 66.67, 85.71, 80.0, 75.0, 83.33, 80.0, 100.0, 62.5, 100.0, 100.0]%	[98.82, 100.0, 100.0, 97.65, 98.81, 97.62, 100.0, 97.65, 100.0, 98.81, 97.65, 100.0, 98.78, 98.82, 97.67]%	||	83.16%	83.33%	98.81%	84.53%	98.82%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  1  1  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  1  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  1  4  1  0  0  0  0  0  0  66.67%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  1  0  0  0  0  0  0  5  0  0  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  4  0  2  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  1  0  0  0  0  1  0  4  66.67%		15
Forest OOB Error: 49.42%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.15)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	82.22%	97.63%	80.95%	[97.78, 98.89, 100.0, 96.67, 96.67, 98.89, 98.89, 94.44, 98.89, 97.78, 95.56, 97.78, 95.56, 98.89, 97.78]%	[83.33, 92.31, 100.0, 76.92, 76.92, 92.31, 90.91, 54.55, 90.91, 85.71, 60.0, 80.0, 66.67, 92.31, 83.33]%	[83.33, 100.0, 100.0, 83.33, 83.33, 100.0, 83.33, 50.0, 83.33, 100.0, 50.0, 66.67, 66.67, 100.0, 83.33]%	[98.81, 98.81, 100.0, 97.62, 97.62, 98.81, 100.0, 97.62, 100.0, 97.62, 98.81, 100.0, 97.62, 98.81, 98.81]%	[83.33, 85.71, 100.0, 71.43, 71.43, 85.71, 100.0, 60.0, 100.0, 75.0, 75.0, 100.0, 66.67, 85.71, 83.33]%	[98.81, 100.0, 100.0, 98.8, 98.8, 100.0, 98.82, 96.47, 98.82, 100.0, 96.51, 97.67, 97.62, 100.0, 98.81]%	||	81.75%	82.22%	98.73%	82.89%	98.74%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  1  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  1  0  0  0  1  0  0  3  0  0  0  0  0  0  1  50.0%		8
  0  0  0  1  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  3  0  2  0  0  50.0%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  1  0  66.67%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  1  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 49.19%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.15)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.15)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	70.0%	96.0%	67.86%	[98.89, 97.78, 98.89, 97.78, 97.78, 92.22, 96.67, 92.22, 96.67, 94.44, 94.44, 95.56, 96.67, 96.67, 93.33]%	[90.91, 83.33, 92.31, 80.0, 85.71, 46.15, 72.73, 58.82, 76.92, 54.55, 54.55, 66.67, 72.73, 72.73, 40.0]%	[83.33, 83.33, 100.0, 66.67, 100.0, 50.0, 66.67, 83.33, 83.33, 50.0, 50.0, 66.67, 66.67, 66.67, 33.33]%	[100.0, 98.81, 98.81, 100.0, 97.62, 95.24, 98.81, 92.86, 97.62, 97.62, 97.62, 97.62, 98.81, 98.81, 97.62]%	[100.0, 83.33, 85.71, 100.0, 75.0, 42.86, 80.0, 45.45, 71.43, 60.0, 60.0, 66.67, 80.0, 80.0, 50.0]%	[98.82, 98.81, 100.0, 97.67, 100.0, 96.39, 97.65, 98.73, 98.8, 96.47, 96.47, 97.62, 97.65, 97.65, 95.35]%	||	69.87%	70.0%	97.86%	72.03%	97.87%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  1  3  0  0  1  0  0  0  0  1  0  50.0%		6
  0  0  0  0  0  0  4  0  0  0  0  0  0  0  2  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  1  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  1  3  0  2  0  0  0  50.0%		10
  0  0  0  0  0  0  0  3  0  0  3  0  0  0  0  50.0%		11
  0  0  1  0  0  0  0  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  2  0  0  0  0  0  0  0  4  0  66.67%		14
  0  0  0  0  1  1  0  1  0  0  0  0  1  0  2  33.33%		15
Forest OOB Error: 46.73%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[97.78, 97.78, 96.67, 98.89, 97.78, 97.78, 98.89, 97.78, 100.0, 96.67, 97.78, 97.78, 100.0, 97.78, 97.78]%	[83.33, 83.33, 76.92, 90.91, 83.33, 83.33, 90.91, 83.33, 100.0, 76.92, 83.33, 83.33, 100.0, 85.71, 80.0]%	[83.33, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33, 83.33, 83.33, 100.0, 100.0, 66.67]%	[98.81, 98.81, 97.62, 100.0, 98.81, 98.81, 100.0, 98.81, 100.0, 97.62, 98.81, 98.81, 100.0, 97.62, 100.0]%	[83.33, 83.33, 71.43, 100.0, 83.33, 83.33, 100.0, 83.33, 100.0, 71.43, 83.33, 83.33, 100.0, 75.0, 100.0]%	[98.81, 98.81, 98.8, 98.82, 98.81, 98.81, 98.82, 98.81, 100.0, 98.8, 98.81, 98.81, 100.0, 100.0, 97.67]%	||	85.65%	85.56%	98.97%	86.75%	98.97%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  0  0  0  0  0  0  0  1  0  83.33%		2
  1  0  5  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  1  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  0  0  0  5  0  0  1  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  1  0  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 50.57%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	93.33%	99.11%	92.86%	[98.89, 98.89, 100.0, 100.0, 100.0, 100.0, 97.78, 97.78, 98.89, 100.0, 98.89, 97.78, 100.0, 98.89, 98.89]%	[90.91, 92.31, 100.0, 100.0, 100.0, 100.0, 80.0, 83.33, 92.31, 100.0, 90.91, 85.71, 100.0, 92.31, 90.91]%	[83.33, 100.0, 100.0, 100.0, 100.0, 100.0, 66.67, 83.33, 100.0, 100.0, 83.33, 100.0, 100.0, 100.0, 83.33]%	[100.0, 98.81, 100.0, 100.0, 100.0, 100.0, 100.0, 98.81, 98.81, 100.0, 100.0, 97.62, 100.0, 98.81, 100.0]%	[100.0, 85.71, 100.0, 100.0, 100.0, 100.0, 100.0, 83.33, 85.71, 100.0, 100.0, 75.0, 100.0, 85.71, 100.0]%	[98.82, 100.0, 100.0, 100.0, 100.0, 100.0, 97.67, 98.81, 100.0, 100.0, 98.82, 100.0, 100.0, 100.0, 98.82]%	||	93.25%	93.33%	99.52%	94.37%	99.53%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  0  4  0  0  0  0  2  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  0  0  0  1  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 55.16%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[98.89, 98.89, 100.0, 93.33, 97.78, 98.89, 93.33, 97.78, 98.89, 100.0, 97.78, 97.78, 96.67, 98.89, 97.78]%	[90.91, 92.31, 100.0, 57.14, 83.33, 92.31, 40.0, 83.33, 90.91, 100.0, 83.33, 85.71, 72.73, 90.91, 83.33]%	[83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 33.33, 83.33, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 83.33]%	[100.0, 98.81, 100.0, 95.24, 98.81, 98.81, 97.62, 98.81, 100.0, 100.0, 98.81, 97.62, 98.81, 100.0, 98.81]%	[100.0, 85.71, 100.0, 50.0, 83.33, 85.71, 50.0, 83.33, 100.0, 100.0, 83.33, 75.0, 80.0, 100.0, 83.33]%	[98.82, 100.0, 100.0, 97.56, 98.81, 100.0, 95.35, 98.81, 98.82, 100.0, 98.81, 100.0, 97.65, 98.82, 98.81]%	||	83.08%	83.33%	98.81%	83.98%	98.82%	
  5  0  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  1  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  1  0  0  1  0  2  0  0  0  0  2  0  0  0  33.33%		7
  0  0  0  1  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  1  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  5  1  83.33%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 52.63%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[96.67, 97.78, 100.0, 95.56, 97.78, 96.67, 95.56, 96.67, 100.0, 94.44, 96.67, 94.44, 98.89, 97.78, 96.67]%	[72.73, 83.33, 100.0, 71.43, 83.33, 72.73, 66.67, 76.92, 100.0, 61.54, 76.92, 61.54, 90.91, 83.33, 66.67]%	[66.67, 83.33, 100.0, 83.33, 83.33, 66.67, 66.67, 83.33, 100.0, 66.67, 83.33, 66.67, 83.33, 83.33, 50.0]%	[98.81, 98.81, 100.0, 96.43, 98.81, 98.81, 97.62, 97.62, 100.0, 96.43, 97.62, 96.43, 100.0, 98.81, 100.0]%	[80.0, 83.33, 100.0, 62.5, 83.33, 80.0, 66.67, 71.43, 100.0, 57.14, 71.43, 57.14, 100.0, 83.33, 100.0]%	[97.65, 98.81, 100.0, 98.78, 98.81, 97.65, 97.62, 98.8, 100.0, 97.59, 98.8, 97.59, 98.82, 98.81, 96.55]%	||	77.87%	77.78%	98.41%	79.75%	98.42%	
  4  1  0  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  1  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  1  4  0  0  0  1  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  4  0  0  0  0  1  0  1  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  4  0  2  0  0  0  66.67%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  1  0  0  0  0  0  0  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  2  0  0  0  1  0  0  0  0  0  0  3  50.0%		15
Forest OOB Error: 49.78%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[97.78, 97.78, 98.89, 96.67, 97.78, 96.67, 96.67, 97.78, 96.67, 100.0, 97.78, 96.67, 97.78, 100.0, 97.78]%	[80.0, 83.33, 90.91, 72.73, 83.33, 76.92, 80.0, 85.71, 76.92, 100.0, 80.0, 72.73, 83.33, 100.0, 83.33]%	[66.67, 83.33, 83.33, 66.67, 83.33, 83.33, 100.0, 100.0, 83.33, 100.0, 66.67, 66.67, 83.33, 100.0, 83.33]%	[100.0, 98.81, 100.0, 98.81, 98.81, 97.62, 96.43, 97.62, 97.62, 100.0, 100.0, 98.81, 98.81, 100.0, 98.81]%	[100.0, 83.33, 100.0, 80.0, 83.33, 71.43, 66.67, 75.0, 71.43, 100.0, 100.0, 80.0, 83.33, 100.0, 83.33]%	[97.67, 98.81, 98.82, 97.65, 98.81, 98.8, 100.0, 100.0, 98.8, 100.0, 97.67, 97.65, 98.81, 100.0, 98.81]%	||	83.28%	83.33%	98.81%	85.19%	98.82%	
  4  1  0  0  0  1  0  0  0  0  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  0  0  0  0  0  0  0  0  1  0  0  0  83.33%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  1  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  1  0  0  0  0  0  0  0  4  0  0  1  66.67%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 50.19%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.1)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[98.89, 95.56, 98.89, 98.89, 97.78, 97.78, 97.78, 97.78, 97.78, 98.89, 98.89, 98.89, 98.89, 97.78, 96.67]%	[90.91, 71.43, 92.31, 90.91, 83.33, 83.33, 83.33, 85.71, 83.33, 92.31, 90.91, 92.31, 90.91, 83.33, 66.67]%	[83.33, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33, 100.0, 83.33, 100.0, 83.33, 83.33, 50.0]%	[100.0, 96.43, 98.81, 100.0, 98.81, 98.81, 98.81, 97.62, 98.81, 98.81, 100.0, 98.81, 100.0, 98.81, 100.0]%	[100.0, 62.5, 85.71, 100.0, 83.33, 83.33, 83.33, 75.0, 83.33, 85.71, 100.0, 85.71, 100.0, 83.33, 100.0]%	[98.82, 98.78, 100.0, 98.82, 98.81, 98.81, 98.81, 100.0, 98.81, 100.0, 98.82, 100.0, 98.82, 98.81, 96.55]%	||	85.4%	85.56%	98.97%	87.42%	98.98%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  1  0  0  0  5  0  0  0  0  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  0  0  1  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  1  0  0  0  0  5  0  0  83.33%		13
  0  1  0  0  0  0  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  1  0  0  0  1  0  0  0  0  1  3  50.0%		15
Forest OOB Error: 51.15%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.05)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	84.44%	97.93%	83.33%	[98.89, 97.78, 98.89, 97.78, 100.0, 95.56, 96.67, 97.78, 96.67, 96.67, 96.67, 98.89, 97.78, 98.89, 100.0]%	[90.91, 85.71, 92.31, 80.0, 100.0, 66.67, 66.67, 85.71, 72.73, 76.92, 72.73, 92.31, 83.33, 92.31, 100.0]%	[83.33, 100.0, 100.0, 66.67, 100.0, 66.67, 50.0, 100.0, 66.67, 83.33, 66.67, 100.0, 83.33, 100.0, 100.0]%	[100.0, 97.62, 98.81, 100.0, 100.0, 97.62, 100.0, 97.62, 98.81, 97.62, 98.81, 98.81, 98.81, 98.81, 100.0]%	[100.0, 75.0, 85.71, 100.0, 100.0, 66.67, 100.0, 75.0, 80.0, 71.43, 80.0, 85.71, 83.33, 85.71, 100.0]%	[98.82, 100.0, 100.0, 97.67, 100.0, 97.62, 96.55, 100.0, 97.65, 98.8, 97.65, 100.0, 98.81, 100.0, 100.0]%	||	83.89%	84.44%	98.89%	85.9%	98.9%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  2  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  1  0  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  1  0  0  0  0  3  0  0  1  0  0  0  1  0  50.0%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  1  4  1  0  0  0  0  0  66.67%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  4  0  1  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  6  100.0%		15
Forest OOB Error: 55.68%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.05)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	77.78%	97.04%	76.19%	[97.78, 97.78, 97.78, 96.67, 96.67, 96.67, 95.56, 93.33, 98.89, 96.67, 94.44, 98.89, 98.89, 97.78, 97.78]%	[80.0, 83.33, 80.0, 76.92, 76.92, 72.73, 60.0, 62.5, 92.31, 80.0, 54.55, 90.91, 90.91, 85.71, 80.0]%	[66.67, 83.33, 66.67, 83.33, 83.33, 66.67, 50.0, 83.33, 100.0, 100.0, 50.0, 83.33, 83.33, 100.0, 66.67]%	[100.0, 98.81, 100.0, 97.62, 97.62, 98.81, 98.81, 94.05, 98.81, 96.43, 97.62, 100.0, 100.0, 97.62, 100.0]%	[100.0, 83.33, 100.0, 71.43, 71.43, 80.0, 75.0, 50.0, 85.71, 66.67, 60.0, 100.0, 100.0, 75.0, 100.0]%	[97.67, 98.81, 97.67, 98.8, 98.8, 97.65, 96.51, 98.75, 100.0, 100.0, 96.47, 98.82, 98.82, 100.0, 97.67]%	||	77.79%	77.78%	98.41%	81.24%	98.43%	
  4  1  0  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		1
  0  5  0  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		2
  0  0  4  0  1  0  0  0  0  0  0  0  0  1  0  66.67%		3
  0  0  0  5  0  0  1  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  1  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  1  0  0  3  2  0  0  0  0  0  0  0  50.0%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  3  0  0  3  0  0  0  0  50.0%		11
  0  0  0  0  0  1  0  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  1  4  66.67%		15
Forest OOB Error: 50.0%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.05)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	88.89%	98.52%	88.1%	[98.89, 98.89, 100.0, 100.0, 98.89, 98.89, 96.67, 97.78, 97.78, 94.44, 98.89, 97.78, 100.0, 100.0, 98.89]%	[90.91, 92.31, 100.0, 100.0, 90.91, 90.91, 76.92, 83.33, 83.33, 70.59, 90.91, 80.0, 100.0, 100.0, 90.91]%	[83.33, 100.0, 100.0, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 100.0, 83.33, 66.67, 100.0, 100.0, 83.33]%	[100.0, 98.81, 100.0, 100.0, 100.0, 100.0, 97.62, 98.81, 98.81, 94.05, 100.0, 100.0, 100.0, 100.0, 100.0]%	[100.0, 85.71, 100.0, 100.0, 100.0, 100.0, 71.43, 83.33, 83.33, 54.55, 100.0, 100.0, 100.0, 100.0, 100.0]%	[98.82, 100.0, 100.0, 100.0, 98.82, 98.82, 98.8, 98.81, 98.81, 100.0, 98.82, 97.67, 100.0, 100.0, 98.82]%	||	89.4%	88.89%	99.21%	91.89%	99.21%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  0  1  0  0  0  0  0  83.33%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  5  1  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  5  1  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  2  0  0  0  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  1  0  0  0  0  5  83.33%		15
Forest OOB Error: 50.82%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.05)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	74.44%	96.59%	72.62%	[98.89, 96.67, 100.0, 97.78, 95.56, 96.67, 96.67, 95.56, 100.0, 91.11, 96.67, 95.56, 96.67, 95.56, 95.56]%	[90.91, 72.73, 100.0, 80.0, 71.43, 72.73, 76.92, 75.0, 100.0, 50.0, 72.73, 60.0, 66.67, 66.67, 66.67]%	[83.33, 66.67, 100.0, 66.67, 83.33, 66.67, 83.33, 100.0, 100.0, 66.67, 66.67, 50.0, 50.0, 66.67, 66.67]%	[100.0, 98.81, 100.0, 100.0, 96.43, 98.81, 97.62, 95.24, 100.0, 92.86, 98.81, 98.81, 100.0, 97.62, 97.62]%	[100.0, 80.0, 100.0, 100.0, 62.5, 80.0, 71.43, 60.0, 100.0, 40.0, 80.0, 75.0, 100.0, 66.67, 66.67]%	[98.82, 97.65, 100.0, 97.67, 98.78, 97.65, 98.8, 100.0, 100.0, 97.5, 97.65, 96.51, 96.55, 97.62, 97.62]%	||	74.83%	74.44%	98.17%	78.82%	98.19%	
  5  0  0  0  0  0  0  0  0  1  0  0  0  0  0  83.33%		1
  0  4  0  0  0  0  2  0  0  0  0  0  0  0  0  66.67%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  1  1  0  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  2  4  0  0  0  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  4  0  1  0  1  0  66.67%		10
  0  0  0  0  0  0  0  2  0  0  4  0  0  0  0  66.67%		11
  0  0  0  0  0  0  0  0  0  2  0  3  0  0  1  50.0%		12
  0  0  0  0  0  0  0  1  0  0  1  0  3  1  0  50.0%		13
  0  1  0  0  0  0  0  0  0  0  0  0  0  4  1  66.67%		14
  0  0  0  0  0  0  0  1  0  1  0  0  0  0  4  66.67%		15
Forest OOB Error: 48.57%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.05)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	84.44%	97.93%	83.33%	[96.67, 98.89, 98.89, 97.78, 96.67, 98.89, 94.44, 97.78, 100.0, 96.67, 98.89, 98.89, 97.78, 98.89, 97.78]%	[76.92, 92.31, 92.31, 80.0, 76.92, 92.31, 54.55, 83.33, 100.0, 72.73, 90.91, 90.91, 85.71, 92.31, 80.0]%	[83.33, 100.0, 100.0, 66.67, 83.33, 100.0, 50.0, 83.33, 100.0, 66.67, 83.33, 83.33, 100.0, 100.0, 66.67]%	[97.62, 98.81, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 100.0, 98.81, 100.0, 100.0, 97.62, 98.81, 100.0]%	[71.43, 85.71, 85.71, 100.0, 71.43, 85.71, 60.0, 83.33, 100.0, 80.0, 100.0, 100.0, 75.0, 85.71, 100.0]%	[98.8, 100.0, 100.0, 97.67, 98.8, 100.0, 96.47, 98.81, 100.0, 97.65, 98.82, 98.82, 100.0, 100.0, 97.67]%	||	84.08%	84.44%	98.89%	85.6%	98.9%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  4  0  1  1  0  0  0  0  0  0  0  0  66.67%		4
  0  0  0  0  5  0  1  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  2  0  3  0  0  0  0  0  0  1  0  50.0%		7
  0  0  0  0  0  0  0  5  0  0  0  0  1  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  2  0  0  0  0  0  0  0  0  4  0  0  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  0  0  6  0  0  100.0%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  1  0  0  0  0  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 47.6%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.05)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.05)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	88.89%	98.52%	88.1%	[98.89, 98.89, 98.89, 98.89, 100.0, 97.78, 97.78, 97.78, 98.89, 98.89, 97.78, 98.89, 97.78, 98.89, 97.78]%	[90.91, 92.31, 92.31, 92.31, 100.0, 85.71, 80.0, 85.71, 90.91, 92.31, 83.33, 90.91, 80.0, 90.91, 83.33]%	[83.33, 100.0, 100.0, 100.0, 100.0, 100.0, 66.67, 100.0, 83.33, 100.0, 83.33, 83.33, 66.67, 83.33, 83.33]%	[100.0, 98.81, 98.81, 98.81, 100.0, 97.62, 100.0, 97.62, 100.0, 98.81, 98.81, 100.0, 100.0, 100.0, 98.81]%	[100.0, 85.71, 85.71, 85.71, 100.0, 75.0, 100.0, 75.0, 100.0, 85.71, 83.33, 100.0, 100.0, 100.0, 83.33]%	[98.82, 100.0, 100.0, 100.0, 100.0, 100.0, 97.67, 100.0, 98.82, 100.0, 98.81, 98.82, 97.67, 98.82, 98.81]%	||	88.73%	88.89%	99.21%	90.63%	99.22%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  0  0  0  0  0  1  4  0  0  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  1  0  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 41.18%
WARNING: import of Base.show into DecisionTree conflicts with an existing identifier; ignored.
┌ Warning: Package DecisionTree does not have Logging in its dependencies:
│ - If you have DecisionTree checked out for development and have
│   added Logging as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with DecisionTree
└ Loading Logging into DecisionTree from project dependency, future warnings for DecisionTree are suppressed.
 Activating environment at `~/Julia Projects/DT/Project.toml`
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.0)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	81.11%	97.48%	79.76%	[98.89, 97.78, 97.78, 97.78, 96.67, 95.56, 96.67, 98.89, 98.89, 95.56, 96.67, 96.67, 98.89, 96.67, 98.89]%	[90.91, 83.33, 85.71, 83.33, 72.73, 66.67, 72.73, 92.31, 90.91, 71.43, 76.92, 72.73, 90.91, 76.92, 90.91]%	[83.33, 83.33, 100.0, 83.33, 66.67, 66.67, 66.67, 100.0, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33]%	[100.0, 98.81, 97.62, 98.81, 98.81, 97.62, 98.81, 98.81, 100.0, 96.43, 97.62, 98.81, 100.0, 97.62, 100.0]%	[100.0, 83.33, 75.0, 83.33, 80.0, 66.67, 80.0, 85.71, 100.0, 62.5, 71.43, 80.0, 100.0, 71.43, 100.0]%	[98.82, 98.81, 100.0, 98.81, 97.65, 97.62, 97.65, 100.0, 98.82, 98.78, 98.8, 97.65, 98.82, 98.8, 98.82]%	||	81.23%	81.11%	98.65%	82.63%	98.66%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  2  0  4  0  0  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  0  1  4  0  0  0  0  0  0  0  1  0  66.67%		6
  0  0  0  0  0  1  4  0  0  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  6  0  0  0  0  0  0  0  100.0%		8
  0  0  0  1  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  4  0  1  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  0  0  1  0  0  0  5  83.33%		15
Forest OOB Error: 51.7%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.0)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	85.56%	98.07%	84.52%	[98.89, 96.67, 97.78, 97.78, 96.67, 96.67, 96.67, 98.89, 97.78, 98.89, 98.89, 100.0, 97.78, 100.0, 97.78]%	[90.91, 76.92, 85.71, 83.33, 72.73, 72.73, 72.73, 90.91, 83.33, 92.31, 92.31, 100.0, 83.33, 100.0, 83.33]%	[83.33, 83.33, 100.0, 83.33, 66.67, 66.67, 66.67, 83.33, 83.33, 100.0, 100.0, 100.0, 83.33, 100.0, 83.33]%	[100.0, 97.62, 97.62, 98.81, 98.81, 98.81, 98.81, 100.0, 98.81, 98.81, 98.81, 100.0, 98.81, 100.0, 98.81]%	[100.0, 71.43, 75.0, 83.33, 80.0, 80.0, 80.0, 100.0, 83.33, 85.71, 85.71, 100.0, 83.33, 100.0, 83.33]%	[98.82, 98.8, 100.0, 98.81, 97.65, 97.65, 97.65, 98.82, 98.81, 100.0, 100.0, 100.0, 98.81, 100.0, 98.81]%	||	85.37%	85.56%	98.97%	86.08%	98.97%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  2  0  4  0  0  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  1  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  1  0  0  0  0  4  0  0  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  5  0  0  0  0  0  0  1  83.33%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  0  0  6  0  0  0  100.0%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  0  0  0  0  0  0  0  0  0  1  0  5  83.33%		15
Forest OOB Error: 49.81%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.0)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[97.78, 98.89, 100.0, 98.89, 96.67, 94.44, 96.67, 96.67, 98.89, 97.78, 97.78, 98.89, 98.89, 98.89, 95.56]%	[80.0, 92.31, 100.0, 90.91, 80.0, 61.54, 72.73, 72.73, 90.91, 85.71, 85.71, 90.91, 90.91, 90.91, 66.67]%	[66.67, 100.0, 100.0, 83.33, 100.0, 66.67, 66.67, 66.67, 83.33, 100.0, 100.0, 83.33, 83.33, 83.33, 66.67]%	[100.0, 98.81, 100.0, 100.0, 96.43, 96.43, 98.81, 98.81, 100.0, 97.62, 97.62, 100.0, 100.0, 100.0, 97.62]%	[100.0, 85.71, 100.0, 100.0, 66.67, 57.14, 80.0, 80.0, 100.0, 75.0, 75.0, 100.0, 100.0, 100.0, 66.67]%	[97.67, 100.0, 100.0, 98.82, 100.0, 97.59, 97.65, 97.65, 98.82, 100.0, 100.0, 98.82, 98.82, 98.82, 97.62]%	||	83.46%	83.33%	98.81%	85.75%	98.82%	
  4  1  0  0  0  0  0  0  0  1  0  0  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  6  0  0  0  0  0  0  0  0  0  0  100.0%		5
  0  0  0  0  2  4  0  0  0  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  1  4  0  0  1  0  0  0  0  0  66.67%		7
  0  0  0  0  0  0  0  4  0  0  1  0  0  0  1  66.67%		8
  0  0  0  0  1  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  6  0  0  0  0  0  100.0%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  0  0  0  0  0  5  0  0  1  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  1  0  0  0  0  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  1  1  0  0  0  0  0  0  4  66.67%		15
Forest OOB Error: 52.14%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.0)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[98.89, 97.78, 98.89, 97.78, 98.89, 95.56, 95.56, 97.78, 98.89, 95.56, 95.56, 97.78, 96.67, 97.78, 96.67]%	[90.91, 83.33, 90.91, 83.33, 90.91, 60.0, 75.0, 83.33, 92.31, 60.0, 71.43, 83.33, 72.73, 83.33, 76.92]%	[83.33, 83.33, 83.33, 83.33, 83.33, 50.0, 100.0, 83.33, 100.0, 50.0, 83.33, 83.33, 66.67, 83.33, 83.33]%	[100.0, 98.81, 100.0, 98.81, 100.0, 98.81, 95.24, 98.81, 98.81, 98.81, 96.43, 98.81, 98.81, 98.81, 97.62]%	[100.0, 83.33, 100.0, 83.33, 100.0, 75.0, 60.0, 83.33, 85.71, 75.0, 62.5, 83.33, 80.0, 83.33, 71.43]%	[98.82, 98.81, 98.82, 98.81, 98.82, 96.51, 100.0, 98.81, 100.0, 96.51, 98.78, 98.81, 97.65, 98.81, 98.8]%	||	79.85%	80.0%	98.57%	81.75%	98.58%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  5  0  0  0  0  1  0  0  0  0  0  0  0  0  83.33%		2
  0  0  5  1  0  0  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  0  0  5  0  0  0  0  1  0  0  0  0  0  83.33%		5
  0  0  0  0  0  3  0  0  1  0  0  0  0  1  1  50.0%		6
  0  0  0  0  0  0  6  0  0  0  0  0  0  0  0  100.0%		7
  0  0  0  0  0  0  0  5  0  0  1  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  2  0  0  3  0  1  0  0  0  50.0%		10
  0  0  0  0  0  0  0  0  0  0  5  0  1  0  0  83.33%		11
  0  0  0  0  0  0  1  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  2  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  5  1  83.33%		14
  0  0  0  0  0  0  0  1  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 46.09%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.0)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	83.33%	97.78%	82.14%	[97.78, 96.67, 96.67, 97.78, 98.89, 97.78, 97.78, 96.67, 97.78, 96.67, 97.78, 97.78, 97.78, 100.0, 98.89]%	[83.33, 80.0, 76.92, 83.33, 90.91, 83.33, 80.0, 76.92, 83.33, 76.92, 83.33, 83.33, 80.0, 100.0, 90.91]%	[83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 66.67, 83.33, 83.33, 83.33, 83.33, 83.33, 66.67, 100.0, 83.33]%	[98.81, 96.43, 97.62, 98.81, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 98.81, 100.0, 100.0, 100.0]%	[83.33, 66.67, 71.43, 83.33, 100.0, 83.33, 100.0, 71.43, 83.33, 71.43, 83.33, 83.33, 100.0, 100.0, 100.0]%	[98.81, 100.0, 98.8, 98.81, 98.82, 98.81, 97.67, 98.8, 98.81, 98.8, 98.81, 98.81, 97.67, 100.0, 98.82]%	||	83.51%	83.33%	98.81%	85.4%	98.82%	
  5  1  0  0  0  0  0  0  0  0  0  0  0  0  0  83.33%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  0  0  0  1  0  0  0  0  0  0  83.33%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  5  0  0  0  1  0  0  0  0  0  83.33%		6
  0  1  0  0  0  0  4  0  0  1  0  0  0  0  0  66.67%		7
  0  0  1  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  1  0  0  0  0  5  0  0  0  0  0  0  83.33%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  1  0  0  0  0  0  0  0  0  0  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  1  0  0  1  0  4  0  0  66.67%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  1  0  0  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 53.82%
Benchmarking dataset 'Test'...
forest_args = (n_subfeatures = 1, n_trees = 5)
args = (loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.0)
kwargs = (initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])
 train size = (10, 270, 2)
 test size = (10, 90, 2)
 Purity threshold 1.0
RESULT:	Test	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	1.0	|	85.56%	98.07%	84.52%	[95.56, 98.89, 97.78, 100.0, 98.89, 98.89, 97.78, 96.67, 98.89, 96.67, 97.78, 96.67, 98.89, 98.89, 98.89]%	[66.67, 92.31, 83.33, 100.0, 90.91, 92.31, 80.0, 76.92, 92.31, 76.92, 83.33, 76.92, 90.91, 90.91, 90.91]%	[66.67, 100.0, 83.33, 100.0, 83.33, 100.0, 66.67, 83.33, 100.0, 83.33, 83.33, 83.33, 83.33, 83.33, 83.33]%	[97.62, 98.81, 98.81, 100.0, 100.0, 98.81, 100.0, 97.62, 98.81, 97.62, 98.81, 97.62, 100.0, 100.0, 100.0]%	[66.67, 85.71, 83.33, 100.0, 100.0, 85.71, 100.0, 71.43, 85.71, 71.43, 83.33, 71.43, 100.0, 100.0, 100.0]%	[97.62, 100.0, 98.81, 100.0, 98.82, 100.0, 97.67, 98.8, 100.0, 98.8, 98.81, 98.8, 98.82, 98.82, 98.82]%	||	85.64%	85.56%	98.97%	86.98%	98.97%	
  4  1  0  0  0  0  0  0  0  0  0  1  0  0  0  66.67%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  5  0  0  1  0  0  0  0  0  0  0  0  0  83.33%		3
  0  0  0  6  0  0  0  0  0  0  0  0  0  0  0  100.0%		4
  0  0  1  0  5  0  0  0  0  0  0  0  0  0  0  83.33%		5
  0  0  0  0  0  6  0  0  0  0  0  0  0  0  0  100.0%		6
  1  0  0  0  0  0  4  1  0  0  0  0  0  0  0  66.67%		7
  1  0  0  0  0  0  0  5  0  0  0  0  0  0  0  83.33%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  5  0  1  0  0  0  83.33%		10
  0  0  0  0  0  0  0  1  0  0  5  0  0  0  0  83.33%		11
  0  0  0  0  0  0  0  0  0  1  0  5  0  0  0  83.33%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  1  0  0  0  5  0  83.33%		14
  0  0  0  0  0  0  0  0  1  0  0  0  0  0  5  83.33%		15
 test size = (10, 90, 2)
RESULT:	Test	(n_subfeatures = 1, n_trees = 5)	(loss = DecisionTree.util.entropy, min_samples_leaf = 1, min_purity_increase = 0.001, min_loss_at_leaf = 0.0)	(initCondition = DecisionTree._startWithRelationAll(), ontology = Ontology(DecisionTree.ModalLogic.Interval,IARelations), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7)])	|	80.0%	97.33%	78.57%	[96.67, 98.89, 97.78, 95.56, 97.78, 96.67, 97.78, 96.67, 98.89, 94.44, 96.67, 95.56, 97.78, 100.0, 98.89]%	[66.67, 92.31, 85.71, 71.43, 80.0, 72.73, 83.33, 66.67, 92.31, 61.54, 80.0, 66.67, 83.33, 100.0, 90.91]%	[50.0, 100.0, 100.0, 83.33, 66.67, 66.67, 83.33, 50.0, 100.0, 66.67, 100.0, 66.67, 83.33, 100.0, 83.33]%	[100.0, 98.81, 97.62, 96.43, 100.0, 98.81, 98.81, 100.0, 98.81, 96.43, 96.43, 97.62, 98.81, 100.0, 100.0]%	[100.0, 85.71, 75.0, 62.5, 100.0, 80.0, 83.33, 100.0, 85.71, 57.14, 66.67, 66.67, 83.33, 100.0, 100.0]%	[96.55, 100.0, 100.0, 98.78, 97.67, 97.65, 98.81, 96.55, 100.0, 97.59, 100.0, 97.62, 98.81, 100.0, 98.82]%	||	79.57%	80.0%	98.57%	83.07%	98.59%	
  3  1  1  0  0  0  0  0  0  1  0  0  0  0  0  50.0%		1
  0  6  0  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		2
  0  0  6  0  0  0  0  0  0  0  0  0  0  0  0  100.0%		3
  0  0  0  5  0  1  0  0  0  0  0  0  0  0  0  83.33%		4
  0  0  1  1  4  0  0  0  0  0  0  0  0  0  0  66.67%		5
  0  0  0  1  0  4  0  0  1  0  0  0  0  0  0  66.67%		6
  0  0  0  0  0  0  5  0  0  1  0  0  0  0  0  83.33%		7
  0  0  0  0  0  0  0  3  0  0  2  0  1  0  0  50.0%		8
  0  0  0  0  0  0  0  0  6  0  0  0  0  0  0  100.0%		9
  0  0  0  0  0  0  0  0  0  4  0  2  0  0  0  66.67%		10
  0  0  0  0  0  0  0  0  0  0  6  0  0  0  0  100.0%		11
  0  0  0  0  0  0  1  0  0  1  0  4  0  0  0  66.67%		12
  0  0  0  0  0  0  0  0  0  0  1  0  5  0  0  83.33%		13
  0  0  0  0  0  0  0  0  0  0  0  0  0  6  0  100.0%		14
  0  0  0  1  0  0  0  0  0  0  0  0  0  0  5  83.33%		15
Forest OOB Error: 50.42%
