RESULT:	IndianPines, 1x1	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = true, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	61.67%	93.61%	58.18%	[90.0, 90.42, 93.33, 95.0, 96.25, 96.67, 90.83, 91.67, 89.17, 98.75, 97.08, 94.17]%	[40.0, 41.03, 57.89, 64.71, 80.85, 80.95, 50.0, 50.0, 38.1, 92.31, 81.08, 63.16]%	[40.0, 40.0, 55.0, 55.0, 95.0, 85.0, 55.0, 50.0, 40.0, 90.0, 75.0, 60.0]%	[94.55, 95.0, 96.82, 98.64, 96.36, 97.73, 94.09, 95.45, 93.64, 99.55, 99.09, 97.27]%	[40.0, 42.11, 61.11, 78.57, 70.37, 77.27, 45.83, 50.0, 36.36, 94.74, 88.24, 66.67]%	[94.55, 94.57, 95.95, 96.02, 99.53, 98.62, 95.83, 95.45, 94.5, 99.1, 97.76, 96.4]%	||	61.67%	61.67%	96.52%	62.61%	96.52%	
RESULT:	IndianPines, 3x3 flattened	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = true, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	17.5%	86.25%	10.0%	[86.25, 85.42, 82.92, 85.0, 85.42, 87.5, 83.33, 85.0, 87.08, 90.0, 86.67, 90.42]%	[23.26, 14.63, 8.89, 14.29, 18.6, 6.25, 9.09, 18.18, 20.51, 33.33, 11.11, 34.29]%	[25.0, 15.0, 10.0, 15.0, 20.0, 5.0, 10.0, 20.0, 20.0, 30.0, 10.0, 30.0]%	[91.82, 91.82, 89.55, 91.36, 91.36, 95.0, 90.0, 90.91, 93.18, 95.45, 93.64, 95.91]%	[21.74, 14.29, 8.0, 13.64, 17.39, 8.33, 8.33, 16.67, 21.05, 37.5, 12.5, 40.0]%	[93.09, 92.24, 91.63, 92.2, 92.63, 91.67, 91.67, 92.59, 92.76, 93.75, 91.96, 93.78]%	||	17.7%	17.5%	92.5%	18.29%	92.5%	
RESULT:	IndianPines, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = true, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	73.75%	95.62%	71.36%	[93.33, 91.67, 96.67, 97.92, 97.92, 99.17, 92.08, 94.17, 93.75, 100.0, 95.83, 95.0]%	[60.0, 60.0, 76.47, 86.49, 87.8, 95.0, 45.71, 66.67, 61.54, 100.0, 78.26, 66.67]%	[60.0, 75.0, 65.0, 80.0, 90.0, 95.0, 40.0, 70.0, 60.0, 100.0, 90.0, 60.0]%	[96.36, 93.18, 99.55, 99.55, 98.64, 99.55, 96.82, 96.36, 96.82, 100.0, 96.36, 98.18]%	[60.0, 50.0, 92.86, 94.12, 85.71, 95.0, 53.33, 63.64, 63.16, 100.0, 69.23, 75.0]%	[96.36, 97.62, 96.9, 98.21, 99.09, 99.55, 94.67, 97.25, 96.38, 100.0, 99.07, 96.43]%	||	73.72%	73.75%	97.61%	75.17%	97.63%	
RESULT:	IndianPines, 1x1	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = true, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	65.83%	94.31%	62.73%	[91.67, 89.58, 93.33, 95.0, 97.08, 98.75, 90.0, 92.5, 94.17, 99.17, 97.08, 93.33]%	[54.55, 48.98, 60.0, 66.67, 82.93, 91.89, 47.83, 40.0, 63.16, 95.0, 83.72, 55.56]%	[60.0, 60.0, 60.0, 60.0, 85.0, 85.0, 55.0, 30.0, 60.0, 95.0, 90.0, 50.0]%	[94.55, 92.27, 96.36, 98.18, 98.18, 100.0, 93.18, 98.18, 97.27, 99.55, 97.73, 97.27]%	[50.0, 41.38, 60.0, 75.0, 80.95, 100.0, 42.31, 60.0, 66.67, 95.0, 78.26, 62.5]%	[96.3, 96.21, 96.36, 96.43, 98.63, 98.65, 95.79, 93.91, 96.4, 99.55, 99.08, 95.54]%	||	65.86%	65.83%	96.89%	67.67%	96.9%	
RESULT:	IndianPines, 3x3 flattened	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = true, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	15.42%	85.9%	7.73%	[85.0, 85.83, 84.17, 88.33, 86.25, 86.25, 84.17, 86.67, 89.17, 86.67, 85.83, 82.5]%	[5.26, 10.53, 20.83, 0.0, 10.81, 5.71, 17.39, 27.27, 18.75, 23.81, 19.05, 16.0]%	[5.0, 10.0, 25.0, 0.0, 10.0, 5.0, 20.0, 30.0, 15.0, 25.0, 20.0, 20.0]%	[92.27, 92.73, 89.55, 96.36, 93.18, 93.64, 90.0, 91.82, 95.91, 92.27, 91.82, 88.18]%	[5.56, 11.11, 17.86, 0.0, 11.76, 6.67, 15.38, 25.0, 25.0, 22.73, 18.18, 13.33]%	[91.44, 91.89, 92.92, 91.38, 91.93, 91.56, 92.52, 93.52, 92.54, 93.12, 92.66, 92.38]%	||	14.62%	15.42%	92.31%	14.38%	92.32%	
RESULT:	Salinas, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	92.5%	99.06%	92.0%	[100.0, 100.0, 99.06, 99.69, 99.69, 99.38, 99.69, 96.88, 98.12, 98.12, 98.44, 99.38, 100.0, 99.38, 97.5, 99.69]%	[100.0, 100.0, 91.89, 97.56, 97.44, 95.0, 97.56, 76.19, 86.96, 85.0, 86.49, 95.24, 100.0, 94.74, 78.95, 97.44]%	[100.0, 100.0, 85.0, 100.0, 95.0, 95.0, 100.0, 80.0, 100.0, 85.0, 80.0, 100.0, 100.0, 90.0, 75.0, 95.0]%	[100.0, 100.0, 100.0, 99.67, 100.0, 99.67, 99.67, 98.0, 98.0, 99.0, 99.67, 99.33, 100.0, 100.0, 99.0, 100.0]%	[100.0, 100.0, 100.0, 95.24, 100.0, 95.0, 95.24, 72.73, 76.92, 85.0, 94.12, 90.91, 100.0, 100.0, 83.33, 100.0]%	[100.0, 100.0, 99.01, 100.0, 99.67, 99.67, 100.0, 98.66, 100.0, 99.0, 98.68, 100.0, 100.0, 99.34, 98.34, 99.67]%	||	92.53%	92.5%	99.5%	93.03%	99.5%	
RESULT:	Salinas, 1x1	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	90.94%	98.87%	90.33%	[99.69, 99.38, 98.75, 99.06, 99.06, 100.0, 99.06, 95.62, 99.38, 99.06, 99.38, 99.06, 99.69, 99.69, 95.62, 99.38]%	[97.44, 95.0, 90.0, 93.02, 92.31, 100.0, 92.68, 63.16, 95.24, 92.68, 94.74, 92.68, 97.56, 97.56, 63.16, 94.74]%	[95.0, 95.0, 90.0, 100.0, 90.0, 100.0, 95.0, 60.0, 100.0, 95.0, 90.0, 95.0, 100.0, 100.0, 60.0, 90.0]%	[100.0, 99.67, 99.33, 99.0, 99.67, 100.0, 99.33, 98.0, 99.33, 99.33, 100.0, 99.33, 99.67, 99.67, 98.0, 100.0]%	[100.0, 95.0, 90.0, 86.96, 94.74, 100.0, 90.48, 66.67, 90.91, 90.48, 100.0, 90.48, 95.24, 95.24, 66.67, 100.0]%	[99.67, 99.67, 99.33, 100.0, 99.34, 100.0, 99.67, 97.35, 100.0, 99.67, 99.34, 99.67, 100.0, 100.0, 97.35, 99.34]%	||	90.75%	90.94%	99.4%	90.8%	99.4%	
RESULT:	Salinas, 3x3 flattened	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	69.38%	96.17%	67.33%	[96.56, 94.38, 96.56, 95.0, 96.88, 94.06, 95.31, 96.88, 96.25, 95.31, 95.0, 96.56, 96.56, 98.44, 97.19, 97.81]%	[68.57, 64.0, 68.57, 61.9, 68.75, 53.66, 59.46, 72.22, 72.73, 51.61, 65.22, 77.55, 73.17, 87.18, 79.07, 82.05]%	[60.0, 80.0, 60.0, 65.0, 55.0, 55.0, 55.0, 65.0, 80.0, 40.0, 75.0, 95.0, 75.0, 85.0, 85.0, 80.0]%	[99.0, 95.33, 99.0, 97.0, 99.67, 96.67, 98.0, 99.0, 97.33, 99.0, 96.33, 96.67, 98.0, 99.33, 98.0, 99.0]%	[80.0, 53.33, 80.0, 59.09, 91.67, 52.38, 64.71, 81.25, 66.67, 72.73, 57.69, 65.52, 71.43, 89.47, 73.91, 84.21]%	[97.38, 98.62, 97.38, 97.65, 97.08, 96.99, 97.03, 97.7, 98.65, 96.12, 98.3, 99.66, 98.33, 99.0, 98.99, 98.67]%	||	69.11%	69.38%	97.96%	71.5%	97.97%	
RESULT:	Salinas, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC5), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	90.0%	98.75%	89.33%	[99.69, 99.69, 98.44, 98.75, 99.69, 99.69, 99.38, 95.0, 100.0, 99.06, 99.06, 98.44, 99.06, 98.75, 95.62, 99.69]%	[97.44, 97.56, 85.71, 90.48, 97.44, 97.56, 94.74, 60.0, 100.0, 91.89, 93.02, 88.89, 92.68, 89.47, 65.0, 97.56]%	[95.0, 100.0, 75.0, 95.0, 95.0, 100.0, 90.0, 60.0, 100.0, 85.0, 100.0, 100.0, 95.0, 85.0, 65.0, 100.0]%	[100.0, 99.67, 100.0, 99.0, 100.0, 99.67, 100.0, 97.33, 100.0, 100.0, 99.0, 98.33, 99.33, 99.67, 97.67, 99.67]%	[100.0, 95.24, 100.0, 86.36, 100.0, 95.24, 100.0, 60.0, 100.0, 100.0, 86.96, 80.0, 90.48, 94.44, 65.0, 95.24]%	[99.67, 100.0, 98.36, 99.66, 99.67, 100.0, 99.34, 97.33, 100.0, 99.01, 100.0, 100.0, 99.67, 99.01, 97.67, 100.0]%	||	89.97%	90.0%	99.33%	90.56%	99.34%	
RESULT:	Salinas, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	92.5%	99.06%	92.0%	[99.38, 99.69, 98.75, 99.69, 99.38, 99.69, 99.69, 96.25, 99.38, 98.12, 99.38, 99.38, 99.69, 100.0, 97.5, 99.06]%	[95.0, 97.56, 90.91, 97.56, 95.0, 97.56, 97.44, 66.67, 95.0, 85.0, 94.74, 95.0, 97.44, 100.0, 80.95, 92.31]%	[95.0, 100.0, 100.0, 100.0, 95.0, 100.0, 95.0, 60.0, 95.0, 85.0, 90.0, 95.0, 95.0, 100.0, 85.0, 90.0]%	[99.67, 99.67, 98.67, 99.67, 99.67, 99.67, 100.0, 98.67, 99.67, 99.0, 100.0, 99.67, 100.0, 100.0, 98.33, 99.67]%	[95.0, 95.24, 83.33, 95.24, 95.0, 95.24, 100.0, 75.0, 95.0, 85.0, 100.0, 95.0, 100.0, 100.0, 77.27, 94.74]%	[99.67, 100.0, 100.0, 100.0, 99.67, 100.0, 99.67, 97.37, 99.67, 99.0, 99.34, 99.67, 99.67, 100.0, 98.99, 99.34]%	||	92.38%	92.5%	99.5%	92.57%	99.5%	
RESULT:	Salinas, 1x1	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	86.88%	98.36%	86.0%	[99.06, 99.06, 98.12, 100.0, 99.69, 99.69, 100.0, 92.81, 99.06, 96.88, 98.44, 99.06, 99.69, 99.06, 93.44, 99.69]%	[93.02, 91.89, 85.71, 100.0, 97.56, 97.44, 100.0, 25.81, 93.02, 73.68, 86.49, 92.31, 97.56, 92.68, 55.32, 97.56]%	[100.0, 85.0, 90.0, 100.0, 100.0, 95.0, 100.0, 20.0, 100.0, 70.0, 80.0, 90.0, 100.0, 95.0, 65.0, 100.0]%	[99.0, 100.0, 98.67, 100.0, 99.67, 100.0, 100.0, 97.67, 99.0, 98.67, 99.67, 99.67, 99.67, 99.33, 95.33, 99.67]%	[86.96, 100.0, 81.82, 100.0, 95.24, 100.0, 100.0, 36.36, 86.96, 77.78, 94.12, 94.74, 95.24, 90.48, 48.15, 95.24]%	[100.0, 99.01, 99.33, 100.0, 100.0, 99.67, 100.0, 94.82, 100.0, 98.01, 98.68, 99.34, 100.0, 99.67, 97.61, 100.0]%	||	86.25%	86.88%	99.13%	86.44%	99.13%	
RESULT:	Salinas, 3x3 flattened	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	55.94%	94.49%	53.0%	[93.12, 94.69, 96.56, 95.94, 94.38, 93.44, 95.94, 94.69, 92.81, 93.44, 94.69, 95.31, 95.31, 95.94, 91.25, 94.38]%	[50.0, 56.41, 68.57, 69.77, 47.06, 46.15, 64.86, 60.47, 46.51, 43.24, 51.43, 59.46, 59.46, 64.86, 48.15, 60.87]%	[55.0, 55.0, 60.0, 75.0, 40.0, 45.0, 60.0, 65.0, 50.0, 40.0, 45.0, 55.0, 55.0, 60.0, 65.0, 70.0]%	[95.67, 97.33, 99.0, 97.33, 98.0, 96.67, 98.33, 96.67, 95.67, 97.0, 98.0, 98.0, 98.0, 98.33, 93.0, 96.0]%	[45.83, 57.89, 80.0, 65.22, 57.14, 47.37, 70.59, 56.52, 43.48, 47.06, 60.0, 64.71, 64.71, 70.59, 38.24, 53.85]%	[96.96, 97.01, 97.38, 98.32, 96.08, 96.35, 97.36, 97.64, 96.63, 96.04, 96.39, 97.03, 97.03, 97.36, 97.55, 97.96]%	||	56.08%	55.94%	97.06%	57.7%	97.07%	
RESULT:	Salinas, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC5), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	92.81%	99.1%	92.33%	[99.69, 99.69, 99.69, 99.38, 99.69, 100.0, 99.38, 97.5, 99.38, 99.06, 100.0, 98.75, 98.44, 98.75, 97.19, 99.06]%	[97.56, 97.44, 97.56, 95.24, 97.44, 100.0, 95.0, 75.0, 95.0, 91.89, 100.0, 90.91, 85.71, 90.48, 81.63, 92.31]%	[100.0, 95.0, 100.0, 100.0, 95.0, 100.0, 95.0, 60.0, 95.0, 85.0, 100.0, 100.0, 75.0, 95.0, 100.0, 90.0]%	[99.67, 100.0, 99.67, 99.33, 100.0, 100.0, 99.67, 100.0, 99.67, 100.0, 100.0, 98.67, 100.0, 99.0, 97.0, 99.67]%	[95.24, 100.0, 95.24, 90.91, 100.0, 100.0, 95.0, 100.0, 95.0, 100.0, 100.0, 83.33, 100.0, 86.36, 68.97, 94.74]%	[100.0, 99.67, 100.0, 100.0, 99.67, 100.0, 99.67, 97.4, 99.67, 99.01, 100.0, 100.0, 98.36, 99.66, 100.0, 99.34]%	||	92.7%	92.81%	99.52%	94.05%	99.53%	
RESULT:	Salinas, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	94.06%	99.26%	93.67%	[100.0, 100.0, 99.38, 100.0, 100.0, 100.0, 100.0, 96.56, 99.38, 97.81, 99.69, 99.38, 100.0, 99.69, 96.25, 100.0]%	[100.0, 100.0, 95.24, 100.0, 100.0, 100.0, 100.0, 74.42, 94.74, 82.93, 97.44, 95.24, 100.0, 97.44, 66.67, 100.0]%	[100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 80.0, 90.0, 85.0, 95.0, 100.0, 100.0, 95.0, 60.0, 100.0]%	[100.0, 100.0, 99.33, 100.0, 100.0, 100.0, 100.0, 97.67, 100.0, 98.67, 100.0, 99.33, 100.0, 100.0, 98.67, 100.0]%	[100.0, 100.0, 90.91, 100.0, 100.0, 100.0, 100.0, 69.57, 100.0, 80.95, 100.0, 90.91, 100.0, 100.0, 75.0, 100.0]%	[100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 98.65, 99.34, 99.0, 99.67, 100.0, 100.0, 99.67, 97.37, 100.0]%	||	94.01%	94.06%	99.6%	94.21%	99.61%	
RESULT:	Salinas, 1x1	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	88.12%	98.52%	87.33%	[99.69, 99.69, 99.69, 99.38, 100.0, 100.0, 100.0, 93.44, 99.38, 96.88, 98.44, 98.75, 99.06, 98.12, 94.69, 99.06]%	[97.56, 97.44, 97.44, 94.74, 100.0, 100.0, 100.0, 40.0, 95.24, 75.0, 88.37, 90.48, 92.68, 84.21, 58.54, 92.68]%	[100.0, 95.0, 95.0, 90.0, 100.0, 100.0, 100.0, 35.0, 100.0, 75.0, 95.0, 95.0, 95.0, 80.0, 60.0, 95.0]%	[99.67, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 97.33, 99.33, 98.33, 98.67, 99.0, 99.33, 99.33, 97.0, 99.33]%	[95.24, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 46.67, 90.91, 75.0, 82.61, 86.36, 90.48, 88.89, 57.14, 90.48]%	[100.0, 99.67, 99.67, 99.34, 100.0, 100.0, 100.0, 95.74, 100.0, 98.33, 99.66, 99.66, 99.67, 98.68, 97.32, 99.67]%	||	87.77%	88.12%	99.21%	87.74%	99.21%	
RESULT:	Salinas, 3x3 flattened	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	53.75%	94.22%	50.67%	[93.12, 95.62, 94.69, 91.88, 92.19, 92.5, 92.19, 95.31, 95.62, 91.56, 94.38, 96.25, 96.56, 95.94, 95.31, 94.38]%	[42.11, 61.11, 54.05, 40.91, 39.02, 33.33, 52.83, 63.41, 66.67, 37.21, 55.0, 66.67, 68.57, 62.86, 66.67, 52.63]%	[40.0, 55.0, 50.0, 45.0, 40.0, 30.0, 70.0, 65.0, 70.0, 40.0, 55.0, 60.0, 60.0, 55.0, 75.0, 50.0]%	[96.67, 98.33, 97.67, 95.0, 95.67, 96.67, 93.67, 97.33, 97.33, 95.0, 97.0, 98.67, 99.0, 98.67, 96.67, 97.33]%	[44.44, 68.75, 58.82, 37.5, 38.1, 37.5, 42.42, 61.9, 63.64, 34.78, 55.0, 75.0, 80.0, 73.33, 60.0, 55.56]%	[96.03, 97.04, 96.7, 96.28, 95.99, 95.39, 97.91, 97.66, 97.99, 95.96, 97.0, 97.37, 97.38, 97.05, 98.31, 96.69]%	||	53.94%	53.75%	96.92%	55.42%	96.92%	
RESULT:	Salinas, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC5), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	92.5%	99.06%	92.0%	[100.0, 100.0, 99.38, 99.06, 99.69, 100.0, 99.69, 96.56, 100.0, 98.75, 99.38, 99.06, 98.12, 98.44, 97.19, 99.69]%	[100.0, 100.0, 94.74, 92.31, 97.56, 100.0, 97.44, 70.27, 100.0, 88.89, 95.0, 93.02, 86.36, 87.8, 78.05, 97.56]%	[100.0, 100.0, 90.0, 90.0, 100.0, 100.0, 95.0, 65.0, 100.0, 80.0, 95.0, 100.0, 95.0, 90.0, 80.0, 100.0]%	[100.0, 100.0, 100.0, 99.67, 99.67, 100.0, 100.0, 98.67, 100.0, 100.0, 99.67, 99.0, 98.33, 99.0, 98.33, 99.67]%	[100.0, 100.0, 100.0, 94.74, 95.24, 100.0, 100.0, 76.47, 100.0, 100.0, 95.0, 86.96, 79.17, 85.71, 76.19, 95.24]%	[100.0, 100.0, 99.34, 99.34, 100.0, 100.0, 99.67, 97.69, 100.0, 98.68, 99.67, 100.0, 99.66, 99.33, 98.66, 100.0]%	||	92.44%	92.5%	99.5%	92.79%	99.5%	
RESULT:	Salinas, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	92.5%	99.06%	92.0%	[99.38, 99.38, 99.69, 100.0, 99.69, 99.69, 100.0, 97.19, 99.06, 98.12, 99.06, 100.0, 98.44, 98.12, 97.19, 100.0]%	[95.0, 95.0, 97.44, 100.0, 97.44, 97.56, 100.0, 78.05, 93.02, 83.33, 92.68, 100.0, 85.71, 86.96, 76.92, 100.0]%	[95.0, 95.0, 95.0, 100.0, 95.0, 100.0, 100.0, 80.0, 100.0, 75.0, 95.0, 100.0, 75.0, 100.0, 75.0, 100.0]%	[99.67, 99.67, 100.0, 100.0, 100.0, 99.67, 100.0, 98.33, 99.0, 99.67, 99.33, 100.0, 100.0, 98.0, 98.67, 100.0]%	[95.0, 95.0, 100.0, 100.0, 100.0, 95.24, 100.0, 76.19, 86.96, 93.75, 90.48, 100.0, 100.0, 76.92, 78.95, 100.0]%	[99.67, 99.67, 99.67, 100.0, 99.67, 100.0, 100.0, 98.66, 100.0, 98.36, 99.67, 100.0, 98.36, 100.0, 98.34, 100.0]%	||	92.44%	92.5%	99.5%	93.03%	99.5%	
RESULT:	Salinas, 1x1	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	89.69%	98.71%	89.0%	[99.06, 99.06, 98.75, 100.0, 99.69, 100.0, 100.0, 95.0, 100.0, 95.62, 99.38, 98.12, 99.69, 99.38, 95.62, 100.0]%	[91.89, 93.02, 90.48, 100.0, 97.56, 100.0, 100.0, 60.0, 100.0, 66.67, 94.74, 85.71, 97.44, 95.24, 58.82, 100.0]%	[85.0, 100.0, 95.0, 100.0, 100.0, 100.0, 100.0, 60.0, 100.0, 70.0, 90.0, 90.0, 95.0, 100.0, 50.0, 100.0]%	[100.0, 99.0, 99.0, 100.0, 99.67, 100.0, 100.0, 97.33, 100.0, 97.33, 100.0, 98.67, 100.0, 99.33, 98.67, 100.0]%	[100.0, 86.96, 86.36, 100.0, 95.24, 100.0, 100.0, 60.0, 100.0, 63.64, 100.0, 81.82, 100.0, 90.91, 71.43, 100.0]%	[99.01, 100.0, 99.66, 100.0, 100.0, 100.0, 100.0, 97.33, 100.0, 97.99, 99.34, 99.33, 99.67, 100.0, 96.73, 100.0]%	||	89.47%	89.69%	99.31%	89.77%	99.32%	
RESULT:	Salinas, 3x3 flattened	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	65.0%	95.63%	62.67%	[95.0, 97.19, 95.94, 94.38, 96.88, 95.0, 91.25, 95.94, 94.69, 94.06, 96.25, 96.25, 96.88, 98.75, 95.94, 95.62]%	[61.9, 76.92, 62.86, 62.5, 73.68, 55.56, 44.0, 66.67, 60.47, 53.66, 68.42, 66.67, 76.19, 90.0, 68.29, 56.25]%	[65.0, 75.0, 55.0, 75.0, 70.0, 50.0, 55.0, 65.0, 65.0, 55.0, 65.0, 60.0, 80.0, 90.0, 70.0, 45.0]%	[97.0, 98.67, 98.67, 95.67, 98.67, 98.0, 93.67, 98.0, 96.67, 96.67, 98.33, 98.67, 98.0, 99.33, 97.67, 99.0]%	[59.09, 78.95, 73.33, 53.57, 77.78, 62.5, 36.67, 68.42, 56.52, 52.38, 72.22, 75.0, 72.73, 90.0, 66.67, 75.0]%	[97.65, 98.34, 97.05, 98.29, 98.01, 96.71, 96.9, 97.67, 97.64, 96.99, 97.68, 97.37, 98.66, 99.33, 97.99, 96.43]%	||	65.25%	65.0%	97.67%	66.93%	97.67%	
RESULT:	Salinas, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC5), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	94.69%	99.34%	94.33%	[100.0, 100.0, 99.06, 99.69, 99.06, 100.0, 100.0, 97.5, 100.0, 98.44, 99.69, 100.0, 99.69, 99.69, 97.5, 99.06]%	[100.0, 100.0, 92.31, 97.56, 92.68, 100.0, 100.0, 80.95, 100.0, 87.18, 97.56, 100.0, 97.44, 97.56, 77.78, 92.68]%	[100.0, 100.0, 90.0, 100.0, 95.0, 100.0, 100.0, 85.0, 100.0, 85.0, 100.0, 100.0, 95.0, 100.0, 70.0, 95.0]%	[100.0, 100.0, 99.67, 99.67, 99.33, 100.0, 100.0, 98.33, 100.0, 99.33, 99.67, 100.0, 100.0, 99.67, 99.33, 99.33]%	[100.0, 100.0, 94.74, 95.24, 90.48, 100.0, 100.0, 77.27, 100.0, 89.47, 95.24, 100.0, 100.0, 95.24, 87.5, 90.48]%	[100.0, 100.0, 99.34, 100.0, 99.67, 100.0, 100.0, 98.99, 100.0, 99.0, 100.0, 100.0, 99.67, 100.0, 98.03, 99.67]%	||	94.61%	94.69%	99.65%	94.73%	99.65%	
RESULT:	Salinas, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	91.88%	98.98%	91.33%	[99.38, 99.38, 99.69, 99.38, 99.38, 100.0, 99.69, 95.0, 100.0, 97.81, 99.69, 100.0, 98.75, 99.38, 96.25, 100.0]%	[94.74, 95.24, 97.44, 94.74, 95.0, 100.0, 97.56, 60.0, 100.0, 82.05, 97.56, 100.0, 90.48, 95.0, 70.0, 100.0]%	[90.0, 100.0, 95.0, 90.0, 95.0, 100.0, 100.0, 60.0, 100.0, 80.0, 100.0, 100.0, 95.0, 95.0, 70.0, 100.0]%	[100.0, 99.33, 100.0, 100.0, 99.67, 100.0, 99.67, 97.33, 100.0, 99.0, 99.67, 100.0, 99.0, 99.67, 98.0, 100.0]%	[100.0, 90.91, 100.0, 100.0, 95.0, 100.0, 95.24, 60.0, 100.0, 84.21, 95.24, 100.0, 86.36, 95.0, 70.0, 100.0]%	[99.34, 100.0, 99.67, 99.34, 99.67, 100.0, 100.0, 97.33, 100.0, 98.67, 100.0, 100.0, 99.66, 99.67, 98.0, 100.0]%	||	91.86%	91.88%	99.46%	92.0%	99.46%	
RESULT:	Salinas, 1x1	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	90.62%	98.83%	90.0%	[99.69, 99.38, 99.69, 99.38, 99.69, 100.0, 99.69, 94.38, 100.0, 98.44, 98.75, 99.69, 99.69, 99.06, 94.38, 99.38]%	[97.44, 95.0, 97.56, 95.24, 97.44, 100.0, 97.56, 57.14, 100.0, 86.49, 90.48, 97.56, 97.44, 93.02, 50.0, 94.74]%	[95.0, 95.0, 100.0, 100.0, 95.0, 100.0, 100.0, 60.0, 100.0, 80.0, 95.0, 100.0, 95.0, 100.0, 45.0, 90.0]%	[100.0, 99.67, 99.67, 99.33, 100.0, 100.0, 99.67, 96.67, 100.0, 99.67, 99.0, 99.67, 100.0, 99.0, 97.67, 100.0]%	[100.0, 95.0, 95.24, 90.91, 100.0, 100.0, 95.24, 54.55, 100.0, 94.12, 86.36, 95.24, 100.0, 86.96, 56.25, 100.0]%	[99.67, 99.67, 100.0, 100.0, 99.67, 100.0, 100.0, 97.32, 100.0, 98.68, 99.66, 100.0, 99.67, 100.0, 96.38, 99.34]%	||	90.44%	90.62%	99.38%	90.62%	99.38%	
RESULT:	Salinas, 3x3 flattened	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	66.88%	95.86%	64.67%	[95.31, 95.62, 95.94, 96.56, 95.94, 94.69, 97.5, 97.5, 97.19, 93.44, 93.12, 96.25, 96.25, 96.25, 96.25, 95.94]%	[54.55, 69.57, 68.29, 75.56, 58.06, 65.31, 80.0, 78.95, 74.29, 43.24, 45.0, 70.0, 70.0, 70.0, 71.43, 69.77]%	[45.0, 80.0, 70.0, 85.0, 45.0, 80.0, 80.0, 75.0, 65.0, 40.0, 45.0, 70.0, 70.0, 70.0, 75.0, 75.0]%	[98.67, 96.67, 97.67, 97.33, 99.33, 95.67, 98.67, 99.0, 99.33, 97.0, 96.33, 98.0, 98.0, 98.0, 97.67, 97.33]%	[69.23, 61.54, 66.67, 68.0, 81.82, 55.17, 80.0, 83.33, 86.67, 47.06, 45.0, 70.0, 70.0, 70.0, 68.18, 65.22]%	[96.42, 98.64, 97.99, 98.98, 96.44, 98.63, 98.67, 98.34, 97.7, 96.04, 96.33, 98.0, 98.0, 98.0, 98.32, 98.32]%	||	66.5%	66.88%	97.79%	67.99%	97.8%	
RESULT:	Salinas, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC5), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	90.94%	98.87%	90.33%	[100.0, 100.0, 99.38, 99.69, 98.44, 99.06, 100.0, 94.69, 99.69, 98.44, 99.06, 99.38, 99.69, 99.06, 95.31, 100.0]%	[100.0, 100.0, 95.0, 97.44, 87.18, 93.02, 100.0, 58.54, 97.56, 87.18, 92.31, 95.24, 97.44, 92.31, 61.54, 100.0]%	[100.0, 100.0, 95.0, 95.0, 85.0, 100.0, 100.0, 60.0, 100.0, 85.0, 90.0, 100.0, 95.0, 90.0, 60.0, 100.0]%	[100.0, 100.0, 99.67, 100.0, 99.33, 99.0, 100.0, 97.0, 99.67, 99.33, 99.67, 99.33, 100.0, 99.67, 97.67, 100.0]%	[100.0, 100.0, 95.0, 100.0, 89.47, 86.96, 100.0, 57.14, 95.24, 89.47, 94.74, 90.91, 100.0, 94.74, 63.16, 100.0]%	[100.0, 100.0, 99.67, 99.67, 99.0, 100.0, 100.0, 97.32, 100.0, 99.0, 99.34, 100.0, 99.67, 99.34, 97.34, 100.0]%	||	90.92%	90.94%	99.4%	91.05%	99.4%	
RESULT:	Salinas-A, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	98.33%	99.44%	98.0%	[100.0, 98.33, 100.0, 98.33, 100.0, 100.0]%	[100.0, 95.24, 100.0, 94.74, 100.0, 100.0]%	[100.0, 100.0, 100.0, 90.0, 100.0, 100.0]%	[100.0, 98.0, 100.0, 100.0, 100.0, 100.0]%	[100.0, 90.91, 100.0, 100.0, 100.0, 100.0]%	[100.0, 100.0, 100.0, 98.04, 100.0, 100.0]%	||	98.33%	98.33%	99.67%	98.48%	99.67%	
RESULT:	Salinas-A, 1x1	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	96.67%	98.89%	96.0%	[100.0, 98.33, 99.17, 100.0, 96.67, 99.17]%	[100.0, 94.74, 97.44, 100.0, 90.48, 97.56]%	[100.0, 90.0, 95.0, 100.0, 95.0, 100.0]%	[100.0, 100.0, 100.0, 100.0, 97.0, 99.0]%	[100.0, 100.0, 100.0, 100.0, 86.36, 95.24]%	[100.0, 98.04, 99.01, 100.0, 98.98, 100.0]%	||	96.7%	96.67%	99.33%	96.93%	99.34%	
RESULT:	Salinas-A, 3x3 flattened	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	30.0%	76.67%	16.0%	[77.5, 71.67, 78.33, 77.5, 79.17, 75.83]%	[18.18, 19.05, 35.0, 34.15, 39.02, 32.56]%	[15.0, 20.0, 35.0, 35.0, 40.0, 35.0]%	[90.0, 82.0, 87.0, 86.0, 87.0, 84.0]%	[23.08, 18.18, 35.0, 33.33, 38.1, 30.43]%	[84.11, 83.67, 87.0, 86.87, 87.88, 86.6]%	||	29.66%	30.0%	86.0%	29.69%	86.02%	
RESULT:	Salinas-A, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC5), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	95.83%	98.61%	95.0%	[100.0, 98.33, 97.5, 98.33, 98.33, 99.17]%	[100.0, 95.0, 92.31, 95.0, 95.24, 97.44]%	[100.0, 95.0, 90.0, 95.0, 100.0, 95.0]%	[100.0, 99.0, 99.0, 99.0, 98.0, 100.0]%	[100.0, 95.0, 94.74, 95.0, 90.91, 100.0]%	[100.0, 99.0, 98.02, 99.0, 100.0, 99.01]%	||	95.83%	95.83%	99.17%	95.94%	99.17%	
RESULT:	Salinas-A, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	100.0%	100.0%	100.0%	[100.0, 100.0, 100.0, 100.0, 100.0, 100.0]%	[100.0, 100.0, 100.0, 100.0, 100.0, 100.0]%	[100.0, 100.0, 100.0, 100.0, 100.0, 100.0]%	[100.0, 100.0, 100.0, 100.0, 100.0, 100.0]%	[100.0, 100.0, 100.0, 100.0, 100.0, 100.0]%	[100.0, 100.0, 100.0, 100.0, 100.0, 100.0]%	||	100.0%	100.0%	100.0%	100.0%	100.0%	
RESULT:	Salinas-A, 1x1	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	93.33%	97.78%	92.0%	[100.0, 95.0, 98.33, 98.33, 99.17, 95.83]%	[100.0, 83.33, 94.74, 95.0, 97.56, 88.89]%	[100.0, 75.0, 90.0, 95.0, 100.0, 100.0]%	[100.0, 99.0, 100.0, 99.0, 99.0, 95.0]%	[100.0, 93.75, 100.0, 95.0, 95.24, 80.0]%	[100.0, 95.19, 98.04, 99.0, 100.0, 100.0]%	||	93.25%	93.33%	98.67%	94.0%	98.71%	
RESULT:	Salinas-A, 3x3 flattened	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	25.83%	75.28%	11.0%	[76.67, 75.83, 72.5, 80.0, 75.0, 71.67]%	[12.5, 29.27, 19.51, 33.33, 21.05, 34.62]%	[10.0, 30.0, 20.0, 30.0, 20.0, 45.0]%	[90.0, 85.0, 83.0, 90.0, 86.0, 77.0]%	[16.67, 28.57, 19.05, 37.5, 22.22, 28.12]%	[83.33, 85.86, 83.84, 86.54, 84.31, 87.5]%	||	25.05%	25.83%	85.17%	25.36%	85.23%	
RESULT:	Salinas-A, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC5), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	96.67%	98.89%	96.0%	[100.0, 99.17, 99.17, 98.33, 99.17, 97.5]%	[100.0, 97.56, 97.44, 95.24, 97.44, 92.31]%	[100.0, 100.0, 95.0, 100.0, 95.0, 90.0]%	[100.0, 99.0, 100.0, 98.0, 100.0, 99.0]%	[100.0, 95.24, 100.0, 90.91, 100.0, 94.74]%	[100.0, 100.0, 99.01, 100.0, 99.01, 98.02]%	||	96.66%	96.67%	99.33%	96.81%	99.34%	
RESULT:	Salinas-A, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	95.83%	98.61%	95.0%	[100.0, 99.17, 96.67, 98.33, 98.33, 99.17]%	[100.0, 97.44, 90.0, 95.0, 95.24, 97.44]%	[100.0, 95.0, 90.0, 95.0, 100.0, 95.0]%	[100.0, 100.0, 98.0, 99.0, 98.0, 100.0]%	[100.0, 100.0, 90.0, 95.0, 90.91, 100.0]%	[100.0, 99.01, 98.0, 99.0, 100.0, 99.01]%	||	95.85%	95.83%	99.17%	95.98%	99.17%	
RESULT:	Salinas-A, 1x1	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	95.83%	98.61%	95.0%	[100.0, 96.67, 98.33, 98.33, 99.17, 99.17]%	[100.0, 89.47, 95.0, 95.0, 97.56, 97.56]%	[100.0, 85.0, 95.0, 95.0, 100.0, 100.0]%	[100.0, 99.0, 99.0, 99.0, 99.0, 99.0]%	[100.0, 94.44, 95.0, 95.0, 95.24, 95.24]%	[100.0, 97.06, 99.0, 99.0, 100.0, 100.0]%	||	95.77%	95.83%	99.17%	95.82%	99.18%	
RESULT:	Salinas-A, 3x3 flattened	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	26.67%	75.56%	12.0%	[80.83, 69.17, 79.17, 74.17, 78.33, 71.67]%	[34.29, 17.78, 35.9, 31.11, 27.78, 15.0]%	[30.0, 20.0, 35.0, 35.0, 25.0, 15.0]%	[91.0, 79.0, 88.0, 82.0, 89.0, 83.0]%	[40.0, 16.0, 36.84, 28.0, 31.25, 15.0]%	[86.67, 83.16, 87.13, 86.32, 85.58, 83.0]%	||	26.97%	26.67%	85.33%	27.85%	85.31%	
RESULT:	Salinas-A, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC5), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	96.67%	98.89%	96.0%	[99.17, 97.5, 99.17, 100.0, 98.33, 99.17]%	[97.56, 92.31, 97.56, 100.0, 94.74, 97.56]%	[100.0, 90.0, 100.0, 100.0, 90.0, 100.0]%	[99.0, 99.0, 99.0, 100.0, 100.0, 99.0]%	[95.24, 94.74, 95.24, 100.0, 100.0, 95.24]%	[100.0, 98.02, 100.0, 100.0, 98.04, 100.0]%	||	96.62%	96.67%	99.33%	96.74%	99.34%	
RESULT:	Salinas-A, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	96.67%	98.89%	96.0%	[99.17, 100.0, 98.33, 98.33, 99.17, 98.33]%	[97.44, 100.0, 94.74, 95.24, 97.44, 95.24]%	[95.0, 100.0, 90.0, 100.0, 95.0, 100.0]%	[100.0, 100.0, 100.0, 98.0, 100.0, 98.0]%	[100.0, 100.0, 100.0, 90.91, 100.0, 90.91]%	[99.01, 100.0, 98.04, 100.0, 99.01, 100.0]%	||	96.68%	96.67%	99.33%	96.97%	99.34%	
RESULT:	Salinas-A, 1x1	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	94.17%	98.06%	93.0%	[100.0, 96.67, 99.17, 100.0, 96.67, 95.83]%	[100.0, 88.89, 97.56, 100.0, 90.91, 87.18]%	[100.0, 80.0, 100.0, 100.0, 100.0, 85.0]%	[100.0, 100.0, 99.0, 100.0, 96.0, 98.0]%	[100.0, 100.0, 95.24, 100.0, 83.33, 89.47]%	[100.0, 96.15, 100.0, 100.0, 100.0, 97.03]%	||	94.09%	94.17%	98.83%	94.67%	98.86%	
RESULT:	Salinas-A, 3x3 flattened	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	29.17%	76.39%	15.0%	[79.17, 75.83, 69.17, 80.0, 76.67, 77.5]%	[24.24, 25.64, 30.19, 29.41, 36.36, 27.03]%	[20.0, 25.0, 40.0, 25.0, 40.0, 25.0]%	[91.0, 86.0, 75.0, 91.0, 84.0, 88.0]%	[30.77, 26.32, 24.24, 35.71, 33.33, 29.41]%	[85.05, 85.15, 86.21, 85.85, 87.5, 85.44]%	||	28.81%	29.17%	85.83%	29.96%	85.86%	
RESULT:	Salinas-A, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC5), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	98.33%	99.44%	98.0%	[100.0, 99.17, 100.0, 100.0, 98.33, 99.17]%	[100.0, 97.56, 100.0, 100.0, 95.0, 97.44]%	[100.0, 100.0, 100.0, 100.0, 95.0, 95.0]%	[100.0, 99.0, 100.0, 100.0, 99.0, 100.0]%	[100.0, 95.24, 100.0, 100.0, 95.0, 100.0]%	[100.0, 100.0, 100.0, 100.0, 99.0, 99.01]%	||	98.33%	98.33%	99.67%	98.37%	99.67%	
RESULT:	Salinas-A, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	96.67%	98.89%	96.0%	[98.33, 100.0, 98.33, 98.33, 100.0, 98.33]%	[94.74, 100.0, 94.74, 95.24, 100.0, 95.24]%	[90.0, 100.0, 90.0, 100.0, 100.0, 100.0]%	[100.0, 100.0, 100.0, 98.0, 100.0, 98.0]%	[100.0, 100.0, 100.0, 90.91, 100.0, 90.91]%	[98.04, 100.0, 98.04, 100.0, 100.0, 100.0]%	||	96.66%	96.67%	99.33%	96.97%	99.35%	
RESULT:	Salinas-A, 1x1	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	94.17%	98.06%	93.0%	[100.0, 95.83, 97.5, 99.17, 96.67, 99.17]%	[100.0, 88.37, 91.89, 97.44, 90.48, 97.44]%	[100.0, 95.0, 85.0, 95.0, 95.0, 95.0]%	[100.0, 96.0, 100.0, 100.0, 97.0, 100.0]%	[100.0, 82.61, 100.0, 100.0, 86.36, 100.0]%	[100.0, 98.97, 97.09, 99.01, 98.98, 99.01]%	||	94.27%	94.17%	98.83%	94.83%	98.84%	
RESULT:	Salinas-A, 3x3 flattened	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	30.83%	76.94%	17.0%	[75.83, 70.0, 77.5, 81.67, 76.67, 80.0]%	[21.62, 21.74, 37.21, 42.11, 33.33, 29.41]%	[20.0, 25.0, 40.0, 40.0, 35.0, 25.0]%	[87.0, 79.0, 85.0, 90.0, 85.0, 91.0]%	[23.53, 19.23, 34.78, 44.44, 31.82, 35.71]%	[84.47, 84.04, 87.63, 88.24, 86.73, 85.85]%	||	30.9%	30.83%	86.17%	31.59%	86.16%	
RESULT:	Salinas-A, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC5), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	96.67%	98.89%	96.0%	[99.17, 96.67, 100.0, 100.0, 97.5, 100.0]%	[97.56, 89.47, 100.0, 100.0, 92.68, 100.0]%	[100.0, 85.0, 100.0, 100.0, 95.0, 100.0]%	[99.0, 99.0, 100.0, 100.0, 98.0, 100.0]%	[95.24, 94.44, 100.0, 100.0, 90.48, 100.0]%	[100.0, 97.06, 100.0, 100.0, 98.99, 100.0]%	||	96.62%	96.67%	99.33%	96.69%	99.34%	
RESULT:	PaviaCentre, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	87.78%	97.28%	86.25%	[100.0, 98.89, 98.89, 94.44, 93.89, 97.22, 95.56, 97.22, 99.44]%	[100.0, 95.0, 95.0, 75.0, 73.17, 86.49, 80.95, 87.18, 97.56]%	[100.0, 95.0, 95.0, 75.0, 75.0, 80.0, 85.0, 85.0, 100.0]%	[100.0, 99.38, 99.38, 96.88, 96.25, 99.38, 96.88, 98.75, 99.38]%	[100.0, 95.0, 95.0, 75.0, 71.43, 94.12, 77.27, 89.47, 95.24]%	[100.0, 99.38, 99.38, 96.88, 96.86, 97.55, 98.1, 98.14, 100.0]%	||	87.82%	87.78%	98.47%	88.06%	98.47%	
RESULT:	PaviaCentre, 1x1	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	84.44%	96.54%	82.5%	[100.0, 96.67, 96.11, 92.78, 93.33, 97.22, 96.11, 97.22, 99.44]%	[100.0, 84.21, 82.05, 66.67, 72.73, 87.18, 82.05, 87.8, 97.56]%	[100.0, 80.0, 80.0, 65.0, 80.0, 85.0, 80.0, 90.0, 100.0]%	[100.0, 98.75, 98.12, 96.25, 95.0, 98.75, 98.12, 98.12, 99.38]%	[100.0, 88.89, 84.21, 68.42, 66.67, 89.47, 84.21, 85.71, 95.24]%	[100.0, 97.53, 97.52, 95.65, 97.44, 98.14, 97.52, 98.74, 100.0]%	||	84.47%	84.44%	98.06%	84.76%	98.06%	
RESULT:	PaviaCentre, 3x3 flattened	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	12.22%	80.49%	1.25%	[79.44, 81.67, 83.33, 76.11, 80.56, 78.89, 78.89, 88.89, 76.67]%	[0.0, 15.38, 11.76, 21.82, 14.63, 9.52, 9.52, 16.67, 8.7]%	[0.0, 15.0, 10.0, 30.0, 15.0, 10.0, 10.0, 10.0, 10.0]%	[89.38, 90.0, 92.5, 81.88, 88.75, 87.5, 87.5, 98.75, 85.0]%	[0.0, 15.79, 14.29, 17.14, 14.29, 9.09, 9.09, 50.0, 7.69]%	[87.73, 89.44, 89.16, 90.34, 89.31, 88.61, 88.61, 89.77, 88.31]%	||	12.0%	12.22%	89.03%	15.26%	89.03%	
RESULT:	PaviaCentre, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC5), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	93.33%	98.52%	92.5%	[100.0, 97.78, 97.22, 98.89, 96.67, 98.89, 98.89, 98.33, 100.0]%	[100.0, 89.47, 87.8, 94.74, 85.0, 95.24, 94.74, 93.02, 100.0]%	[100.0, 85.0, 90.0, 90.0, 85.0, 100.0, 90.0, 100.0, 100.0]%	[100.0, 99.38, 98.12, 100.0, 98.12, 98.75, 100.0, 98.12, 100.0]%	[100.0, 94.44, 85.71, 100.0, 85.0, 90.91, 100.0, 86.96, 100.0]%	[100.0, 98.15, 98.74, 98.77, 98.12, 100.0, 98.77, 100.0, 100.0]%	||	93.33%	93.33%	99.17%	93.67%	99.17%	
RESULT:	PaviaCentre, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	94.44%	98.77%	93.75%	[98.89, 98.33, 98.89, 99.44, 98.89, 99.44, 98.33, 98.33, 98.33]%	[94.74, 92.31, 95.0, 97.56, 95.0, 97.44, 92.68, 92.31, 93.02]%	[90.0, 90.0, 95.0, 100.0, 95.0, 95.0, 95.0, 90.0, 100.0]%	[100.0, 99.38, 99.38, 99.38, 99.38, 100.0, 98.75, 99.38, 98.12]%	[100.0, 94.74, 95.0, 95.24, 95.0, 100.0, 90.48, 94.74, 86.96]%	[98.77, 98.76, 99.38, 100.0, 99.38, 99.38, 99.37, 98.76, 100.0]%	||	94.45%	94.44%	99.31%	94.68%	99.31%	
RESULT:	PaviaCentre, 1x1	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	84.44%	96.54%	82.5%	[98.89, 96.67, 95.0, 94.44, 93.33, 98.33, 96.67, 96.67, 98.89]%	[94.74, 83.33, 79.07, 77.27, 70.0, 92.68, 83.33, 85.0, 95.24]%	[90.0, 75.0, 85.0, 85.0, 70.0, 95.0, 75.0, 85.0, 100.0]%	[100.0, 99.38, 96.25, 95.62, 96.25, 98.75, 99.38, 98.12, 98.75]%	[100.0, 93.75, 73.91, 70.83, 70.0, 90.48, 93.75, 85.0, 90.91]%	[98.77, 96.95, 98.09, 98.08, 96.25, 99.37, 96.95, 98.12, 100.0]%	||	84.52%	84.44%	98.06%	85.4%	98.06%	
RESULT:	PaviaCentre, 3x3 flattened	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	13.89%	80.86%	3.13%	[80.56, 77.78, 83.33, 79.44, 82.22, 81.67, 80.56, 82.22, 80.0]%	[5.41, 4.76, 16.67, 5.13, 23.81, 15.38, 14.63, 23.81, 14.29]%	[5.0, 5.0, 15.0, 5.0, 25.0, 15.0, 15.0, 25.0, 15.0]%	[90.0, 86.88, 91.88, 88.75, 89.38, 90.0, 88.75, 89.38, 88.12]%	[5.88, 4.55, 18.75, 5.26, 22.73, 15.79, 14.29, 22.73, 13.64]%	[88.34, 87.97, 89.63, 88.2, 90.51, 89.44, 89.31, 90.51, 89.24]%	||	13.77%	13.89%	89.24%	13.73%	89.24%	
RESULT:	PaviaCentre, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC5), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	86.67%	97.04%	85.0%	[99.44, 98.33, 98.89, 96.11, 93.89, 96.67, 95.56, 96.11, 98.33]%	[97.56, 92.31, 95.0, 82.05, 71.79, 85.0, 80.95, 82.05, 92.68]%	[100.0, 90.0, 95.0, 80.0, 70.0, 85.0, 85.0, 80.0, 95.0]%	[99.38, 99.38, 99.38, 98.12, 96.88, 98.12, 96.88, 98.12, 98.75]%	[95.24, 94.74, 95.0, 84.21, 73.68, 85.0, 77.27, 84.21, 90.48]%	[100.0, 98.76, 99.38, 97.52, 96.27, 98.12, 98.1, 97.52, 99.37]%	||	86.6%	86.67%	98.33%	86.65%	98.34%	
RESULT:	PaviaCentre, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	91.11%	98.02%	90.0%	[99.44, 97.22, 97.78, 96.11, 96.11, 98.89, 98.89, 97.78, 100.0]%	[97.44, 88.37, 90.0, 80.0, 85.11, 95.24, 94.74, 88.89, 100.0]%	[95.0, 95.0, 90.0, 70.0, 100.0, 100.0, 90.0, 80.0, 100.0]%	[100.0, 97.5, 98.75, 99.38, 95.62, 98.75, 100.0, 100.0, 100.0]%	[100.0, 82.61, 90.0, 93.33, 74.07, 90.91, 100.0, 100.0, 100.0]%	[99.38, 99.36, 98.75, 96.36, 100.0, 100.0, 98.77, 97.56, 100.0]%	||	91.09%	91.11%	98.89%	92.33%	98.91%	
RESULT:	PaviaCentre, 1x1	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	87.78%	97.28%	86.25%	[100.0, 96.67, 97.78, 94.44, 96.11, 98.33, 95.56, 97.22, 99.44]%	[100.0, 84.21, 90.48, 73.68, 82.93, 91.89, 82.61, 86.49, 97.56]%	[100.0, 80.0, 95.0, 70.0, 85.0, 85.0, 95.0, 80.0, 100.0]%	[100.0, 98.75, 98.12, 97.5, 97.5, 100.0, 95.62, 99.38, 99.38]%	[100.0, 88.89, 86.36, 77.78, 80.95, 100.0, 73.08, 94.12, 95.24]%	[100.0, 97.53, 99.37, 96.3, 98.11, 98.16, 99.35, 97.55, 100.0]%	||	87.76%	87.78%	98.47%	88.49%	98.48%	
RESULT:	PaviaCentre, 3x3 flattened	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	11.11%	80.25%	0.0%	[79.44, 80.56, 78.33, 78.33, 85.56, 83.89, 83.33, 81.11, 71.67]%	[24.49, 5.41, 0.0, 13.33, 13.33, 6.45, 16.67, 5.56, 10.53]%	[30.0, 5.0, 0.0, 15.0, 10.0, 5.0, 15.0, 5.0, 15.0]%	[85.62, 90.0, 88.12, 86.25, 95.0, 93.75, 91.88, 90.62, 78.75]%	[20.69, 5.88, 0.0, 12.0, 20.0, 9.09, 18.75, 6.25, 8.11]%	[90.73, 88.34, 87.58, 89.03, 89.41, 88.76, 89.63, 88.41, 88.11]%	||	10.64%	11.11%	88.89%	11.2%	88.89%	
RESULT:	PaviaCentre, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC5), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	92.22%	98.27%	91.25%	[99.44, 97.22, 97.78, 96.67, 97.22, 98.33, 98.33, 99.44, 100.0]%	[97.44, 87.8, 90.0, 86.96, 85.71, 92.31, 92.31, 97.56, 100.0]%	[95.0, 90.0, 90.0, 100.0, 75.0, 90.0, 90.0, 100.0, 100.0]%	[100.0, 98.12, 98.75, 96.25, 100.0, 99.38, 99.38, 99.38, 100.0]%	[100.0, 85.71, 90.0, 76.92, 100.0, 94.74, 94.74, 95.24, 100.0]%	[99.38, 98.74, 98.75, 100.0, 96.97, 98.76, 98.76, 100.0, 100.0]%	||	92.23%	92.22%	99.03%	93.04%	99.04%	
RESULT:	PaviaCentre, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	89.44%	97.65%	88.13%	[99.44, 97.78, 97.22, 96.11, 95.56, 98.33, 98.33, 96.67, 99.44]%	[97.44, 89.47, 88.37, 82.05, 80.95, 92.68, 92.68, 83.33, 97.56]%	[95.0, 85.0, 95.0, 80.0, 85.0, 95.0, 95.0, 75.0, 100.0]%	[100.0, 99.38, 97.5, 98.12, 96.88, 98.75, 98.75, 99.38, 99.38]%	[100.0, 94.44, 82.61, 84.21, 77.27, 90.48, 90.48, 93.75, 95.24]%	[99.38, 98.15, 99.36, 97.52, 98.1, 99.37, 99.37, 96.95, 100.0]%	||	89.39%	89.44%	98.68%	89.83%	98.69%	
RESULT:	PaviaCentre, 1x1	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	86.67%	97.04%	85.0%	[100.0, 96.67, 95.56, 96.67, 95.0, 96.67, 97.22, 95.56, 100.0]%	[100.0, 85.71, 77.78, 83.33, 76.92, 85.71, 86.49, 83.33, 100.0]%	[100.0, 90.0, 70.0, 75.0, 75.0, 90.0, 80.0, 100.0, 100.0]%	[100.0, 97.5, 98.75, 99.38, 97.5, 97.5, 99.38, 95.0, 100.0]%	[100.0, 81.82, 87.5, 93.75, 78.95, 81.82, 94.12, 71.43, 100.0]%	[100.0, 98.73, 96.34, 96.95, 96.89, 98.73, 97.55, 100.0, 100.0]%	||	86.59%	86.67%	98.33%	87.71%	98.36%	
RESULT:	PaviaCentre, 3x3 flattened	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	11.67%	80.37%	0.63%	[78.89, 82.78, 78.33, 82.78, 76.11, 86.67, 77.22, 83.89, 76.67]%	[0.0, 20.51, 4.88, 11.43, 12.24, 14.29, 19.61, 6.45, 12.5]%	[0.0, 20.0, 5.0, 10.0, 15.0, 10.0, 25.0, 5.0, 15.0]%	[88.75, 90.62, 87.5, 91.88, 83.75, 96.25, 83.75, 93.75, 84.38]%	[0.0, 21.05, 4.76, 13.33, 10.34, 25.0, 16.13, 9.09, 10.71]%	[87.65, 90.06, 88.05, 89.09, 88.74, 89.53, 89.93, 88.76, 88.82]%	||	11.32%	11.67%	88.96%	12.27%	88.96%	
RESULT:	PaviaCentre, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC5), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	88.33%	97.41%	86.87%	[99.44, 96.67, 96.11, 96.67, 97.78, 95.56, 96.11, 98.33, 100.0]%	[97.44, 85.0, 83.72, 85.71, 90.48, 77.78, 82.93, 91.89, 100.0]%	[95.0, 85.0, 90.0, 90.0, 95.0, 70.0, 85.0, 85.0, 100.0]%	[100.0, 98.12, 96.88, 97.5, 98.12, 98.75, 97.5, 100.0, 100.0]%	[100.0, 85.0, 78.26, 81.82, 86.36, 87.5, 80.95, 100.0, 100.0]%	[99.38, 98.12, 98.73, 98.73, 99.37, 96.34, 98.11, 98.16, 100.0]%	||	88.33%	88.33%	98.54%	88.88%	98.55%	
RESULT:	PaviaCentre, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	87.78%	97.28%	86.25%	[98.89, 96.67, 96.11, 97.78, 95.0, 97.78, 98.89, 96.11, 98.33]%	[95.24, 85.0, 82.05, 90.48, 75.68, 89.47, 95.24, 82.93, 92.31]%	[100.0, 85.0, 80.0, 95.0, 70.0, 85.0, 100.0, 85.0, 90.0]%	[98.75, 98.12, 98.12, 98.12, 98.12, 99.38, 98.75, 97.5, 99.38]%	[90.91, 85.0, 84.21, 86.36, 82.35, 94.44, 90.91, 80.95, 94.74]%	[100.0, 98.12, 97.52, 99.37, 96.32, 98.15, 100.0, 98.11, 98.76]%	||	87.6%	87.78%	98.47%	87.76%	98.48%	
RESULT:	PaviaCentre, 1x1	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	86.67%	97.04%	85.0%	[100.0, 95.56, 96.11, 96.67, 98.33, 95.56, 93.89, 97.22, 100.0]%	[100.0, 80.95, 80.0, 86.36, 92.31, 80.95, 70.27, 87.8, 100.0]%	[100.0, 85.0, 70.0, 95.0, 90.0, 85.0, 65.0, 90.0, 100.0]%	[100.0, 96.88, 99.38, 96.88, 99.38, 96.88, 97.5, 98.12, 100.0]%	[100.0, 77.27, 93.33, 79.17, 94.74, 77.27, 76.47, 85.71, 100.0]%	[100.0, 98.1, 96.36, 99.36, 98.76, 98.1, 95.71, 98.74, 100.0]%	||	86.52%	86.67%	98.33%	87.11%	98.35%	
RESULT:	PaviaCentre, 3x3 flattened	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	12.22%	80.49%	1.25%	[81.67, 71.11, 83.33, 83.89, 81.11, 78.89, 83.89, 77.78, 82.78]%	[19.51, 7.14, 6.25, 25.64, 15.0, 13.64, 12.12, 0.0, 11.43]%	[20.0, 10.0, 5.0, 25.0, 15.0, 15.0, 10.0, 0.0, 10.0]%	[89.38, 78.75, 93.12, 91.25, 89.38, 86.88, 93.12, 87.5, 91.88]%	[19.05, 5.56, 8.33, 26.32, 15.0, 12.5, 15.38, 0.0, 13.33]%	[89.94, 87.5, 88.69, 90.68, 89.38, 89.1, 89.22, 87.5, 89.09]%	||	12.3%	12.22%	89.03%	12.83%	89.01%	
RESULT:	PaviaCentre, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC5), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	88.89%	97.53%	87.5%	[99.44, 97.78, 98.33, 97.22, 97.22, 95.0, 93.89, 100.0, 98.89]%	[97.44, 88.89, 93.02, 86.49, 88.37, 80.85, 66.67, 100.0, 95.24]%	[95.0, 80.0, 100.0, 80.0, 95.0, 95.0, 55.0, 100.0, 100.0]%	[100.0, 100.0, 98.12, 99.38, 97.5, 95.0, 98.75, 100.0, 98.75]%	[100.0, 100.0, 86.96, 94.12, 82.61, 70.37, 84.62, 100.0, 90.91]%	[99.38, 97.56, 100.0, 97.55, 99.36, 99.35, 94.61, 100.0, 100.0]%	||	88.55%	88.89%	98.61%	89.95%	98.65%	
RESULT:	Pavia, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	81.67%	95.93%	79.38%	[96.11, 92.78, 93.89, 95.56, 100.0, 94.44, 97.22, 93.89, 99.44]%	[82.05, 68.29, 71.79, 78.95, 100.0, 75.0, 88.37, 71.79, 97.56]%	[80.0, 70.0, 70.0, 75.0, 100.0, 75.0, 95.0, 70.0, 100.0]%	[98.12, 95.62, 96.88, 98.12, 100.0, 96.88, 97.5, 96.88, 99.38]%	[84.21, 66.67, 73.68, 83.33, 100.0, 75.0, 82.61, 73.68, 95.24]%	[97.52, 96.23, 96.27, 96.91, 100.0, 96.88, 99.36, 96.27, 100.0]%	||	81.53%	81.67%	97.71%	81.6%	97.72%	
RESULT:	Pavia, 1x1	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	77.78%	95.06%	75.0%	[93.33, 92.78, 91.11, 96.67, 99.44, 92.78, 97.78, 93.33, 98.33]%	[70.0, 66.67, 65.22, 84.21, 97.44, 69.77, 90.0, 62.5, 93.02]%	[70.0, 65.0, 75.0, 80.0, 95.0, 75.0, 90.0, 50.0, 100.0]%	[96.25, 96.25, 93.12, 98.75, 100.0, 95.0, 98.75, 98.75, 98.12]%	[70.0, 68.42, 57.69, 88.89, 100.0, 65.22, 90.0, 83.33, 86.96]%	[96.25, 95.65, 96.75, 97.53, 99.38, 96.82, 98.75, 94.05, 100.0]%	||	77.65%	77.78%	97.22%	78.95%	97.24%	
RESULT:	Pavia, 3x3 flattened	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	11.11%	80.25%	0.0%	[80.0, 79.44, 77.78, 81.67, 82.22, 82.78, 81.67, 77.78, 78.89]%	[0.0, 5.13, 16.67, 5.71, 11.11, 16.22, 19.51, 9.09, 13.64]%	[0.0, 5.0, 20.0, 5.0, 10.0, 15.0, 20.0, 10.0, 15.0]%	[90.0, 88.75, 85.0, 91.25, 91.25, 91.25, 89.38, 86.25, 86.88]%	[0.0, 5.26, 14.29, 6.67, 12.5, 17.65, 19.05, 8.33, 12.5]%	[87.8, 88.2, 89.47, 88.48, 89.02, 89.57, 89.94, 88.46, 89.1]%	||	10.79%	11.11%	88.89%	10.69%	88.9%	
RESULT:	Pavia, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC5), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	82.78%	96.17%	80.62%	[96.11, 93.89, 93.33, 97.78, 99.44, 94.44, 97.22, 93.89, 99.44]%	[82.05, 77.55, 70.0, 88.89, 97.56, 72.22, 87.8, 71.79, 97.44]%	[80.0, 95.0, 70.0, 80.0, 100.0, 65.0, 90.0, 70.0, 95.0]%	[98.12, 93.75, 96.25, 100.0, 99.38, 98.12, 98.12, 96.88, 100.0]%	[84.21, 65.52, 70.0, 100.0, 95.24, 81.25, 85.71, 73.68, 100.0]%	[97.52, 99.34, 96.25, 97.56, 100.0, 95.73, 98.74, 96.27, 99.38]%	||	82.81%	82.78%	97.85%	83.96%	97.87%	
RESULT:	Pavia, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	87.78%	97.28%	86.25%	[95.0, 95.56, 95.56, 98.89, 100.0, 94.44, 98.33, 97.78, 100.0]%	[80.0, 80.95, 78.95, 95.0, 100.0, 75.0, 92.31, 88.89, 100.0]%	[90.0, 85.0, 75.0, 95.0, 100.0, 75.0, 90.0, 80.0, 100.0]%	[95.62, 96.88, 98.12, 99.38, 100.0, 96.88, 99.38, 100.0, 100.0]%	[72.0, 77.27, 83.33, 95.0, 100.0, 75.0, 94.74, 100.0, 100.0]%	[98.71, 98.1, 96.91, 99.38, 100.0, 96.88, 98.76, 97.56, 100.0]%	||	87.9%	87.78%	98.47%	88.59%	98.48%	
RESULT:	Pavia, 1x1	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	77.78%	95.06%	75.0%	[91.67, 92.78, 92.78, 98.89, 100.0, 93.33, 94.44, 93.33, 98.33]%	[57.14, 69.77, 64.86, 94.74, 100.0, 68.42, 78.26, 72.73, 92.31]%	[50.0, 75.0, 60.0, 90.0, 100.0, 65.0, 90.0, 80.0, 90.0]%	[96.88, 95.0, 96.88, 100.0, 100.0, 96.88, 95.0, 95.0, 99.38]%	[66.67, 65.22, 70.59, 100.0, 100.0, 72.22, 69.23, 66.67, 94.74]%	[93.94, 96.82, 95.09, 98.77, 100.0, 95.68, 98.7, 97.44, 98.76]%	||	77.58%	77.78%	97.22%	78.37%	97.24%	
RESULT:	Pavia, 3x3 flattened	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	8.33%	79.63%	-3.12%	[73.89, 80.0, 81.11, 73.89, 84.44, 81.67, 78.89, 81.67, 81.11]%	[4.08, 18.18, 15.0, 14.55, 6.67, 5.71, 5.0, 0.0, 0.0]%	[5.0, 20.0, 15.0, 20.0, 5.0, 5.0, 5.0, 0.0, 0.0]%	[82.5, 87.5, 89.38, 80.62, 94.38, 91.25, 88.12, 91.88, 91.25]%	[3.45, 16.67, 15.0, 11.43, 10.0, 6.67, 5.0, 0.0, 0.0]%	[87.42, 89.74, 89.38, 88.97, 88.82, 88.48, 88.12, 88.02, 87.95]%	||	7.69%	8.33%	88.54%	7.58%	88.55%	
RESULT:	Pavia, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC5), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	78.89%	95.31%	76.25%	[93.33, 95.0, 89.44, 98.89, 100.0, 95.56, 93.89, 91.67, 100.0]%	[70.0, 78.05, 48.65, 95.0, 100.0, 78.95, 74.42, 63.41, 100.0]%	[70.0, 80.0, 45.0, 95.0, 100.0, 75.0, 80.0, 65.0, 100.0]%	[96.25, 96.88, 95.0, 99.38, 100.0, 98.12, 95.62, 95.0, 100.0]%	[70.0, 76.19, 52.94, 95.0, 100.0, 83.33, 69.57, 61.9, 100.0]%	[96.25, 97.48, 93.25, 99.38, 100.0, 96.91, 97.45, 95.6, 100.0]%	||	78.72%	78.89%	97.36%	78.77%	97.37%	
RESULT:	Pavia, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	82.22%	96.05%	80.0%	[95.56, 93.89, 93.89, 99.44, 99.44, 94.44, 97.22, 92.78, 97.78]%	[82.61, 71.79, 68.57, 97.56, 97.44, 76.19, 87.18, 69.77, 88.89]%	[95.0, 70.0, 60.0, 100.0, 95.0, 80.0, 85.0, 75.0, 80.0]%	[95.62, 96.88, 98.12, 99.38, 100.0, 96.25, 98.75, 95.0, 100.0]%	[73.08, 73.68, 80.0, 95.24, 100.0, 72.73, 89.47, 65.22, 100.0]%	[99.35, 96.27, 95.15, 100.0, 99.38, 97.47, 98.14, 96.82, 97.56]%	||	82.22%	82.22%	97.78%	83.27%	97.79%	
RESULT:	Pavia, 1x1	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	75.0%	94.44%	71.88%	[91.11, 91.67, 92.22, 95.56, 98.89, 91.67, 93.89, 95.0, 100.0]%	[57.89, 61.54, 63.16, 81.82, 95.24, 59.46, 74.42, 76.92, 100.0]%	[55.0, 60.0, 60.0, 90.0, 100.0, 55.0, 80.0, 75.0, 100.0]%	[95.62, 95.62, 96.25, 96.25, 98.75, 96.25, 95.62, 97.5, 100.0]%	[61.11, 63.16, 66.67, 75.0, 90.91, 64.71, 69.57, 78.95, 100.0]%	[94.44, 95.03, 95.06, 98.72, 100.0, 94.48, 97.45, 96.89, 100.0]%	||	74.49%	75.0%	96.88%	74.45%	96.9%	
RESULT:	Pavia, 3x3 flattened	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	13.89%	80.86%	3.13%	[85.56, 82.78, 83.89, 78.33, 85.0, 73.33, 76.11, 82.22, 80.56]%	[13.33, 11.43, 12.12, 9.3, 6.9, 17.24, 0.0, 20.0, 28.57]%	[10.0, 10.0, 10.0, 10.0, 5.0, 25.0, 0.0, 20.0, 35.0]%	[95.0, 91.88, 93.12, 86.88, 95.0, 79.38, 85.62, 90.0, 86.25]%	[20.0, 13.33, 15.38, 8.7, 11.11, 13.16, 0.0, 20.0, 24.14]%	[89.41, 89.09, 89.22, 88.54, 88.89, 89.44, 87.26, 90.0, 91.39]%	||	13.21%	13.89%	89.24%	13.98%	89.25%	
RESULT:	Pavia, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC5), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	84.44%	96.54%	82.5%	[96.11, 95.0, 96.11, 96.11, 100.0, 91.67, 96.67, 97.78, 99.44]%	[81.08, 75.68, 82.05, 82.93, 100.0, 66.67, 85.71, 89.47, 97.56]%	[75.0, 70.0, 80.0, 85.0, 100.0, 75.0, 90.0, 85.0, 100.0]%	[98.75, 98.12, 98.12, 97.5, 100.0, 93.75, 97.5, 99.38, 99.38]%	[88.24, 82.35, 84.21, 80.95, 100.0, 60.0, 81.82, 94.44, 95.24]%	[96.93, 96.32, 97.52, 98.11, 100.0, 96.77, 98.73, 98.15, 100.0]%	||	84.57%	84.44%	98.06%	85.25%	98.06%	
RESULT:	Pavia, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	86.11%	96.91%	84.38%	[98.89, 92.78, 94.44, 97.78, 100.0, 94.44, 98.89, 95.0, 100.0]%	[95.0, 68.29, 76.19, 89.47, 100.0, 75.0, 95.0, 76.92, 100.0]%	[95.0, 70.0, 80.0, 85.0, 100.0, 75.0, 95.0, 75.0, 100.0]%	[99.38, 95.62, 96.25, 99.38, 100.0, 96.88, 99.38, 97.5, 100.0]%	[95.0, 66.67, 72.73, 94.44, 100.0, 75.0, 95.0, 78.95, 100.0]%	[99.38, 96.23, 97.47, 98.15, 100.0, 96.88, 99.38, 96.89, 100.0]%	||	86.21%	86.11%	98.26%	86.42%	98.26%	
RESULT:	Pavia, 1x1	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	78.89%	95.31%	76.25%	[93.33, 88.89, 95.0, 96.67, 100.0, 92.78, 96.11, 95.56, 99.44]%	[68.42, 58.33, 76.92, 84.21, 100.0, 60.61, 82.05, 81.82, 97.56]%	[65.0, 70.0, 75.0, 80.0, 100.0, 50.0, 80.0, 90.0, 100.0]%	[96.88, 91.25, 97.5, 98.75, 100.0, 98.12, 98.12, 96.25, 99.38]%	[72.22, 50.0, 78.95, 88.89, 100.0, 76.92, 84.21, 75.0, 95.24]%	[95.68, 96.05, 96.89, 97.53, 100.0, 94.01, 97.52, 98.72, 100.0]%	||	78.88%	78.89%	97.36%	80.16%	97.38%	
RESULT:	Pavia, 3x3 flattened	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	9.44%	79.88%	-1.87%	[81.11, 80.0, 76.11, 78.33, 81.67, 85.0, 80.56, 76.11, 80.0]%	[15.0, 10.0, 12.24, 13.33, 15.38, 12.9, 0.0, 0.0, 5.26]%	[15.0, 10.0, 15.0, 15.0, 15.0, 10.0, 0.0, 0.0, 5.0]%	[89.38, 88.75, 83.75, 86.25, 90.0, 94.38, 90.62, 85.62, 89.38]%	[15.0, 10.0, 10.34, 12.0, 15.79, 18.18, 0.0, 0.0, 5.56]%	[89.38, 88.75, 88.74, 89.03, 89.44, 89.35, 87.88, 87.26, 88.27]%	||	9.35%	9.44%	88.68%	9.65%	88.68%	
RESULT:	Pavia, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC5), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	77.78%	95.06%	75.0%	[95.0, 93.33, 90.0, 97.22, 100.0, 93.89, 94.44, 91.67, 100.0]%	[75.68, 71.43, 55.0, 88.37, 100.0, 70.27, 77.27, 59.46, 100.0]%	[70.0, 75.0, 55.0, 95.0, 100.0, 65.0, 85.0, 55.0, 100.0]%	[98.12, 95.62, 94.38, 97.5, 100.0, 97.5, 95.62, 96.25, 100.0]%	[82.35, 68.18, 55.0, 82.61, 100.0, 76.47, 70.83, 64.71, 100.0]%	[96.32, 96.84, 94.38, 99.36, 100.0, 95.71, 98.08, 94.48, 100.0]%	||	77.5%	77.78%	97.22%	77.79%	97.24%	
RESULT:	Pavia, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	85.0%	96.67%	83.12%	[95.56, 95.0, 95.0, 97.78, 100.0, 96.11, 97.22, 94.44, 98.89]%	[80.0, 80.0, 76.92, 90.48, 100.0, 78.79, 87.8, 75.0, 95.0]%	[80.0, 90.0, 75.0, 95.0, 100.0, 65.0, 90.0, 75.0, 95.0]%	[97.5, 95.62, 97.5, 98.12, 100.0, 100.0, 98.12, 96.88, 99.38]%	[80.0, 72.0, 78.95, 86.36, 100.0, 100.0, 85.71, 75.0, 95.0]%	[97.5, 98.71, 96.89, 99.37, 100.0, 95.81, 98.74, 96.88, 99.38]%	||	84.89%	85.0%	98.12%	85.89%	98.14%	
RESULT:	Pavia, 1x1	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	78.33%	95.19%	75.63%	[93.89, 93.33, 90.56, 94.44, 99.44, 96.11, 96.67, 92.22, 100.0]%	[71.79, 70.0, 54.05, 79.17, 97.44, 80.0, 85.71, 65.0, 100.0]%	[70.0, 70.0, 50.0, 95.0, 95.0, 70.0, 90.0, 65.0, 100.0]%	[96.88, 96.25, 95.62, 94.38, 100.0, 99.38, 97.5, 95.62, 100.0]%	[73.68, 70.0, 58.82, 67.86, 100.0, 93.33, 81.82, 65.0, 100.0]%	[96.27, 96.25, 93.87, 99.34, 99.38, 96.36, 98.73, 95.62, 100.0]%	||	78.13%	78.33%	97.29%	78.95%	97.31%	
RESULT:	Pavia, 3x3 flattened	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	10.56%	80.12%	-0.62%	[70.56, 81.67, 88.89, 77.78, 78.33, 80.0, 73.89, 86.11, 83.89]%	[7.02, 10.81, 23.08, 13.04, 4.88, 10.0, 7.84, 7.41, 17.14]%	[10.0, 10.0, 15.0, 15.0, 5.0, 10.0, 10.0, 5.0, 15.0]%	[78.12, 90.62, 98.12, 85.62, 87.5, 88.75, 81.88, 96.25, 92.5]%	[5.41, 11.76, 50.0, 11.54, 4.76, 10.0, 6.45, 14.29, 20.0]%	[87.41, 88.96, 90.23, 88.96, 88.05, 88.75, 87.92, 89.02, 89.7]%	||	11.25%	10.56%	88.82%	14.91%	88.78%	
RESULT:	Pavia, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC5), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	81.67%	95.93%	79.38%	[94.44, 93.89, 94.44, 97.22, 100.0, 95.0, 94.44, 93.89, 100.0]%	[72.22, 74.42, 76.19, 86.49, 100.0, 78.05, 73.68, 74.42, 100.0]%	[65.0, 80.0, 80.0, 80.0, 100.0, 80.0, 70.0, 80.0, 100.0]%	[98.12, 95.62, 96.25, 99.38, 100.0, 96.88, 97.5, 95.62, 100.0]%	[81.25, 69.57, 72.73, 94.12, 100.0, 76.19, 77.78, 69.57, 100.0]%	[95.73, 97.45, 97.47, 97.55, 100.0, 97.48, 96.3, 97.45, 100.0]%	||	81.72%	81.67%	97.71%	82.35%	97.71%	
RESULT:	IndianPines, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	74.17%	95.69%	71.82%	[91.25, 93.33, 95.83, 97.5, 99.17, 99.58, 94.58, 93.33, 94.17, 99.17, 95.83, 94.58]%	[48.78, 55.56, 77.27, 83.33, 95.24, 97.44, 68.29, 57.89, 68.18, 94.74, 77.27, 64.86]%	[50.0, 50.0, 85.0, 75.0, 100.0, 95.0, 70.0, 55.0, 75.0, 90.0, 85.0, 60.0]%	[95.0, 97.27, 96.82, 99.55, 99.09, 100.0, 96.82, 96.82, 95.91, 100.0, 96.82, 97.73]%	[47.62, 62.5, 70.83, 93.75, 90.91, 100.0, 66.67, 61.11, 62.5, 100.0, 70.83, 70.59]%	[95.43, 95.54, 98.61, 97.77, 100.0, 99.55, 97.26, 95.95, 97.69, 99.1, 98.61, 96.41]%	||	74.07%	74.17%	97.65%	74.78%	97.66%	
RESULT:	IndianPines, 1x1	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	67.08%	94.51%	64.09%	[91.67, 91.67, 90.0, 97.92, 96.67, 99.17, 94.17, 90.42, 91.25, 100.0, 97.5, 93.75]%	[50.0, 52.38, 40.0, 86.49, 81.82, 95.0, 66.67, 34.29, 46.15, 100.0, 86.96, 57.14]%	[50.0, 55.0, 40.0, 80.0, 90.0, 95.0, 70.0, 30.0, 45.0, 100.0, 100.0, 50.0]%	[95.45, 95.0, 94.55, 99.55, 97.27, 99.55, 96.36, 95.91, 95.45, 100.0, 97.27, 97.73]%	[50.0, 50.0, 40.0, 94.12, 75.0, 95.0, 63.64, 40.0, 47.37, 100.0, 76.92, 66.67]%	[95.45, 95.87, 94.55, 98.21, 99.07, 99.55, 97.25, 93.78, 95.02, 100.0, 100.0, 95.56]%	||	66.41%	67.08%	97.01%	66.56%	97.03%	
RESULT:	IndianPines, 3x3 flattened	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	23.33%	87.22%	16.36%	[86.25, 87.08, 86.67, 88.33, 90.0, 88.33, 87.08, 87.08, 88.75, 86.67, 85.42, 85.0]%	[26.67, 20.51, 23.81, 22.22, 33.33, 22.22, 24.39, 16.22, 27.03, 23.81, 25.53, 14.29]%	[30.0, 20.0, 25.0, 20.0, 30.0, 20.0, 25.0, 15.0, 25.0, 25.0, 30.0, 15.0]%	[91.36, 93.18, 92.27, 94.55, 95.45, 94.55, 92.73, 93.64, 94.55, 92.27, 90.45, 91.36]%	[24.0, 21.05, 22.73, 25.0, 37.5, 25.0, 23.81, 17.65, 29.41, 22.73, 22.22, 13.64]%	[93.49, 92.76, 93.12, 92.86, 93.75, 92.86, 93.15, 92.38, 93.27, 93.12, 93.43, 92.2]%	||	23.34%	23.33%	93.03%	23.73%	93.03%	
RESULT:	IndianPines, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC5), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	72.92%	95.49%	70.45%	[92.92, 92.08, 95.83, 96.25, 97.92, 99.58, 93.33, 92.92, 92.92, 99.58, 96.25, 96.25]%	[56.41, 53.66, 78.26, 79.07, 87.18, 97.44, 60.0, 51.43, 56.41, 97.56, 78.05, 75.68]%	[55.0, 55.0, 90.0, 85.0, 85.0, 95.0, 60.0, 45.0, 55.0, 100.0, 80.0, 70.0]%	[96.36, 95.45, 96.36, 97.27, 99.09, 100.0, 96.36, 97.27, 96.36, 99.55, 97.73, 98.64]%	[57.89, 52.38, 69.23, 73.91, 89.47, 100.0, 60.0, 60.0, 57.89, 95.24, 76.19, 82.35]%	[95.93, 95.89, 99.07, 98.62, 98.64, 99.55, 96.36, 95.11, 95.93, 100.0, 98.17, 97.31]%	||	72.59%	72.92%	97.54%	72.88%	97.55%	
RESULT:	IndianPines, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	78.33%	96.39%	76.36%	[92.92, 94.58, 95.83, 97.5, 97.5, 99.17, 95.83, 94.17, 96.25, 99.17, 97.92, 95.83]%	[48.48, 64.86, 76.19, 84.21, 84.21, 95.24, 75.0, 68.18, 79.07, 95.0, 87.18, 77.27]%	[40.0, 60.0, 80.0, 80.0, 80.0, 100.0, 75.0, 75.0, 85.0, 95.0, 85.0, 85.0]%	[97.73, 97.73, 97.27, 99.09, 99.09, 99.09, 97.73, 95.91, 97.27, 99.55, 99.09, 96.82]%	[61.54, 70.59, 72.73, 88.89, 88.89, 90.91, 75.0, 62.5, 73.91, 95.0, 89.47, 70.83]%	[94.71, 96.41, 98.17, 98.2, 98.2, 100.0, 97.73, 97.69, 98.62, 99.55, 98.64, 98.61]%	||	77.91%	78.33%	98.03%	78.36%	98.04%	
RESULT:	IndianPines, 1x1	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	63.75%	93.96%	60.45%	[92.92, 90.0, 94.58, 97.08, 95.0, 98.75, 92.92, 87.5, 92.08, 98.33, 95.83, 92.5]%	[54.05, 42.86, 62.86, 80.0, 73.91, 93.02, 62.22, 34.78, 45.71, 89.47, 78.26, 43.75]%	[50.0, 45.0, 55.0, 70.0, 85.0, 100.0, 70.0, 40.0, 40.0, 85.0, 90.0, 35.0]%	[96.82, 94.09, 98.18, 99.55, 95.91, 98.64, 95.0, 91.82, 96.82, 99.55, 96.36, 97.73]%	[58.82, 40.91, 73.33, 93.33, 65.38, 86.96, 56.0, 30.77, 53.33, 94.44, 69.23, 58.33]%	[95.52, 94.95, 96.0, 97.33, 98.6, 100.0, 97.21, 94.39, 94.67, 98.65, 99.07, 94.3]%	||	63.41%	63.75%	96.7%	65.07%	96.72%	
RESULT:	IndianPines, 3x3 flattened	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	19.17%	86.53%	11.82%	[86.25, 90.42, 86.67, 87.08, 82.08, 82.92, 87.92, 86.67, 88.75, 86.25, 87.5, 85.83]%	[19.51, 14.81, 11.11, 24.39, 8.51, 22.64, 12.12, 20.0, 37.21, 5.71, 28.57, 19.05]%	[20.0, 10.0, 10.0, 25.0, 10.0, 30.0, 10.0, 20.0, 40.0, 5.0, 30.0, 20.0]%	[92.27, 97.73, 93.64, 92.73, 88.64, 87.73, 95.0, 92.73, 93.18, 93.64, 92.73, 91.82]%	[19.05, 28.57, 12.5, 23.81, 7.41, 18.18, 15.38, 20.0, 34.78, 6.67, 27.27, 18.18]%	[92.69, 92.27, 91.96, 93.15, 91.55, 93.24, 92.07, 92.73, 94.47, 91.56, 93.58, 92.66]%	||	18.64%	19.17%	92.65%	19.32%	92.66%	
RESULT:	IndianPines, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC5), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	70.42%	95.07%	67.73%	[87.5, 92.5, 94.17, 98.75, 98.75, 100.0, 93.33, 89.58, 92.92, 100.0, 97.5, 95.83]%	[42.31, 47.06, 56.25, 92.68, 92.31, 100.0, 60.0, 46.81, 48.48, 100.0, 85.71, 75.0]%	[55.0, 40.0, 45.0, 95.0, 90.0, 100.0, 60.0, 55.0, 40.0, 100.0, 90.0, 75.0]%	[90.45, 97.27, 98.64, 99.09, 99.55, 100.0, 96.36, 92.73, 97.73, 100.0, 98.18, 97.73]%	[34.38, 57.14, 75.0, 90.48, 94.74, 100.0, 60.0, 40.74, 61.54, 100.0, 81.82, 75.0]%	[95.67, 94.69, 95.18, 99.54, 99.1, 100.0, 96.36, 95.77, 94.71, 100.0, 99.08, 97.73]%	||	70.55%	70.42%	97.31%	72.57%	97.32%	
RESULT:	IndianPines, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	69.58%	94.93%	66.82%	[90.83, 92.08, 94.58, 95.42, 99.17, 99.58, 94.17, 90.42, 88.75, 99.58, 96.25, 98.33]%	[54.17, 45.71, 66.67, 71.79, 95.24, 97.44, 63.16, 41.03, 37.21, 97.56, 76.92, 89.47]%	[65.0, 40.0, 65.0, 70.0, 100.0, 95.0, 60.0, 40.0, 40.0, 100.0, 75.0, 85.0]%	[93.18, 96.82, 97.27, 97.73, 99.09, 100.0, 97.27, 95.0, 93.18, 99.55, 98.18, 99.55]%	[46.43, 53.33, 68.42, 73.68, 90.91, 100.0, 66.67, 42.11, 34.78, 95.24, 78.95, 94.44]%	[96.7, 94.67, 96.83, 97.29, 100.0, 99.55, 96.4, 94.57, 94.47, 100.0, 97.74, 98.65]%	||	69.7%	69.58%	97.23%	70.41%	97.24%	
RESULT:	IndianPines, 1x1	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	67.92%	94.65%	65.0%	[89.17, 92.08, 92.08, 95.42, 97.92, 100.0, 94.17, 90.0, 91.67, 100.0, 97.5, 95.83]%	[38.1, 45.71, 53.66, 76.6, 87.8, 100.0, 65.0, 36.84, 50.0, 100.0, 85.71, 70.59]%	[40.0, 40.0, 55.0, 90.0, 90.0, 100.0, 65.0, 35.0, 50.0, 100.0, 90.0, 60.0]%	[93.64, 96.82, 95.45, 95.91, 98.64, 100.0, 96.82, 95.0, 95.45, 100.0, 98.18, 99.09]%	[36.36, 53.33, 52.38, 66.67, 85.71, 100.0, 65.0, 38.89, 50.0, 100.0, 81.82, 85.71]%	[94.5, 94.67, 95.89, 99.06, 99.09, 100.0, 96.82, 94.14, 95.45, 100.0, 99.08, 96.46]%	||	67.5%	67.92%	97.08%	67.99%	97.1%	
RESULT:	IndianPines, 3x3 flattened	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	22.5%	87.08%	15.45%	[81.67, 85.83, 87.5, 92.08, 85.0, 88.75, 86.25, 87.5, 91.25, 84.17, 88.75, 86.25]%	[12.0, 5.56, 42.31, 51.28, 21.74, 12.9, 10.81, 21.05, 27.59, 9.52, 30.77, 19.51]%	[15.0, 5.0, 55.0, 50.0, 25.0, 10.0, 10.0, 20.0, 20.0, 10.0, 30.0, 20.0]%	[87.73, 93.18, 90.45, 95.91, 90.45, 95.91, 93.18, 93.64, 97.73, 90.91, 94.09, 92.27]%	[10.0, 6.25, 34.38, 52.63, 19.23, 18.18, 11.76, 22.22, 44.44, 9.09, 31.58, 19.05]%	[91.9, 91.52, 95.67, 95.48, 92.99, 92.14, 91.93, 92.79, 93.07, 91.74, 93.67, 92.69]%	||	22.09%	22.5%	92.95%	23.23%	92.97%	
RESULT:	IndianPines, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC5), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	71.25%	95.21%	68.64%	[87.92, 93.75, 96.25, 97.92, 98.33, 99.58, 91.25, 93.33, 90.42, 99.17, 98.33, 96.25]%	[38.3, 51.61, 78.05, 87.18, 90.48, 97.56, 48.78, 61.9, 41.03, 95.0, 90.0, 75.68]%	[45.0, 40.0, 80.0, 85.0, 95.0, 100.0, 50.0, 65.0, 40.0, 95.0, 90.0, 70.0]%	[91.82, 98.64, 97.73, 99.09, 98.64, 99.55, 95.0, 95.91, 95.0, 99.55, 99.09, 98.64]%	[33.33, 72.73, 76.19, 89.47, 86.36, 95.24, 47.62, 59.09, 42.11, 95.0, 90.0, 82.35]%	[94.84, 94.76, 98.17, 98.64, 99.54, 100.0, 95.43, 96.79, 94.57, 99.55, 99.09, 97.31]%	||	71.3%	71.25%	97.39%	72.46%	97.39%	
RESULT:	IndianPines, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	67.5%	94.58%	64.55%	[93.33, 93.33, 95.0, 96.67, 97.08, 98.33, 87.08, 92.92, 90.42, 99.17, 96.67, 95.0]%	[57.89, 61.9, 68.42, 80.95, 85.11, 88.89, 36.73, 54.05, 41.03, 94.74, 80.0, 64.71]%	[55.0, 65.0, 65.0, 85.0, 100.0, 80.0, 45.0, 50.0, 40.0, 90.0, 80.0, 55.0]%	[96.82, 95.91, 97.73, 97.73, 96.82, 100.0, 90.91, 96.82, 95.0, 100.0, 98.18, 98.64]%	[61.11, 59.09, 72.22, 77.27, 74.07, 100.0, 31.03, 58.82, 42.11, 100.0, 80.0, 78.57]%	[95.95, 96.79, 96.85, 98.62, 100.0, 98.21, 94.79, 95.52, 94.57, 99.1, 98.18, 96.02]%	||	67.87%	67.5%	97.05%	69.53%	97.05%	
RESULT:	IndianPines, 1x1	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	62.08%	93.68%	58.64%	[88.75, 92.92, 91.67, 98.75, 94.58, 100.0, 91.67, 87.08, 92.08, 98.33, 97.08, 91.25]%	[37.21, 54.05, 50.0, 92.31, 68.29, 100.0, 50.0, 34.04, 42.42, 90.48, 82.93, 43.24]%	[40.0, 50.0, 50.0, 90.0, 70.0, 100.0, 50.0, 40.0, 35.0, 95.0, 85.0, 40.0]%	[93.18, 96.82, 95.45, 99.55, 96.82, 100.0, 95.45, 91.36, 97.27, 98.64, 98.18, 95.91]%	[34.78, 58.82, 50.0, 94.74, 66.67, 100.0, 50.0, 29.63, 53.85, 86.36, 80.95, 47.06]%	[94.47, 95.52, 95.45, 99.1, 97.26, 100.0, 95.45, 94.37, 94.27, 99.54, 98.63, 94.62]%	||	62.08%	62.08%	96.55%	62.74%	96.56%	
RESULT:	IndianPines, 3x3 flattened	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	19.58%	86.6%	12.27%	[86.25, 84.17, 85.83, 84.58, 88.75, 85.42, 83.33, 90.0, 88.75, 87.08, 86.25, 88.75]%	[15.38, 24.0, 19.05, 9.76, 22.86, 18.6, 13.04, 25.0, 22.86, 11.43, 19.51, 34.15]%	[15.0, 30.0, 20.0, 10.0, 20.0, 20.0, 15.0, 20.0, 20.0, 10.0, 20.0, 35.0]%	[92.73, 89.09, 91.82, 91.36, 95.0, 91.36, 89.55, 96.36, 95.0, 94.09, 92.27, 93.64]%	[15.79, 20.0, 18.18, 9.52, 26.67, 17.39, 11.54, 33.33, 26.67, 13.33, 19.05, 33.33]%	[92.31, 93.33, 92.66, 91.78, 92.89, 92.63, 92.06, 92.98, 92.89, 92.0, 92.69, 94.06]%	||	19.64%	19.58%	92.69%	20.4%	92.69%	
RESULT:	IndianPines, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC5), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	78.33%	96.39%	76.36%	[93.33, 96.67, 97.08, 98.33, 98.33, 99.58, 92.08, 94.17, 94.58, 99.17, 97.92, 95.42]%	[46.67, 78.95, 84.44, 88.89, 90.0, 97.56, 59.57, 66.67, 64.86, 95.24, 87.8, 73.17]%	[35.0, 75.0, 95.0, 80.0, 90.0, 100.0, 70.0, 70.0, 60.0, 100.0, 90.0, 75.0]%	[98.64, 98.64, 97.27, 100.0, 99.09, 99.55, 94.09, 96.36, 97.73, 99.09, 98.64, 97.27]%	[70.0, 83.33, 76.0, 100.0, 90.0, 95.24, 51.85, 63.64, 70.59, 90.91, 85.71, 71.43]%	[94.35, 97.75, 99.53, 98.21, 99.09, 100.0, 97.18, 97.25, 96.41, 100.0, 99.09, 97.72]%	||	77.82%	78.33%	98.03%	79.06%	98.05%	
RESULT:	IndianPines, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	74.58%	95.76%	72.27%	[91.67, 94.17, 92.92, 98.33, 97.5, 98.33, 94.17, 95.0, 92.92, 99.58, 97.92, 96.67]%	[52.38, 63.16, 63.83, 88.89, 84.21, 90.91, 61.11, 68.42, 56.41, 97.44, 87.8, 80.95]%	[55.0, 60.0, 75.0, 80.0, 80.0, 100.0, 55.0, 65.0, 55.0, 95.0, 90.0, 85.0]%	[95.0, 97.27, 94.55, 100.0, 99.09, 98.18, 97.73, 97.73, 96.36, 100.0, 98.64, 97.73]%	[50.0, 66.67, 55.56, 100.0, 88.89, 83.33, 68.75, 72.22, 57.89, 100.0, 85.71, 77.27]%	[95.87, 96.4, 97.65, 98.21, 98.2, 100.0, 95.98, 96.85, 95.93, 99.55, 99.09, 98.62]%	||	74.63%	74.58%	97.69%	75.52%	97.7%	
RESULT:	IndianPines, 1x1	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	63.33%	93.89%	60.0%	[85.83, 91.25, 93.75, 98.33, 96.67, 99.58, 91.25, 88.33, 91.67, 98.75, 97.92, 93.33]%	[34.62, 32.26, 61.54, 90.48, 80.95, 97.56, 48.78, 26.32, 47.37, 92.31, 87.8, 55.56]%	[45.0, 25.0, 60.0, 95.0, 85.0, 100.0, 50.0, 25.0, 45.0, 90.0, 90.0, 50.0]%	[89.55, 97.27, 96.82, 98.64, 97.73, 99.55, 95.0, 94.09, 95.91, 99.55, 98.64, 97.27]%	[28.12, 45.45, 63.16, 86.36, 77.27, 95.24, 47.62, 27.78, 50.0, 94.74, 85.71, 62.5]%	[94.71, 93.45, 96.38, 99.54, 98.62, 100.0, 95.43, 93.24, 95.05, 99.1, 99.09, 95.54]%	||	62.96%	63.33%	96.67%	63.66%	96.68%	
RESULT:	IndianPines, 3x3 flattened	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC8), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	19.58%	86.6%	12.27%	[87.5, 85.83, 87.92, 87.08, 82.92, 84.17, 89.58, 86.25, 89.17, 86.25, 86.25, 86.25]%	[21.05, 22.73, 12.12, 6.06, 16.33, 26.92, 13.79, 23.26, 27.78, 19.51, 23.26, 15.38]%	[20.0, 25.0, 10.0, 5.0, 20.0, 35.0, 10.0, 25.0, 25.0, 20.0, 25.0, 15.0]%	[93.64, 91.36, 95.0, 94.55, 88.64, 88.64, 96.82, 91.82, 95.0, 92.27, 91.82, 92.73]%	[22.22, 20.83, 15.38, 7.69, 13.79, 21.88, 22.22, 21.74, 31.25, 19.05, 21.74, 15.79]%	[92.79, 93.06, 92.07, 91.63, 92.42, 93.75, 92.21, 93.09, 93.3, 92.69, 93.09, 92.31]%	||	19.02%	19.58%	92.69%	19.47%	92.7%	
RESULT:	IndianPines, 3x3	(loss = DecisionTree.util.entropy, min_samples_leaf = 4, min_purity_increase = 0.01, min_loss_at_leaf = 0.3)	(initCondition = DecisionTree._startAtCenter(), ontology = Ontology(DecisionTree.ModalLogic.Interval2D,RCC5), useRelationId = true, useRelationAll = false, test_operators = DecisionTree.ModalLogic.TestOperator[DecisionTree.ModalLogic._TestOpGeq(), DecisionTree.ModalLogic._TestOpLeq(), DecisionTree.ModalLogic._TestOpGeqSoft(0.6), DecisionTree.ModalLogic._TestOpLeqSoft(0.6), DecisionTree.ModalLogic._TestOpGeqSoft(0.7), DecisionTree.ModalLogic._TestOpLeqSoft(0.7), DecisionTree.ModalLogic._TestOpGeqSoft(0.8), DecisionTree.ModalLogic._TestOpLeqSoft(0.8), DecisionTree.ModalLogic._TestOpGeqSoft(0.9), DecisionTree.ModalLogic._TestOpLeqSoft(0.9)])	1.0	|	75.0%	95.83%	72.73%	[91.25, 92.92, 95.0, 96.67, 98.75, 99.58, 96.25, 91.25, 94.17, 100.0, 97.92, 96.25]%	[48.78, 58.54, 66.67, 78.95, 93.02, 97.56, 79.07, 51.16, 63.16, 100.0, 87.18, 75.68]%	[50.0, 60.0, 60.0, 75.0, 100.0, 100.0, 85.0, 55.0, 60.0, 100.0, 85.0, 70.0]%	[95.0, 95.91, 98.18, 98.64, 98.64, 99.55, 97.27, 94.55, 97.27, 100.0, 99.09, 98.64]%	[47.62, 57.14, 75.0, 83.33, 86.96, 95.24, 73.91, 47.83, 66.67, 100.0, 89.47, 82.35]%	[95.43, 96.35, 96.43, 97.75, 100.0, 100.0, 98.62, 95.85, 96.4, 100.0, 98.64, 97.31]%	||	74.98%	75.0%	97.73%	75.46%	97.73%	
