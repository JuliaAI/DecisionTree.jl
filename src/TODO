✔	TODO const MatricialDomain{T,N} = AbstractArray{T,N} end @done (21-01-15 14:55)
✔ perhaps the domain should not be 20x3x3 but 3x3x20, because Julia is column-first @done (21-01-15 14:55)
☐	Use view instead of slicing
☐ Generalize World as a tuple of parameters ( https://stackoverflow.com/questions/40160120/generic-constructors-for-subtypes-of-an-abstract-type )
☐ use staticArrays for small domains (matrices/vectors) https://github.com/JuliaArrays/StaticArrays.jl
		X = OntologicalDataset(IntervalOntology,Array{SMatrix{3,3,Int},2}(undef, 20, 10))

☐ Try relationSet as set
	relationSet :: Iterable{<:AbstractRelation}
	const Iterable{N} = Union{AbstractVector{N},AbstractSet{N}}
☐ An ontology interpreted over an N-dimensional domain gives rise to a Kripke model/frame,
	but one can generalize for a Kripke model/frame in graph form.
		abstract type AbstractKripkeFrame end
		Generic Kripke frame: worlds & relations
		struct KripkeFrame{T} <: AbstractKripkeFrame{T}
☐ Also handle categorical features (for now, we only handle numerical features)



# Timings history
# n_samp = 50, N = 3
# 484.136 μs (4368 allocations: 256.34 KiB)
# 517.471 μs (4368 allocations: 256.38 KiB)
# -- Swap dimensions to (X,Y,Z,...) x n_samples x n_variables --
# 210.019 μs (4205 allocations: 252.56 KiB)
# -- Add the use of Sf
# 214.959 μs (4210 allocations: 253.44 KiB)
# -- Remove the use of Sf
# n_samp = 100, N = 50
# 63.539 ms (1126468 allocations: 97.22 MiB)
# -- Add the use of Sf
# 63.749 ms (1126469 allocations: 97.22 MiB)
# n_samp = 200, N = 50
# 129.573 ms (2253001 allocations: 194.44 MiB)
# -- Remove the use of Sf
# 135.053 ms (2253000 allocations: 194.44 MiB)
# -- Add the use of Sf
# 133.009 ms (2253001 allocations: 194.44 MiB)
# -- Switched from WorldSet to WorldVector
# 131.344 ms (2251791 allocations: 194.32 MiB)
# Well, the difference is subtle
# 130.677 ms (2251632 allocations: 194.31 MiB)
# -- Actually, I've made a mistake (I was updating Sf[i] insfead of S[...])
# 131.131 ms (2251646 allocations: 194.31 MiB)
# -- Add two new datasets "Eduard-5" and "Eduard-10"
