✔	TODO const MatricialDomain{T,N} = AbstractArray{T,N} end @done (21-01-15 14:55)
✔ perhaps the domain should not be 20x3x3 but 3x3x20, because Julia is column-first @done (21-01-15 14:55)
☐ Generalize World as a tuple of parameters ( https://stackoverflow.com/questions/40160120/generic-constructors-for-subtypes-of-an-abstract-type )
☐ use staticArrays for small domains (matrices/vectors) https://github.com/JuliaArrays/StaticArrays.jl
		X = OntologicalDataset(IntervalOntology,Array{SMatrix{3,3,Int},2}(undef, 20, 10))

☐ Try relationSet as set
	relationSet :: Iterable{<:AbstractRelation}
	const Iterable{N} = Union{AbstractVector{N},AbstractSet{N}}
☐ An ontology interpreted over an N-dimensional domain gives rise to a Kripke model/frame,
	but one can generalize for a Kripke model/frame in graph form.
		abstract type AbstractKripkeFrame end
		Generic Kripke frame: worlds & relations
		struct KripkeFrame{T} <: AbstractKripkeFrame{T}
☐ Also handle categorical features (for now, we only handle numerical features)
