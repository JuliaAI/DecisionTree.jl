✔	TODO const MatricialDomain{T,N} = AbstractArray{T,N} end @done (21-01-15 14:55)
✔ perhaps the domain should not be 20x3x3 but 3x3x20, because Julia is column-first @done (21-01-15 14:55)
☐	Add >
☐	Try the two-dimensional case!
☐	Use pruning
✔	Use view instead of slicing @done (21-01-18 20:47)
☐ Generalize World as a tuple of parameters ( https://stackoverflow.com/questions/40160120/generic-constructors-for-subtypes-of-an-abstract-type )
☐ use staticArrays for small domains (matrices/vectors) https://github.com/JuliaArrays/StaticArrays.jl
		X = OntologicalDataset(IntervalOntology,Array{SMatrix{3,3,Int},2}(undef, 20, 10))

☐	Add ProgressMeter?
☐	Extend pruning options
☐	Generalize greedy step to greedy-n step.
☐	Generalize to beam-search and then beam-search-n?
☐ An ontology interpreted over an N-dimensional domain gives rise to a Kripke model/frame,
	but one can generalize for a Kripke model/frame in graph form.
		abstract type AbstractKripkeFrame end
		Generic Kripke frame: worlds & relations
		struct KripkeFrame{T} <: AbstractKripkeFrame{T}
☐ Also handle categorical features (for now, we only handle numerical features)



# Timings history


back to using Views:
Testing dataset 'simpleDataset'
  120.604 ms (2251653 allocations: 194.33 MiB)
  Accuracy: 100% baby!
  Nodes: 3
  Height: 1
Testing dataset 'simpleDataset2'
  851.795 μs (20017 allocations: 1.15 MiB)
  Accuracy: 30.0%
  Nodes: 1
  Height: 0
Testing dataset 'Eduard-5'
  4.502 s (39457913 allocations: 1.49 GiB)
  Accuracy: 88.89%
  Nodes: 167
  Height: 10
Testing dataset 'Eduard-10'
  11.129 s (102020927 allocations: 3.93 GiB)
  Accuracy: 84.44%
  Nodes: 221
  Height: 10

Without Xf(... best feature)
Testing dataset 'simpleDataset'
	146.995 ms (2251482 allocations: 194.09 MiB)
	Accuracy: 100% baby!
Testing dataset 'Eduard-5'
	6.307 s (39708278 allocations: 1.50 GiB)
	Accuracy: 91.11%
Testing dataset 'Eduard-10'
	12.520 s (102004178 allocations: 3.93 GiB)
	Accuracy: 84.44%

using Views with smarter Xf:
Testing dataset 'simpleDataset'
	150.841 ms (2251328 allocations: 194.08 MiB)
	Accuracy: 100% baby!
Testing dataset 'Eduard-5'
	4.617 s (39847067 allocations: 1.50 GiB)
	Accuracy: 90.0%
Testing dataset 'Eduard-10'
	12.352 s (102190347 allocations: 3.94 GiB)
	Accuracy: 84.44%

using Views:
Testing dataset 'simpleDataset'
	129.927 ms (2251644 allocations: 194.31 MiB)
	Accuracy: 100% baby!
Testing dataset 'Eduard-5'
	5.084 s (39690013 allocations: 1.50 GiB)
	Accuracy: 91.11%
Testing dataset 'Eduard-10'
	11.421 s (102032965 allocations: 3.94 GiB)
	Accuracy: 84.44%

not using Views:
Testing dataset 'simpleDataset'
	151.523 ms (2251644 allocations: 194.31 MiB)
	Accuracy: 100% baby!
Testing dataset 'Eduard-5'
	5.356 s (39781460 allocations: 1.50 GiB)
	Accuracy: 90.0%
Testing dataset 'Eduard-10'
	16.321 s (101172782 allocations: 3.90 GiB)
	Accuracy: 85.56%


# Timings history
# n_samp = 50, N = 3
# 484.136 μs (4368 allocations: 256.34 KiB)
# 517.471 μs (4368 allocations: 256.38 KiB)
# -- Swap dimensions to (X,Y,Z,...) x n_samples x n_variables --
# 210.019 μs (4205 allocations: 252.56 KiB)
# -- Add the use of Sf
# 214.959 μs (4210 allocations: 253.44 KiB)
# -- Remove the use of Sf
# n_samp = 100, N = 50
# 63.539 ms (1126468 allocations: 97.22 MiB)
# -- Add the use of Sf
# 63.749 ms (1126469 allocations: 97.22 MiB)
# n_samp = 200, N = 50
# 129.573 ms (2253001 allocations: 194.44 MiB)
# -- Remove the use of Sf
# 135.053 ms (2253000 allocations: 194.44 MiB)
# -- Add the use of Sf
# 133.009 ms (2253001 allocations: 194.44 MiB)
# -- Switched from WorldSet to WorldVector
# 131.344 ms (2251791 allocations: 194.32 MiB)
# Well, the difference is subtle
# 130.677 ms (2251632 allocations: 194.31 MiB)
# -- Actually, I've made a mistake (I was updating Sf[i] insfead of S[...])
# 131.131 ms (2251646 allocations: 194.31 MiB)
# -- Add two new datasets "Eduard-5" and "Eduard-10"
