
4
1.0
0.75
true
[1537 1505; 2375 1552]
1537
2375
1505
1552
4
1.0
0.75
true
[2375 1552 1533; 1821 1580 1469]
2375
1821
1552
1580
1533
1469
6
1.0
0.75
true
[1537 1505 1483; 2375 1552 1533]
1537
2375
1505
1552
1483
1533
6
1.0
0.75
true
[1505 1483; 1552 1533; 1580 1469]
1505
1552
1580
1483
1533
1469
6
1.0
0.75
true
[1537 1505; 2375 1552; 1821 1580]
1537
2375
1821
1505
1552
1580
6
1.0
0.75
true
[1552; 1580]
1552
1580
2
1.0
0.75
true
[1505; 1552]
1505
1552
2
1.0
0.75
true
[1552 1533]
1552
1533
2
1.0
0.75
true
[2375 1552]
2375
1552
2
1.0
0.75
true
[1505; 1552; 1580]
1505
1552
1580
3
1.0
0.75
true
[2375 1552 1533]
2375
1552
1533
3
1.0
0.75
true
[172 325; 340 315]
0
0.0
0.75
false
[244 144; 172 325]
0
0.0
0.75
false
[289 172; 259 340]
0
0.0
0.75
false
[259 244; 289 172]
0
0.0
0.75
false
[289 172 325; 259 340 315]
0
0.0
0.75
false
[259 244 144; 289 172 325]
0
0.0
0.75
false
[244 144; 172 325; 340 315]
0
0.0
0.75
false
[259 244; 289 172; 259 340]
0
0.0
0.75
false
[172; 340]
0
0.0
0.75
false
[244; 172]
0
0.0
0.75
false
[172 325]
0
0.0
0.75
false
[289 172]
0
0.0
0.75
false
[244; 172; 340]
0
0.0
0.75
false
[289 172 325]
0
0.0
0.75
false
[2322 3645; 1867 3056]
2322
1867
3645
3056
4
1.0
0.75
true
[3458 3827; 2322 3645]
3458
2322
3827
3645
4
1.0
0.75
true
[1437 2322; 1056 1867]
1437
1056
2322
1867
4
1.0
0.75
true
[1876 3458; 1437 2322]
1876
1437
3458
2322
4
1.0
0.75
true
[1437 2322 3645; 1056 1867 3056]
1437
1056
2322
1867
3645
3056
6
1.0
0.75
true
[1876 3458 3827; 1437 2322 3645]
1876
1437
3458
2322
3827
3645
6
1.0
0.75
true
[3458 3827; 2322 3645; 1867 3056]
3458
2322
1867
3827
3645
3056
6
1.0
0.75
true
[1876 3458; 1437 2322; 1056 1867]
1876
1437
1056
3458
2322
1867
6
1.0
0.75
true
[2322; 1867]
2322
1867
2
1.0
0.75
true
[3458; 2322]
3458
2322
2
1.0
0.75
true
[2322 3645]
2322
3645
2
1.0
0.75
true
[1437 2322]
1437
2322
2
1.0
0.75
true
[3458; 2322; 1867]
3458
2322
1867
3
1.0
0.75
true
[1437 2322 3645]
1437
2322
3645
3
1.0
0.75
true
[563 382; 531 513]
0
0.0
0.75
false
[763 573; 563 382]
0
0.0
0.75
false
[425 563; 622 531]
0
0.0
0.75
false
[855 763; 425 563]
0
0.0
0.75
false
[425 563 382; 622 531 513]
0
0.0
0.75
false
[855 763 573; 425 563 382]
0
0.0
0.75
false
[763 573; 563 382; 531 513]
0
0.0
0.75
false
[855 763; 425 563; 622 531]
0
0.0
0.75
false
[563; 531]
0
0.0
0.75
false
[763; 563]
0
0.0
0.75
false
[563 382]
0
0.0
0.75
false
[425 563]
0
0.0
0.75
false
[763; 563; 531]
0
0.0
0.75
false
[425 563 382]
0
0.0
0.75
false
[1240 1311; 1232 1316]
1240
1232
1311
1316
4
1.0
0.75
true
[930 1117; 1240 1311]
930
1240
1117
1311
4
1.0
0.75
true
[1175 1240; 1267 1232]
1175
1267
1240
1232
4
1.0
0.75
true
[1017 930; 1175 1240]
1017
1175
930
1240
4
1.0
0.75
true
[1175 1240 1311; 1267 1232 1316]
1175
1267
1240
1232
1311
1316
6
1.0
0.75
true
[1017 930 1117; 1175 1240 1311]
1017
1175
930
1240
1117
1311
6
1.0
0.75
true
[930 1117; 1240 1311; 1232 1316]
930
1240
1232
1117
1311
1316
6
1.0
0.75
true
[1017 930; 1175 1240; 1267 1232]
1017
1175
1267
930
1240
1232
6
1.0
0.75
true
[1240; 1232]
1240
1232
2
1.0
0.75
true
[930; 1240]
930
1240
2
1.0
0.75
true
[1240 1311]
1240
1311
2
1.0
0.75
true
[1175 1240]
1175
1240
2
1.0
0.75
true
[930; 1240; 1232]
930
1240
1232
3
1.0
0.75
true
[1175 1240 1311]
1175
1240
1311
3
1.0
0.75
true
[1427 1312; 1377 1438]
1427
1377
1312
1438
4
1.0
0.75
true
[1320 1346; 1427 1312]
1320
1427
1346
1312
4
1.0
0.75
true
[1305 1427; 1423 1377]
1305
1423
1427
1377
4
1.0
0.75
true
[1371 1320; 1305 1427]
1371
1305
1320
1427
4
1.0
0.75
true
[1305 1427 1312; 1423 1377 1438]
1305
1423
1427
1377
1312
1438
6
1.0
0.75
true
[1371 1320 1346; 1305 1427 1312]
1371
1305
1320
1427
1346
1312
6
1.0
0.75
true
[1320 1346; 1427 1312; 1377 1438]
1320
1427
1377
1346
1312
1438
6
1.0
0.75
true
[1371 1320; 1305 1427; 1423 1377]
1371
1305
1423
1320
1427
1377
6
1.0
0.75
true
[1427; 1377]
1427
1377
2
1.0
0.75
true
[1320; 1427]
1320
1427
2
1.0
0.75
true
[1427 1312]
1427
1312
2
1.0
0.75
true
[1305 1427]
1305
1427
2
1.0
0.75
true
[1320; 1427; 1377]
1320
1427
1377
3
1.0
0.75
true
[1305 1427 1312]
1305
1427
1312
3
1.0
0.75
true
[303 274; 265 297]
0
0.0
0.75
false
[363 256; 303 274]
0
0.0
0.75
false
[374 303; 336 265]
0
0.0
0.75
false
[401 363; 374 303]
0
0.0
0.75
false
[374 303 274; 336 265 297]
0
0.0
0.75
false
[401 363 256; 374 303 274]
0
0.0
0.75
false
[363 256; 303 274; 265 297]
0
0.0
0.75
false
[401 363; 374 303; 336 265]
0
0.0
0.75
false
[303; 265]
0
0.0
0.75
false
[363; 303]
0
0.0
0.75
false
[303 274]
0
0.0
0.75
false
[374 303]
0
0.0
0.75
false
[363; 303; 265]
0
0.0
0.75
false
[374 303 274]
0
0.0
0.75
false
[939 1452; 857 1481]
939
1452
1481
3
0.75
0.75
true
[1244 985; 939 1452]
1244
939
985
1452
4
1.0
0.75
true
[705 939; 677 857]
939
1
0.25
0.75
false
[1019 1244; 705 939]
1019
1244
939
3
0.75
0.75
true
[705 939 1452; 677 857 1481]
939
1452
1481
3
0.5
0.75
false
[1019 1244 985; 705 939 1452]
1019
1244
939
985
1452
5
0.8333333333333334
0.75
true
[1244 985; 939 1452; 857 1481]
1244
939
985
1452
1481
5
0.8333333333333334
0.75
true
[1019 1244; 705 939; 677 857]
1019
1244
939
3
0.5
0.75
false
[939; 857]
939
1
0.5
0.75
false
[1244; 939]
1244
939
2
1.0
0.75
true
[939 1452]
939
1452
2
1.0
0.75
true
[705 939]
939
1
0.5
0.75
false
[1244; 939; 857]
1244
939
2
0.6666666666666666
0.75
false
[705 939 1452]
939
1452
2
0.6666666666666666
0.75
false
[503 417; 343 428]
0
0.0
0.75
false
[374 383; 503 417]
0
0.0
0.75
false
[286 503; 436 343]
0
0.0
0.75
false
[376 374; 286 503]
0
0.0
0.75
false
[286 503 417; 436 343 428]
0
0.0
0.75
false
[376 374 383; 286 503 417]
0
0.0
0.75
false
[374 383; 503 417; 343 428]
0
0.0
0.75
false
[376 374; 286 503; 436 343]
0
0.0
0.75
false
[503; 343]
0
0.0
0.75
false
[374; 503]
0
0.0
0.75
false
[503 417]
0
0.0
0.75
false
[286 503]
0
0.0
0.75
false
[374; 503; 343]
0
0.0
0.75
false
[286 503 417]
0
0.0
0.75
false
[1534 1464; 1715 1643]
1534
1715
1464
1643
4
1.0
0.75
true
[1352 1542; 1534 1464]
1352
1534
1542
1464
4
1.0
0.75
true
[1510 1534; 1701 1715]
1510
1701
1534
1715
4
1.0
0.75
true
[1527 1352; 1510 1534]
1527
1510
1352
1534
4
1.0
0.75
true
[1510 1534 1464; 1701 1715 1643]
1510
1701
1534
1715
1464
1643
6
1.0
0.75
true
[1527 1352 1542; 1510 1534 1464]
1527
1510
1352
1534
1542
1464
6
1.0
0.75
true
[1352 1542; 1534 1464; 1715 1643]
1352
1534
1715
1542
1464
1643
6
1.0
0.75
true
[1527 1352; 1510 1534; 1701 1715]
1527
1510
1701
1352
1534
1715
6
1.0
0.75
true
[1534; 1715]
1534
1715
2
1.0
0.75
true
[1352; 1534]
1352
1534
2
1.0
0.75
true
[1534 1464]
1534
1464
2
1.0
0.75
true
[1510 1534]
1510
1534
2
1.0
0.75
true
[1352; 1534; 1715]
1352
1534
1715
3
1.0
0.75
true
[1510 1534 1464]
1510
1534
1464
3
1.0
0.75
true
[417 363; 362 274]
0
0.0
0.75
false
[522 352; 417 363]
0
0.0
0.75
false
[517 417; 303 362]
0
0.0
0.75
false
[473 522; 517 417]
0
0.0
0.75
false
[517 417 363; 303 362 274]
0
0.0
0.75
false
[473 522 352; 517 417 363]
0
0.0
0.75
false
[522 352; 417 363; 362 274]
0
0.0
0.75
false
[473 522; 517 417; 303 362]
0
0.0
0.75
false
[417; 362]
0
0.0
0.75
false
[522; 417]
0
0.0
0.75
false
[417 363]
0
0.0
0.75
false
[517 417]
0
0.0
0.75
false
[522; 417; 362]
0
0.0
0.75
false
[517 417 363]
0
0.0
0.75
false
[4289 4347; 4275 4312]
4289
4275
4347
4312
4
1.0
0.75
true
[4278 4363; 4289 4347]
4278
4289
4363
4347
4
1.0
0.75
true
[4279 4289; 3195 4275]
4279
3195
4289
4275
4
1.0
0.75
true
[4355 4278; 4279 4289]
4355
4279
4278
4289
4
1.0
0.75
true
[4279 4289 4347; 3195 4275 4312]
4279
3195
4289
4275
4347
4312
6
1.0
0.75
true
[4355 4278 4363; 4279 4289 4347]
4355
4279
4278
4289
4363
4347
6
1.0
0.75
true
[4278 4363; 4289 4347; 4275 4312]
4278
4289
4275
4363
4347
4312
6
1.0
0.75
true
[4355 4278; 4279 4289; 3195 4275]
4355
4279
3195
4278
4289
4275
6
1.0
0.75
true
[4289; 4275]
4289
4275
2
1.0
0.75
true
[4278; 4289]
4278
4289
2
1.0
0.75
true
[4289 4347]
4289
4347
2
1.0
0.75
true
[4279 4289]
4279
4289
2
1.0
0.75
true
[4278; 4289; 4275]
4278
4289
4275
3
1.0
0.75
true
[4279 4289 4347]
4279
4289
4347
3
1.0
0.75
true
[349 429; 529 425]
0
0.0
0.75
false
[403 419; 349 429]
0
0.0
0.75
false
[458 349; 445 529]
0
0.0
0.75
false
[406 403; 458 349]
0
0.0
0.75
false
[458 349 429; 445 529 425]
0
0.0
0.75
false
[406 403 419; 458 349 429]
0
0.0
0.75
false
[403 419; 349 429; 529 425]
0
0.0
0.75
false
[406 403; 458 349; 445 529]
0
0.0
0.75
false
[349; 529]
0
0.0
0.75
false
[403; 349]
0
0.0
0.75
false
[349 429]
0
0.0
0.75
false
[458 349]
0
0.0
0.75
false
[403; 349; 529]
0
0.0
0.75
false
[458 349 429]
0
0.0
0.75
false
[1282 1287; 1221 1316]
1282
1221
1287
1316
4
1.0
0.75
true
[1152 1184; 1282 1287]
1152
1282
1184
1287
4
1.0
0.75
true
[1165 1282; 1235 1221]
1165
1235
1282
1221
4
1.0
0.75
true
[975 1152; 1165 1282]
975
1165
1152
1282
4
1.0
0.75
true
[1165 1282 1287; 1235 1221 1316]
1165
1235
1282
1221
1287
1316
6
1.0
0.75
true
[975 1152 1184; 1165 1282 1287]
975
1165
1152
1282
1184
1287
6
1.0
0.75
true
[1152 1184; 1282 1287; 1221 1316]
1152
1282
1221
1184
1287
1316
6
1.0
0.75
true
[975 1152; 1165 1282; 1235 1221]
975
1165
1235
1152
1282
1221
6
1.0
0.75
true
[1282; 1221]
1282
1221
2
1.0
0.75
true
[1152; 1282]
1152
1282
2
1.0
0.75
true
[1282 1287]
1282
1287
2
1.0
0.75
true
[1165 1282]
1165
1282
2
1.0
0.75
true
[1152; 1282; 1221]
1152
1282
1221
3
1.0
0.75
true
[1165 1282 1287]
1165
1282
1287
3
1.0
0.75
true
[1594 1711; 1526 1581]
1594
1526
1711
1581
4
1.0
0.75
true
[1538 1508; 1594 1711]
1538
1594
1508
1711
4
1.0
0.75
true
[1525 1594; 1354 1526]
1525
1354
1594
1526
4
1.0
0.75
true
[1658 1538; 1525 1594]
1658
1525
1538
1594
4
1.0
0.75
true
[1525 1594 1711; 1354 1526 1581]
1525
1354
1594
1526
1711
1581
6
1.0
0.75
true
[1658 1538 1508; 1525 1594 1711]
1658
1525
1538
1594
1508
1711
6
1.0
0.75
true
[1538 1508; 1594 1711; 1526 1581]
1538
1594
1526
1508
1711
1581
6
1.0
0.75
true
[1658 1538; 1525 1594; 1354 1526]
1658
1525
1354
1538
1594
1526
6
1.0
0.75
true
[1594; 1526]
1594
1526
2
1.0
0.75
true
[1538; 1594]
1538
1594
2
1.0
0.75
true
[1594 1711]
1594
1711
2
1.0
0.75
true
[1525 1594]
1525
1594
2
1.0
0.75
true
[1538; 1594; 1526]
1538
1594
1526
3
1.0
0.75
true
[1525 1594 1711]
1525
1594
1711
3
1.0
0.75
true
[157 204; 349 162]
0
0.0
0.75
false
[42 158; 157 204]
0
0.0
0.75
false
[221 157; 332 349]
0
0.0
0.75
false
[224 42; 221 157]
0
0.0
0.75
false
[221 157 204; 332 349 162]
0
0.0
0.75
false
[224 42 158; 221 157 204]
0
0.0
0.75
false
[42 158; 157 204; 349 162]
0
0.0
0.75
false
[224 42; 221 157; 332 349]
0
0.0
0.75
false
[157; 349]
0
0.0
0.75
false
[42; 157]
0
0.0
0.75
false
[157 204]
0
0.0
0.75
false
[221 157]
0
0.0
0.75
false
[42; 157; 349]
0
0.0
0.75
false
[221 157 204]
0
0.0
0.75
false
[1536 1098; 1731 1182]
1536
1731
1098
1182
4
1.0
0.75
true
[1190 1133; 1536 1098]
1190
1536
1133
1098
4
1.0
0.75
true
[1536 1536; 1357 1731]
1536
1357
1536
1731
4
1.0
0.75
true
[1816 1190; 1536 1536]
1816
1536
1190
1536
4
1.0
0.75
true
[1536 1536 1098; 1357 1731 1182]
1536
1357
1536
1731
1098
1182
6
1.0
0.75
true
[1816 1190 1133; 1536 1536 1098]
1816
1536
1190
1536
1133
1098
6
1.0
0.75
true
[1190 1133; 1536 1098; 1731 1182]
1190
1536
1731
1133
1098
1182
6
1.0
0.75
true
[1816 1190; 1536 1536; 1357 1731]
1816
1536
1357
1190
1536
1731
6
1.0
0.75
true
[1536; 1731]
1536
1731
2
1.0
0.75
true
[1190; 1536]
1190
1536
2
1.0
0.75
true
[1536 1098]
1536
1098
2
1.0
0.75
true
[1536 1536]
1536
1536
2
1.0
0.75
true
[1190; 1536; 1731]
1190
1536
1731
3
1.0
0.75
true
[1536 1536 1098]
1536
1536
1098
3
1.0
0.75
true
[315 301; 212 293]
0
0.0
0.75
false
[428 301; 315 301]
0
0.0
0.75
false
[274 315; 235 212]
0
0.0
0.75
false
[267 428; 274 315]
0
0.0
0.75
false
[274 315 301; 235 212 293]
0
0.0
0.75
false
[267 428 301; 274 315 301]
0
0.0
0.75
false
[428 301; 315 301; 212 293]
0
0.0
0.75
false
[267 428; 274 315; 235 212]
0
0.0
0.75
false
[315; 212]
0
0.0
0.75
false
[428; 315]
0
0.0
0.75
false
[315 301]
0
0.0
0.75
false
[274 315]
0
0.0
0.75
false
[428; 315; 212]
0
0.0
0.75
false
[274 315 301]
0
0.0
0.75
false
[1159 1272; 1815 1246]
1159
1815
1272
1246
4
1.0
0.75
true
[1283 1242; 1159 1272]
1283
1159
1242
1272
4
1.0
0.75
true
[1776 1159; 2231 1815]
1776
2231
1159
1815
4
1.0
0.75
true
[1225 1283; 1776 1159]
1225
1776
1283
1159
4
1.0
0.75
true
[1776 1159 1272; 2231 1815 1246]
1776
2231
1159
1815
1272
1246
6
1.0
0.75
true
[1225 1283 1242; 1776 1159 1272]
1225
1776
1283
1159
1242
1272
6
1.0
0.75
true
[1283 1242; 1159 1272; 1815 1246]
1283
1159
1815
1242
1272
1246
6
1.0
0.75
true
[1225 1283; 1776 1159; 2231 1815]
1225
1776
2231
1283
1159
1815
6
1.0
0.75
true
[1159; 1815]
1159
1815
2
1.0
0.75
true
[1283; 1159]
1283
1159
2
1.0
0.75
true
[1159 1272]
1159
1272
2
1.0
0.75
true
[1776 1159]
1776
1159
2
1.0
0.75
true
[1283; 1159; 1815]
1283
1159
1815
3
1.0
0.75
true
[1776 1159 1272]
1776
1159
1272
3
1.0
0.75
true
[218 256; 344 226]
0
0.0
0.75
false
[294 282; 218 256]
0
0.0
0.75
false
[239 218; 266 344]
0
0.0
0.75
false
[196 294; 239 218]
0
0.0
0.75
false
[239 218 256; 266 344 226]
0
0.0
0.75
false
[196 294 282; 239 218 256]
0
0.0
0.75
false
[294 282; 218 256; 344 226]
0
0.0
0.75
false
[196 294; 239 218; 266 344]
0
0.0
0.75
false
[218; 344]
0
0.0
0.75
false
[294; 218]
0
0.0
0.75
false
[218 256]
0
0.0
0.75
false
[239 218]
0
0.0
0.75
false
[294; 218; 344]
0
0.0
0.75
false
[239 218 256]
0
0.0
0.75
false
[5782 5876; 5833 5737]
5782
5833
5876
5737
4
1.0
0.75
true
[5306 5707; 5782 5876]
5306
5782
5707
5876
4
1.0
0.75
true
[5362 5782; 5704 5833]
5362
5704
5782
5833
4
1.0
0.75
true
[3890 5306; 5362 5782]
3890
5362
5306
5782
4
1.0
0.75
true
[5362 5782 5876; 5704 5833 5737]
5362
5704
5782
5833
5876
5737
6
1.0
0.75
true
[3890 5306 5707; 5362 5782 5876]
3890
5362
5306
5782
5707
5876
6
1.0
0.75
true
[5306 5707; 5782 5876; 5833 5737]
5306
5782
5833
5707
5876
5737
6
1.0
0.75
true
[3890 5306; 5362 5782; 5704 5833]
3890
5362
5704
5306
5782
5833
6
1.0
0.75
true
[5782; 5833]
5782
5833
2
1.0
0.75
true
[5306; 5782]
5306
5782
2
1.0
0.75
true
[5782 5876]
5782
5876
2
1.0
0.75
true
[5362 5782]
5362
5782
2
1.0
0.75
true
[5306; 5782; 5833]
5306
5782
5833
3
1.0
0.75
true
[5362 5782 5876]
5362
5782
5876
3
1.0
0.75
true
[438 337; 344 498]
0
0.0
0.75
false
[475 369; 438 337]
0
0.0
0.75
false
[370 438; 379 344]
0
0.0
0.75
false
[381 475; 370 438]
0
0.0
0.75
false
[370 438 337; 379 344 498]
0
0.0
0.75
false
[381 475 369; 370 438 337]
0
0.0
0.75
false
[475 369; 438 337; 344 498]
0
0.0
0.75
false
[381 475; 370 438; 379 344]
0
0.0
0.75
false
[438; 344]
0
0.0
0.75
false
[475; 438]
0
0.0
0.75
false
[438 337]
0
0.0
0.75
false
[370 438]
0
0.0
0.75
false
[475; 438; 344]
0
0.0
0.75
false
[370 438 337]
0
0.0
0.75
false
[1292 1298; 1216 1210]
1292
1216
1298
1210
4
1.0
0.75
true
[1234 1244; 1292 1298]
1234
1292
1244
1298
4
1.0
0.75
true
[1321 1292; 1198 1216]
1321
1198
1292
1216
4
1.0
0.75
true
[1282 1234; 1321 1292]
1282
1321
1234
1292
4
1.0
0.75
true
[1321 1292 1298; 1198 1216 1210]
1321
1198
1292
1216
1298
1210
6
1.0
0.75
true
[1282 1234 1244; 1321 1292 1298]
1282
1321
1234
1292
1244
1298
6
1.0
0.75
true
[1234 1244; 1292 1298; 1216 1210]
1234
1292
1216
1244
1298
1210
6
1.0
0.75
true
[1282 1234; 1321 1292; 1198 1216]
1282
1321
1198
1234
1292
1216
6
1.0
0.75
true
[1292; 1216]
1292
1216
2
1.0
0.75
true
[1234; 1292]
1234
1292
2
1.0
0.75
true
[1292 1298]
1292
1298
2
1.0
0.75
true
[1321 1292]
1321
1292
2
1.0
0.75
true
[1234; 1292; 1216]
1234
1292
1216
3
1.0
0.75
true
[1321 1292 1298]
1321
1292
1298
3
1.0
0.75
true
[1583 1575; 1545 1526]
1583
1545
1575
1526
4
1.0
0.75
true
[1510 1654; 1583 1575]
1510
1583
1654
1575
4
1.0
0.75
true
[1566 1583; 1676 1545]
1566
1676
1583
1545
4
1.0
0.75
true
[1611 1510; 1566 1583]
1611
1566
1510
1583
4
1.0
0.75
true
[1566 1583 1575; 1676 1545 1526]
1566
1676
1583
1545
1575
1526
6
1.0
0.75
true
[1611 1510 1654; 1566 1583 1575]
1611
1566
1510
1583
1654
1575
6
1.0
0.75
true
[1510 1654; 1583 1575; 1545 1526]
1510
1583
1545
1654
1575
1526
6
1.0
0.75
true
[1611 1510; 1566 1583; 1676 1545]
1611
1566
1676
1510
1583
1545
6
1.0
0.75
true
[1583; 1545]
1583
1545
2
1.0
0.75
true
[1510; 1583]
1510
1583
2
1.0
0.75
true
[1583 1575]
1583
1575
2
1.0
0.75
true
[1566 1583]
1566
1583
2
1.0
0.75
true
[1510; 1583; 1545]
1510
1583
1545
3
1.0
0.75
true
[1566 1583 1575]
1566
1583
1575
3
1.0
0.75
true
[370 303; 291 234]
0
0.0
0.75
false
[408 341; 370 303]
0
0.0
0.75
false
[244 370; 280 291]
0
0.0
0.75
false
[469 408; 244 370]
0
0.0
0.75
false
[244 370 303; 280 291 234]
0
0.0
0.75
false
[469 408 341; 244 370 303]
0
0.0
0.75
false
[408 341; 370 303; 291 234]
0
0.0
0.75
false
[469 408; 244 370; 280 291]
0
0.0
0.75
false
[370; 291]
0
0.0
0.75
false
[408; 370]
0
0.0
0.75
false
[370 303]
0
0.0
0.75
false
[244 370]
0
0.0
0.75
false
[408; 370; 291]
0
0.0
0.75
false
[244 370 303]
0
0.0
0.75
false
[896 929; 992 938]
896
992
929
938
4
1.0
0.75
true
[1020 1060; 896 929]
1020
896
1060
929
4
1.0
0.75
true
[974 896; 877 992]
974
877
896
992
4
1.0
0.75
true
[910 1020; 974 896]
910
974
1020
896
4
1.0
0.75
true
[974 896 929; 877 992 938]
974
877
896
992
929
938
6
1.0
0.75
true
[910 1020 1060; 974 896 929]
910
974
1020
896
1060
929
6
1.0
0.75
true
[1020 1060; 896 929; 992 938]
1020
896
992
1060
929
938
6
1.0
0.75
true
[910 1020; 974 896; 877 992]
910
974
877
1020
896
992
6
1.0
0.75
true
[896; 992]
896
992
2
1.0
0.75
true
[1020; 896]
1020
896
2
1.0
0.75
true
[896 929]
896
929
2
1.0
0.75
true
[974 896]
974
896
2
1.0
0.75
true
[1020; 896; 992]
1020
896
992
3
1.0
0.75
true
[974 896 929]
974
896
929
3
1.0
0.75
true
[356 377; 319 406]
0
0.0
0.75
false
[367 408; 356 377]
0
0.0
0.75
false
[353 356; 397 319]
0
0.0
0.75
false
[350 367; 353 356]
0
0.0
0.75
false
[353 356 377; 397 319 406]
0
0.0
0.75
false
[350 367 408; 353 356 377]
0
0.0
0.75
false
[367 408; 356 377; 319 406]
0
0.0
0.75
false
[350 367; 353 356; 397 319]
0
0.0
0.75
false
[356; 319]
0
0.0
0.75
false
[367; 356]
0
0.0
0.75
false
[356 377]
0
0.0
0.75
false
[353 356]
0
0.0
0.75
false
[367; 356; 319]
0
0.0
0.75
false
[353 356 377]
0
0.0
0.75
false
[1392 1314; 1290 1261]
1392
1290
1314
1261
4
1.0
0.75
true
[1346 1258; 1392 1314]
1346
1392
1258
1314
4
1.0
0.75
true
[1188 1392; 1614 1290]
1188
1614
1392
1290
4
1.0
0.75
true
[1255 1346; 1188 1392]
1255
1188
1346
1392
4
1.0
0.75
true
[1188 1392 1314; 1614 1290 1261]
1188
1614
1392
1290
1314
1261
6
1.0
0.75
true
[1255 1346 1258; 1188 1392 1314]
1255
1188
1346
1392
1258
1314
6
1.0
0.75
true
[1346 1258; 1392 1314; 1290 1261]
1346
1392
1290
1258
1314
1261
6
1.0
0.75
true
[1255 1346; 1188 1392; 1614 1290]
1255
1188
1614
1346
1392
1290
6
1.0
0.75
true
[1392; 1290]
1392
1290
2
1.0
0.75
true
[1346; 1392]
1346
1392
2
1.0
0.75
true
[1392 1314]
1392
1314
2
1.0
0.75
true
[1188 1392]
1188
1392
2
1.0
0.75
true
[1346; 1392; 1290]
1346
1392
1290
3
1.0
0.75
true
[1188 1392 1314]
1188
1392
1314
3
1.0
0.75
true
[319 332; 280 289]
0
0.0
0.75
false
[427 305; 319 332]
0
0.0
0.75
false
[404 319; 399 280]
0
0.0
0.75
false
[386 427; 404 319]
0
0.0
0.75
false
[404 319 332; 399 280 289]
0
0.0
0.75
false
[386 427 305; 404 319 332]
0
0.0
0.75
false
[427 305; 319 332; 280 289]
0
0.0
0.75
false
[386 427; 404 319; 399 280]
0
0.0
0.75
false
[319; 280]
0
0.0
0.75
false
[427; 319]
0
0.0
0.75
false
[319 332]
0
0.0
0.75
false
[404 319]
0
0.0
0.75
false
[427; 319; 280]
0
0.0
0.75
false
[404 319 332]
0
0.0
0.75
false
[3146 3199; 3184 3124]
3146
3184
3199
3124
4
1.0
0.75
true
[4615 3666; 3146 3199]
4615
3146
3666
3199
4
1.0
0.75
true
[3607 3146; 3196 3184]
3607
3196
3146
3184
4
1.0
0.75
true
[5613 4615; 3607 3146]
5613
3607
4615
3146
4
1.0
0.75
true
[3607 3146 3199; 3196 3184 3124]
3607
3196
3146
3184
3199
3124
6
1.0
0.75
true
[5613 4615 3666; 3607 3146 3199]
5613
3607
4615
3146
3666
3199
6
1.0
0.75
true
[4615 3666; 3146 3199; 3184 3124]
4615
3146
3184
3666
3199
3124
6
1.0
0.75
true
[5613 4615; 3607 3146; 3196 3184]
5613
3607
3196
4615
3146
3184
6
1.0
0.75
true
[3146; 3184]
3146
3184
2
1.0
0.75
true
[4615; 3146]
4615
3146
2
1.0
0.75
true
[3146 3199]
3146
3199
2
1.0
0.75
true
[3607 3146]
3607
3146
2
1.0
0.75
true
[4615; 3146; 3184]
4615
3146
3184
3
1.0
0.75
true
[3607 3146 3199]
3607
3146
3199
3
1.0
0.75
true
[833 781; 860 965]
860
965
2
0.5
0.75
false
[861 970; 833 781]
861
970
2
0.5
0.75
false
[783 833; 704 860]
860
1
0.25
0.75
false
[831 861; 783 833]
861
1
0.25
0.75
false
[783 833 781; 704 860 965]
860
965
2
0.3333333333333333
0.75
false
[831 861 970; 783 833 781]
861
970
2
0.3333333333333333
0.75
false
[861 970; 833 781; 860 965]
861
860
970
965
4
0.6666666666666666
0.75
false
[831 861; 783 833; 704 860]
861
860
2
0.3333333333333333
0.75
false
[833; 860]
860
1
0.5
0.75
false
[861; 833]
861
1
0.5
0.75
false
[833 781]
0
0.0
0.75
false
[783 833]
0
0.0
0.75
false
[861; 833; 860]
861
860
2
0.6666666666666666
0.75
false
[783 833 781]
0
0.0
0.75
false
[1389 1263; 1311 1249]
1389
1311
1263
1249
4
1.0
0.75
true
[1305 1266; 1389 1263]
1305
1389
1266
1263
4
1.0
0.75
true
[1253 1389; 1245 1311]
1253
1245
1389
1311
4
1.0
0.75
true
[1405 1305; 1253 1389]
1405
1253
1305
1389
4
1.0
0.75
true
[1253 1389 1263; 1245 1311 1249]
1253
1245
1389
1311
1263
1249
6
1.0
0.75
true
[1405 1305 1266; 1253 1389 1263]
1405
1253
1305
1389
1266
1263
6
1.0
0.75
true
[1305 1266; 1389 1263; 1311 1249]
1305
1389
1311
1266
1263
1249
6
1.0
0.75
true
[1405 1305; 1253 1389; 1245 1311]
1405
1253
1245
1305
1389
1311
6
1.0
0.75
true
[1389; 1311]
1389
1311
2
1.0
0.75
true
[1305; 1389]
1305
1389
2
1.0
0.75
true
[1389 1263]
1389
1263
2
1.0
0.75
true
[1253 1389]
1253
1389
2
1.0
0.75
true
[1305; 1389; 1311]
1305
1389
1311
3
1.0
0.75
true
[1253 1389 1263]
1253
1389
1263
3
1.0
0.75
true
[1297 1402; 1270 1292]
1297
1270
1402
1292
4
1.0
0.75
true
[1348 1360; 1297 1402]
1348
1297
1360
1402
4
1.0
0.75
true
[1347 1297; 1348 1270]
1347
1348
1297
1270
4
1.0
0.75
true
[1362 1348; 1347 1297]
1362
1347
1348
1297
4
1.0
0.75
true
[1347 1297 1402; 1348 1270 1292]
1347
1348
1297
1270
1402
1292
6
1.0
0.75
true
[1362 1348 1360; 1347 1297 1402]
1362
1347
1348
1297
1360
1402
6
1.0
0.75
true
[1348 1360; 1297 1402; 1270 1292]
1348
1297
1270
1360
1402
1292
6
1.0
0.75
true
[1362 1348; 1347 1297; 1348 1270]
1362
1347
1348
1348
1297
1270
6
1.0
0.75
true
[1297; 1270]
1297
1270
2
1.0
0.75
true
[1348; 1297]
1348
1297
2
1.0
0.75
true
[1297 1402]
1297
1402
2
1.0
0.75
true
[1347 1297]
1347
1297
2
1.0
0.75
true
[1348; 1297; 1270]
1348
1297
1270
3
1.0
0.75
true
[1347 1297 1402]
1347
1297
1402
3
1.0
0.75
true
[658 564; 1379 534]
1379
1
0.25
0.75
false
[602 374; 658 564]
0
0.0
0.75
false
[2709 658; 3976 1379]
2709
3976
1379
3
0.75
0.75
true
[1334 602; 2709 658]
1334
2709
2
0.5
0.75
false
[2709 658 564; 3976 1379 534]
2709
3976
1379
3
0.5
0.75
false
[1334 602 374; 2709 658 564]
1334
2709
2
0.3333333333333333
0.75
false
[602 374; 658 564; 1379 534]
1379
1
0.16666666666666666
0.75
false
[1334 602; 2709 658; 3976 1379]
1334
2709
3976
1379
4
0.6666666666666666
0.75
false
[658; 1379]
1379
1
0.5
0.75
false
[602; 658]
0
0.0
0.75
false
[658 564]
0
0.0
0.75
false
[2709 658]
2709
1
0.5
0.75
false
[602; 658; 1379]
1379
1
0.3333333333333333
0.75
false
[2709 658 564]
2709
1
0.3333333333333333
0.75
false
[1113 1104; 1037 1104]
1113
1037
1104
1104
4
1.0
0.75
true
[1017 1198; 1113 1104]
1017
1113
1198
1104
4
1.0
0.75
true
[1039 1113; 992 1037]
1039
992
1113
1037
4
1.0
0.75
true
[1105 1017; 1039 1113]
1105
1039
1017
1113
4
1.0
0.75
true
[1039 1113 1104; 992 1037 1104]
1039
992
1113
1037
1104
1104
6
1.0
0.75
true
[1105 1017 1198; 1039 1113 1104]
1105
1039
1017
1113
1198
1104
6
1.0
0.75
true
[1017 1198; 1113 1104; 1037 1104]
1017
1113
1037
1198
1104
1104
6
1.0
0.75
true
[1105 1017; 1039 1113; 992 1037]
1105
1039
992
1017
1113
1037
6
1.0
0.75
true
[1113; 1037]
1113
1037
2
1.0
0.75
true
[1017; 1113]
1017
1113
2
1.0
0.75
true
[1113 1104]
1113
1104
2
1.0
0.75
true
[1039 1113]
1039
1113
2
1.0
0.75
true
[1017; 1113; 1037]
1017
1113
1037
3
1.0
0.75
true
[1039 1113 1104]
1039
1113
1104
3
1.0
0.75
true
[793 825; 822 814]
0
0.0
0.75
false
[851 872; 793 825]
872
1
0.25
0.75
false
[777 793; 758 822]
0
0.0
0.75
false
[827 851; 777 793]
0
0.0
0.75
false
[777 793 825; 758 822 814]
0
0.0
0.75
false
[827 851 872; 777 793 825]
872
1
0.16666666666666666
0.75
false
[851 872; 793 825; 822 814]
872
1
0.16666666666666666
0.75
false
[827 851; 777 793; 758 822]
0
0.0
0.75
false
[793; 822]
0
0.0
0.75
false
[851; 793]
0
0.0
0.75
false
[793 825]
0
0.0
0.75
false
[777 793]
0
0.0
0.75
false
[851; 793; 822]
0
0.0
0.75
false
[777 793 825]
0
0.0
0.75
false
[1286 1250; 1219 1117]
1286
1219
1250
1117
4
1.0
0.75
true
[1170 1221; 1286 1250]
1170
1286
1221
1250
4
1.0
0.75
true
[1255 1286; 1452 1219]
1255
1452
1286
1219
4
1.0
0.75
true
[1207 1170; 1255 1286]
1207
1255
1170
1286
4
1.0
0.75
true
[1255 1286 1250; 1452 1219 1117]
1255
1452
1286
1219
1250
1117
6
1.0
0.75
true
[1207 1170 1221; 1255 1286 1250]
1207
1255
1170
1286
1221
1250
6
1.0
0.75
true
[1170 1221; 1286 1250; 1219 1117]
1170
1286
1219
1221
1250
1117
6
1.0
0.75
true
[1207 1170; 1255 1286; 1452 1219]
1207
1255
1452
1170
1286
1219
6
1.0
0.75
true
[1286; 1219]
1286
1219
2
1.0
0.75
true
[1170; 1286]
1170
1286
2
1.0
0.75
true
[1286 1250]
1286
1250
2
1.0
0.75
true
[1255 1286]
1255
1286
2
1.0
0.75
true
[1170; 1286; 1219]
1170
1286
1219
3
1.0
0.75
true
[1255 1286 1250]
1255
1286
1250
3
1.0
0.75
true
[258 331; 176 250]
0
0.0
0.75
false
[193 233; 258 331]
0
0.0
0.75
false
[213 258; 289 176]
0
0.0
0.75
false
[250 193; 213 258]
0
0.0
0.75
false
[213 258 331; 289 176 250]
0
0.0
0.75
false
[250 193 233; 213 258 331]
0
0.0
0.75
false
[193 233; 258 331; 176 250]
0
0.0
0.75
false
[250 193; 213 258; 289 176]
0
0.0
0.75
false
[258; 176]
0
0.0
0.75
false
[193; 258]
0
0.0
0.75
false
[258 331]
0
0.0
0.75
false
[213 258]
0
0.0
0.75
false
[193; 258; 176]
0
0.0
0.75
false
[213 258 331]
0
0.0
0.75
false
[3971 4759; 4033 5138]
3971
4033
4759
5138
4
1.0
0.75
true
[4128 4425; 3971 4759]
4128
3971
4425
4759
4
1.0
0.75
true
[3786 3971; 4084 4033]
3786
4084
3971
4033
4
1.0
0.75
true
[3786 4128; 3786 3971]
3786
3786
4128
3971
4
1.0
0.75
true
[3786 3971 4759; 4084 4033 5138]
3786
4084
3971
4033
4759
5138
6
1.0
0.75
true
[3786 4128 4425; 3786 3971 4759]
3786
3786
4128
3971
4425
4759
6
1.0
0.75
true
[4128 4425; 3971 4759; 4033 5138]
4128
3971
4033
4425
4759
5138
6
1.0
0.75
true
[3786 4128; 3786 3971; 4084 4033]
3786
3786
4084
4128
3971
4033
6
1.0
0.75
true
[3971; 4033]
3971
4033
2
1.0
0.75
true
[4128; 3971]
4128
3971
2
1.0
0.75
true
[3971 4759]
3971
4759
2
1.0
0.75
true
[3786 3971]
3786
3971
2
1.0
0.75
true
[4128; 3971; 4033]
4128
3971
4033
3
1.0
0.75
true
[3786 3971 4759]
3786
3971
4759
3
1.0
0.75
true
[1381 1073; 1318 1165]
1381
1318
1073
1165
4
1.0
0.75
true
[1588 1456; 1381 1073]
1588
1381
1456
1073
4
1.0
0.75
true
[1370 1381; 1314 1318]
1370
1314
1381
1318
4
1.0
0.75
true
[1401 1588; 1370 1381]
1401
1370
1588
1381
4
1.0
0.75
true
[1370 1381 1073; 1314 1318 1165]
1370
1314
1381
1318
1073
1165
6
1.0
0.75
true
[1401 1588 1456; 1370 1381 1073]
1401
1370
1588
1381
1456
1073
6
1.0
0.75
true
[1588 1456; 1381 1073; 1318 1165]
1588
1381
1318
1456
1073
1165
6
1.0
0.75
true
[1401 1588; 1370 1381; 1314 1318]
1401
1370
1314
1588
1381
1318
6
1.0
0.75
true
[1381; 1318]
1381
1318
2
1.0
0.75
true
[1588; 1381]
1588
1381
2
1.0
0.75
true
[1381 1073]
1381
1073
2
1.0
0.75
true
[1370 1381]
1370
1381
2
1.0
0.75
true
[1588; 1381; 1318]
1588
1381
1318
3
1.0
0.75
true
[1370 1381 1073]
1370
1381
1073
3
1.0
0.75
true
[1270 1422; 1312 1340]
1270
1312
1422
1340
4
1.0
0.75
true
[1323 1257; 1270 1422]
1323
1270
1257
1422
4
1.0
0.75
true
[1306 1270; 1239 1312]
1306
1239
1270
1312
4
1.0
0.75
true
[1241 1323; 1306 1270]
1241
1306
1323
1270
4
1.0
0.75
true
[1306 1270 1422; 1239 1312 1340]
1306
1239
1270
1312
1422
1340
6
1.0
0.75
true
[1241 1323 1257; 1306 1270 1422]
1241
1306
1323
1270
1257
1422
6
1.0
0.75
true
[1323 1257; 1270 1422; 1312 1340]
1323
1270
1312
1257
1422
1340
6
1.0
0.75
true
[1241 1323; 1306 1270; 1239 1312]
1241
1306
1239
1323
1270
1312
6
1.0
0.75
true
[1270; 1312]
1270
1312
2
1.0
0.75
true
[1323; 1270]
1323
1270
2
1.0
0.75
true
[1270 1422]
1270
1422
2
1.0
0.75
true
[1306 1270]
1306
1270
2
1.0
0.75
true
[1323; 1270; 1312]
1323
1270
1312
3
1.0
0.75
true
[1306 1270 1422]
1306
1270
1422
3
1.0
0.75
true
[1411 1407; 1416 1438]
1411
1416
1407
1438
4
1.0
0.75
true
[1401 1425; 1411 1407]
1401
1411
1425
1407
4
1.0
0.75
true
[993 1411; 1438 1416]
993
1438
1411
1416
4
1.0
0.75
true
[1015 1401; 993 1411]
1015
993
1401
1411
4
1.0
0.75
true
[993 1411 1407; 1438 1416 1438]
993
1438
1411
1416
1407
1438
6
1.0
0.75
true
[1015 1401 1425; 993 1411 1407]
1015
993
1401
1411
1425
1407
6
1.0
0.75
true
[1401 1425; 1411 1407; 1416 1438]
1401
1411
1416
1425
1407
1438
6
1.0
0.75
true
[1015 1401; 993 1411; 1438 1416]
1015
993
1438
1401
1411
1416
6
1.0
0.75
true
[1411; 1416]
1411
1416
2
1.0
0.75
true
[1401; 1411]
1401
1411
2
1.0
0.75
true
[1411 1407]
1411
1407
2
1.0
0.75
true
[993 1411]
993
1411
2
1.0
0.75
true
[1401; 1411; 1416]
1401
1411
1416
3
1.0
0.75
true
[993 1411 1407]
993
1411
1407
3
1.0
0.75
true
[346 273; 177 150]
0
0.0
0.75
false
[403 248; 346 273]
0
0.0
0.75
false
[729 346; 165 177]
0
0.0
0.75
false
[1220 403; 729 346]
1220
1
0.25
0.75
false
[729 346 273; 165 177 150]
0
0.0
0.75
false
[1220 403 248; 729 346 273]
1220
1
0.16666666666666666
0.75
false
[403 248; 346 273; 177 150]
0
0.0
0.75
false
[1220 403; 729 346; 165 177]
1220
1
0.16666666666666666
0.75
false
[346; 177]
0
0.0
0.75
false
[403; 346]
0
0.0
0.75
false
[346 273]
0
0.0
0.75
false
[729 346]
0
0.0
0.75
false
[403; 346; 177]
0
0.0
0.75
false
[729 346 273]
0
0.0
0.75
false
[1049 881; 1230 960]
1049
1230
881
960
4
1.0
0.75
true
[990 882; 1049 881]
990
1049
882
881
4
1.0
0.75
true
[1266 1049; 1041 1230]
1266
1041
1049
1230
4
1.0
0.75
true
[1287 990; 1266 1049]
1287
1266
990
1049
4
1.0
0.75
true
[1266 1049 881; 1041 1230 960]
1266
1041
1049
1230
881
960
6
1.0
0.75
true
[1287 990 882; 1266 1049 881]
1287
1266
990
1049
882
881
6
1.0
0.75
true
[990 882; 1049 881; 1230 960]
990
1049
1230
882
881
960
6
1.0
0.75
true
[1287 990; 1266 1049; 1041 1230]
1287
1266
1041
990
1049
1230
6
1.0
0.75
true
[1049; 1230]
1049
1230
2
1.0
0.75
true
[990; 1049]
990
1049
2
1.0
0.75
true
[1049 881]
1049
881
2
1.0
0.75
true
[1266 1049]
1266
1049
2
1.0
0.75
true
[990; 1049; 1230]
990
1049
1230
3
1.0
0.75
true
[1266 1049 881]
1266
1049
881
3
1.0
0.75
true
[555 543; 497 462]
0
0.0
0.75
false
[672 519; 555 543]
0
0.0
0.75
false
[637 555; 512 497]
0
0.0
0.75
false
[522 672; 637 555]
0
0.0
0.75
false
[637 555 543; 512 497 462]
0
0.0
0.75
false
[522 672 519; 637 555 543]
0
0.0
0.75
false
[672 519; 555 543; 497 462]
0
0.0
0.75
false
[522 672; 637 555; 512 497]
0
0.0
0.75
false
[555; 497]
0
0.0
0.75
false
[672; 555]
0
0.0
0.75
false
[555 543]
0
0.0
0.75
false
[637 555]
0
0.0
0.75
false
[672; 555; 497]
0
0.0
0.75
false
[637 555 543]
0
0.0
0.75
false
[1329 1503; 1359 1173]
1329
1359
1503
1173
4
1.0
0.75
true
[1227 1867; 1329 1503]
1227
1329
1867
1503
4
1.0
0.75
true
[1352 1329; 1432 1359]
1352
1432
1329
1359
4
1.0
0.75
true
[1321 1227; 1352 1329]
1321
1352
1227
1329
4
1.0
0.75
true
[1352 1329 1503; 1432 1359 1173]
1352
1432
1329
1359
1503
1173
6
1.0
0.75
true
[1321 1227 1867; 1352 1329 1503]
1321
1352
1227
1329
1867
1503
6
1.0
0.75
true
[1227 1867; 1329 1503; 1359 1173]
1227
1329
1359
1867
1503
1173
6
1.0
0.75
true
[1321 1227; 1352 1329; 1432 1359]
1321
1352
1432
1227
1329
1359
6
1.0
0.75
true
[1329; 1359]
1329
1359
2
1.0
0.75
true
[1227; 1329]
1227
1329
2
1.0
0.75
true
[1329 1503]
1329
1503
2
1.0
0.75
true
[1352 1329]
1352
1329
2
1.0
0.75
true
[1227; 1329; 1359]
1227
1329
1359
3
1.0
0.75
true
[1352 1329 1503]
1352
1329
1503
3
1.0
0.75
true
[394 339; 451 334]
0
0.0
0.75
false
[485 576; 394 339]
0
0.0
0.75
false
[422 394; 622 451]
0
0.0
0.75
false
[435 485; 422 394]
0
0.0
0.75
false
[422 394 339; 622 451 334]
0
0.0
0.75
false
[435 485 576; 422 394 339]
0
0.0
0.75
false
[485 576; 394 339; 451 334]
0
0.0
0.75
false
[435 485; 422 394; 622 451]
0
0.0
0.75
false
[394; 451]
0
0.0
0.75
false
[485; 394]
0
0.0
0.75
false
[394 339]
0
0.0
0.75
false
[422 394]
0
0.0
0.75
false
[485; 394; 451]
0
0.0
0.75
false
[422 394 339]
0
0.0
0.75
false
[5527 5838; 5970 5812]
5527
5970
5838
5812
4
1.0
0.75
true
[3873 4883; 5527 5838]
3873
5527
4883
5838
4
1.0
0.75
true
[5770 5527; 5834 5970]
5770
5834
5527
5970
4
1.0
0.75
true
[4334 3873; 5770 5527]
4334
5770
3873
5527
4
1.0
0.75
true
[5770 5527 5838; 5834 5970 5812]
5770
5834
5527
5970
5838
5812
6
1.0
0.75
true
[4334 3873 4883; 5770 5527 5838]
4334
5770
3873
5527
4883
5838
6
1.0
0.75
true
[3873 4883; 5527 5838; 5970 5812]
3873
5527
5970
4883
5838
5812
6
1.0
0.75
true
[4334 3873; 5770 5527; 5834 5970]
4334
5770
5834
3873
5527
5970
6
1.0
0.75
true
[5527; 5970]
5527
5970
2
1.0
0.75
true
[3873; 5527]
3873
5527
2
1.0
0.75
true
[5527 5838]
5527
5838
2
1.0
0.75
true
[5770 5527]
5770
5527
2
1.0
0.75
true
[3873; 5527; 5970]
3873
5527
5970
3
1.0
0.75
true
[5770 5527 5838]
5770
5527
5838
3
1.0
0.75
true
[737 758; 744 790]
0
0.0
0.75
false
[697 826; 737 758]
0
0.0
0.75
false
[650 737; 745 744]
0
0.0
0.75
false
[797 697; 650 737]
0
0.0
0.75
false
[650 737 758; 745 744 790]
0
0.0
0.75
false
[797 697 826; 650 737 758]
0
0.0
0.75
false
[697 826; 737 758; 744 790]
0
0.0
0.75
false
[797 697; 650 737; 745 744]
0
0.0
0.75
false
[737; 744]
0
0.0
0.75
false
[697; 737]
0
0.0
0.75
false
[737 758]
0
0.0
0.75
false
[650 737]
0
0.0
0.75
false
[697; 737; 744]
0
0.0
0.75
false
[650 737 758]
0
0.0
0.75
false
[1497 1503; 1379 1466]
1497
1379
1503
1466
4
1.0
0.75
true
[1429 1535; 1497 1503]
1429
1497
1535
1503
4
1.0
0.75
true
[1382 1497; 1285 1379]
1382
1285
1497
1379
4
1.0
0.75
true
[1357 1429; 1382 1497]
1357
1382
1429
1497
4
1.0
0.75
true
[1382 1497 1503; 1285 1379 1466]
1382
1285
1497
1379
1503
1466
6
1.0
0.75
true
[1357 1429 1535; 1382 1497 1503]
1357
1382
1429
1497
1535
1503
6
1.0
0.75
true
[1429 1535; 1497 1503; 1379 1466]
1429
1497
1379
1535
1503
1466
6
1.0
0.75
true
[1357 1429; 1382 1497; 1285 1379]
1357
1382
1285
1429
1497
1379
6
1.0
0.75
true
[1497; 1379]
1497
1379
2
1.0
0.75
true
[1429; 1497]
1429
1497
2
1.0
0.75
true
[1497 1503]
1497
1503
2
1.0
0.75
true
[1382 1497]
1382
1497
2
1.0
0.75
true
[1429; 1497; 1379]
1429
1497
1379
3
1.0
0.75
true
[1382 1497 1503]
1382
1497
1503
3
1.0
0.75
true
[1319 1375; 1325 1413]
1319
1325
1375
1413
4
1.0
0.75
true
[1431 1333; 1319 1375]
1431
1319
1333
1375
4
1.0
0.75
true
[1419 1319; 1261 1325]
1419
1261
1319
1325
4
1.0
0.75
true
[1377 1431; 1419 1319]
1377
1419
1431
1319
4
1.0
0.75
true
[1419 1319 1375; 1261 1325 1413]
1419
1261
1319
1325
1375
1413
6
1.0
0.75
true
[1377 1431 1333; 1419 1319 1375]
1377
1419
1431
1319
1333
1375
6
1.0
0.75
true
[1431 1333; 1319 1375; 1325 1413]
1431
1319
1325
1333
1375
1413
6
1.0
0.75
true
[1377 1431; 1419 1319; 1261 1325]
1377
1419
1261
1431
1319
1325
6
1.0
0.75
true
[1319; 1325]
1319
1325
2
1.0
0.75
true
[1431; 1319]
1431
1319
2
1.0
0.75
true
[1319 1375]
1319
1375
2
1.0
0.75
true
[1419 1319]
1419
1319
2
1.0
0.75
true
[1431; 1319; 1325]
1431
1319
1325
3
1.0
0.75
true
[1419 1319 1375]
1419
1319
1375
3
1.0
0.75
true
[471 389; 416 200]
0
0.0
0.75
false
[567 641; 471 389]
0
0.0
0.75
false
[1361 471; 437 416]
1361
1
0.25
0.75
false
[1755 567; 1361 471]
1755
1361
2
0.5
0.75
false
[1361 471 389; 437 416 200]
1361
1
0.16666666666666666
0.75
false
[1755 567 641; 1361 471 389]
1755
1361
2
0.3333333333333333
0.75
false
[567 641; 471 389; 416 200]
0
0.0
0.75
false
[1755 567; 1361 471; 437 416]
1755
1361
2
0.3333333333333333
0.75
false
[471; 416]
0
0.0
0.75
false
[567; 471]
0
0.0
0.75
false
[471 389]
0
0.0
0.75
false
[1361 471]
1361
1
0.5
0.75
false
[567; 471; 416]
0
0.0
0.75
false
[1361 471 389]
1361
1
0.3333333333333333
0.75
false
[1184 1106; 1170 1026]
1184
1170
1106
1026
4
1.0
0.75
true
[1085 982; 1184 1106]
1085
1184
982
1106
4
1.0
0.75
true
[1110 1184; 937 1170]
1110
937
1184
1170
4
1.0
0.75
true
[1228 1085; 1110 1184]
1228
1110
1085
1184
4
1.0
0.75
true
[1110 1184 1106; 937 1170 1026]
1110
937
1184
1170
1106
1026
6
1.0
0.75
true
[1228 1085 982; 1110 1184 1106]
1228
1110
1085
1184
982
1106
6
1.0
0.75
true
[1085 982; 1184 1106; 1170 1026]
1085
1184
1170
982
1106
1026
6
1.0
0.75
true
[1228 1085; 1110 1184; 937 1170]
1228
1110
937
1085
1184
1170
6
1.0
0.75
true
[1184; 1170]
1184
1170
2
1.0
0.75
true
[1085; 1184]
1085
1184
2
1.0
0.75
true
[1184 1106]
1184
1106
2
1.0
0.75
true
[1110 1184]
1110
1184
2
1.0
0.75
true
[1085; 1184; 1170]
1085
1184
1170
3
1.0
0.75
true
[1110 1184 1106]
1110
1184
1106
3
1.0
0.75
true
[334 348; 350 317]
0
0.0
0.75
false
[367 246; 334 348]
0
0.0
0.75
false
[388 334; 288 350]
0
0.0
0.75
false
[345 367; 388 334]
0
0.0
0.75
false
[388 334 348; 288 350 317]
0
0.0
0.75
false
[345 367 246; 388 334 348]
0
0.0
0.75
false
[367 246; 334 348; 350 317]
0
0.0
0.75
false
[345 367; 388 334; 288 350]
0
0.0
0.75
false
[334; 350]
0
0.0
0.75
false
[367; 334]
0
0.0
0.75
false
[334 348]
0
0.0
0.75
false
[388 334]
0
0.0
0.75
false
[367; 334; 350]
0
0.0
0.75
false
[388 334 348]
0
0.0
0.75
false
[1333 1391; 1392 1370]
1333
1392
1391
1370
4
1.0
0.75
true
[1359 1394; 1333 1391]
1359
1333
1394
1391
4
1.0
0.75
true
[1412 1333; 1343 1392]
1412
1343
1333
1392
4
1.0
0.75
true
[1403 1359; 1412 1333]
1403
1412
1359
1333
4
1.0
0.75
true
[1412 1333 1391; 1343 1392 1370]
1412
1343
1333
1392
1391
1370
6
1.0
0.75
true
[1403 1359 1394; 1412 1333 1391]
1403
1412
1359
1333
1394
1391
6
1.0
0.75
true
[1359 1394; 1333 1391; 1392 1370]
1359
1333
1392
1394
1391
1370
6
1.0
0.75
true
[1403 1359; 1412 1333; 1343 1392]
1403
1412
1343
1359
1333
1392
6
1.0
0.75
true
[1333; 1392]
1333
1392
2
1.0
0.75
true
[1359; 1333]
1359
1333
2
1.0
0.75
true
[1333 1391]
1333
1391
2
1.0
0.75
true
[1412 1333]
1412
1333
2
1.0
0.75
true
[1359; 1333; 1392]
1359
1333
1392
3
1.0
0.75
true
[1412 1333 1391]
1412
1333
1391
3
1.0
0.75
true
[399 404; 402 345]
0
0.0
0.75
false
[538 437; 399 404]
0
0.0
0.75
false
[548 399; 475 402]
0
0.0
0.75
false
[812 538; 548 399]
0
0.0
0.75
false
[548 399 404; 475 402 345]
0
0.0
0.75
false
[812 538 437; 548 399 404]
0
0.0
0.75
false
[538 437; 399 404; 402 345]
0
0.0
0.75
false
[812 538; 548 399; 475 402]
0
0.0
0.75
false
[399; 402]
0
0.0
0.75
false
[538; 399]
0
0.0
0.75
false
[399 404]
0
0.0
0.75
false
[548 399]
0
0.0
0.75
false
[538; 399; 402]
0
0.0
0.75
false
[548 399 404]
0
0.0
0.75
false
[3188 3194; 3063 2885]
3188
3063
3194
2885
4
1.0
0.75
true
[3637 3267; 3188 3194]
3637
3188
3267
3194
4
1.0
0.75
true
[3150 3188; 3093 3063]
3150
3093
3188
3063
4
1.0
0.75
true
[4599 3637; 3150 3188]
4599
3150
3637
3188
4
1.0
0.75
true
[3150 3188 3194; 3093 3063 2885]
3150
3093
3188
3063
3194
2885
6
1.0
0.75
true
[4599 3637 3267; 3150 3188 3194]
4599
3150
3637
3188
3267
3194
6
1.0
0.75
true
[3637 3267; 3188 3194; 3063 2885]
3637
3188
3063
3267
3194
2885
6
1.0
0.75
true
[4599 3637; 3150 3188; 3093 3063]
4599
3150
3093
3637
3188
3063
6
1.0
0.75
true
[3188; 3063]
3188
3063
2
1.0
0.75
true
[3637; 3188]
3637
3188
2
1.0
0.75
true
[3188 3194]
3188
3194
2
1.0
0.75
true
[3150 3188]
3150
3188
2
1.0
0.75
true
[3637; 3188; 3063]
3637
3188
3063
3
1.0
0.75
true
[3150 3188 3194]
3150
3188
3194
3
1.0
0.75
true
[467 589; 540 608]
0
0.0
0.75
false
[432 610; 467 589]
0
0.0
0.75
false
[472 467; 425 540]
0
0.0
0.75
false
[543 432; 472 467]
0
0.0
0.75
false
[472 467 589; 425 540 608]
0
0.0
0.75
false
[543 432 610; 472 467 589]
0
0.0
0.75
false
[432 610; 467 589; 540 608]
0
0.0
0.75
false
[543 432; 472 467; 425 540]
0
0.0
0.75
false
[467; 540]
0
0.0
0.75
false
[432; 467]
0
0.0
0.75
false
[467 589]
0
0.0
0.75
false
[472 467]
0
0.0
0.75
false
[432; 467; 540]
0
0.0
0.75
false
[472 467 589]
0
0.0
0.75
false
[1314 1356; 1364 1366]
1314
1364
1356
1366
4
1.0
0.75
true
[1347 1312; 1314 1356]
1347
1314
1312
1356
4
1.0
0.75
true
[1122 1314; 1391 1364]
1122
1391
1314
1364
4
1.0
0.75
true
[1265 1347; 1122 1314]
1265
1122
1347
1314
4
1.0
0.75
true
[1122 1314 1356; 1391 1364 1366]
1122
1391
1314
1364
1356
1366
6
1.0
0.75
true
[1265 1347 1312; 1122 1314 1356]
1265
1122
1347
1314
1312
1356
6
1.0
0.75
true
[1347 1312; 1314 1356; 1364 1366]
1347
1314
1364
1312
1356
1366
6
1.0
0.75
true
[1265 1347; 1122 1314; 1391 1364]
1265
1122
1391
1347
1314
1364
6
1.0
0.75
true
[1314; 1364]
1314
1364
2
1.0
0.75
true
[1347; 1314]
1347
1314
2
1.0
0.75
true
[1314 1356]
1314
1356
2
1.0
0.75
true
[1122 1314]
1122
1314
2
1.0
0.75
true
[1347; 1314; 1364]
1347
1314
1364
3
1.0
0.75
true
[1122 1314 1356]
1122
1314
1356
3
1.0
0.75
true
[1639 1698; 1691 1681]
1639
1691
1698
1681
4
1.0
0.75
true
[1722 1665; 1639 1698]
1722
1639
1665
1698
4
1.0
0.75
true
[1719 1639; 1624 1691]
1719
1624
1639
1691
4
1.0
0.75
true
[1702 1722; 1719 1639]
1702
1719
1722
1639
4
1.0
0.75
true
[1719 1639 1698; 1624 1691 1681]
1719
1624
1639
1691
1698
1681
6
1.0
0.75
true
[1702 1722 1665; 1719 1639 1698]
1702
1719
1722
1639
1665
1698
6
1.0
0.75
true
[1722 1665; 1639 1698; 1691 1681]
1722
1639
1691
1665
1698
1681
6
1.0
0.75
true
[1702 1722; 1719 1639; 1624 1691]
1702
1719
1624
1722
1639
1691
6
1.0
0.75
true
[1639; 1691]
1639
1691
2
1.0
0.75
true
[1722; 1639]
1722
1639
2
1.0
0.75
true
[1639 1698]
1639
1698
2
1.0
0.75
true
[1719 1639]
1719
1639
2
1.0
0.75
true
[1722; 1639; 1691]
1722
1639
1691
3
1.0
0.75
true
[1719 1639 1698]
1719
1639
1698
3
1.0
0.75
true
[108 256; 231 156]
0
0.0
0.75
false
[189 174; 108 256]
0
0.0
0.75
false
[229 108; 249 231]
0
0.0
0.75
false
[177 189; 229 108]
0
0.0
0.75
false
[229 108 256; 249 231 156]
0
0.0
0.75
false
[177 189 174; 229 108 256]
0
0.0
0.75
false
[189 174; 108 256; 231 156]
0
0.0
0.75
false
[177 189; 229 108; 249 231]
0
0.0
0.75
false
[108; 231]
0
0.0
0.75
false
[189; 108]
0
0.0
0.75
false
[108 256]
0
0.0
0.75
false
[229 108]
0
0.0
0.75
false
[189; 108; 231]
0
0.0
0.75
false
[229 108 256]
0
0.0
0.75
false
[1009 922; 1347 846]
1009
1347
922
3
0.75
0.75
true
[981 1016; 1009 922]
981
1009
1016
922
4
1.0
0.75
true
[1353 1009; 868 1347]
1353
868
1009
1347
4
1.0
0.75
true
[1183 981; 1353 1009]
1183
1353
981
1009
4
1.0
0.75
true
[1353 1009 922; 868 1347 846]
1353
868
1009
1347
922
5
0.8333333333333334
0.75
true
[1183 981 1016; 1353 1009 922]
1183
1353
981
1009
1016
922
6
1.0
0.75
true
[981 1016; 1009 922; 1347 846]
981
1009
1347
1016
922
5
0.8333333333333334
0.75
true
[1183 981; 1353 1009; 868 1347]
1183
1353
868
981
1009
1347
6
1.0
0.75
true
[1009; 1347]
1009
1347
2
1.0
0.75
true
[981; 1009]
981
1009
2
1.0
0.75
true
[1009 922]
1009
922
2
1.0
0.75
true
[1353 1009]
1353
1009
2
1.0
0.75
true
[981; 1009; 1347]
981
1009
1347
3
1.0
0.75
true
[1353 1009 922]
1353
1009
922
3
1.0
0.75
true
[558 643; 629 607]
0
0.0
0.75
false
[623 698; 558 643]
0
0.0
0.75
false
[582 558; 508 629]
0
0.0
0.75
false
[580 623; 582 558]
0
0.0
0.75
false
[582 558 643; 508 629 607]
0
0.0
0.75
false
[580 623 698; 582 558 643]
0
0.0
0.75
false
[623 698; 558 643; 629 607]
0
0.0
0.75
false
[580 623; 582 558; 508 629]
0
0.0
0.75
false
[558; 629]
0
0.0
0.75
false
[623; 558]
0
0.0
0.75
false
[558 643]
0
0.0
0.75
false
[582 558]
0
0.0
0.75
false
[623; 558; 629]
0
0.0
0.75
false
[582 558 643]
0
0.0
0.75
false
[1063 1015; 1198 971]
1063
1198
1015
971
4
1.0
0.75
true
[1171 992; 1063 1015]
1171
1063
992
1015
4
1.0
0.75
true
[1094 1063; 1065 1198]
1094
1065
1063
1198
4
1.0
0.75
true
[1108 1171; 1094 1063]
1108
1094
1171
1063
4
1.0
0.75
true
[1094 1063 1015; 1065 1198 971]
1094
1065
1063
1198
1015
971
6
1.0
0.75
true
[1108 1171 992; 1094 1063 1015]
1108
1094
1171
1063
992
1015
6
1.0
0.75
true
[1171 992; 1063 1015; 1198 971]
1171
1063
1198
992
1015
971
6
1.0
0.75
true
[1108 1171; 1094 1063; 1065 1198]
1108
1094
1065
1171
1063
1198
6
1.0
0.75
true
[1063; 1198]
1063
1198
2
1.0
0.75
true
[1171; 1063]
1171
1063
2
1.0
0.75
true
[1063 1015]
1063
1015
2
1.0
0.75
true
[1094 1063]
1094
1063
2
1.0
0.75
true
[1171; 1063; 1198]
1171
1063
1198
3
1.0
0.75
true
[1094 1063 1015]
1094
1063
1015
3
1.0
0.75
true
[484 369; 385 355]
0
0.0
0.75
false
[637 731; 484 369]
0
0.0
0.75
false
[411 484; 409 385]
0
0.0
0.75
false
[600 637; 411 484]
0
0.0
0.75
false
[411 484 369; 409 385 355]
0
0.0
0.75
false
[600 637 731; 411 484 369]
0
0.0
0.75
false
[637 731; 484 369; 385 355]
0
0.0
0.75
false
[600 637; 411 484; 409 385]
0
0.0
0.75
false
[484; 385]
0
0.0
0.75
false
[637; 484]
0
0.0
0.75
false
[484 369]
0
0.0
0.75
false
[411 484]
0
0.0
0.75
false
[637; 484; 385]
0
0.0
0.75
false
[411 484 369]
0
0.0
0.75
false
[5017 4027; 3516 3296]
5017
3516
4027
3296
4
1.0
0.75
true
[5828 5842; 5017 4027]
5828
5017
5842
4027
4
1.0
0.75
true
[5814 5017; 4594 3516]
5814
4594
5017
3516
4
1.0
0.75
true
[5126 5828; 5814 5017]
5126
5814
5828
5017
4
1.0
0.75
true
[5814 5017 4027; 4594 3516 3296]
5814
4594
5017
3516
4027
3296
6
1.0
0.75
true
[5126 5828 5842; 5814 5017 4027]
5126
5814
5828
5017
5842
4027
6
1.0
0.75
true
[5828 5842; 5017 4027; 3516 3296]
5828
5017
3516
5842
4027
3296
6
1.0
0.75
true
[5126 5828; 5814 5017; 4594 3516]
5126
5814
4594
5828
5017
3516
6
1.0
0.75
true
[5017; 3516]
5017
3516
2
1.0
0.75
true
[5828; 5017]
5828
5017
2
1.0
0.75
true
[5017 4027]
5017
4027
2
1.0
0.75
true
[5814 5017]
5814
5017
2
1.0
0.75
true
[5828; 5017; 3516]
5828
5017
3516
3
1.0
0.75
true
[5814 5017 4027]
5814
5017
4027
3
1.0
0.75
true
[411 459; 362 495]
0
0.0
0.75
false
[380 476; 411 459]
0
0.0
0.75
false
[480 411; 502 362]
0
0.0
0.75
false
[480 380; 480 411]
0
0.0
0.75
false
[480 411 459; 502 362 495]
0
0.0
0.75
false
[480 380 476; 480 411 459]
0
0.0
0.75
false
[380 476; 411 459; 362 495]
0
0.0
0.75
false
[480 380; 480 411; 502 362]
0
0.0
0.75
false
[411; 362]
0
0.0
0.75
false
[380; 411]
0
0.0
0.75
false
[411 459]
0
0.0
0.75
false
[480 411]
0
0.0
0.75
false
[380; 411; 362]
0
0.0
0.75
false
[480 411 459]
0
0.0
0.75
false
[1370 1327; 1191 1313]
1370
1191
1327
1313
4
1.0
0.75
true
[1306 1231; 1370 1327]
1306
1370
1231
1327
4
1.0
0.75
true
[1229 1370; 1300 1191]
1229
1300
1370
1191
4
1.0
0.75
true
[1275 1306; 1229 1370]
1275
1229
1306
1370
4
1.0
0.75
true
[1229 1370 1327; 1300 1191 1313]
1229
1300
1370
1191
1327
1313
6
1.0
0.75
true
[1275 1306 1231; 1229 1370 1327]
1275
1229
1306
1370
1231
1327
6
1.0
0.75
true
[1306 1231; 1370 1327; 1191 1313]
1306
1370
1191
1231
1327
1313
6
1.0
0.75
true
[1275 1306; 1229 1370; 1300 1191]
1275
1229
1300
1306
1370
1191
6
1.0
0.75
true
[1370; 1191]
1370
1191
2
1.0
0.75
true
[1306; 1370]
1306
1370
2
1.0
0.75
true
[1370 1327]
1370
1327
2
1.0
0.75
true
[1229 1370]
1229
1370
2
1.0
0.75
true
[1306; 1370; 1191]
1306
1370
1191
3
1.0
0.75
true
[1229 1370 1327]
1229
1370
1327
3
1.0
0.75
true
[1588 1622; 1668 1590]
1588
1668
1622
1590
4
1.0
0.75
true
[1671 1615; 1588 1622]
1671
1588
1615
1622
4
1.0
0.75
true
[1508 1588; 1226 1668]
1508
1226
1588
1668
4
1.0
0.75
true
[2448 1671; 1508 1588]
2448
1508
1671
1588
4
1.0
0.75
true
[1508 1588 1622; 1226 1668 1590]
1508
1226
1588
1668
1622
1590
6
1.0
0.75
true
[2448 1671 1615; 1508 1588 1622]
2448
1508
1671
1588
1615
1622
6
1.0
0.75
true
[1671 1615; 1588 1622; 1668 1590]
1671
1588
1668
1615
1622
1590
6
1.0
0.75
true
[2448 1671; 1508 1588; 1226 1668]
2448
1508
1226
1671
1588
1668
6
1.0
0.75
true
[1588; 1668]
1588
1668
2
1.0
0.75
true
[1671; 1588]
1671
1588
2
1.0
0.75
true
[1588 1622]
1588
1622
2
1.0
0.75
true
[1508 1588]
1508
1588
2
1.0
0.75
true
[1671; 1588; 1668]
1671
1588
1668
3
1.0
0.75
true
[1508 1588 1622]
1508
1588
1622
3
1.0
0.75
true
[198 268; 159 237]
0
0.0
0.75
false
[149 146; 198 268]
0
0.0
0.75
false
[199 198; 164 159]
0
0.0
0.75
false
[180 149; 199 198]
0
0.0
0.75
false
[199 198 268; 164 159 237]
0
0.0
0.75
false
[180 149 146; 199 198 268]
0
0.0
0.75
false
[149 146; 198 268; 159 237]
0
0.0
0.75
false
[180 149; 199 198; 164 159]
0
0.0
0.75
false
[198; 159]
0
0.0
0.75
false
[149; 198]
0
0.0
0.75
false
[198 268]
0
0.0
0.75
false
[199 198]
0
0.0
0.75
false
[149; 198; 159]
0
0.0
0.75
false
[199 198 268]
0
0.0
0.75
false
[935 1055; 934 1087]
935
934
1055
1087
4
1.0
0.75
true
[1042 1213; 935 1055]
1042
935
1213
1055
4
1.0
0.75
true
[1046 935; 945 934]
1046
945
935
934
4
1.0
0.75
true
[906 1042; 1046 935]
906
1046
1042
935
4
1.0
0.75
true
[1046 935 1055; 945 934 1087]
1046
945
935
934
1055
1087
6
1.0
0.75
true
[906 1042 1213; 1046 935 1055]
906
1046
1042
935
1213
1055
6
1.0
0.75
true
[1042 1213; 935 1055; 934 1087]
1042
935
934
1213
1055
1087
6
1.0
0.75
true
[906 1042; 1046 935; 945 934]
906
1046
945
1042
935
934
6
1.0
0.75
true
[935; 934]
935
934
2
1.0
0.75
true
[1042; 935]
1042
935
2
1.0
0.75
true
[935 1055]
935
1055
2
1.0
0.75
true
[1046 935]
1046
935
2
1.0
0.75
true
[1042; 935; 934]
1042
935
934
3
1.0
0.75
true
[1046 935 1055]
1046
935
1055
3
1.0
0.75
true
[552 570; 548 519]
0
0.0
0.75
false
[576 568; 552 570]
0
0.0
0.75
false
[513 552; 714 548]
0
0.0
0.75
false
[499 576; 513 552]
0
0.0
0.75
false
[513 552 570; 714 548 519]
0
0.0
0.75
false
[499 576 568; 513 552 570]
0
0.0
0.75
false
[576 568; 552 570; 548 519]
0
0.0
0.75
false
[499 576; 513 552; 714 548]
0
0.0
0.75
false
[552; 548]
0
0.0
0.75
false
[576; 552]
0
0.0
0.75
false
[552 570]
0
0.0
0.75
false
[513 552]
0
0.0
0.75
false
[576; 552; 548]
0
0.0
0.75
false
[513 552 570]
0
0.0
0.75
false
[1047 1142; 1012 1011]
1047
1012
1142
1011
4
1.0
0.75
true
[1092 1056; 1047 1142]
1092
1047
1056
1142
4
1.0
0.75
true
[1007 1047; 1017 1012]
1007
1017
1047
1012
4
1.0
0.75
true
[1118 1092; 1007 1047]
1118
1007
1092
1047
4
1.0
0.75
true
[1007 1047 1142; 1017 1012 1011]
1007
1017
1047
1012
1142
1011
6
1.0
0.75
true
[1118 1092 1056; 1007 1047 1142]
1118
1007
1092
1047
1056
1142
6
1.0
0.75
true
[1092 1056; 1047 1142; 1012 1011]
1092
1047
1012
1056
1142
1011
6
1.0
0.75
true
[1118 1092; 1007 1047; 1017 1012]
1118
1007
1017
1092
1047
1012
6
1.0
0.75
true
[1047; 1012]
1047
1012
2
1.0
0.75
true
[1092; 1047]
1092
1047
2
1.0
0.75
true
[1047 1142]
1047
1142
2
1.0
0.75
true
[1007 1047]
1007
1047
2
1.0
0.75
true
[1092; 1047; 1012]
1092
1047
1012
3
1.0
0.75
true
[1007 1047 1142]
1007
1047
1142
3
1.0
0.75
true
[371 734; 388 615]
0
0.0
0.75
false
[474 990; 371 734]
990
1
0.25
0.75
false
[430 371; 392 388]
0
0.0
0.75
false
[459 474; 430 371]
0
0.0
0.75
false
[430 371 734; 392 388 615]
0
0.0
0.75
false
[459 474 990; 430 371 734]
990
1
0.16666666666666666
0.75
false
[474 990; 371 734; 388 615]
990
1
0.16666666666666666
0.75
false
[459 474; 430 371; 392 388]
0
0.0
0.75
false
[371; 388]
0
0.0
0.75
false
[474; 371]
0
0.0
0.75
false
[371 734]
0
0.0
0.75
false
[430 371]
0
0.0
0.75
false
[474; 371; 388]
0
0.0
0.75
false
[430 371 734]
0
0.0
0.75
false
[5564 5786; 5894 5753]
5564
5894
5786
5753
4
1.0
0.75
true
[3993 5036; 5564 5786]
3993
5564
5036
5786
4
1.0
0.75
true
[4704 5564; 5766 5894]
4704
5766
5564
5894
4
1.0
0.75
true
[2706 3993; 4704 5564]
2706
4704
3993
5564
4
1.0
0.75
true
[4704 5564 5786; 5766 5894 5753]
4704
5766
5564
5894
5786
5753
6
1.0
0.75
true
[2706 3993 5036; 4704 5564 5786]
2706
4704
3993
5564
5036
5786
6
1.0
0.75
true
[3993 5036; 5564 5786; 5894 5753]
3993
5564
5894
5036
5786
5753
6
1.0
0.75
true
[2706 3993; 4704 5564; 5766 5894]
2706
4704
5766
3993
5564
5894
6
1.0
0.75
true
[5564; 5894]
5564
5894
2
1.0
0.75
true
[3993; 5564]
3993
5564
2
1.0
0.75
true
[5564 5786]
5564
5786
2
1.0
0.75
true
[4704 5564]
4704
5564
2
1.0
0.75
true
[3993; 5564; 5894]
3993
5564
5894
3
1.0
0.75
true
[4704 5564 5786]
4704
5564
5786
3
1.0
0.75
true
[897 771; 879 813]
897
879
2
0.5
0.75
false
[816 843; 897 771]
897
1
0.25
0.75
false
[833 897; 793 879]
897
879
2
0.5
0.75
false
[847 816; 833 897]
897
1
0.25
0.75
false
[833 897 771; 793 879 813]
897
879
2
0.3333333333333333
0.75
false
[847 816 843; 833 897 771]
897
1
0.16666666666666666
0.75
false
[816 843; 897 771; 879 813]
897
879
2
0.3333333333333333
0.75
false
[847 816; 833 897; 793 879]
897
879
2
0.3333333333333333
0.75
false
[897; 879]
897
879
2
1.0
0.75
true
[816; 897]
897
1
0.5
0.75
false
[897 771]
897
1
0.5
0.75
false
[833 897]
897
1
0.5
0.75
false
[816; 897; 879]
897
879
2
0.6666666666666666
0.75
false
[833 897 771]
897
1
0.3333333333333333
0.75
false
[1539 1427; 1536 1375]
1539
1536
1427
1375
4
1.0
0.75
true
[1479 1336; 1539 1427]
1479
1539
1336
1427
4
1.0
0.75
true
[1441 1539; 1449 1536]
1441
1449
1539
1536
4
1.0
0.75
true
[1469 1479; 1441 1539]
1469
1441
1479
1539
4
1.0
0.75
true
[1441 1539 1427; 1449 1536 1375]
1441
1449
1539
1536
1427
1375
6
1.0
0.75
true
[1469 1479 1336; 1441 1539 1427]
1469
1441
1479
1539
1336
1427
6
1.0
0.75
true
[1479 1336; 1539 1427; 1536 1375]
1479
1539
1536
1336
1427
1375
6
1.0
0.75
true
[1469 1479; 1441 1539; 1449 1536]
1469
1441
1449
1479
1539
1536
6
1.0
0.75
true
[1539; 1536]
1539
1536
2
1.0
0.75
true
[1479; 1539]
1479
1539
2
1.0
0.75
true
[1539 1427]
1539
1427
2
1.0
0.75
true
[1441 1539]
1441
1539
2
1.0
0.75
true
[1479; 1539; 1536]
1479
1539
1536
3
1.0
0.75
true
[1441 1539 1427]
1441
1539
1427
3
1.0
0.75
true
[1518 1593; 1498 1764]
1518
1498
1593
1764
4
1.0
0.75
true
[1631 1736; 1518 1593]
1631
1518
1736
1593
4
1.0
0.75
true
[1112 1518; 1344 1498]
1112
1344
1518
1498
4
1.0
0.75
true
[1546 1631; 1112 1518]
1546
1112
1631
1518
4
1.0
0.75
true
[1112 1518 1593; 1344 1498 1764]
1112
1344
1518
1498
1593
1764
6
1.0
0.75
true
[1546 1631 1736; 1112 1518 1593]
1546
1112
1631
1518
1736
1593
6
1.0
0.75
true
[1631 1736; 1518 1593; 1498 1764]
1631
1518
1498
1736
1593
1764
6
1.0
0.75
true
[1546 1631; 1112 1518; 1344 1498]
1546
1112
1344
1631
1518
1498
6
1.0
0.75
true
[1518; 1498]
1518
1498
2
1.0
0.75
true
[1631; 1518]
1631
1518
2
1.0
0.75
true
[1518 1593]
1518
1593
2
1.0
0.75
true
[1112 1518]
1112
1518
2
1.0
0.75
true
[1631; 1518; 1498]
1631
1518
1498
3
1.0
0.75
true
[1112 1518 1593]
1112
1518
1593
3
1.0
0.75
true
[313 242; 327 234]
0
0.0
0.75
false
[427 307; 313 242]
0
0.0
0.75
false
[310 313; 305 327]
0
0.0
0.75
false
[635 427; 310 313]
0
0.0
0.75
false
[310 313 242; 305 327 234]
0
0.0
0.75
false
[635 427 307; 310 313 242]
0
0.0
0.75
false
[427 307; 313 242; 327 234]
0
0.0
0.75
false
[635 427; 310 313; 305 327]
0
0.0
0.75
false
[313; 327]
0
0.0
0.75
false
[427; 313]
0
0.0
0.75
false
[313 242]
0
0.0
0.75
false
[310 313]
0
0.0
0.75
false
[427; 313; 327]
0
0.0
0.75
false
[310 313 242]
0
0.0
0.75
false
┌ LogLevel(-500):  Branch (124+191=315 samples) on condition: ⟨T̅P̅P̅⟩ (V11 ⫺75. 858), purity -1.6053032136588257
└ @ DecisionTree.treeclassifier ~/.julia/dev/DecisionTree/src/modal-classification/tree.jl:360
[974 1031 964; 1011 1022 875; 929 1010 1046]    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[383 442 587; 353 371 419; 350 408 537] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1459 1352 1252; 1331 1407 1249; 1411 1368 1244]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[261 330 279; 296 282 348; 252 244 325] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[5753 5749 5701; 5822 5064 4230; 4181 3356 3120]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[870 658 529; 1136 580 523; 733 527 480]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1143 980 1327; 1184 1256 1303; 1274 1347 1362] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1392 1425 1312; 1397 1439 1396; 1320 1401 1427]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[205 176 114; 230 229 105; 218 201 195] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1335 1329 1245; 1130 1392 1292; 1089 1278 1336]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[695 785 717; 773 608 711; 767 792 745] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1149 1110 1035; 985 1095 1139; 1121 1117 1043] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[161 298 258; 183 312 236; 243 296 255] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[4536 4739 5664; 4517 5126 5828; 4921 5814 5017]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[607 516 543; 481 539 483; 477 501 467] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1383 1390 1413; 1402 1323 1245; 1450 1311 1411]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1175 1324 1278; 1328 1350 1375; 1444 1439 1347]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[167 216 202; 142 215 133; 201 235 144] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[938 805 733; 1174 886 820; 1214 882 825]       DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(1−3)), ((1−3)×(1−3)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((2−3)×(1−3))]
[593 552 623; 625 659 683; 622 675 703] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1002 955 948; 1025 1072 1019; 1049 1069 1000]  DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[913 514 285; 720 621 224; 809 722 243] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[5883 5383 4384; 4362 3576 3268; 3265 3158 3133]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1312 1292 1292; 1350 1371 1468; 1331 1400 1376]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1171 1282 1236; 1183 1263 1269; 1249 1248 1350]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1658 1608 1670; 1653 1610 1589; 1694 1647 1664]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[217 392 363; 162 299 365; 222 272 364] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[756 814 742; 869 858 811; 786 725 715] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−3)×(1−3))]
[480 360 308; 489 330 400; 438 426 527] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1323 1374 1483; 1493 1405 1322; 1384 1396 1437]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[371 327 335; 247 437 326; 371 343 304] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[5810 5187 3859; 4057 3346 3297; 3186 3084 3100]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[771 958 1209; 771 1029 1238; 856 876 1247]     DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((1−4)×(2−4)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((1−4)×(2−3))]
[860 1157 1187; 1160 1202 1261; 1126 1260 1186] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1570 1677 1736; 1803 1563 1728; 1205 1573 1684]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[469 436 346; 259 349 387; 337 198 233] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1466 1173 1004; 1073 1482 1160; 902 1350 1120] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[783 833 779; 856 728 819; 862 807 869] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1601 1382 1438; 1592 1344 1250; 1121 1629 1301]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[321 186 233; 273 280 246; 304 362 316] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[5526 4639 3622; 4011 3346 3078; 3061 3023 3030]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[466 513 518; 626 603 523; 583 541 503] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1176 1105 1062; 1050 1207 1166; 1157 1187 1284]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1615 1621 1557; 1756 1677 1631; 1498 1614 1582]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[272 254 270; 249 216 204; 191 187 166] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1076 956 932; 1113 1017 957; 1464 1061 986]    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[959 995 929; 935 990 1025; 1030 1001 943]      DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1753 1461 1389; 1313 1254 1534; 806 975 1458]  DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[160 246 250; 131 180 185; 175 148 181] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[2781 4704 5564; 3986 5766 5894; 5606 5889 5780]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[2516 950 606; 2867 1811 694; 2912 3072 1668]   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(1−3)), ((1−4)×(2−3))]
[1296 1197 1132; 1331 1137 1162; 1231 1232 1181]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1446 1443 1419; 1390 1463 1313; 1336 1351 1429]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[192 178 93; 143 245 219; 154 135 177]  DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1228 971 1042; 1344 1003 1017; 1412 1276 1109] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[314 382 426; 449 394 399; 415 316 426] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1042 970 1021; 1084 1028 1023; 1105 1014 1169] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[750 520 478; 658 356 371; 550 494 344] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[4397 4579 4638; 4486 4444 4466; 4192 4561 4536]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[713 580 654; 911 801 704; 1051 677 576]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1634 1392 1437; 1533 1405 1468; 1418 1439 1379]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[887 1147 1163; 1184 1210 1358; 1268 1343 1301] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[277 267 253; 273 263 202; 252 271 314] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[884 799 1130; 1073 834 936; 1261 930 916]      DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((2−4)×(1−3)), ((2−4)×(1−4))]
[743 655 770; 728 734 692; 685 642 786] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1353 1363 1344; 1378 1339 1371; 1366 1264 1367]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[356 372 371; 432 467 503; 435 482 443] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[5506 5452 5535; 5969 5230 4730; 5086 4057 3084]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[405 480 486; 381 503 511; 397 406 346] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1299 1212 1434; 1404 1286 1322; 1270 1309 1254]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1336 1420 1331; 1705 1450 978; 1813 1324 1413] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[180 201 286; 200 222 178; 184 146 227] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1201 1263 1270; 1275 1245 1252; 1321 1306 1279]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[954 860 846; 1069 816 875; 897 838 837]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((1−3)×(1−3))]
[1349 1340 1279; 1308 1451 1394; 1360 1335 1555]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[230 235 327; 287 299 306; 322 270 305] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[5564 5447 5696; 5873 5597 5654; 5673 5345 4500]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[565 684 578; 592 495 496; 435 642 529] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1292 1440 1240; 1293 1379 1235; 1199 1251 1415]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1015 1149 1560; 1035 1015 1259; 1075 1091 1192]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[157 229 234; 213 277 236; 220 253 263] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[2175 1516 1727; 2267 1904 1421; 1560 2340 1864]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[655 654 655; 538 530 574; 444 408 459] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1312 1397 1195; 1309 1331 1293; 1311 1253 1313]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[151 139 211; 141 188 208; 195 138 204] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[4451 4354 4386; 4363 4224 4594; 4061 4455 4525]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[588 845 898; 595 601 813; 511 514 717] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[780 976 1338; 878 1354 1292; 931 1379 1266]    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1581 1466 1448; 1357 1366 1402; 1424 1461 1438]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[290 377 246; 376 236 138; 238 150 182] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[969 1113 1544; 1086 958 1183; 1154 1003 1082]  DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[483 515 383; 434 444 533; 438 483 473] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1601 1382 1438; 1592 1344 1250; 1121 1629 1301]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[260 284 306; 266 313 375; 373 374 377] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[4751 3844 3232; 3273 3080 3155; 3026 3009 3117]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1471 1414 1500; 1345 1325 1446; 1361 1302 1820]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[931 1290 1265; 808 1237 1390; 652 1200 1270]   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((1−3)×(1−3)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((1−4)×(2−3))]
[1371 1427 1563; 1065 1431 1482; 1031 1451 1494]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[481 397 330; 227 354 281; 298 235 309] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1038 1335 1497; 1054 1133 1577; 974 1015 1536] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[362 397 361; 388 332 427; 345 351 404] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1273 1277 1091; 1125 1238 1232; 1410 1226 1198]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[511 519 406; 368 392 344; 302 393 365] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1437 2322 3645; 1056 1867 3056; 1057 1629 2666]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1152 1136 580; 1020 733 527; 910 622 437]      DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((1−3)×(1−3))]
[1152 1184 1295; 1282 1287 1220; 1221 1316 1210]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[860 1614 1589; 643 1179 1505; 566 1079 1523]   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((1−3)×(1−3)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((1−4)×(2−3))]
[208 119 206; 205 157 176; 211 253 209] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1515 1670 1361; 1513 2230 1674; 1120 1273 1408]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[472 423 406; 481 409 399; 486 324 396] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1335 1313 1364; 1239 1280 1342; 1222 1250 1412]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[325 389 284; 356 383 338; 302 369 227] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[2463 4310 5107; 4783 5849 6073; 5822 6046 5943]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[574 517 402; 581 541 447; 588 489 537] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[827 1243 1358; 807 1183 1297; 796 1249 1359]   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((1−4)×(2−4)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((1−4)×(2−3))]
[1394 1451 1462; 1443 1392 1544; 1244 1433 1445]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[160 9 89; 347 65 115; 652 140 124]     DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((23)×(2−3))]
[1188 1157 1137; 1270 1171 1069; 1333 1321 1055]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[854 881 860; 928 787 928; 915 807 921] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((1−3)×(2−4))]
[1241 1292 1311; 1198 1311 1310; 1360 1259 1184]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[236 328 202; 336 291 194; 241 168 251] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[5834 5970 5812; 5798 5285 4193; 4183 3331 3002]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[537 617 817; 589 447 607; 621 680 744] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1270 1309 1254; 1236 1279 1332; 1104 1223 1304]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1213 1533 1623; 1159 1397 1511; 1142 1345 1663]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[215 133 231; 235 144 255; 179 319 336] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1315 1314 1271; 1191 1297 1303; 1273 1254 1262]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[517 654 665; 547 684 735; 566 689 725] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1160 1151 1095; 1288 1016 1193; 1395 1315 1115]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[186 233 270; 280 246 243; 362 316 217] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[5564 5447 5696; 5873 5597 5654; 5673 5345 4500]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[717 762 794; 865 773 756; 700 846 846] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1329 1194 1387; 1201 1122 1300; 1229 1157 1274]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1509 1432 1443; 1457 1581 1379; 1380 1435 1431]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[632 394 346; 344 347 467; 499 445 454] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1102 1047 860; 1057 977 1047; 1268 1170 981]   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[345 301 348; 299 311 267; 281 331 367] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1363 1397 1272; 1491 1524 1288; 1576 1542 1485]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[694 457 506; 565 406 387; 415 425 416] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[5747 5382 4510; 4809 3857 3245; 3276 3149 3138]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[429 361 404; 518 404 341; 523 469 363] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1261 1160 1247; 1186 1226 1174; 1250 1268 1226]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1449 1475 1378; 1519 1401 1412; 1510 1530 1415]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[264 206 235; 313 233 132; 212 110 178] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[895 1327 1294; 780 856 1357; 802 867 1286]     DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((1−4)×(2−4))]
[645 714 649; 678 666 638; 646 628 627] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[2168 1426 1329; 2369 1519 1327; 2154 2181 1480]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[295 211 351; 341 288 223; 292 339 240] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[4953 3965 3295; 3472 3295 3180; 3160 3242 3105]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[2904 2524 1487; 1847 1084 436; 640 465 369]    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((1−3)×(2−4)), ((1−3)×(1−3)), ((1−3)×(1−4)), ((1−3)×(2−3)), ((2−3)×(1−3))]
[1290 1198 1292; 1290 1252 1314; 1337 1232 1332]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1496 1170 1022; 1538 1307 1185; 1564 1417 1200]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[481 400 402; 581 489 507; 470 568 445] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1560 1573 1251; 1251 1105 1194; 1048 1253 1527]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[458 457 404; 428 371 420; 458 395 391] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1253 1329 1284; 1131 1227 1305; 1208 1218 1276]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1080 714 368; 696 580 378; 346 420 363]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[5927 5621 5281; 6044 5875 5515; 5846 4994 3853]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[712 750 643; 1115 882 844; 1252 1008 1046]     DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((2−4)×(1−3)), ((2−4)×(1−4)), ((2−4)×(2−3)), ((2−3)×(1−3))]
[1254 1203 1213; 1260 1292 1241; 1179 1184 1286]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1495 1553 1627; 1501 1527 1537; 1332 1658 1538]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[206 227 145; 159 202 163; 93 178 226]  DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1186 1013 932; 1014 959 950; 963 914 997]      DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[522 534 579; 536 553 509; 590 537 523] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1293 1353 1308; 1385 1400 1363; 1426 1383 1362]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[401 339 268; 283 282 351; 364 350 310] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[6080 5914 5704; 6011 5460 4461; 4453 3412 3155]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[436 356 268; 463 386 349; 459 491 338] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1226 1425 1345; 1385 1344 1357; 1440 1404 1392]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1259 1329 1307; 1359 1352 1393; 1265 1310 1371]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[886 371 239; 286 142 149; 107 281 214] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1107 1059 1048; 1034 1066 1077; 1021 1001 1105]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[356 338 345; 257 312 414; 302 353 439] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[679 1272 1485; 1321 1246 1119; 1110 1035 1212] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[886 1066 759; 601 620 463; 437 401 486]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interv
al2D[((2−3)×(2−3))]
[4753 5653 5726; 5657 5744 5881; 5901 5734 5827]        DecisionTree.M
odalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogi
c.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)
), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×
(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((
2−3)×(1−4))]
[425 496 527; 372 411 491; 464 454 489] DecisionTree.ModalLogic.Interv
al2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2
−3)×(2−3))]
[1166 1349 1313; 658 1053 1274; 367 520 931]    DecisionTree.ModalLogi
c.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogic.Interv
al2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((1−3)×(1−3)), ((1−3)×(1−4)), ((1−4
)×(2−4)), ((1−3)×(2−3)), ((2−3)×(2−4))]
[1072 1511 1579; 1021 1546 1676; 2627 1383 1580]        DecisionTree.M
odalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogi
c.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)
), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×
(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((
2−3)×(1−4))]
[890 427 280; 205 251 131; 72 89 147]   DecisionTree.ModalLogic.Interv
al2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2
−3)×(2−3))]
[1304 1337 1309; 1339 1411 1378; 1350 1348 1316]        DecisionTree.M
odalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogi
c.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)
), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×
(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((
2−3)×(1−4))]
[671 534 654; 759 633 594; 712 671 613] DecisionTree.ModalLogic.Interv
al2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2
−3)×(2−3))]
[1439 1236 1193; 1580 1371 1212; 1341 1469 1255]        DecisionTree.M
odalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogi
c.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)
), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×
(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((
2−3)×(1−4))]
[691 864 952; 378 416 417; 208 239 247] DecisionTree.ModalLogic.Interv
al2D[((2−3)×(2−3))]     false   DecisionTree.ModalLogic.Interval2D[((2
−3)×(2−3))]
[5782 5876 5691; 5833 5737 5557; 5532 4884 4043]        DecisionTree.M
odalLogic.Interval2D[((2−3)×(2−3))]     true    DecisionTree.ModalLogi
c.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)
), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[586 678 497; 657 673 580; 664 642 601] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1200 1015 1029; 1159 1282 1119; 1160 1210 1230]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1374 1326 1393; 1339 1393 1371; 1500 1444 1450]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[209 171 222; 269 225 131; 270 234 182] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[867 1286 1375; 820 876 1355; 843 797 1072]     DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((1−3)×(1−3)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−3)×(2−3)), ((2−3)×(2−4))]
[456 416 471; 445 410 482; 470 491 502] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1318 1400 1391; 1423 1373 1388; 1330 1403 1420]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[328 314 319; 309 272 410; 268 259 248] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[4084 4033 5138; 5226 4401 4273; 4246 3580 3684]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1229 1402 1311; 1324 1273 1016; 1215 1111 989] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1346 1117 1294; 1266 1143 980; 1263 1184 1256] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1557 1437 1466; 1527 1529 1376; 1436 1484 1458]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[386 461 493; 326 334 491; 460 385 522] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[916 837 868; 865 868 873; 1023 742 783]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((1−3)×(1−4)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((2−3)×(1−4))]
[804 718 618; 756 838 896; 770 852 726] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1202 1325 1379; 1181 1360 1340; 1225 1380 1385]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[517 417 363; 303 362 274; 249 290 257] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[4461 3264 3076; 3155 3140 3053; 3080 3063 3058]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[690 582 675; 753 744 651; 916 721 733] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1422 1330 1263; 1340 1346 1278; 1338 1290 1396]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1471 1328 1365; 1360 1430 1390; 1394 1417 1466]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[255 289 159; 243 279 217; 505 413 286] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1161 923 903; 1278 866 819; 1037 1132 884]     DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(1−3)), ((1−4)×(2−3))]
[394 342 360; 390 392 309; 418 452 440] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1189 1224 1239; 1292 1222 1222; 1273 1280 1323]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[315 294 297; 212 261 208; 254 316 208] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[3765 3880 3980; 3802 3788 3957; 3924 3735 3836]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1447 1534 1463; 1486 1548 1400; 1562 1518 1375]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1261 1275 1275; 1157 1241 1256; 1245 1245 1275]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[619 916 1262; 1077 1277 1305; 1351 1312 1371]  DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[129 171 218; 230 184 162; 335 224 262] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[880 1160 1497; 919 1089 1461; 951 1038 1335]   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[291 252 363; 358 258 194; 290 299 269] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1301 1193 1129; 1370 1230 1238; 1469 1394 1138]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[440 294 314; 381 294 198; 312 337 203] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[5889 5780 5822; 5544 5112 4181; 4383 3315 3239]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1324 1311 1448; 1330 1295 1060; 1318 1149 975] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1425 1322 1351; 1469 1479 1336; 1441 1539 1427]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1474 1538 1475; 1195 1546 1453; 1120 1258 1538]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[157 229 234; 213 277 236; 220 253 263] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1446 1531 1161; 1763 1180 1141; 1418 1147 1147]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[683 524 612; 557 619 710; 575 573 654] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1976 1529 1339; 2268 1994 1441; 2024 1722 1366]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[225 146 373; 323 311 213; 422 254 205] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[3593 3035 3107; 3071 3047 3063; 3046 3105 3071]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[477 501 467; 441 513 562; 404 430 528] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1434 1264 1120; 1322 1216 1200; 1254 1231 1224]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1593 1510 1408; 1577 1534 1474; 1483 1631 1461]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[349 346 93; 182 251 187; 121 231 120]  DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1772 1254 1117; 1314 2226 1657; 1433 2802 1472]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[884 795 799; 789 759 785; 876 828 836] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1537 1505 1483; 2375 1552 1533; 1821 1580 1469]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[259 244 144; 289 172 325; 259 340 315] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1876 3458 3827; 1437 2322 3645; 1056 1867 3056]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[855 763 573; 425 563 382; 622 531 513] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1017 930 1117; 1175 1240 1311; 1267 1232 1316] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1371 1320 1346; 1305 1427 1312; 1423 1377 1438]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[401 363 256; 374 303 274; 336 265 297] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1019 1244 985; 705 939 1452; 677 857 1481]     DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((1−3)×(1−3)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−3)×(2−3)), ((2−3)×(2−4))]
[376 374 383; 286 503 417; 436 343 428] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1527 1352 1542; 1510 1534 1464; 1701 1715 1643]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[473 522 352; 517 417 363; 303 362 274] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[4355 4278 4363; 4279 4289 4347; 3195 4275 4312]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[406 403 419; 458 349 429; 445 529 425] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[975 1152 1184; 1165 1282 1287; 1235 1221 1316] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1658 1538 1508; 1525 1594 1711; 1354 1526 1581]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[224 42 158; 221 157 204; 332 349 162]  DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1816 1190 1133; 1536 1536 1098; 1357 1731 1182]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[267 428 301; 274 315 301; 235 212 293] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1225 1283 1242; 1776 1159 1272; 2231 1815 1246]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[196 294 282; 239 218 256; 266 344 226] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[3890 5306 5707; 5362 5782 5876; 5704 5833 5737]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[381 475 369; 370 438 337; 379 344 498] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1282 1234 1244; 1321 1292 1298; 1198 1216 1210]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1611 1510 1654; 1566 1583 1575; 1676 1545 1526]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[469 408 341; 244 370 303; 280 291 234] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[910 1020 1060; 974 896 929; 877 992 938]       DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[350 367 408; 353 356 377; 397 319 406] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1255 1346 1258; 1188 1392 1314; 1614 1290 1261]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[386 427 305; 404 319 332; 399 280 289] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[5613 4615 3666; 3607 3146 3199; 3196 3184 3124]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[831 861 970; 783 833 781; 704 860 965] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1405 1305 1266; 1253 1389 1263; 1245 1311 1249]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1362 1348 1360; 1347 1297 1402; 1348 1270 1292]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1334 602 374; 2709 658 564; 3976 1379 534]     DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(1−3))]
[1105 1017 1198; 1039 1113 1104; 992 1037 1104] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[827 851 872; 777 793 825; 758 822 814] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1207 1170 1221; 1255 1286 1250; 1452 1219 1117]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[250 193 233; 213 258 331; 289 176 250] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[3786 4128 4425; 3786 3971 4759; 4084 4033 5138]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1401 1588 1456; 1370 1381 1073; 1314 1318 1165]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1241 1323 1257; 1306 1270 1422; 1239 1312 1340]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1015 1401 1425; 993 1411 1407; 1438 1416 1438] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1220 403 248; 729 346 273; 165 177 150]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1287 990 882; 1266 1049 881; 1041 1230 960]    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[522 672 519; 637 555 543; 512 497 462] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1321 1227 1867; 1352 1329 1503; 1432 1359 1173]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[435 485 576; 422 394 339; 622 451 334] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[4334 3873 4883; 5770 5527 5838; 5834 5970 5812]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[797 697 826; 650 737 758; 745 744 790] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1357 1429 1535; 1382 1497 1503; 1285 1379 1466]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1377 1431 1333; 1419 1319 1375; 1261 1325 1413]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1755 567 641; 1361 471 389; 437 416 200]       DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   false   DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1228 1085 982; 1110 1184 1106; 937 1170 1026]  DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[345 367 246; 388 334 348; 288 350 317] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1403 1359 1394; 1412 1333 1391; 1343 1392 1370]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[812 538 437; 548 399 404; 475 402 345] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[4599 3637 3267; 3150 3188 3194; 3093 3063 2885]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[543 432 610; 472 467 589; 425 540 608] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1265 1347 1312; 1122 1314 1356; 1391 1364 1366]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1702 1722 1665; 1719 1639 1698; 1624 1691 1681]        DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[177 189 174; 229 108 256; 249 231 156] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1183 981 1016; 1353 1009 922; 868 1347 846]    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[580 623 698; 582 558 643; 508 629 607] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  false    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1108 1171 992; 1094 1063 1015; 1065 1198 971]  DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[600 637 731; 411 484 369; 409 385 355] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  f
alse    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[5126 5828 5842; 5814 5017 4027; 4594 3516 3296]        DecisionTree.ModalLogic.Interval2D[(
(2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2
−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4
)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[480 380 476; 480 411 459; 502 362 495] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  f
alse    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1275 1306 1231; 1229 1370 1327; 1300 1191 1313]        DecisionTree.ModalLogic.Interval2D[(
(2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2
−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4
)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[2448 1671 1615; 1508 1588 1622; 1226 1668 1590]        DecisionTree.ModalLogic.Interval2D[(
(2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2
−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4
)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[180 149 146; 199 198 268; 164 159 237] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  f
alse    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[906 1042 1213; 1046 935 1055; 945 934 1087]    DecisionTree.ModalLogic.Interval2D[((2−3)×(2
−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2−4)×(1−3
)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4)×(2−3))
, ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[499 576 568; 513 552 570; 714 548 519] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  f
alse    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[1118 1092 1056; 1007 1047 1142; 1017 1012 1011]        DecisionTree.ModalLogic.Interval2D[(
(2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2
−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4
)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[459 474 990; 430 371 734; 392 388 615] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  f
alse    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
[2706 3993 5036; 4704 5564 5786; 5766 5894 5753]        DecisionTree.ModalLogic.Interval2D[(
(2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2
−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4
)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[847 816 843; 833 897 771; 793 879 813] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  t
rue     DecisionTree.ModalLogic.Interval2D[((2−4)×(2−3))]
[1469 1479 1336; 1441 1539 1427; 1449 1536 1375]        DecisionTree.ModalLogic.Interval2D[(
(2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2
−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4
)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[1546 1631 1736; 1112 1518 1593; 1344 1498 1764]        DecisionTree.ModalLogic.Interval2D[(
(2−3)×(2−3))]   true    DecisionTree.ModalLogic.Interval2D[((2−4)×(2−4)), ((1−3)×(2−4)), ((2
−4)×(1−3)), ((1−3)×(1−3)), ((2−4)×(1−4)), ((1−3)×(1−4)), ((1−4)×(2−4)), ((1−4)×(1−3)), ((2−4
)×(2−3)), ((1−3)×(2−3)), ((2−3)×(2−4)), ((2−3)×(1−3)), ((1−4)×(2−3)), ((2−3)×(1−4))]
[635 427 307; 310 313 242; 305 327 234] DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]  f
alse    DecisionTree.ModalLogic.Interval2D[((2−3)×(2−3))]
ERROR: LoadError: Something's wrong with the optimization steps.
Different unsatisfied and best_unsatisfied:
computed: [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1]
187
actual: [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1]
191
