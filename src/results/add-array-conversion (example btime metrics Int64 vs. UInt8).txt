example run: 3*4*3*4*(8+1)*1280*204*1 = 338'411'520 = 338411520 Integers = 338411520*4 bytes = 1353646080 bytes = 1.26 Gb.

Idea: use 1-byte values
338411520 bytes = 322.73 Mb
Int64
	8.921 s (23548477 allocations: 5.32 GiB) 90.94%  90.33%
		1.486 s (6306562 allocations: 955.50 MiB) 97.5%   97.0%
	2.460 s (6582893 allocations: 1.69 GiB) 87.78%  86.25%

UInt8
	3.130 s (18407291 allocations: 1.51 GiB)92.81%  92.33%
	709.195 ms (5139459 allocations: 407.25 MiB)99.17%  99.0%
	1.333 s (4842985 allocations: 627.68 MiB) 87.78%  86.25%

Second idea:
Better indexing for Interval2D!
((3*4)/2)*((3*4)/2)*(8+1)*1280*204*1 = 84'602'880 = 80.68 Mb

Int64

UInt8
	4.560 s (18407290 allocations: 1.50 GiB)	92.81%  92.33%
  1.018 s (5139459 allocations: 405.19 MiB) 99.17%  99.0%
  1.784 s (4842985 allocations: 626.14 MiB) 87.78%  86.25%
